// Copyright (C) 2020 T. Zachary Laine
//
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

// Warning! This file is autogenerated.
#include <boost/text/bidirectional.hpp>

#include "bidi_tests.hpp"

#include <gtest/gtest.h>

#include <algorithm>


TEST(bidi_character, bidi_character_041_000)
{

    {
        // line 28701
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x0029, 0x05D0, 0x0061, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28702
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x0061, 0x2681, 0x005B, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28703
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x0061, 0x2681, 0x005B, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28704
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x0061, 0x005B, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28705
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x0061, 0x005B, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28706
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x0061, 0x005B, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28707
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x0061, 0x005B, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28708
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x0061, 0x005B, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28709
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x0061, 0x005B, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28710
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0061, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_001)
{

    {
        // line 28711
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0061, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28712
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0061, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28713
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0061, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28714
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0061, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28715
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0061, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28716
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0029, 0x0061, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28717
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0029, 0x0061, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28718
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0029, 0x0061, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28719
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0029, 0x0061, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28720
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0061, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_002)
{

    {
        // line 28721
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0061, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28722
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0061, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28723
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0061, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28724
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0061, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28725
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0061, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28726
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0029, 0x0061, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28727
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0029, 0x0061, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28728
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0029, 0x0061, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28729
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0029, 0x0061, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28730
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x0029, 0x05D0, 0x0061, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_003)
{

    {
        // line 28731
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x0029, 0x05D0, 0x0061, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28732
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x0029, 0x05D0, 0x0061, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28733
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x0029, 0x05D0, 0x0061, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28734
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0061, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28735
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0061, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28736
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0061, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28737
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0061, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28738
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0061, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28739
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0061, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28740
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0029, 0x0061, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_004)
{

    {
        // line 28741
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0029, 0x0061, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28742
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0029, 0x0061, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28743
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0029, 0x0061, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28744
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x0029, 0x05D0, 0x0061, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28745
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x0029, 0x05D0, 0x0061, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28746
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x0029, 0x05D0, 0x0061, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28747
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x0029, 0x05D0, 0x0061, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28748
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0029, 0x2680, 0x05D0, 0x0061, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28749
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0029, 0x2680, 0x05D0, 0x0061, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28750
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0029, 0x2680, 0x05D0, 0x0061, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_005)
{

    {
        // line 28751
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0029, 0x2680, 0x05D0, 0x0061, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28754
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x0061, 0x005B, 0x0062, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28755
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x0061, 0x005B, 0x0062, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 3, 4, 5, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28756
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x0061, 0x005B, 0x0029, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28757
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x0061, 0x005B, 0x0029, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 1, 1, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28758
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x0061, 0x005B, 0x0029, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28759
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x0061, 0x005B, 0x0029, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 1, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28760
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0061, 0x0029, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28761
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0061, 0x0029, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28762
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0061, 0x0029, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_006)
{

    {
        // line 28763
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0061, 0x0029, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28764
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0029, 0x0061, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28765
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0029, 0x0061, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 5, 6, 7, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28766
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0061, 0x0029, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28767
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0061, 0x0029, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28768
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0061, 0x0029, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28769
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0061, 0x0029, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28770
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0029, 0x0061, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28771
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0029, 0x0061, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 5, 6, 7, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28772
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x0029, 0x05D0, 0x0061, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_007)
{

    {
        // line 28773
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x0029, 0x05D0, 0x0061, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 5, 6, 7, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28774
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x0061, 0x005B, 0x0062, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28775
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x0061, 0x005B, 0x0062, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 3, 4, 5, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28776
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x0061, 0x005B, 0x0029, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28777
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x0061, 0x005B, 0x0029, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 1, 1, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28778
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x0061, 0x005B, 0x0029, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28779
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x0061, 0x005B, 0x0029, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 1, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28780
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0061, 0x0029, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28781
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0061, 0x0029, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28782
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0061, 0x0029, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_008)
{

    {
        // line 28783
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0061, 0x0029, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28784
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0029, 0x0061, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28785
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0029, 0x0061, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 5, 6, 7, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28786
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0061, 0x0029, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28787
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0061, 0x0029, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28788
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0061, 0x0029, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28789
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0061, 0x0029, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28790
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0029, 0x0061, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28791
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0029, 0x0061, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 5, 6, 7, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28792
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x0029, 0x05D0, 0x0061, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_009)
{

    {
        // line 28793
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x0029, 0x05D0, 0x0061, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 5, 6, 7, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28794
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0061, 0x0029, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28795
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0061, 0x0029, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28796
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0061, 0x0029, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28797
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0061, 0x0029, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28798
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0029, 0x0061, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28799
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0029, 0x0061, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 5, 6, 7, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28800
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x0029, 0x05D0, 0x0061, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28801
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x0029, 0x05D0, 0x0061, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 5, 6, 7, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28802
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0029, 0x2680, 0x05D0, 0x0061, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_010)
{

    {
        // line 28803
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0029, 0x2680, 0x05D0, 0x0061, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 5, 6, 7, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28806
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x0061, 0x05D1, 0x005B, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28807
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x0061, 0x05D1, 0x005B, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28808
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x0061, 0x005B, 0x05D1, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28809
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x0061, 0x005B, 0x05D1, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28810
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x0061, 0x005B, 0x0029, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28811
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x0061, 0x005B, 0x0029, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28812
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x0061, 0x005B, 0x0029, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28813
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x0061, 0x005B, 0x0029, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28814
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0061, 0x05D1, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_011)
{

    {
        // line 28815
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0061, 0x05D1, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28816
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0061, 0x0029, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28817
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0061, 0x0029, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28818
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0061, 0x0029, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28819
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0061, 0x0029, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28820
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0029, 0x0061, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28821
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0029, 0x0061, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28822
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0029, 0x0061, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28823
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0029, 0x0061, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28824
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0061, 0x05D1, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_012)
{

    {
        // line 28825
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0061, 0x05D1, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28826
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0061, 0x0029, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28827
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0061, 0x0029, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28828
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0061, 0x0029, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28829
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0061, 0x0029, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28830
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0029, 0x0061, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28831
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0029, 0x0061, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28832
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0029, 0x0061, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28833
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0029, 0x0061, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28834
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x0029, 0x05D0, 0x0061, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 1, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_013)
{

    {
        // line 28835
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x0029, 0x05D0, 0x0061, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28836
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x0029, 0x05D0, 0x0061, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 1, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28837
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x0029, 0x05D0, 0x0061, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28838
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x0061, 0x05D1, 0x005B, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28839
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x0061, 0x05D1, 0x005B, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28840
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x0061, 0x005B, 0x05D1, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28841
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x0061, 0x005B, 0x05D1, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28842
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x0061, 0x005B, 0x0029, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28843
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x0061, 0x005B, 0x0029, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28844
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x0061, 0x005B, 0x0029, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_014)
{

    {
        // line 28845
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x0061, 0x005B, 0x0029, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28846
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0061, 0x05D1, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28847
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0061, 0x05D1, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28848
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0061, 0x0029, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28849
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0061, 0x0029, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28850
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0061, 0x0029, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28851
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0061, 0x0029, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28852
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0029, 0x0061, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28853
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0029, 0x0061, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28854
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0029, 0x0061, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_015)
{

    {
        // line 28855
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0029, 0x0061, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28856
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0061, 0x05D1, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28857
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0061, 0x05D1, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28858
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0061, 0x0029, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28859
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0061, 0x0029, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28860
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0061, 0x0029, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28861
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0061, 0x0029, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28862
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0029, 0x0061, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28863
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0029, 0x0061, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28864
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0029, 0x0061, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_016)
{

    {
        // line 28865
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0029, 0x0061, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28866
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x0029, 0x05D0, 0x0061, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 1, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28867
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x0029, 0x05D0, 0x0061, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28868
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x0029, 0x05D0, 0x0061, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 1, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28869
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x0029, 0x05D0, 0x0061, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28870
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0061, 0x05D1, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28871
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0061, 0x05D1, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28872
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0061, 0x0029, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28873
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0061, 0x0029, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28874
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0061, 0x0029, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_017)
{

    {
        // line 28875
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0061, 0x0029, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28876
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0029, 0x0061, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28877
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0029, 0x0061, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28878
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0029, 0x0061, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28879
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0029, 0x0061, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28880
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x0029, 0x05D0, 0x0061, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 1, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28881
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x0029, 0x05D0, 0x0061, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28882
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x0029, 0x05D0, 0x0061, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 1, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28883
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x0029, 0x05D0, 0x0061, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28884
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0029, 0x2680, 0x05D0, 0x0061, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 1, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_018)
{

    {
        // line 28885
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0029, 0x2680, 0x05D0, 0x0061, 0x05D1, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28886
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0029, 0x2680, 0x05D0, 0x0061, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 1, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28887
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0029, 0x2680, 0x05D0, 0x0061, 0x005D, 0x05D1 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28890
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x05D1, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 1, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 4, 3, 2, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28891
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x05D1, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28892
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 1, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 4, 3, 2, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28893
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28894
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 1, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 4, 3, 2, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28895
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28896
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0029, 0x05D1, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_019)
{

    {
        // line 28897
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0029, 0x05D1, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28898
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0029, 0x05D1, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28899
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0029, 0x05D1, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28900
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0029, 0x05D1, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28901
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0029, 0x05D1, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28902
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0029, 0x05D1, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28903
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0029, 0x05D1, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28904
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x05D1, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 1, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 4, 3, 2, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28905
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x05D1, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28906
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 1, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 4, 3, 2, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_020)
{

    {
        // line 28907
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28908
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 1, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 4, 3, 2, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28909
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28910
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0029, 0x05D1, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28911
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0029, 0x05D1, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28912
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0029, 0x05D1, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28913
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0029, 0x05D1, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28914
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0029, 0x05D1, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28915
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0029, 0x05D1, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28916
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0029, 0x05D1, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_021)
{

    {
        // line 28917
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0029, 0x05D1, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28918
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0029, 0x05D1, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28919
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0029, 0x05D1, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28920
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0029, 0x05D1, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28921
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0029, 0x05D1, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28924
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x05D1, 0x0061, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 1, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 4, 3, 2, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28925
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x05D1, 0x0061, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28926
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x0061, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 1, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 4, 3, 2, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28927
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x0061, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28928
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x005D, 0x0061 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 1, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 4, 3, 2, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_022)
{

    {
        // line 28929
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x005D, 0x0061 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28930
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0029, 0x05D1, 0x0061, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28931
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0029, 0x05D1, 0x0061, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28932
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0029, 0x05D1, 0x005D, 0x0061 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28933
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0029, 0x05D1, 0x005D, 0x0061 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28934
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0029, 0x05D1, 0x0061, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28935
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0029, 0x05D1, 0x0061, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28936
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0029, 0x05D1, 0x005D, 0x0061 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28937
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0029, 0x05D1, 0x005D, 0x0061 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28938
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x05D1, 0x0061, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 1, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 4, 3, 2, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_023)
{

    {
        // line 28939
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x05D1, 0x0061, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28940
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x0061, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 1, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 4, 3, 2, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28941
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x0061, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28942
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x005D, 0x0061 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 1, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 4, 3, 2, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28943
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x005D, 0x0061 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28944
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0029, 0x05D1, 0x0061, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28945
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0029, 0x05D1, 0x0061, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28946
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0029, 0x05D1, 0x005D, 0x0061 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28947
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0029, 0x05D1, 0x005D, 0x0061 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28948
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0029, 0x05D1, 0x0061, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_024)
{

    {
        // line 28949
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0029, 0x05D1, 0x0061, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28950
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0029, 0x05D1, 0x005D, 0x0061 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28951
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0029, 0x05D1, 0x005D, 0x0061 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28952
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0029, 0x05D1, 0x0061, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28953
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0029, 0x05D1, 0x0061, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28954
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0029, 0x05D1, 0x005D, 0x0061 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28955
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0029, 0x05D1, 0x005D, 0x0061 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28958
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x05D2, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 1, 1, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 4, 3, 2, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28959
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x05D2, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28960
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x005D, 0x05D2 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 1, 1, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 4, 3, 2, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_025)
{

    {
        // line 28961
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x005D, 0x05D2 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28962
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0029, 0x05D1, 0x005D, 0x05D2 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 7, 6, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28963
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x05D0, 0x005B, 0x0029, 0x05D1, 0x005D, 0x05D2 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28964
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0029, 0x05D1, 0x005D, 0x05D2 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 7, 6, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28965
        std::vector<uint32_t> const cps = { 0x2680, 0x0028, 0x005B, 0x05D0, 0x0029, 0x05D1, 0x005D, 0x05D2 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28966
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x05D2, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 1, 1, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 4, 3, 2, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28967
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x05D2, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28968
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x005D, 0x05D2 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 1, 1, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 4, 3, 2, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28969
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x05D1, 0x0029, 0x005D, 0x05D2 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28970
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0029, 0x05D1, 0x005D, 0x05D2 };
        std::vector<int> const expected_levels =
            { 0, 0, 1, 0, 0, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 7, 6, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_026)
{

    {
        // line 28971
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x05D0, 0x005B, 0x0029, 0x05D1, 0x005D, 0x05D2 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28972
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0029, 0x05D1, 0x005D, 0x05D2 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 7, 6, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28973
        std::vector<uint32_t> const cps = { 0x0028, 0x2680, 0x005B, 0x05D0, 0x0029, 0x05D1, 0x005D, 0x05D2 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28974
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0029, 0x05D1, 0x005D, 0x05D2 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 1, 0, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 7, 6, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28975
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x2680, 0x05D0, 0x0029, 0x05D1, 0x005D, 0x05D2 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28978
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x2681, 0x005B, 0x2682, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28979
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x2681, 0x005B, 0x2682, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28980
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x2681, 0x005B, 0x0029, 0x2682, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28981
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x2681, 0x005B, 0x0029, 0x2682, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28982
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x2681, 0x005B, 0x0029, 0x005D, 0x2682 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_027)
{

    {
        // line 28983
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x2681, 0x005B, 0x0029, 0x005D, 0x2682 };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28984
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x2681, 0x0029, 0x2682, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28985
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x2681, 0x0029, 0x2682, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28986
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x2681, 0x0029, 0x005D, 0x2682 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28987
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x2681, 0x0029, 0x005D, 0x2682 };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28988
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x2681, 0x005D, 0x2682 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28989
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x2681, 0x005D, 0x2682 };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28990
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x2681, 0x0029, 0x2682, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28991
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x2681, 0x0029, 0x2682, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28992
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x2681, 0x0029, 0x005D, 0x2682 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_028)
{

    {
        // line 28993
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x2681, 0x0029, 0x005D, 0x2682 };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28994
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x2681, 0x005D, 0x2682 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28995
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x2681, 0x005D, 0x2682 };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28996
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x2681, 0x005D, 0x2682 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28997
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x2681, 0x005D, 0x2682 };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28998
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x2681, 0x0029, 0x2682, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 28999
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x2681, 0x0029, 0x2682, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29000
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x2681, 0x0029, 0x005D, 0x2682 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29001
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x2681, 0x0029, 0x005D, 0x2682 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29002
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x2681, 0x005D, 0x2682 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_029)
{

    {
        // line 29003
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x2681, 0x005D, 0x2682 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29004
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x2681, 0x005D, 0x2682 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29005
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x2681, 0x005D, 0x2682 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29006
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0029, 0x2681, 0x005D, 0x2682 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29007
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0029, 0x2681, 0x005D, 0x2682 };
        std::vector<int> const expected_levels =
            { 1, 1, 2, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29010
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x2681, 0x0062, 0x005B, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29011
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x2681, 0x0062, 0x005B, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29012
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x2681, 0x005B, 0x0062, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29013
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x2681, 0x005B, 0x0062, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29014
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x2681, 0x005B, 0x0029, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_030)
{

    {
        // line 29015
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x2681, 0x005B, 0x0029, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29016
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x2681, 0x005B, 0x0029, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29017
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x2681, 0x005B, 0x0029, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29018
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x2681, 0x0062, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29019
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x2681, 0x0062, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29020
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x2681, 0x0029, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29021
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x2681, 0x0029, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29022
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x2681, 0x0029, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29023
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x2681, 0x0029, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29024
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x2681, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_031)
{

    {
        // line 29025
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x2681, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29026
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x2681, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29027
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x2681, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29028
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x005D, 0x2681, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29029
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x005D, 0x2681, 0x0062 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29030
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x2681, 0x0062, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29031
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x2681, 0x0062, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29032
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x2681, 0x0029, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29033
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x2681, 0x0029, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29034
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x2681, 0x0029, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_032)
{

    {
        // line 29035
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x2681, 0x0029, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29036
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x2681, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29037
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x2681, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29038
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x2681, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29039
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x2681, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29040
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x005D, 0x2681, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29041
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x005D, 0x2681, 0x0062 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29042
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x2681, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29043
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x2681, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29044
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x2681, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_033)
{

    {
        // line 29045
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x2681, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29046
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x005D, 0x2681, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29047
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x005D, 0x2681, 0x0062 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29048
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x0029, 0x2680, 0x005D, 0x2681, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29049
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x0029, 0x2680, 0x005D, 0x2681, 0x0062 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29050
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x2681, 0x0062, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29051
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x2681, 0x0062, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 1, 2, 3, 4, 5, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29052
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x2681, 0x0029, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29053
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x2681, 0x0029, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29054
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x2681, 0x0029, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_034)
{

    {
        // line 29055
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x2681, 0x0029, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29056
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x2681, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29057
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x2681, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29058
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x2681, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29059
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x2681, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29060
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x005D, 0x2681, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29061
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x005D, 0x2681, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29062
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x2681, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29063
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x2681, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29064
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x2681, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_035)
{

    {
        // line 29065
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x2681, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29066
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x005D, 0x2681, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29067
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x005D, 0x2681, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29068
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x0029, 0x2680, 0x005D, 0x2681, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29069
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x0029, 0x2680, 0x005D, 0x2681, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29070
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0029, 0x2681, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29071
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0029, 0x2681, 0x0062, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 2, 1, 1, 1, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29072
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0029, 0x2681, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29073
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0029, 0x2681, 0x005D, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 1, 2, 1, 1, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29074
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0029, 0x005D, 0x2681, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_036)
{

    {
        // line 29075
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0029, 0x005D, 0x2681, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 1, 2, 1, 1, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29076
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x0029, 0x2680, 0x005D, 0x2681, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29077
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x0029, 0x2680, 0x005D, 0x2681, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 1, 2, 1, 1, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29078
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0029, 0x0061, 0x2680, 0x005D, 0x2681, 0x0062 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29079
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0029, 0x0061, 0x2680, 0x005D, 0x2681, 0x0062 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 2, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 3, 4, 5, 6, 7, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29082
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x2681, 0x05D0, 0x005B, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29083
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x2681, 0x05D0, 0x005B, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29084
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x2681, 0x005B, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29085
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x2681, 0x005B, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29086
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x2681, 0x005B, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_037)
{

    {
        // line 29087
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x2681, 0x005B, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29088
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x2681, 0x005B, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29089
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x2681, 0x005B, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29090
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x2681, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29091
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x2681, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29092
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x2681, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29093
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x2681, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29094
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x2681, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29095
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x2681, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29096
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x2681, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_038)
{

    {
        // line 29097
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x2681, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29098
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x2681, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29099
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x2681, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29100
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x005D, 0x2681, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29101
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x005D, 0x2681, 0x05D0 };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29102
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x2681, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29103
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x2681, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29104
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x2681, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29105
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x2681, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29106
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x2681, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_039)
{

    {
        // line 29107
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x2681, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29108
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x2681, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29109
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x2681, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29110
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x2681, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29111
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x2681, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29112
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x005D, 0x2681, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29113
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x005D, 0x2681, 0x05D0 };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29114
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x2681, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29115
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x2681, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29116
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x2681, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_040)
{

    {
        // line 29117
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x2681, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29118
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x005D, 0x2681, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29119
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x005D, 0x2681, 0x05D0 };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29120
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x0029, 0x2680, 0x005D, 0x2681, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29121
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x0029, 0x2680, 0x005D, 0x2681, 0x05D0 };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29122
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x2681, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29123
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x2681, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29124
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x2681, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29125
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x2681, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29126
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x2681, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_041)
{

    {
        // line 29127
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x2681, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29128
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x2681, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29129
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x2681, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29130
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x2681, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29131
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x2681, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29132
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x005D, 0x2681, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29133
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x005D, 0x2681, 0x05D0 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29134
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x2681, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29135
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x2681, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29136
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x2681, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_042)
{

    {
        // line 29137
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x2681, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29138
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x005D, 0x2681, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29139
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x005D, 0x2681, 0x05D0 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29140
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x0029, 0x2680, 0x005D, 0x2681, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29141
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x0029, 0x2680, 0x005D, 0x2681, 0x05D0 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29142
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0029, 0x2681, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29143
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0029, 0x2681, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 2, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29144
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0029, 0x2681, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29145
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0029, 0x2681, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 1, 1, 2, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29146
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0029, 0x005D, 0x2681, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_043)
{

    {
        // line 29147
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0029, 0x005D, 0x2681, 0x05D0 };
        std::vector<int> const expected_levels =
            { 1, 1, 2, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29148
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x0029, 0x2680, 0x005D, 0x2681, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29149
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x0029, 0x2680, 0x005D, 0x2681, 0x05D0 };
        std::vector<int> const expected_levels =
            { 1, 1, 2, 1, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29150
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0029, 0x0061, 0x2680, 0x005D, 0x2681, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29151
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0029, 0x0061, 0x2680, 0x005D, 0x2681, 0x05D0 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29154
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x0062, 0x2681, 0x005B, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29155
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x0062, 0x2681, 0x005B, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29156
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x0062, 0x005B, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29157
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x0062, 0x005B, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29158
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x0062, 0x005B, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_044)
{

    {
        // line 29159
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x0062, 0x005B, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29160
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x0062, 0x005B, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29161
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x0062, 0x005B, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29162
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0062, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29163
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0062, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29164
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0062, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29165
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0062, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29166
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0062, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29167
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0062, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29168
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x0062, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_045)
{

    {
        // line 29169
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x0062, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29170
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x0062, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29171
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x0062, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29172
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x0062, 0x2681, 0x005B, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29173
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x0062, 0x2681, 0x005B, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29174
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x0062, 0x005B, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29175
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x0062, 0x005B, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29176
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x0062, 0x005B, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29177
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x0062, 0x005B, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29178
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x0062, 0x005B, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_046)
{

    {
        // line 29179
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x0062, 0x005B, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29180
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0062, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29181
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0062, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29182
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0062, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29183
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0062, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29184
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0062, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29185
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0062, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29186
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x0062, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29187
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x0062, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29188
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x0062, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_047)
{

    {
        // line 29189
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x0062, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29190
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0062, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29191
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0062, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29192
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0062, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29193
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0062, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29194
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0062, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29195
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0062, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29196
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x0062, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29197
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x0062, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29198
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x0062, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_048)
{

    {
        // line 29199
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x0062, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29200
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x0029, 0x2680, 0x0062, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29201
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x0029, 0x2680, 0x0062, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29202
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x0029, 0x2680, 0x0062, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29203
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x0029, 0x2680, 0x0062, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29204
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x0062, 0x2681, 0x005B, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29205
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x0062, 0x2681, 0x005B, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 1, 2, 3, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29206
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x0062, 0x005B, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29207
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x0062, 0x005B, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 1, 2, 3, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29208
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x0062, 0x005B, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_049)
{

    {
        // line 29209
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x0062, 0x005B, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 1, 2, 3, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29210
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x0062, 0x005B, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29211
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x0062, 0x005B, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 1, 2, 3, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29212
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0062, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29213
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0062, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 1, 2, 3, 4, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29214
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0062, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29215
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0062, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 1, 2, 3, 4, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29216
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0062, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29217
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0062, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 1, 2, 3, 4, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29218
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x0062, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_050)
{

    {
        // line 29219
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x0062, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29220
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x0062, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29221
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x0062, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29222
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0062, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29223
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0062, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 1, 2, 3, 4, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29224
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0062, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29225
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0062, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 1, 2, 3, 4, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29226
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0062, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29227
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0062, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 1, 2, 3, 4, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29228
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x0062, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_051)
{

    {
        // line 29229
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x0062, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29230
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x0062, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29231
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x0062, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29232
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x0029, 0x2680, 0x0062, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29233
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x0029, 0x2680, 0x0062, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29234
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x0029, 0x2680, 0x0062, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29235
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x0029, 0x2680, 0x0062, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29236
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0062, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29237
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0062, 0x2681, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 2, 2, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 2, 3, 4, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29238
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0062, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_052)
{

    {
        // line 29239
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0062, 0x0029, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 2, 2, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 2, 3, 4, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29240
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0062, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29241
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0062, 0x0029, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 1, 2, 2, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 2, 3, 4, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29242
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0029, 0x0062, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29243
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0029, 0x0062, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 2, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29244
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0029, 0x0062, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29245
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0029, 0x0062, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 1, 2, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29246
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x0029, 0x2680, 0x0062, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29247
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x0029, 0x2680, 0x0062, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 2, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29248
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x0029, 0x2680, 0x0062, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_053)
{

    {
        // line 29249
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x0029, 0x2680, 0x0062, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 1, 2, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29250
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0029, 0x0061, 0x2680, 0x0062, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29251
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0029, 0x0061, 0x2680, 0x0062, 0x2681, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 3, 4, 5, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29252
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0029, 0x0061, 0x2680, 0x0062, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29253
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0029, 0x0061, 0x2680, 0x0062, 0x005D, 0x2681 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 3, 4, 5, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29256
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x0062, 0x005B, 0x0063, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29257
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x0062, 0x005B, 0x0063, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29258
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x0062, 0x005B, 0x0029, 0x0063, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29259
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x0062, 0x005B, 0x0029, 0x0063, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29260
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x0062, 0x005B, 0x0029, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_054)
{

    {
        // line 29261
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x0062, 0x005B, 0x0029, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29262
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0062, 0x0029, 0x0063, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29263
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0062, 0x0029, 0x0063, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29264
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0062, 0x0029, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29265
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0062, 0x0029, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29266
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x0062, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29267
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x0062, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29268
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x0062, 0x005B, 0x0063, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29269
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x0062, 0x005B, 0x0063, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29270
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x0062, 0x005B, 0x0029, 0x0063, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_055)
{

    {
        // line 29271
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x0062, 0x005B, 0x0029, 0x0063, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29272
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x0062, 0x005B, 0x0029, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29273
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x0062, 0x005B, 0x0029, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29274
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0062, 0x0029, 0x0063, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29275
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0062, 0x0029, 0x0063, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29276
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0062, 0x0029, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29277
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0062, 0x0029, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29278
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x0062, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29279
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x0062, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29280
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0062, 0x0029, 0x0063, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_056)
{

    {
        // line 29281
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0062, 0x0029, 0x0063, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 0, 1, 2, 3, 4, 5, 6 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29282
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0062, 0x0029, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29283
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0062, 0x0029, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29284
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x0062, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29285
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x0062, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29286
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x0029, 0x2680, 0x0062, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29287
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x0029, 0x2680, 0x0062, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29288
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x0062, 0x005B, 0x0063, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29289
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x0062, 0x005B, 0x0063, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 1, 2, 3, 4, 5, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29290
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x0062, 0x005B, 0x0029, 0x0063, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_057)
{

    {
        // line 29291
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x0062, 0x005B, 0x0029, 0x0063, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 1, 1, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 1, 2, 3, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29292
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x0062, 0x005B, 0x0029, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29293
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x0062, 0x005B, 0x0029, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 1, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 1, 2, 3, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29294
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0062, 0x0029, 0x0063, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29295
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0062, 0x0029, 0x0063, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 2, 1, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 1, 2, 3, 4, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29296
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0062, 0x0029, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29297
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0062, 0x0029, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 2, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 1, 2, 3, 4, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29298
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x0062, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29299
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x0062, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 5, 6, 7, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29300
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0062, 0x0029, 0x0063, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_058)
{

    {
        // line 29301
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0062, 0x0029, 0x0063, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 2, 1, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 1, 2, 3, 4, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29302
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0062, 0x0029, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29303
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0062, 0x0029, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 2, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 1, 2, 3, 4, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29304
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x0062, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29305
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x0062, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 5, 6, 7, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29306
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x0029, 0x2680, 0x0062, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29307
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x0029, 0x2680, 0x0062, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 5, 6, 7, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29308
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0062, 0x0029, 0x0063, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29309
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0062, 0x0029, 0x0063, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 1, 2, 2, 2, 1, 2, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 2, 3, 4, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29310
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0062, 0x0029, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_059)
{

    {
        // line 29311
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0062, 0x0029, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 1, 1, 2, 2, 2, 1, 1, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 2, 3, 4, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29312
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0029, 0x0062, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29313
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x2680, 0x0029, 0x0062, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 1, 1, 2, 1, 1, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 5, 6, 7, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29314
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x0029, 0x2680, 0x0062, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29315
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0061, 0x0029, 0x2680, 0x0062, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 1, 1, 2, 1, 1, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 5, 6, 7, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29316
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0029, 0x0061, 0x2680, 0x0062, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29317
        std::vector<uint32_t> const cps = { 0x0028, 0x005B, 0x0029, 0x0061, 0x2680, 0x0062, 0x005D, 0x0063 };
        std::vector<int> const expected_levels =
            { 1, 1, 1, 2, 2, 2, 2, 2 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 3, 4, 5, 6, 7, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29320
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x0062, 0x05D0, 0x005B, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29321
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x0062, 0x05D0, 0x005B, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29322
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x0062, 0x005B, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_060)
{

    {
        // line 29323
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x0062, 0x005B, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29324
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x0062, 0x005B, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29325
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x0062, 0x005B, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29326
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x0062, 0x005B, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29327
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x0062, 0x005B, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29328
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0062, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29329
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0062, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29330
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0062, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29331
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0062, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29332
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0062, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_061)
{

    {
        // line 29333
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0062, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29334
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x0062, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29335
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x0062, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29336
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x0062, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29337
        std::vector<uint32_t> const cps = { 0x0061, 0x2680, 0x0028, 0x005B, 0x0029, 0x0062, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29338
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x0062, 0x05D0, 0x005B, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29339
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x0062, 0x05D0, 0x005B, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29340
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x0062, 0x005B, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29341
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x0062, 0x005B, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29342
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x0062, 0x005B, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_062)
{

    {
        // line 29343
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x0062, 0x005B, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29344
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x0062, 0x005B, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29345
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x0062, 0x005B, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29346
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0062, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29347
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0062, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29348
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0062, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29349
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0062, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29350
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0062, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29351
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0062, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29352
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x0062, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_063)
{

    {
        // line 29353
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x0062, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29354
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x0062, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29355
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x2680, 0x005B, 0x0029, 0x0062, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29356
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0062, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29357
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0062, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 1, 1, 1, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29358
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0062, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29359
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0062, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29360
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0062, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29361
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0062, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29362
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x0062, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_064)
{

    {
        // line 29363
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x0062, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29364
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x0062, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29365
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x2680, 0x0029, 0x0062, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29366
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x0029, 0x2680, 0x0062, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29367
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x0029, 0x2680, 0x0062, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29368
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x0029, 0x2680, 0x0062, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29369
        std::vector<uint32_t> const cps = { 0x0061, 0x0028, 0x005B, 0x0029, 0x2680, 0x0062, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 2, 2, 2, 2, 2, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 0, 1, 2, 3, 4, 5 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29370
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x0062, 0x05D0, 0x005B, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 1, 0, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29371
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x0062, 0x05D0, 0x005B, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 1, 2, 3, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29372
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x0062, 0x005B, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_065)
{

    {
        // line 29373
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x0062, 0x005B, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 1, 2, 3, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29374
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x0062, 0x005B, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29375
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x0062, 0x005B, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 1, 2, 3, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29376
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x0062, 0x005B, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29377
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x0062, 0x005B, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 1, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 1, 2, 3, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29378
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0062, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29379
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0062, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 1, 2, 3, 4, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29380
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0062, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29381
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0062, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 1, 2, 3, 4, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29382
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0062, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_066)
{

    {
        // line 29383
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0062, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 1, 2, 3, 4, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29384
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x0062, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29385
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x0062, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29386
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x0062, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29387
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x2680, 0x005B, 0x0029, 0x0062, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29388
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0062, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 1, 0, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29389
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0062, 0x05D0, 0x0029, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 1, 2, 3, 4, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29390
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0062, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29391
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0062, 0x0029, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 1, 2, 3, 4, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29392
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0062, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }
}

TEST(bidi_character, bidi_character_041_067)
{

    {
        // line 29393
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0062, 0x0029, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 1, 2, 2, 2, 2, 1, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 1, 2, 3, 4, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29394
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x0062, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29395
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x0062, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29396
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x0062, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29397
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x2680, 0x0029, 0x0062, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29398
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x0029, 0x2680, 0x0062, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 1, 0 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29399
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x0029, 0x2680, 0x0062, 0x05D0, 0x005D };
        std::vector<int> const expected_levels =
            { 1, 2, 1, 1, 1, 2, 1, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 1);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 7, 6, 5, 4, 3, 2, 1, 0 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 1);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

    {
        // line 29400
        std::vector<uint32_t> const cps = { 0x0028, 0x0061, 0x005B, 0x0029, 0x2680, 0x0062, 0x005D, 0x05D0 };
        std::vector<int> const expected_levels =
            { 0, 0, 0, 0, 0, 0, 0, 1 };
        std::vector<int> const levels =
            bidi_levels(cps.begin(), cps.end(), 0);
        int i = 0;
        for (int l : expected_levels) {
            if (0 <= l) {
                EXPECT_EQ(levels[i], l) << "i=" << i;
                ++i;
            }
        }
        EXPECT_EQ((int)levels.size(), i);

        std::vector<uint32_t> const expected_reordered_indices =
            { 0, 1, 2, 3, 4, 5, 6, 7 };
        std::vector<int> const reordered =
            bidi_reordered_indices(cps.begin(), cps.end(), 0);
        i = 0;
        for (int idx : expected_reordered_indices) {
            EXPECT_EQ(reordered[i], (int)cps[idx])
                << std::hex
                << " 0x" << reordered[i]
                << " 0x" << cps[idx]
                << std::dec << " i=" << i;
            ++i;
        }
    }

}
