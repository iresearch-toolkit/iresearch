// Copyright (C) 2020 T. Zachary Laine
//
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

// Warning! This file is autogenerated.
#include <boost/text/collate.hpp>
#include <boost/text/collation_table.hpp>

#include <benchmark/benchmark.h>

boost::text::detail::collation_trie_t const & trie()
{
    static auto const retval = boost::text::detail::make_default_trie();
    return retval;
}

boost::text::collation_table const & table()
{
    static auto const retval = boost::text::default_collation_table();
    return retval;
}

uint32_t cps_200[] = {
0x28e3, 0x28e4, 0x28e5, 0x28e6, 0x28e7, 0x28e8, 0x28e9, 0x28ea, 0x28eb, 0x28ec, 0x28ed, 0x28ee, 0x28ef, 0x28f0, 0x28f1, 0x28f2, 0x28f3, 0x28f4, 0x28f5, 0x28f6, 0x28f7, 0x28f8, 0x28f9, 0x28fa, 0x28fb, 0x28fc, 0x28fd, 0x28fe, 0x28ff, 0x2900, 0x2901, 0x2902, 0x2903, 0x2904, 0x2905, 0x2906, 0x2907, 0x2908, 0x2909, 0x290a, 0x290b, 0x290c, 0x290d, 0x290e, 0x290f, 0x2910, 0x2911, 0x2912, 0x2913, 0x2914
};

void BM_collation_element_lookup_200(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 0, cps_200 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 1, cps_200 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 2, cps_200 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 3, cps_200 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 4, cps_200 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 5, cps_200 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 6, cps_200 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 7, cps_200 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 8, cps_200 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 9, cps_200 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 10, cps_200 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 11, cps_200 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 12, cps_200 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 13, cps_200 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 14, cps_200 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 15, cps_200 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 16, cps_200 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 17, cps_200 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 18, cps_200 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 19, cps_200 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 20, cps_200 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 21, cps_200 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 22, cps_200 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 23, cps_200 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 24, cps_200 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 25, cps_200 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 26, cps_200 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 27, cps_200 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 28, cps_200 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 29, cps_200 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 30, cps_200 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 31, cps_200 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 32, cps_200 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 33, cps_200 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 34, cps_200 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 35, cps_200 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 36, cps_200 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 37, cps_200 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 38, cps_200 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 39, cps_200 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 40, cps_200 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 41, cps_200 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 42, cps_200 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 43, cps_200 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 44, cps_200 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 45, cps_200 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 46, cps_200 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 47, cps_200 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 48, cps_200 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_200 + 49, cps_200 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_200);

uint32_t cps_201[] = {
0x2915, 0x2916, 0x2917, 0x2918, 0x2919, 0x291a, 0x291b, 0x291c, 0x291d, 0x291e, 0x291f, 0x2920, 0x2921, 0x2922, 0x2923, 0x2924, 0x2925, 0x2926, 0x2927, 0x2928, 0x2929, 0x292a, 0x292b, 0x292c, 0x292d, 0x292e, 0x292f, 0x2930, 0x2931, 0x2932, 0x2933, 0x2934, 0x2935, 0x2936, 0x2937, 0x2938, 0x2939, 0x293a, 0x293b, 0x293c, 0x293d, 0x293e, 0x293f, 0x2940, 0x2941, 0x2942, 0x2943, 0x2944, 0x2945, 0x2946
};

void BM_collation_element_lookup_201(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 0, cps_201 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 1, cps_201 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 2, cps_201 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 3, cps_201 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 4, cps_201 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 5, cps_201 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 6, cps_201 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 7, cps_201 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 8, cps_201 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 9, cps_201 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 10, cps_201 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 11, cps_201 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 12, cps_201 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 13, cps_201 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 14, cps_201 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 15, cps_201 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 16, cps_201 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 17, cps_201 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 18, cps_201 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 19, cps_201 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 20, cps_201 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 21, cps_201 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 22, cps_201 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 23, cps_201 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 24, cps_201 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 25, cps_201 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 26, cps_201 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 27, cps_201 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 28, cps_201 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 29, cps_201 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 30, cps_201 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 31, cps_201 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 32, cps_201 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 33, cps_201 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 34, cps_201 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 35, cps_201 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 36, cps_201 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 37, cps_201 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 38, cps_201 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 39, cps_201 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 40, cps_201 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 41, cps_201 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 42, cps_201 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 43, cps_201 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 44, cps_201 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 45, cps_201 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 46, cps_201 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 47, cps_201 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 48, cps_201 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_201 + 49, cps_201 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_201);

uint32_t cps_202[] = {
0x2947, 0x2948, 0x2949, 0x294a, 0x294b, 0x294c, 0x294d, 0x294e, 0x294f, 0x2950, 0x2951, 0x2952, 0x2953, 0x2954, 0x2955, 0x2956, 0x2957, 0x2958, 0x2959, 0x295a, 0x295b, 0x295c, 0x295d, 0x295e, 0x295f, 0x2960, 0x2961, 0x2962, 0x2963, 0x2964, 0x2965, 0x2966, 0x2967, 0x2968, 0x2969, 0x296a, 0x296b, 0x296c, 0x296d, 0x296e, 0x296f, 0x2970, 0x2971, 0x2972, 0x2973, 0x2974, 0x2975, 0x2976, 0x2977, 0x2978
};

void BM_collation_element_lookup_202(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 0, cps_202 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 1, cps_202 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 2, cps_202 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 3, cps_202 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 4, cps_202 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 5, cps_202 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 6, cps_202 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 7, cps_202 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 8, cps_202 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 9, cps_202 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 10, cps_202 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 11, cps_202 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 12, cps_202 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 13, cps_202 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 14, cps_202 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 15, cps_202 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 16, cps_202 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 17, cps_202 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 18, cps_202 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 19, cps_202 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 20, cps_202 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 21, cps_202 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 22, cps_202 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 23, cps_202 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 24, cps_202 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 25, cps_202 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 26, cps_202 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 27, cps_202 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 28, cps_202 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 29, cps_202 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 30, cps_202 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 31, cps_202 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 32, cps_202 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 33, cps_202 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 34, cps_202 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 35, cps_202 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 36, cps_202 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 37, cps_202 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 38, cps_202 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 39, cps_202 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 40, cps_202 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 41, cps_202 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 42, cps_202 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 43, cps_202 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 44, cps_202 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 45, cps_202 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 46, cps_202 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 47, cps_202 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 48, cps_202 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_202 + 49, cps_202 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_202);

uint32_t cps_203[] = {
0x2979, 0x297a, 0x297b, 0x297c, 0x297d, 0x297e, 0x297f, 0x2980, 0x2981, 0x2982, 0x2983, 0x2984, 0x2985, 0x2986, 0x2987, 0x2988, 0x2989, 0x298a, 0x298b, 0x298c, 0x298d, 0x298e, 0x298f, 0x2990, 0x2991, 0x2992, 0x2993, 0x2994, 0x2995, 0x2996, 0x2997, 0x2998, 0x2999, 0x299a, 0x299b, 0x299c, 0x299d, 0x299e, 0x299f, 0x29a0, 0x29a1, 0x29a2, 0x29a3, 0x29a4, 0x29a5, 0x29a6, 0x29a7, 0x29a8, 0x29a9, 0x29aa
};

void BM_collation_element_lookup_203(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 0, cps_203 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 1, cps_203 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 2, cps_203 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 3, cps_203 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 4, cps_203 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 5, cps_203 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 6, cps_203 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 7, cps_203 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 8, cps_203 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 9, cps_203 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 10, cps_203 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 11, cps_203 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 12, cps_203 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 13, cps_203 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 14, cps_203 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 15, cps_203 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 16, cps_203 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 17, cps_203 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 18, cps_203 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 19, cps_203 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 20, cps_203 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 21, cps_203 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 22, cps_203 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 23, cps_203 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 24, cps_203 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 25, cps_203 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 26, cps_203 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 27, cps_203 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 28, cps_203 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 29, cps_203 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 30, cps_203 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 31, cps_203 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 32, cps_203 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 33, cps_203 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 34, cps_203 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 35, cps_203 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 36, cps_203 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 37, cps_203 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 38, cps_203 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 39, cps_203 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 40, cps_203 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 41, cps_203 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 42, cps_203 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 43, cps_203 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 44, cps_203 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 45, cps_203 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 46, cps_203 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 47, cps_203 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 48, cps_203 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_203 + 49, cps_203 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_203);

uint32_t cps_204[] = {
0x29ab, 0x29ac, 0x29ad, 0x29ae, 0x29af, 0x29b0, 0x29b1, 0x29b2, 0x29b3, 0x29b4, 0x29b5, 0x29b6, 0x29b7, 0x29b8, 0x29b9, 0x29ba, 0x29bb, 0x29bc, 0x29bd, 0x29be, 0x29bf, 0x29c0, 0x29c1, 0x29c2, 0x29c3, 0x29c4, 0x29c5, 0x29c6, 0x29c7, 0x29c8, 0x29c9, 0x29ca, 0x29cb, 0x29cc, 0x29cd, 0x29ce, 0x29cf, 0x29d0, 0x29d1, 0x29d2, 0x29d3, 0x29d4, 0x29d5, 0x29d6, 0x29d7, 0x29d8, 0x29d9, 0x29da, 0x29db, 0x29dc
};

void BM_collation_element_lookup_204(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 0, cps_204 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 1, cps_204 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 2, cps_204 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 3, cps_204 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 4, cps_204 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 5, cps_204 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 6, cps_204 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 7, cps_204 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 8, cps_204 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 9, cps_204 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 10, cps_204 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 11, cps_204 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 12, cps_204 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 13, cps_204 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 14, cps_204 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 15, cps_204 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 16, cps_204 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 17, cps_204 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 18, cps_204 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 19, cps_204 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 20, cps_204 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 21, cps_204 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 22, cps_204 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 23, cps_204 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 24, cps_204 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 25, cps_204 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 26, cps_204 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 27, cps_204 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 28, cps_204 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 29, cps_204 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 30, cps_204 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 31, cps_204 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 32, cps_204 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 33, cps_204 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 34, cps_204 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 35, cps_204 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 36, cps_204 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 37, cps_204 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 38, cps_204 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 39, cps_204 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 40, cps_204 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 41, cps_204 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 42, cps_204 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 43, cps_204 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 44, cps_204 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 45, cps_204 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 46, cps_204 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 47, cps_204 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 48, cps_204 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_204 + 49, cps_204 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_204);

uint32_t cps_205[] = {
0x29dd, 0x29de, 0x29df, 0x29e0, 0x29e1, 0x29e2, 0x29e3, 0x29e4, 0x29e5, 0x29e6, 0x29e7, 0x29e8, 0x29e9, 0x29ea, 0x29eb, 0x29ec, 0x29ed, 0x29ee, 0x29ef, 0x29f0, 0x29f1, 0x29f2, 0x29f3, 0x29f4, 0x29f5, 0x29f6, 0x29f7, 0x29f8, 0x29f9, 0x29fa, 0x29fb, 0x29fc, 0x29fd, 0x29fe, 0x29ff, 0x2a00, 0x2a01, 0x2a02, 0x2a03, 0x2a04, 0x2a05, 0x2a06, 0x2a07, 0x2a08, 0x2a09, 0x2a0a, 0x2a0b, 0x2a0c, 0x2a0d, 0x2a0e
};

void BM_collation_element_lookup_205(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 0, cps_205 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 1, cps_205 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 2, cps_205 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 3, cps_205 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 4, cps_205 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 5, cps_205 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 6, cps_205 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 7, cps_205 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 8, cps_205 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 9, cps_205 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 10, cps_205 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 11, cps_205 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 12, cps_205 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 13, cps_205 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 14, cps_205 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 15, cps_205 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 16, cps_205 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 17, cps_205 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 18, cps_205 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 19, cps_205 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 20, cps_205 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 21, cps_205 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 22, cps_205 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 23, cps_205 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 24, cps_205 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 25, cps_205 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 26, cps_205 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 27, cps_205 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 28, cps_205 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 29, cps_205 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 30, cps_205 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 31, cps_205 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 32, cps_205 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 33, cps_205 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 34, cps_205 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 35, cps_205 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 36, cps_205 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 37, cps_205 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 38, cps_205 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 39, cps_205 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 40, cps_205 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 41, cps_205 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 42, cps_205 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 43, cps_205 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 44, cps_205 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 45, cps_205 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 46, cps_205 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 47, cps_205 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 48, cps_205 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_205 + 49, cps_205 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_205);

uint32_t cps_206[] = {
0x2a0f, 0x2a10, 0x2a11, 0x2a12, 0x2a13, 0x2a14, 0x2a15, 0x2a16, 0x2a17, 0x2a18, 0x2a19, 0x2a1a, 0x2a1b, 0x2a1c, 0x2a1d, 0x2a1e, 0x2a1f, 0x2a20, 0x2a21, 0x2a22, 0x2a23, 0x2a24, 0x2a25, 0x2a26, 0x2a27, 0x2a28, 0x2a29, 0x2a2a, 0x2a2b, 0x2a2c, 0x2a2d, 0x2a2e, 0x2a2f, 0x2a30, 0x2a31, 0x2a32, 0x2a33, 0x2a34, 0x2a35, 0x2a36, 0x2a37, 0x2a38, 0x2a39, 0x2a3a, 0x2a3b, 0x2a3c, 0x2a3d, 0x2a3e, 0x2a3f, 0x2a40
};

void BM_collation_element_lookup_206(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 0, cps_206 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 1, cps_206 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 2, cps_206 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 3, cps_206 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 4, cps_206 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 5, cps_206 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 6, cps_206 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 7, cps_206 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 8, cps_206 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 9, cps_206 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 10, cps_206 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 11, cps_206 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 12, cps_206 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 13, cps_206 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 14, cps_206 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 15, cps_206 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 16, cps_206 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 17, cps_206 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 18, cps_206 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 19, cps_206 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 20, cps_206 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 21, cps_206 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 22, cps_206 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 23, cps_206 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 24, cps_206 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 25, cps_206 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 26, cps_206 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 27, cps_206 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 28, cps_206 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 29, cps_206 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 30, cps_206 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 31, cps_206 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 32, cps_206 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 33, cps_206 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 34, cps_206 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 35, cps_206 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 36, cps_206 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 37, cps_206 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 38, cps_206 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 39, cps_206 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 40, cps_206 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 41, cps_206 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 42, cps_206 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 43, cps_206 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 44, cps_206 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 45, cps_206 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 46, cps_206 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 47, cps_206 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 48, cps_206 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_206 + 49, cps_206 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_206);

uint32_t cps_207[] = {
0x2a41, 0x2a42, 0x2a43, 0x2a44, 0x2a45, 0x2a46, 0x2a47, 0x2a48, 0x2a49, 0x2a4a, 0x2a4b, 0x2a4c, 0x2a4d, 0x2a4e, 0x2a4f, 0x2a50, 0x2a51, 0x2a52, 0x2a53, 0x2a54, 0x2a55, 0x2a56, 0x2a57, 0x2a58, 0x2a59, 0x2a5a, 0x2a5b, 0x2a5c, 0x2a5d, 0x2a5e, 0x2a5f, 0x2a60, 0x2a61, 0x2a62, 0x2a63, 0x2a64, 0x2a65, 0x2a66, 0x2a67, 0x2a68, 0x2a69, 0x2a6a, 0x2a6b, 0x2a6c, 0x2a6d, 0x2a6e, 0x2a6f, 0x2a70, 0x2a71, 0x2a72
};

void BM_collation_element_lookup_207(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 0, cps_207 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 1, cps_207 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 2, cps_207 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 3, cps_207 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 4, cps_207 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 5, cps_207 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 6, cps_207 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 7, cps_207 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 8, cps_207 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 9, cps_207 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 10, cps_207 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 11, cps_207 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 12, cps_207 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 13, cps_207 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 14, cps_207 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 15, cps_207 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 16, cps_207 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 17, cps_207 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 18, cps_207 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 19, cps_207 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 20, cps_207 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 21, cps_207 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 22, cps_207 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 23, cps_207 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 24, cps_207 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 25, cps_207 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 26, cps_207 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 27, cps_207 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 28, cps_207 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 29, cps_207 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 30, cps_207 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 31, cps_207 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 32, cps_207 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 33, cps_207 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 34, cps_207 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 35, cps_207 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 36, cps_207 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 37, cps_207 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 38, cps_207 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 39, cps_207 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 40, cps_207 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 41, cps_207 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 42, cps_207 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 43, cps_207 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 44, cps_207 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 45, cps_207 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 46, cps_207 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 47, cps_207 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 48, cps_207 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_207 + 49, cps_207 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_207);

uint32_t cps_208[] = {
0x2a73, 0x2a74, 0x2a75, 0x2a76, 0x2a77, 0x2a78, 0x2a79, 0x2a7a, 0x2a7b, 0x2a7c, 0x2a7d, 0x2a7e, 0x2a7f, 0x2a80, 0x2a81, 0x2a82, 0x2a83, 0x2a84, 0x2a85, 0x2a86, 0x2a87, 0x2a88, 0x2a89, 0x2a8a, 0x2a8b, 0x2a8c, 0x2a8d, 0x2a8e, 0x2a8f, 0x2a90, 0x2a91, 0x2a92, 0x2a93, 0x2a94, 0x2a95, 0x2a96, 0x2a97, 0x2a98, 0x2a99, 0x2a9a, 0x2a9b, 0x2a9c, 0x2a9d, 0x2a9e, 0x2a9f, 0x2aa0, 0x2aa1, 0x2aa2, 0x2aa3, 0x2aa4
};

void BM_collation_element_lookup_208(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 0, cps_208 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 1, cps_208 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 2, cps_208 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 3, cps_208 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 4, cps_208 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 5, cps_208 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 6, cps_208 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 7, cps_208 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 8, cps_208 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 9, cps_208 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 10, cps_208 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 11, cps_208 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 12, cps_208 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 13, cps_208 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 14, cps_208 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 15, cps_208 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 16, cps_208 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 17, cps_208 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 18, cps_208 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 19, cps_208 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 20, cps_208 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 21, cps_208 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 22, cps_208 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 23, cps_208 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 24, cps_208 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 25, cps_208 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 26, cps_208 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 27, cps_208 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 28, cps_208 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 29, cps_208 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 30, cps_208 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 31, cps_208 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 32, cps_208 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 33, cps_208 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 34, cps_208 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 35, cps_208 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 36, cps_208 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 37, cps_208 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 38, cps_208 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 39, cps_208 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 40, cps_208 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 41, cps_208 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 42, cps_208 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 43, cps_208 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 44, cps_208 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 45, cps_208 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 46, cps_208 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 47, cps_208 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 48, cps_208 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_208 + 49, cps_208 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_208);

uint32_t cps_209[] = {
0x2aa5, 0x2aa6, 0x2aa7, 0x2aa8, 0x2aa9, 0x2aaa, 0x2aab, 0x2aac, 0x2aad, 0x2aae, 0x2aaf, 0x2ab0, 0x2ab1, 0x2ab2, 0x2ab3, 0x2ab4, 0x2ab5, 0x2ab6, 0x2ab7, 0x2ab8, 0x2ab9, 0x2aba, 0x2abb, 0x2abc, 0x2abd, 0x2abe, 0x2abf, 0x2ac0, 0x2ac1, 0x2ac2, 0x2ac3, 0x2ac4, 0x2ac5, 0x2ac6, 0x2ac7, 0x2ac8, 0x2ac9, 0x2aca, 0x2acb, 0x2acc, 0x2acd, 0x2ace, 0x2acf, 0x2ad0, 0x2ad1, 0x2ad2, 0x2ad3, 0x2ad4, 0x2ad5, 0x2ad6
};

void BM_collation_element_lookup_209(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 0, cps_209 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 1, cps_209 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 2, cps_209 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 3, cps_209 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 4, cps_209 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 5, cps_209 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 6, cps_209 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 7, cps_209 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 8, cps_209 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 9, cps_209 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 10, cps_209 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 11, cps_209 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 12, cps_209 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 13, cps_209 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 14, cps_209 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 15, cps_209 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 16, cps_209 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 17, cps_209 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 18, cps_209 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 19, cps_209 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 20, cps_209 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 21, cps_209 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 22, cps_209 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 23, cps_209 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 24, cps_209 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 25, cps_209 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 26, cps_209 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 27, cps_209 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 28, cps_209 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 29, cps_209 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 30, cps_209 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 31, cps_209 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 32, cps_209 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 33, cps_209 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 34, cps_209 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 35, cps_209 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 36, cps_209 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 37, cps_209 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 38, cps_209 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 39, cps_209 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 40, cps_209 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 41, cps_209 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 42, cps_209 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 43, cps_209 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 44, cps_209 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 45, cps_209 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 46, cps_209 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 47, cps_209 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 48, cps_209 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_209 + 49, cps_209 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_209);

uint32_t cps_210[] = {
0x2ad7, 0x2ad8, 0x2ad9, 0x2ada, 0x2adb, 0x2adc, 0x2add, 0x2ade, 0x2adf, 0x2ae0, 0x2ae1, 0x2ae2, 0x2ae3, 0x2ae4, 0x2ae5, 0x2ae6, 0x2ae7, 0x2ae8, 0x2ae9, 0x2aea, 0x2aeb, 0x2aec, 0x2aed, 0x2aee, 0x2aef, 0x2af0, 0x2af1, 0x2af2, 0x2af3, 0x2af4, 0x2af5, 0x2af6, 0x2af7, 0x2af8, 0x2af9, 0x2afa, 0x2afb, 0x2afc, 0x2afd, 0x2afe, 0x2aff, 0x2b00, 0x2b01, 0x2b02, 0x2b03, 0x2b04, 0x2b05, 0x2b06, 0x2b07, 0x2b08
};

void BM_collation_element_lookup_210(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 0, cps_210 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 1, cps_210 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 2, cps_210 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 3, cps_210 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 4, cps_210 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 5, cps_210 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 6, cps_210 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 7, cps_210 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 8, cps_210 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 9, cps_210 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 10, cps_210 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 11, cps_210 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 12, cps_210 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 13, cps_210 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 14, cps_210 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 15, cps_210 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 16, cps_210 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 17, cps_210 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 18, cps_210 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 19, cps_210 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 20, cps_210 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 21, cps_210 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 22, cps_210 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 23, cps_210 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 24, cps_210 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 25, cps_210 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 26, cps_210 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 27, cps_210 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 28, cps_210 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 29, cps_210 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 30, cps_210 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 31, cps_210 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 32, cps_210 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 33, cps_210 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 34, cps_210 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 35, cps_210 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 36, cps_210 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 37, cps_210 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 38, cps_210 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 39, cps_210 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 40, cps_210 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 41, cps_210 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 42, cps_210 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 43, cps_210 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 44, cps_210 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 45, cps_210 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 46, cps_210 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 47, cps_210 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 48, cps_210 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_210 + 49, cps_210 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_210);

uint32_t cps_211[] = {
0x2b09, 0x2b0a, 0x2b0b, 0x2b0c, 0x2b0d, 0x2b0e, 0x2b0f, 0x2b10, 0x2b11, 0x2b12, 0x2b13, 0x2b14, 0x2b15, 0x2b16, 0x2b17, 0x2b18, 0x2b19, 0x2b1a, 0x2b1b, 0x2b1c, 0x2b1d, 0x2b1e, 0x2b1f, 0x2b20, 0x2b21, 0x2b22, 0x2b23, 0x2b24, 0x2b25, 0x2b26, 0x2b27, 0x2b28, 0x2b29, 0x2b2a, 0x2b2b, 0x2b2c, 0x2b2d, 0x2b2e, 0x2b2f, 0x2b30, 0x2b31, 0x2b32, 0x2b33, 0x2b34, 0x2b35, 0x2b36, 0x2b37, 0x2b38, 0x2b39, 0x2b3a
};

void BM_collation_element_lookup_211(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 0, cps_211 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 1, cps_211 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 2, cps_211 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 3, cps_211 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 4, cps_211 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 5, cps_211 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 6, cps_211 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 7, cps_211 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 8, cps_211 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 9, cps_211 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 10, cps_211 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 11, cps_211 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 12, cps_211 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 13, cps_211 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 14, cps_211 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 15, cps_211 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 16, cps_211 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 17, cps_211 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 18, cps_211 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 19, cps_211 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 20, cps_211 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 21, cps_211 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 22, cps_211 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 23, cps_211 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 24, cps_211 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 25, cps_211 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 26, cps_211 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 27, cps_211 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 28, cps_211 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 29, cps_211 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 30, cps_211 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 31, cps_211 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 32, cps_211 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 33, cps_211 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 34, cps_211 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 35, cps_211 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 36, cps_211 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 37, cps_211 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 38, cps_211 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 39, cps_211 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 40, cps_211 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 41, cps_211 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 42, cps_211 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 43, cps_211 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 44, cps_211 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 45, cps_211 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 46, cps_211 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 47, cps_211 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 48, cps_211 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_211 + 49, cps_211 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_211);

uint32_t cps_212[] = {
0x2b3b, 0x2b3c, 0x2b3d, 0x2b3e, 0x2b3f, 0x2b40, 0x2b41, 0x2b42, 0x2b43, 0x2b44, 0x2b45, 0x2b46, 0x2b47, 0x2b48, 0x2b49, 0x2b4a, 0x2b4b, 0x2b4c, 0x2b4d, 0x2b4e, 0x2b4f, 0x2b50, 0x2b51, 0x2b52, 0x2b53, 0x2b54, 0x2b55, 0x2b56, 0x2b57, 0x2b58, 0x2b59, 0x2b5a, 0x2b5b, 0x2b5c, 0x2b5d, 0x2b5e, 0x2b5f, 0x2b60, 0x2b61, 0x2b62, 0x2b63, 0x2b64, 0x2b65, 0x2b66, 0x2b67, 0x2b68, 0x2b69, 0x2b6a, 0x2b6b, 0x2b6c
};

void BM_collation_element_lookup_212(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 0, cps_212 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 1, cps_212 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 2, cps_212 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 3, cps_212 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 4, cps_212 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 5, cps_212 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 6, cps_212 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 7, cps_212 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 8, cps_212 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 9, cps_212 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 10, cps_212 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 11, cps_212 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 12, cps_212 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 13, cps_212 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 14, cps_212 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 15, cps_212 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 16, cps_212 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 17, cps_212 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 18, cps_212 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 19, cps_212 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 20, cps_212 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 21, cps_212 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 22, cps_212 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 23, cps_212 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 24, cps_212 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 25, cps_212 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 26, cps_212 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 27, cps_212 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 28, cps_212 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 29, cps_212 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 30, cps_212 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 31, cps_212 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 32, cps_212 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 33, cps_212 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 34, cps_212 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 35, cps_212 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 36, cps_212 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 37, cps_212 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 38, cps_212 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 39, cps_212 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 40, cps_212 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 41, cps_212 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 42, cps_212 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 43, cps_212 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 44, cps_212 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 45, cps_212 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 46, cps_212 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 47, cps_212 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 48, cps_212 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_212 + 49, cps_212 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_212);

uint32_t cps_213[] = {
0x2b6d, 0x2b6e, 0x2b6f, 0x2b70, 0x2b71, 0x2b72, 0x2b73, 0x2b76, 0x2b77, 0x2b78, 0x2b79, 0x2b7a, 0x2b7b, 0x2b7c, 0x2b7d, 0x2b7e, 0x2b7f, 0x2b80, 0x2b81, 0x2b82, 0x2b83, 0x2b84, 0x2b85, 0x2b86, 0x2b87, 0x2b88, 0x2b89, 0x2b8a, 0x2b8b, 0x2b8c, 0x2b8d, 0x2b8e, 0x2b8f, 0x2b90, 0x2b91, 0x2b92, 0x2b93, 0x2b94, 0x2b95, 0x2b98, 0x2b99, 0x2b9a, 0x2b9b, 0x2b9c, 0x2b9d, 0x2b9e, 0x2b9f, 0x2ba0, 0x2ba1, 0x2ba2
};

void BM_collation_element_lookup_213(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 0, cps_213 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 1, cps_213 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 2, cps_213 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 3, cps_213 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 4, cps_213 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 5, cps_213 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 6, cps_213 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 7, cps_213 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 8, cps_213 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 9, cps_213 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 10, cps_213 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 11, cps_213 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 12, cps_213 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 13, cps_213 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 14, cps_213 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 15, cps_213 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 16, cps_213 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 17, cps_213 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 18, cps_213 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 19, cps_213 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 20, cps_213 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 21, cps_213 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 22, cps_213 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 23, cps_213 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 24, cps_213 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 25, cps_213 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 26, cps_213 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 27, cps_213 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 28, cps_213 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 29, cps_213 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 30, cps_213 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 31, cps_213 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 32, cps_213 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 33, cps_213 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 34, cps_213 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 35, cps_213 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 36, cps_213 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 37, cps_213 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 38, cps_213 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 39, cps_213 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 40, cps_213 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 41, cps_213 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 42, cps_213 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 43, cps_213 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 44, cps_213 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 45, cps_213 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 46, cps_213 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 47, cps_213 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 48, cps_213 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_213 + 49, cps_213 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_213);

uint32_t cps_214[] = {
0x2ba3, 0x2ba4, 0x2ba5, 0x2ba6, 0x2ba7, 0x2ba8, 0x2ba9, 0x2baa, 0x2bab, 0x2bac, 0x2bad, 0x2bae, 0x2baf, 0x2bb0, 0x2bb1, 0x2bb2, 0x2bb3, 0x2bb4, 0x2bb5, 0x2bb6, 0x2bb7, 0x2bb8, 0x2bb9, 0x2bbd, 0x2bbe, 0x2bbf, 0x2bc0, 0x2bc1, 0x2bc2, 0x2bc3, 0x2bc4, 0x2bc5, 0x2bc6, 0x2bc7, 0x2bc8, 0x2bca, 0x2bcb, 0x2bcc, 0x2bcd, 0x2bce, 0x2bcf, 0x2bd0, 0x2bd1, 0x2bd2, 0x2bec, 0x2bed, 0x2bee, 0x2bef, 0x2c00, 0x2c01
};

void BM_collation_element_lookup_214(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 0, cps_214 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 1, cps_214 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 2, cps_214 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 3, cps_214 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 4, cps_214 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 5, cps_214 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 6, cps_214 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 7, cps_214 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 8, cps_214 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 9, cps_214 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 10, cps_214 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 11, cps_214 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 12, cps_214 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 13, cps_214 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 14, cps_214 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 15, cps_214 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 16, cps_214 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 17, cps_214 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 18, cps_214 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 19, cps_214 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 20, cps_214 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 21, cps_214 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 22, cps_214 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 23, cps_214 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 24, cps_214 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 25, cps_214 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 26, cps_214 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 27, cps_214 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 28, cps_214 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 29, cps_214 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 30, cps_214 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 31, cps_214 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 32, cps_214 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 33, cps_214 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 34, cps_214 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 35, cps_214 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 36, cps_214 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 37, cps_214 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 38, cps_214 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 39, cps_214 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 40, cps_214 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 41, cps_214 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 42, cps_214 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 43, cps_214 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 44, cps_214 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 45, cps_214 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 46, cps_214 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 47, cps_214 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 48, cps_214 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_214 + 49, cps_214 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_214);

uint32_t cps_215[] = {
0x2c02, 0x2c03, 0x2c04, 0x2c05, 0x2c06, 0x2c07, 0x2c08, 0x2c09, 0x2c0a, 0x2c0b, 0x2c0c, 0x2c0d, 0x2c0e, 0x2c0f, 0x2c10, 0x2c11, 0x2c12, 0x2c13, 0x2c14, 0x2c15, 0x2c16, 0x2c17, 0x2c18, 0x2c19, 0x2c1a, 0x2c1b, 0x2c1c, 0x2c1d, 0x2c1e, 0x2c1f, 0x2c20, 0x2c21, 0x2c22, 0x2c23, 0x2c24, 0x2c25, 0x2c26, 0x2c27, 0x2c28, 0x2c29, 0x2c2a, 0x2c2b, 0x2c2c, 0x2c2d, 0x2c2e, 0x2c30, 0x2c31, 0x2c32, 0x2c33, 0x2c34
};

void BM_collation_element_lookup_215(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 0, cps_215 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 1, cps_215 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 2, cps_215 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 3, cps_215 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 4, cps_215 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 5, cps_215 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 6, cps_215 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 7, cps_215 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 8, cps_215 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 9, cps_215 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 10, cps_215 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 11, cps_215 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 12, cps_215 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 13, cps_215 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 14, cps_215 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 15, cps_215 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 16, cps_215 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 17, cps_215 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 18, cps_215 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 19, cps_215 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 20, cps_215 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 21, cps_215 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 22, cps_215 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 23, cps_215 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 24, cps_215 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 25, cps_215 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 26, cps_215 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 27, cps_215 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 28, cps_215 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 29, cps_215 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 30, cps_215 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 31, cps_215 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 32, cps_215 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 33, cps_215 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 34, cps_215 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 35, cps_215 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 36, cps_215 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 37, cps_215 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 38, cps_215 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 39, cps_215 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 40, cps_215 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 41, cps_215 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 42, cps_215 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 43, cps_215 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 44, cps_215 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 45, cps_215 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 46, cps_215 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 47, cps_215 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 48, cps_215 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_215 + 49, cps_215 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_215);

uint32_t cps_216[] = {
0x2c35, 0x2c36, 0x2c37, 0x2c38, 0x2c39, 0x2c3a, 0x2c3b, 0x2c3c, 0x2c3d, 0x2c3e, 0x2c3f, 0x2c40, 0x2c41, 0x2c42, 0x2c43, 0x2c44, 0x2c45, 0x2c46, 0x2c47, 0x2c48, 0x2c49, 0x2c4a, 0x2c4b, 0x2c4c, 0x2c4d, 0x2c4e, 0x2c4f, 0x2c50, 0x2c51, 0x2c52, 0x2c53, 0x2c54, 0x2c55, 0x2c56, 0x2c57, 0x2c58, 0x2c59, 0x2c5a, 0x2c5b, 0x2c5c, 0x2c5d, 0x2c5e, 0x2c60, 0x2c61, 0x2c62, 0x2c63, 0x2c64, 0x2c65, 0x2c66, 0x2c67
};

void BM_collation_element_lookup_216(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 0, cps_216 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 1, cps_216 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 2, cps_216 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 3, cps_216 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 4, cps_216 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 5, cps_216 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 6, cps_216 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 7, cps_216 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 8, cps_216 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 9, cps_216 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 10, cps_216 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 11, cps_216 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 12, cps_216 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 13, cps_216 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 14, cps_216 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 15, cps_216 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 16, cps_216 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 17, cps_216 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 18, cps_216 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 19, cps_216 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 20, cps_216 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 21, cps_216 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 22, cps_216 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 23, cps_216 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 24, cps_216 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 25, cps_216 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 26, cps_216 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 27, cps_216 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 28, cps_216 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 29, cps_216 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 30, cps_216 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 31, cps_216 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 32, cps_216 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 33, cps_216 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 34, cps_216 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 35, cps_216 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 36, cps_216 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 37, cps_216 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 38, cps_216 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 39, cps_216 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 40, cps_216 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 41, cps_216 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 42, cps_216 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 43, cps_216 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 44, cps_216 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 45, cps_216 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 46, cps_216 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 47, cps_216 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 48, cps_216 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_216 + 49, cps_216 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_216);

uint32_t cps_217[] = {
0x2c68, 0x2c69, 0x2c6a, 0x2c6b, 0x2c6c, 0x2c6d, 0x2c6e, 0x2c6f, 0x2c70, 0x2c71, 0x2c72, 0x2c73, 0x2c74, 0x2c75, 0x2c76, 0x2c77, 0x2c78, 0x2c79, 0x2c7a, 0x2c7b, 0x2c7c, 0x2c7d, 0x2c7e, 0x2c7f, 0x2c80, 0x2c81, 0x2c82, 0x2c83, 0x2c84, 0x2c85, 0x2c86, 0x2c87, 0x2c88, 0x2c89, 0x2c8a, 0x2c8b, 0x2c8c, 0x2c8d, 0x2c8e, 0x2c8f, 0x2c90, 0x2c91, 0x2c92, 0x2c93, 0x2c94, 0x2c95, 0x2c96, 0x2c97, 0x2c98, 0x2c99
};

void BM_collation_element_lookup_217(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 0, cps_217 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 1, cps_217 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 2, cps_217 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 3, cps_217 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 4, cps_217 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 5, cps_217 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 6, cps_217 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 7, cps_217 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 8, cps_217 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 9, cps_217 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 10, cps_217 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 11, cps_217 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 12, cps_217 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 13, cps_217 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 14, cps_217 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 15, cps_217 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 16, cps_217 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 17, cps_217 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 18, cps_217 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 19, cps_217 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 20, cps_217 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 21, cps_217 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 22, cps_217 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 23, cps_217 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 24, cps_217 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 25, cps_217 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 26, cps_217 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 27, cps_217 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 28, cps_217 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 29, cps_217 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 30, cps_217 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 31, cps_217 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 32, cps_217 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 33, cps_217 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 34, cps_217 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 35, cps_217 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 36, cps_217 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 37, cps_217 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 38, cps_217 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 39, cps_217 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 40, cps_217 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 41, cps_217 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 42, cps_217 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 43, cps_217 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 44, cps_217 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 45, cps_217 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 46, cps_217 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 47, cps_217 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 48, cps_217 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_217 + 49, cps_217 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_217);

uint32_t cps_218[] = {
0x2c9a, 0x2c9b, 0x2c9c, 0x2c9d, 0x2c9e, 0x2c9f, 0x2ca0, 0x2ca1, 0x2ca2, 0x2ca3, 0x2ca4, 0x2ca5, 0x2ca6, 0x2ca7, 0x2ca8, 0x2ca9, 0x2caa, 0x2cab, 0x2cac, 0x2cad, 0x2cae, 0x2caf, 0x2cb0, 0x2cb1, 0x2cb2, 0x2cb3, 0x2cb4, 0x2cb5, 0x2cb6, 0x2cb7, 0x2cb8, 0x2cb9, 0x2cba, 0x2cbb, 0x2cbc, 0x2cbd, 0x2cbe, 0x2cbf, 0x2cc0, 0x2cc1, 0x2cc2, 0x2cc3, 0x2cc4, 0x2cc5, 0x2cc6, 0x2cc7, 0x2cc8, 0x2cc9, 0x2cca, 0x2ccb
};

void BM_collation_element_lookup_218(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 0, cps_218 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 1, cps_218 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 2, cps_218 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 3, cps_218 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 4, cps_218 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 5, cps_218 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 6, cps_218 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 7, cps_218 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 8, cps_218 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 9, cps_218 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 10, cps_218 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 11, cps_218 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 12, cps_218 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 13, cps_218 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 14, cps_218 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 15, cps_218 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 16, cps_218 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 17, cps_218 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 18, cps_218 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 19, cps_218 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 20, cps_218 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 21, cps_218 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 22, cps_218 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 23, cps_218 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 24, cps_218 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 25, cps_218 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 26, cps_218 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 27, cps_218 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 28, cps_218 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 29, cps_218 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 30, cps_218 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 31, cps_218 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 32, cps_218 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 33, cps_218 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 34, cps_218 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 35, cps_218 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 36, cps_218 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 37, cps_218 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 38, cps_218 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 39, cps_218 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 40, cps_218 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 41, cps_218 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 42, cps_218 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 43, cps_218 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 44, cps_218 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 45, cps_218 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 46, cps_218 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 47, cps_218 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 48, cps_218 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_218 + 49, cps_218 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_218);

uint32_t cps_219[] = {
0x2ccc, 0x2ccd, 0x2cce, 0x2ccf, 0x2cd0, 0x2cd1, 0x2cd2, 0x2cd3, 0x2cd4, 0x2cd5, 0x2cd6, 0x2cd7, 0x2cd8, 0x2cd9, 0x2cda, 0x2cdb, 0x2cdc, 0x2cdd, 0x2cde, 0x2cdf, 0x2ce0, 0x2ce1, 0x2ce2, 0x2ce3, 0x2ce4, 0x2ce5, 0x2ce6, 0x2ce7, 0x2ce8, 0x2ce9, 0x2cea, 0x2ceb, 0x2cec, 0x2ced, 0x2cee, 0x2cef, 0x2cf0, 0x2cf1, 0x2cf2, 0x2cf3, 0x2cf9, 0x2cfa, 0x2cfb, 0x2cfc, 0x2cfd, 0x2cfe, 0x2cff, 0x2d00, 0x2d01, 0x2d02
};

void BM_collation_element_lookup_219(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 0, cps_219 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 1, cps_219 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 2, cps_219 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 3, cps_219 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 4, cps_219 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 5, cps_219 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 6, cps_219 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 7, cps_219 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 8, cps_219 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 9, cps_219 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 10, cps_219 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 11, cps_219 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 12, cps_219 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 13, cps_219 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 14, cps_219 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 15, cps_219 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 16, cps_219 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 17, cps_219 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 18, cps_219 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 19, cps_219 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 20, cps_219 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 21, cps_219 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 22, cps_219 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 23, cps_219 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 24, cps_219 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 25, cps_219 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 26, cps_219 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 27, cps_219 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 28, cps_219 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 29, cps_219 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 30, cps_219 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 31, cps_219 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 32, cps_219 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 33, cps_219 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 34, cps_219 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 35, cps_219 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 36, cps_219 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 37, cps_219 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 38, cps_219 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 39, cps_219 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 40, cps_219 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 41, cps_219 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 42, cps_219 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 43, cps_219 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 44, cps_219 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 45, cps_219 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 46, cps_219 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 47, cps_219 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 48, cps_219 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_219 + 49, cps_219 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_219);

uint32_t cps_220[] = {
0x2d03, 0x2d04, 0x2d05, 0x2d06, 0x2d07, 0x2d08, 0x2d09, 0x2d0a, 0x2d0b, 0x2d0c, 0x2d0d, 0x2d0e, 0x2d0f, 0x2d10, 0x2d11, 0x2d12, 0x2d13, 0x2d14, 0x2d15, 0x2d16, 0x2d17, 0x2d18, 0x2d19, 0x2d1a, 0x2d1b, 0x2d1c, 0x2d1d, 0x2d1e, 0x2d1f, 0x2d20, 0x2d21, 0x2d22, 0x2d23, 0x2d24, 0x2d25, 0x2d27, 0x2d2d, 0x2d30, 0x2d31, 0x2d32, 0x2d33, 0x2d34, 0x2d35, 0x2d36, 0x2d37, 0x2d38, 0x2d39, 0x2d3a, 0x2d3b, 0x2d3c
};

void BM_collation_element_lookup_220(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 0, cps_220 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 1, cps_220 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 2, cps_220 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 3, cps_220 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 4, cps_220 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 5, cps_220 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 6, cps_220 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 7, cps_220 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 8, cps_220 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 9, cps_220 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 10, cps_220 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 11, cps_220 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 12, cps_220 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 13, cps_220 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 14, cps_220 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 15, cps_220 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 16, cps_220 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 17, cps_220 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 18, cps_220 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 19, cps_220 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 20, cps_220 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 21, cps_220 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 22, cps_220 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 23, cps_220 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 24, cps_220 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 25, cps_220 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 26, cps_220 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 27, cps_220 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 28, cps_220 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 29, cps_220 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 30, cps_220 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 31, cps_220 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 32, cps_220 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 33, cps_220 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 34, cps_220 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 35, cps_220 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 36, cps_220 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 37, cps_220 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 38, cps_220 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 39, cps_220 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 40, cps_220 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 41, cps_220 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 42, cps_220 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 43, cps_220 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 44, cps_220 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 45, cps_220 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 46, cps_220 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 47, cps_220 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 48, cps_220 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_220 + 49, cps_220 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_220);

uint32_t cps_221[] = {
0x2d3d, 0x2d3e, 0x2d3f, 0x2d40, 0x2d41, 0x2d42, 0x2d43, 0x2d44, 0x2d45, 0x2d46, 0x2d47, 0x2d48, 0x2d49, 0x2d4a, 0x2d4b, 0x2d4c, 0x2d4d, 0x2d4e, 0x2d4f, 0x2d50, 0x2d51, 0x2d52, 0x2d53, 0x2d54, 0x2d55, 0x2d56, 0x2d57, 0x2d58, 0x2d59, 0x2d5a, 0x2d5b, 0x2d5c, 0x2d5d, 0x2d5e, 0x2d5f, 0x2d60, 0x2d61, 0x2d62, 0x2d63, 0x2d64, 0x2d65, 0x2d66, 0x2d67, 0x2d6f, 0x2d70, 0x2d7f, 0x2d80, 0x2d81, 0x2d82, 0x2d83
};

void BM_collation_element_lookup_221(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 0, cps_221 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 1, cps_221 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 2, cps_221 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 3, cps_221 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 4, cps_221 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 5, cps_221 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 6, cps_221 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 7, cps_221 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 8, cps_221 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 9, cps_221 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 10, cps_221 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 11, cps_221 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 12, cps_221 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 13, cps_221 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 14, cps_221 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 15, cps_221 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 16, cps_221 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 17, cps_221 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 18, cps_221 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 19, cps_221 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 20, cps_221 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 21, cps_221 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 22, cps_221 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 23, cps_221 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 24, cps_221 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 25, cps_221 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 26, cps_221 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 27, cps_221 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 28, cps_221 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 29, cps_221 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 30, cps_221 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 31, cps_221 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 32, cps_221 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 33, cps_221 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 34, cps_221 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 35, cps_221 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 36, cps_221 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 37, cps_221 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 38, cps_221 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 39, cps_221 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 40, cps_221 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 41, cps_221 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 42, cps_221 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 43, cps_221 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 44, cps_221 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 45, cps_221 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 46, cps_221 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 47, cps_221 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 48, cps_221 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_221 + 49, cps_221 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_221);

uint32_t cps_222[] = {
0x2d84, 0x2d85, 0x2d86, 0x2d87, 0x2d88, 0x2d89, 0x2d8a, 0x2d8b, 0x2d8c, 0x2d8d, 0x2d8e, 0x2d8f, 0x2d90, 0x2d91, 0x2d92, 0x2d93, 0x2d94, 0x2d95, 0x2d96, 0x2da0, 0x2da1, 0x2da2, 0x2da3, 0x2da4, 0x2da5, 0x2da6, 0x2da8, 0x2da9, 0x2daa, 0x2dab, 0x2dac, 0x2dad, 0x2dae, 0x2db0, 0x2db1, 0x2db2, 0x2db3, 0x2db4, 0x2db5, 0x2db6, 0x2db8, 0x2db9, 0x2dba, 0x2dbb, 0x2dbc, 0x2dbd, 0x2dbe, 0x2dc0, 0x2dc1, 0x2dc2
};

void BM_collation_element_lookup_222(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 0, cps_222 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 1, cps_222 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 2, cps_222 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 3, cps_222 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 4, cps_222 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 5, cps_222 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 6, cps_222 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 7, cps_222 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 8, cps_222 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 9, cps_222 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 10, cps_222 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 11, cps_222 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 12, cps_222 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 13, cps_222 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 14, cps_222 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 15, cps_222 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 16, cps_222 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 17, cps_222 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 18, cps_222 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 19, cps_222 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 20, cps_222 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 21, cps_222 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 22, cps_222 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 23, cps_222 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 24, cps_222 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 25, cps_222 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 26, cps_222 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 27, cps_222 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 28, cps_222 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 29, cps_222 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 30, cps_222 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 31, cps_222 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 32, cps_222 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 33, cps_222 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 34, cps_222 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 35, cps_222 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 36, cps_222 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 37, cps_222 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 38, cps_222 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 39, cps_222 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 40, cps_222 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 41, cps_222 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 42, cps_222 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 43, cps_222 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 44, cps_222 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 45, cps_222 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 46, cps_222 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 47, cps_222 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 48, cps_222 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_222 + 49, cps_222 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_222);

uint32_t cps_223[] = {
0x2dc3, 0x2dc4, 0x2dc5, 0x2dc6, 0x2dc8, 0x2dc9, 0x2dca, 0x2dcb, 0x2dcc, 0x2dcd, 0x2dce, 0x2dd0, 0x2dd1, 0x2dd2, 0x2dd3, 0x2dd4, 0x2dd5, 0x2dd6, 0x2dd8, 0x2dd9, 0x2dda, 0x2ddb, 0x2ddc, 0x2ddd, 0x2dde, 0x2de0, 0x2de1, 0x2de2, 0x2de3, 0x2de4, 0x2de5, 0x2de6, 0x2de7, 0x2de8, 0x2de9, 0x2dea, 0x2deb, 0x2dec, 0x2ded, 0x2dee, 0x2def, 0x2df0, 0x2df1, 0x2df2, 0x2df3, 0x2df4, 0x2df5, 0x2df6, 0x2df7, 0x2df8
};

void BM_collation_element_lookup_223(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 0, cps_223 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 1, cps_223 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 2, cps_223 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 3, cps_223 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 4, cps_223 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 5, cps_223 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 6, cps_223 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 7, cps_223 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 8, cps_223 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 9, cps_223 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 10, cps_223 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 11, cps_223 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 12, cps_223 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 13, cps_223 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 14, cps_223 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 15, cps_223 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 16, cps_223 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 17, cps_223 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 18, cps_223 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 19, cps_223 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 20, cps_223 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 21, cps_223 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 22, cps_223 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 23, cps_223 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 24, cps_223 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 25, cps_223 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 26, cps_223 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 27, cps_223 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 28, cps_223 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 29, cps_223 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 30, cps_223 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 31, cps_223 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 32, cps_223 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 33, cps_223 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 34, cps_223 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 35, cps_223 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 36, cps_223 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 37, cps_223 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 38, cps_223 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 39, cps_223 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 40, cps_223 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 41, cps_223 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 42, cps_223 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 43, cps_223 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 44, cps_223 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 45, cps_223 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 46, cps_223 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 47, cps_223 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 48, cps_223 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_223 + 49, cps_223 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_223);

uint32_t cps_224[] = {
0x2df9, 0x2dfa, 0x2dfb, 0x2dfc, 0x2dfd, 0x2dfe, 0x2dff, 0x2e00, 0x2e01, 0x2e02, 0x2e03, 0x2e04, 0x2e05, 0x2e06, 0x2e07, 0x2e08, 0x2e09, 0x2e0a, 0x2e0b, 0x2e0c, 0x2e0d, 0x2e0e, 0x2e0f, 0x2e10, 0x2e11, 0x2e12, 0x2e13, 0x2e14, 0x2e15, 0x2e16, 0x2e17, 0x2e18, 0x2e19, 0x2e1a, 0x2e1b, 0x2e1c, 0x2e1d, 0x2e1e, 0x2e1f, 0x2e20, 0x2e21, 0x2e22, 0x2e23, 0x2e24, 0x2e25, 0x2e26, 0x2e27, 0x2e28, 0x2e29, 0x2e2a
};

void BM_collation_element_lookup_224(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 0, cps_224 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 1, cps_224 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 2, cps_224 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 3, cps_224 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 4, cps_224 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 5, cps_224 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 6, cps_224 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 7, cps_224 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 8, cps_224 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 9, cps_224 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 10, cps_224 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 11, cps_224 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 12, cps_224 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 13, cps_224 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 14, cps_224 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 15, cps_224 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 16, cps_224 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 17, cps_224 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 18, cps_224 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 19, cps_224 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 20, cps_224 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 21, cps_224 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 22, cps_224 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 23, cps_224 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 24, cps_224 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 25, cps_224 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 26, cps_224 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 27, cps_224 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 28, cps_224 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 29, cps_224 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 30, cps_224 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 31, cps_224 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 32, cps_224 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 33, cps_224 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 34, cps_224 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 35, cps_224 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 36, cps_224 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 37, cps_224 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 38, cps_224 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 39, cps_224 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 40, cps_224 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 41, cps_224 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 42, cps_224 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 43, cps_224 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 44, cps_224 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 45, cps_224 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 46, cps_224 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 47, cps_224 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 48, cps_224 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_224 + 49, cps_224 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_224);

uint32_t cps_225[] = {
0x2e2b, 0x2e2c, 0x2e2d, 0x2e2e, 0x2e2f, 0x2e30, 0x2e31, 0x2e32, 0x2e33, 0x2e34, 0x2e35, 0x2e36, 0x2e37, 0x2e38, 0x2e39, 0x2e3a, 0x2e3b, 0x2e3c, 0x2e3d, 0x2e3e, 0x2e3f, 0x2e40, 0x2e41, 0x2e42, 0x2e43, 0x2e44, 0x2e45, 0x2e46, 0x2e47, 0x2e48, 0x2e49, 0x2e80, 0x2e81, 0x2e82, 0x2e83, 0x2e84, 0x2e85, 0x2e86, 0x2e87, 0x2e88, 0x2e89, 0x2e8a, 0x2e8b, 0x2e8c, 0x2e8d, 0x2e8e, 0x2e8f, 0x2e90, 0x2e91, 0x2e92
};

void BM_collation_element_lookup_225(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 0, cps_225 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 1, cps_225 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 2, cps_225 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 3, cps_225 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 4, cps_225 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 5, cps_225 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 6, cps_225 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 7, cps_225 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 8, cps_225 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 9, cps_225 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 10, cps_225 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 11, cps_225 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 12, cps_225 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 13, cps_225 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 14, cps_225 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 15, cps_225 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 16, cps_225 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 17, cps_225 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 18, cps_225 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 19, cps_225 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 20, cps_225 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 21, cps_225 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 22, cps_225 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 23, cps_225 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 24, cps_225 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 25, cps_225 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 26, cps_225 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 27, cps_225 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 28, cps_225 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 29, cps_225 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 30, cps_225 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 31, cps_225 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 32, cps_225 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 33, cps_225 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 34, cps_225 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 35, cps_225 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 36, cps_225 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 37, cps_225 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 38, cps_225 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 39, cps_225 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 40, cps_225 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 41, cps_225 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 42, cps_225 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 43, cps_225 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 44, cps_225 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 45, cps_225 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 46, cps_225 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 47, cps_225 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 48, cps_225 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_225 + 49, cps_225 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_225);

uint32_t cps_226[] = {
0x2e93, 0x2e94, 0x2e95, 0x2e96, 0x2e97, 0x2e98, 0x2e99, 0x2e9b, 0x2e9c, 0x2e9d, 0x2e9e, 0x2e9f, 0x2ea0, 0x2ea1, 0x2ea2, 0x2ea3, 0x2ea4, 0x2ea5, 0x2ea6, 0x2ea7, 0x2ea8, 0x2ea9, 0x2eaa, 0x2eab, 0x2eac, 0x2ead, 0x2eae, 0x2eaf, 0x2eb0, 0x2eb1, 0x2eb2, 0x2eb3, 0x2eb4, 0x2eb5, 0x2eb6, 0x2eb7, 0x2eb8, 0x2eb9, 0x2eba, 0x2ebb, 0x2ebc, 0x2ebd, 0x2ebe, 0x2ebf, 0x2ec0, 0x2ec1, 0x2ec2, 0x2ec3, 0x2ec4, 0x2ec5
};

void BM_collation_element_lookup_226(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 0, cps_226 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 1, cps_226 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 2, cps_226 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 3, cps_226 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 4, cps_226 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 5, cps_226 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 6, cps_226 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 7, cps_226 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 8, cps_226 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 9, cps_226 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 10, cps_226 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 11, cps_226 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 12, cps_226 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 13, cps_226 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 14, cps_226 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 15, cps_226 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 16, cps_226 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 17, cps_226 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 18, cps_226 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 19, cps_226 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 20, cps_226 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 21, cps_226 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 22, cps_226 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 23, cps_226 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 24, cps_226 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 25, cps_226 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 26, cps_226 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 27, cps_226 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 28, cps_226 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 29, cps_226 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 30, cps_226 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 31, cps_226 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 32, cps_226 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 33, cps_226 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 34, cps_226 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 35, cps_226 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 36, cps_226 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 37, cps_226 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 38, cps_226 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 39, cps_226 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 40, cps_226 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 41, cps_226 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 42, cps_226 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 43, cps_226 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 44, cps_226 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 45, cps_226 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 46, cps_226 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 47, cps_226 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 48, cps_226 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_226 + 49, cps_226 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_226);

uint32_t cps_227[] = {
0x2ec6, 0x2ec7, 0x2ec8, 0x2ec9, 0x2eca, 0x2ecb, 0x2ecc, 0x2ecd, 0x2ece, 0x2ecf, 0x2ed0, 0x2ed1, 0x2ed2, 0x2ed3, 0x2ed4, 0x2ed5, 0x2ed6, 0x2ed7, 0x2ed8, 0x2ed9, 0x2eda, 0x2edb, 0x2edc, 0x2edd, 0x2ede, 0x2edf, 0x2ee0, 0x2ee1, 0x2ee2, 0x2ee3, 0x2ee4, 0x2ee5, 0x2ee6, 0x2ee7, 0x2ee8, 0x2ee9, 0x2eea, 0x2eeb, 0x2eec, 0x2eed, 0x2eee, 0x2eef, 0x2ef0, 0x2ef1, 0x2ef2, 0x2ef3, 0x2f00, 0x2f01, 0x2f02, 0x2f03
};

void BM_collation_element_lookup_227(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 0, cps_227 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 1, cps_227 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 2, cps_227 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 3, cps_227 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 4, cps_227 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 5, cps_227 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 6, cps_227 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 7, cps_227 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 8, cps_227 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 9, cps_227 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 10, cps_227 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 11, cps_227 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 12, cps_227 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 13, cps_227 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 14, cps_227 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 15, cps_227 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 16, cps_227 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 17, cps_227 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 18, cps_227 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 19, cps_227 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 20, cps_227 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 21, cps_227 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 22, cps_227 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 23, cps_227 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 24, cps_227 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 25, cps_227 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 26, cps_227 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 27, cps_227 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 28, cps_227 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 29, cps_227 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 30, cps_227 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 31, cps_227 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 32, cps_227 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 33, cps_227 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 34, cps_227 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 35, cps_227 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 36, cps_227 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 37, cps_227 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 38, cps_227 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 39, cps_227 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 40, cps_227 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 41, cps_227 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 42, cps_227 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 43, cps_227 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 44, cps_227 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 45, cps_227 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 46, cps_227 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 47, cps_227 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 48, cps_227 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_227 + 49, cps_227 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_227);

uint32_t cps_228[] = {
0x2f04, 0x2f05, 0x2f06, 0x2f07, 0x2f08, 0x2f09, 0x2f0a, 0x2f0b, 0x2f0c, 0x2f0d, 0x2f0e, 0x2f0f, 0x2f10, 0x2f11, 0x2f12, 0x2f13, 0x2f14, 0x2f15, 0x2f16, 0x2f17, 0x2f18, 0x2f19, 0x2f1a, 0x2f1b, 0x2f1c, 0x2f1d, 0x2f1e, 0x2f1f, 0x2f20, 0x2f21, 0x2f22, 0x2f23, 0x2f24, 0x2f25, 0x2f26, 0x2f27, 0x2f28, 0x2f29, 0x2f2a, 0x2f2b, 0x2f2c, 0x2f2d, 0x2f2e, 0x2f2f, 0x2f30, 0x2f31, 0x2f32, 0x2f33, 0x2f34, 0x2f35
};

void BM_collation_element_lookup_228(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 0, cps_228 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 1, cps_228 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 2, cps_228 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 3, cps_228 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 4, cps_228 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 5, cps_228 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 6, cps_228 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 7, cps_228 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 8, cps_228 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 9, cps_228 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 10, cps_228 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 11, cps_228 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 12, cps_228 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 13, cps_228 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 14, cps_228 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 15, cps_228 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 16, cps_228 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 17, cps_228 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 18, cps_228 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 19, cps_228 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 20, cps_228 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 21, cps_228 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 22, cps_228 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 23, cps_228 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 24, cps_228 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 25, cps_228 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 26, cps_228 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 27, cps_228 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 28, cps_228 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 29, cps_228 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 30, cps_228 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 31, cps_228 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 32, cps_228 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 33, cps_228 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 34, cps_228 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 35, cps_228 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 36, cps_228 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 37, cps_228 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 38, cps_228 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 39, cps_228 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 40, cps_228 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 41, cps_228 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 42, cps_228 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 43, cps_228 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 44, cps_228 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 45, cps_228 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 46, cps_228 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 47, cps_228 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 48, cps_228 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_228 + 49, cps_228 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_228);

uint32_t cps_229[] = {
0x2f36, 0x2f37, 0x2f38, 0x2f39, 0x2f3a, 0x2f3b, 0x2f3c, 0x2f3d, 0x2f3e, 0x2f3f, 0x2f40, 0x2f41, 0x2f42, 0x2f43, 0x2f44, 0x2f45, 0x2f46, 0x2f47, 0x2f48, 0x2f49, 0x2f4a, 0x2f4b, 0x2f4c, 0x2f4d, 0x2f4e, 0x2f4f, 0x2f50, 0x2f51, 0x2f52, 0x2f53, 0x2f54, 0x2f55, 0x2f56, 0x2f57, 0x2f58, 0x2f59, 0x2f5a, 0x2f5b, 0x2f5c, 0x2f5d, 0x2f5e, 0x2f5f, 0x2f60, 0x2f61, 0x2f62, 0x2f63, 0x2f64, 0x2f65, 0x2f66, 0x2f67
};

void BM_collation_element_lookup_229(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 0, cps_229 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 1, cps_229 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 2, cps_229 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 3, cps_229 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 4, cps_229 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 5, cps_229 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 6, cps_229 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 7, cps_229 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 8, cps_229 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 9, cps_229 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 10, cps_229 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 11, cps_229 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 12, cps_229 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 13, cps_229 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 14, cps_229 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 15, cps_229 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 16, cps_229 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 17, cps_229 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 18, cps_229 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 19, cps_229 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 20, cps_229 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 21, cps_229 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 22, cps_229 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 23, cps_229 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 24, cps_229 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 25, cps_229 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 26, cps_229 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 27, cps_229 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 28, cps_229 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 29, cps_229 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 30, cps_229 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 31, cps_229 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 32, cps_229 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 33, cps_229 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 34, cps_229 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 35, cps_229 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 36, cps_229 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 37, cps_229 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 38, cps_229 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 39, cps_229 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 40, cps_229 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 41, cps_229 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 42, cps_229 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 43, cps_229 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 44, cps_229 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 45, cps_229 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 46, cps_229 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 47, cps_229 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 48, cps_229 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_229 + 49, cps_229 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_229);

uint32_t cps_230[] = {
0x2f68, 0x2f69, 0x2f6a, 0x2f6b, 0x2f6c, 0x2f6d, 0x2f6e, 0x2f6f, 0x2f70, 0x2f71, 0x2f72, 0x2f73, 0x2f74, 0x2f75, 0x2f76, 0x2f77, 0x2f78, 0x2f79, 0x2f7a, 0x2f7b, 0x2f7c, 0x2f7d, 0x2f7e, 0x2f7f, 0x2f80, 0x2f81, 0x2f82, 0x2f83, 0x2f84, 0x2f85, 0x2f86, 0x2f87, 0x2f88, 0x2f89, 0x2f8a, 0x2f8b, 0x2f8c, 0x2f8d, 0x2f8e, 0x2f8f, 0x2f90, 0x2f91, 0x2f92, 0x2f93, 0x2f94, 0x2f95, 0x2f96, 0x2f97, 0x2f98, 0x2f99
};

void BM_collation_element_lookup_230(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 0, cps_230 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 1, cps_230 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 2, cps_230 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 3, cps_230 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 4, cps_230 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 5, cps_230 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 6, cps_230 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 7, cps_230 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 8, cps_230 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 9, cps_230 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 10, cps_230 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 11, cps_230 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 12, cps_230 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 13, cps_230 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 14, cps_230 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 15, cps_230 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 16, cps_230 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 17, cps_230 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 18, cps_230 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 19, cps_230 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 20, cps_230 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 21, cps_230 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 22, cps_230 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 23, cps_230 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 24, cps_230 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 25, cps_230 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 26, cps_230 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 27, cps_230 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 28, cps_230 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 29, cps_230 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 30, cps_230 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 31, cps_230 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 32, cps_230 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 33, cps_230 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 34, cps_230 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 35, cps_230 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 36, cps_230 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 37, cps_230 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 38, cps_230 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 39, cps_230 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 40, cps_230 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 41, cps_230 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 42, cps_230 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 43, cps_230 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 44, cps_230 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 45, cps_230 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 46, cps_230 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 47, cps_230 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 48, cps_230 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_230 + 49, cps_230 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_230);

uint32_t cps_231[] = {
0x2f9a, 0x2f9b, 0x2f9c, 0x2f9d, 0x2f9e, 0x2f9f, 0x2fa0, 0x2fa1, 0x2fa2, 0x2fa3, 0x2fa4, 0x2fa5, 0x2fa6, 0x2fa7, 0x2fa8, 0x2fa9, 0x2faa, 0x2fab, 0x2fac, 0x2fad, 0x2fae, 0x2faf, 0x2fb0, 0x2fb1, 0x2fb2, 0x2fb3, 0x2fb4, 0x2fb5, 0x2fb6, 0x2fb7, 0x2fb8, 0x2fb9, 0x2fba, 0x2fbb, 0x2fbc, 0x2fbd, 0x2fbe, 0x2fbf, 0x2fc0, 0x2fc1, 0x2fc2, 0x2fc3, 0x2fc4, 0x2fc5, 0x2fc6, 0x2fc7, 0x2fc8, 0x2fc9, 0x2fca, 0x2fcb
};

void BM_collation_element_lookup_231(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 0, cps_231 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 1, cps_231 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 2, cps_231 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 3, cps_231 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 4, cps_231 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 5, cps_231 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 6, cps_231 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 7, cps_231 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 8, cps_231 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 9, cps_231 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 10, cps_231 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 11, cps_231 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 12, cps_231 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 13, cps_231 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 14, cps_231 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 15, cps_231 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 16, cps_231 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 17, cps_231 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 18, cps_231 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 19, cps_231 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 20, cps_231 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 21, cps_231 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 22, cps_231 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 23, cps_231 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 24, cps_231 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 25, cps_231 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 26, cps_231 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 27, cps_231 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 28, cps_231 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 29, cps_231 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 30, cps_231 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 31, cps_231 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 32, cps_231 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 33, cps_231 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 34, cps_231 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 35, cps_231 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 36, cps_231 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 37, cps_231 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 38, cps_231 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 39, cps_231 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 40, cps_231 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 41, cps_231 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 42, cps_231 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 43, cps_231 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 44, cps_231 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 45, cps_231 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 46, cps_231 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 47, cps_231 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 48, cps_231 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_231 + 49, cps_231 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_231);

uint32_t cps_232[] = {
0x2fcc, 0x2fcd, 0x2fce, 0x2fcf, 0x2fd0, 0x2fd1, 0x2fd2, 0x2fd3, 0x2fd4, 0x2fd5, 0x2ff0, 0x2ff1, 0x2ff2, 0x2ff3, 0x2ff4, 0x2ff5, 0x2ff6, 0x2ff7, 0x2ff8, 0x2ff9, 0x2ffa, 0x2ffb, 0x3000, 0x3001, 0x3002, 0x3003, 0x3004, 0x3005, 0x3006, 0x3007, 0x3008, 0x3009, 0x300a, 0x300b, 0x300c, 0x300d, 0x300e, 0x300f, 0x3010, 0x3011, 0x3012, 0x3013, 0x3014, 0x3015, 0x3016, 0x3017, 0x3018, 0x3019, 0x301a, 0x301b
};

void BM_collation_element_lookup_232(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 0, cps_232 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 1, cps_232 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 2, cps_232 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 3, cps_232 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 4, cps_232 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 5, cps_232 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 6, cps_232 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 7, cps_232 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 8, cps_232 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 9, cps_232 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 10, cps_232 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 11, cps_232 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 12, cps_232 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 13, cps_232 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 14, cps_232 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 15, cps_232 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 16, cps_232 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 17, cps_232 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 18, cps_232 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 19, cps_232 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 20, cps_232 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 21, cps_232 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 22, cps_232 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 23, cps_232 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 24, cps_232 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 25, cps_232 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 26, cps_232 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 27, cps_232 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 28, cps_232 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 29, cps_232 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 30, cps_232 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 31, cps_232 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 32, cps_232 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 33, cps_232 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 34, cps_232 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 35, cps_232 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 36, cps_232 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 37, cps_232 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 38, cps_232 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 39, cps_232 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 40, cps_232 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 41, cps_232 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 42, cps_232 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 43, cps_232 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 44, cps_232 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 45, cps_232 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 46, cps_232 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 47, cps_232 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 48, cps_232 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_232 + 49, cps_232 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_232);

uint32_t cps_233[] = {
0x301c, 0x301d, 0x301e, 0x301f, 0x3020, 0x3021, 0x3022, 0x3023, 0x3024, 0x3025, 0x3026, 0x3027, 0x3028, 0x3029, 0x302a, 0x302b, 0x302c, 0x302d, 0x302e, 0x302f, 0x3030, 0x3031, 0x3032, 0x3033, 0x3034, 0x3035, 0x3036, 0x3037, 0x3038, 0x3039, 0x303a, 0x303b, 0x303c, 0x303d, 0x303e, 0x303f, 0x3041, 0x3042, 0x3043, 0x3044, 0x3045, 0x3046, 0x3047, 0x3048, 0x3049, 0x304a, 0x304b, 0x304c, 0x304d, 0x304e
};

void BM_collation_element_lookup_233(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 0, cps_233 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 1, cps_233 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 2, cps_233 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 3, cps_233 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 4, cps_233 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 5, cps_233 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 6, cps_233 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 7, cps_233 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 8, cps_233 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 9, cps_233 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 10, cps_233 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 11, cps_233 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 12, cps_233 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 13, cps_233 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 14, cps_233 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 15, cps_233 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 16, cps_233 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 17, cps_233 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 18, cps_233 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 19, cps_233 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 20, cps_233 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 21, cps_233 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 22, cps_233 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 23, cps_233 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 24, cps_233 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 25, cps_233 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 26, cps_233 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 27, cps_233 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 28, cps_233 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 29, cps_233 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 30, cps_233 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 31, cps_233 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 32, cps_233 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 33, cps_233 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 34, cps_233 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 35, cps_233 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 36, cps_233 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 37, cps_233 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 38, cps_233 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 39, cps_233 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 40, cps_233 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 41, cps_233 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 42, cps_233 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 43, cps_233 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 44, cps_233 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 45, cps_233 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 46, cps_233 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 47, cps_233 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 48, cps_233 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_233 + 49, cps_233 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_233);

uint32_t cps_234[] = {
0x304f, 0x3050, 0x3051, 0x3052, 0x3053, 0x3054, 0x3055, 0x3056, 0x3057, 0x3058, 0x3059, 0x305a, 0x305b, 0x305c, 0x305d, 0x305e, 0x305f, 0x3060, 0x3061, 0x3062, 0x3063, 0x3064, 0x3065, 0x3066, 0x3067, 0x3068, 0x3069, 0x306a, 0x306b, 0x306c, 0x306d, 0x306e, 0x306f, 0x3070, 0x3071, 0x3072, 0x3073, 0x3074, 0x3075, 0x3076, 0x3077, 0x3078, 0x3079, 0x307a, 0x307b, 0x307c, 0x307d, 0x307e, 0x307f, 0x3080
};

void BM_collation_element_lookup_234(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 0, cps_234 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 1, cps_234 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 2, cps_234 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 3, cps_234 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 4, cps_234 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 5, cps_234 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 6, cps_234 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 7, cps_234 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 8, cps_234 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 9, cps_234 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 10, cps_234 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 11, cps_234 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 12, cps_234 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 13, cps_234 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 14, cps_234 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 15, cps_234 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 16, cps_234 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 17, cps_234 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 18, cps_234 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 19, cps_234 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 20, cps_234 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 21, cps_234 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 22, cps_234 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 23, cps_234 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 24, cps_234 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 25, cps_234 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 26, cps_234 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 27, cps_234 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 28, cps_234 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 29, cps_234 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 30, cps_234 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 31, cps_234 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 32, cps_234 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 33, cps_234 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 34, cps_234 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 35, cps_234 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 36, cps_234 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 37, cps_234 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 38, cps_234 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 39, cps_234 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 40, cps_234 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 41, cps_234 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 42, cps_234 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 43, cps_234 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 44, cps_234 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 45, cps_234 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 46, cps_234 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 47, cps_234 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 48, cps_234 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_234 + 49, cps_234 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_234);

uint32_t cps_235[] = {
0x3081, 0x3082, 0x3083, 0x3084, 0x3085, 0x3086, 0x3087, 0x3088, 0x3089, 0x308a, 0x308b, 0x308c, 0x308d, 0x308e, 0x308f, 0x3090, 0x3091, 0x3092, 0x3093, 0x3094, 0x3095, 0x3096, 0x3099, 0x309a, 0x309b, 0x309c, 0x309d, 0x309e, 0x309f, 0x30a0, 0x30a1, 0x30a2, 0x30a3, 0x30a4, 0x30a5, 0x30a6, 0x30a7, 0x30a8, 0x30a9, 0x30aa, 0x30ab, 0x30ac, 0x30ad, 0x30ae, 0x30af, 0x30b0, 0x30b1, 0x30b2, 0x30b3, 0x30b4
};

void BM_collation_element_lookup_235(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 0, cps_235 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 1, cps_235 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 2, cps_235 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 3, cps_235 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 4, cps_235 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 5, cps_235 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 6, cps_235 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 7, cps_235 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 8, cps_235 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 9, cps_235 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 10, cps_235 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 11, cps_235 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 12, cps_235 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 13, cps_235 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 14, cps_235 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 15, cps_235 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 16, cps_235 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 17, cps_235 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 18, cps_235 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 19, cps_235 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 20, cps_235 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 21, cps_235 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 22, cps_235 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 23, cps_235 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 24, cps_235 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 25, cps_235 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 26, cps_235 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 27, cps_235 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 28, cps_235 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 29, cps_235 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 30, cps_235 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 31, cps_235 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 32, cps_235 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 33, cps_235 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 34, cps_235 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 35, cps_235 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 36, cps_235 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 37, cps_235 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 38, cps_235 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 39, cps_235 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 40, cps_235 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 41, cps_235 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 42, cps_235 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 43, cps_235 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 44, cps_235 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 45, cps_235 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 46, cps_235 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 47, cps_235 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 48, cps_235 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_235 + 49, cps_235 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_235);

uint32_t cps_236[] = {
0x30b5, 0x30b6, 0x30b7, 0x30b8, 0x30b9, 0x30ba, 0x30bb, 0x30bc, 0x30bd, 0x30be, 0x30bf, 0x30c0, 0x30c1, 0x30c2, 0x30c3, 0x30c4, 0x30c5, 0x30c6, 0x30c7, 0x30c8, 0x30c9, 0x30ca, 0x30cb, 0x30cc, 0x30cd, 0x30ce, 0x30cf, 0x30d0, 0x30d1, 0x30d2, 0x30d3, 0x30d4, 0x30d5, 0x30d6, 0x30d7, 0x30d8, 0x30d9, 0x30da, 0x30db, 0x30dc, 0x30dd, 0x30de, 0x30df, 0x30e0, 0x30e1, 0x30e2, 0x30e3, 0x30e4, 0x30e5, 0x30e6
};

void BM_collation_element_lookup_236(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 0, cps_236 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 1, cps_236 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 2, cps_236 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 3, cps_236 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 4, cps_236 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 5, cps_236 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 6, cps_236 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 7, cps_236 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 8, cps_236 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 9, cps_236 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 10, cps_236 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 11, cps_236 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 12, cps_236 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 13, cps_236 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 14, cps_236 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 15, cps_236 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 16, cps_236 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 17, cps_236 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 18, cps_236 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 19, cps_236 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 20, cps_236 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 21, cps_236 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 22, cps_236 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 23, cps_236 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 24, cps_236 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 25, cps_236 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 26, cps_236 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 27, cps_236 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 28, cps_236 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 29, cps_236 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 30, cps_236 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 31, cps_236 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 32, cps_236 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 33, cps_236 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 34, cps_236 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 35, cps_236 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 36, cps_236 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 37, cps_236 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 38, cps_236 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 39, cps_236 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 40, cps_236 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 41, cps_236 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 42, cps_236 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 43, cps_236 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 44, cps_236 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 45, cps_236 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 46, cps_236 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 47, cps_236 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 48, cps_236 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_236 + 49, cps_236 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_236);

uint32_t cps_237[] = {
0x30e7, 0x30e8, 0x30e9, 0x30ea, 0x30eb, 0x30ec, 0x30ed, 0x30ee, 0x30ef, 0x30f0, 0x30f1, 0x30f2, 0x30f3, 0x30f4, 0x30f5, 0x30f6, 0x30f7, 0x30f8, 0x30f9, 0x30fa, 0x30fb, 0x30fc, 0x30fd, 0x30fe, 0x30ff, 0x3105, 0x3106, 0x3107, 0x3108, 0x3109, 0x310a, 0x310b, 0x310c, 0x310d, 0x310e, 0x310f, 0x3110, 0x3111, 0x3112, 0x3113, 0x3114, 0x3115, 0x3116, 0x3117, 0x3118, 0x3119, 0x311a, 0x311b, 0x311c, 0x311d
};

void BM_collation_element_lookup_237(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 0, cps_237 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 1, cps_237 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 2, cps_237 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 3, cps_237 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 4, cps_237 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 5, cps_237 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 6, cps_237 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 7, cps_237 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 8, cps_237 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 9, cps_237 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 10, cps_237 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 11, cps_237 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 12, cps_237 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 13, cps_237 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 14, cps_237 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 15, cps_237 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 16, cps_237 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 17, cps_237 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 18, cps_237 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 19, cps_237 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 20, cps_237 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 21, cps_237 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 22, cps_237 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 23, cps_237 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 24, cps_237 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 25, cps_237 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 26, cps_237 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 27, cps_237 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 28, cps_237 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 29, cps_237 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 30, cps_237 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 31, cps_237 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 32, cps_237 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 33, cps_237 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 34, cps_237 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 35, cps_237 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 36, cps_237 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 37, cps_237 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 38, cps_237 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 39, cps_237 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 40, cps_237 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 41, cps_237 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 42, cps_237 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 43, cps_237 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 44, cps_237 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 45, cps_237 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 46, cps_237 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 47, cps_237 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 48, cps_237 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_237 + 49, cps_237 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_237);

uint32_t cps_238[] = {
0x311e, 0x311f, 0x3120, 0x3121, 0x3122, 0x3123, 0x3124, 0x3125, 0x3126, 0x3127, 0x3128, 0x3129, 0x312a, 0x312b, 0x312c, 0x312d, 0x312e, 0x3131, 0x3132, 0x3133, 0x3134, 0x3135, 0x3136, 0x3137, 0x3138, 0x3139, 0x313a, 0x313b, 0x313c, 0x313d, 0x313e, 0x313f, 0x3140, 0x3141, 0x3142, 0x3143, 0x3144, 0x3145, 0x3146, 0x3147, 0x3148, 0x3149, 0x314a, 0x314b, 0x314c, 0x314d, 0x314e, 0x314f, 0x3150, 0x3151
};

void BM_collation_element_lookup_238(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 0, cps_238 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 1, cps_238 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 2, cps_238 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 3, cps_238 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 4, cps_238 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 5, cps_238 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 6, cps_238 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 7, cps_238 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 8, cps_238 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 9, cps_238 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 10, cps_238 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 11, cps_238 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 12, cps_238 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 13, cps_238 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 14, cps_238 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 15, cps_238 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 16, cps_238 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 17, cps_238 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 18, cps_238 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 19, cps_238 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 20, cps_238 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 21, cps_238 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 22, cps_238 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 23, cps_238 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 24, cps_238 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 25, cps_238 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 26, cps_238 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 27, cps_238 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 28, cps_238 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 29, cps_238 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 30, cps_238 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 31, cps_238 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 32, cps_238 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 33, cps_238 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 34, cps_238 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 35, cps_238 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 36, cps_238 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 37, cps_238 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 38, cps_238 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 39, cps_238 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 40, cps_238 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 41, cps_238 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 42, cps_238 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 43, cps_238 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 44, cps_238 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 45, cps_238 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 46, cps_238 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 47, cps_238 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 48, cps_238 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_238 + 49, cps_238 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_238);

uint32_t cps_239[] = {
0x3152, 0x3153, 0x3154, 0x3155, 0x3156, 0x3157, 0x3158, 0x3159, 0x315a, 0x315b, 0x315c, 0x315d, 0x315e, 0x315f, 0x3160, 0x3161, 0x3162, 0x3163, 0x3164, 0x3165, 0x3166, 0x3167, 0x3168, 0x3169, 0x316a, 0x316b, 0x316c, 0x316d, 0x316e, 0x316f, 0x3170, 0x3171, 0x3172, 0x3173, 0x3174, 0x3175, 0x3176, 0x3177, 0x3178, 0x3179, 0x317a, 0x317b, 0x317c, 0x317d, 0x317e, 0x317f, 0x3180, 0x3181, 0x3182, 0x3183
};

void BM_collation_element_lookup_239(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 0, cps_239 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 1, cps_239 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 2, cps_239 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 3, cps_239 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 4, cps_239 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 5, cps_239 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 6, cps_239 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 7, cps_239 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 8, cps_239 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 9, cps_239 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 10, cps_239 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 11, cps_239 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 12, cps_239 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 13, cps_239 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 14, cps_239 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 15, cps_239 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 16, cps_239 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 17, cps_239 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 18, cps_239 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 19, cps_239 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 20, cps_239 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 21, cps_239 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 22, cps_239 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 23, cps_239 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 24, cps_239 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 25, cps_239 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 26, cps_239 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 27, cps_239 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 28, cps_239 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 29, cps_239 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 30, cps_239 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 31, cps_239 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 32, cps_239 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 33, cps_239 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 34, cps_239 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 35, cps_239 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 36, cps_239 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 37, cps_239 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 38, cps_239 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 39, cps_239 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 40, cps_239 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 41, cps_239 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 42, cps_239 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 43, cps_239 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 44, cps_239 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 45, cps_239 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 46, cps_239 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 47, cps_239 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 48, cps_239 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_239 + 49, cps_239 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_239);

uint32_t cps_240[] = {
0x3184, 0x3185, 0x3186, 0x3187, 0x3188, 0x3189, 0x318a, 0x318b, 0x318c, 0x318d, 0x318e, 0x3190, 0x3191, 0x3192, 0x3193, 0x3194, 0x3195, 0x3196, 0x3197, 0x3198, 0x3199, 0x319a, 0x319b, 0x319c, 0x319d, 0x319e, 0x319f, 0x31a0, 0x31a1, 0x31a2, 0x31a3, 0x31a4, 0x31a5, 0x31a6, 0x31a7, 0x31a8, 0x31a9, 0x31aa, 0x31ab, 0x31ac, 0x31ad, 0x31ae, 0x31af, 0x31b0, 0x31b1, 0x31b2, 0x31b3, 0x31b4, 0x31b5, 0x31b6
};

void BM_collation_element_lookup_240(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 0, cps_240 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 1, cps_240 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 2, cps_240 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 3, cps_240 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 4, cps_240 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 5, cps_240 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 6, cps_240 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 7, cps_240 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 8, cps_240 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 9, cps_240 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 10, cps_240 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 11, cps_240 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 12, cps_240 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 13, cps_240 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 14, cps_240 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 15, cps_240 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 16, cps_240 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 17, cps_240 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 18, cps_240 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 19, cps_240 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 20, cps_240 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 21, cps_240 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 22, cps_240 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 23, cps_240 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 24, cps_240 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 25, cps_240 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 26, cps_240 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 27, cps_240 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 28, cps_240 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 29, cps_240 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 30, cps_240 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 31, cps_240 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 32, cps_240 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 33, cps_240 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 34, cps_240 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 35, cps_240 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 36, cps_240 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 37, cps_240 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 38, cps_240 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 39, cps_240 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 40, cps_240 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 41, cps_240 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 42, cps_240 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 43, cps_240 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 44, cps_240 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 45, cps_240 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 46, cps_240 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 47, cps_240 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 48, cps_240 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_240 + 49, cps_240 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_240);

uint32_t cps_241[] = {
0x31b7, 0x31b8, 0x31b9, 0x31ba, 0x31c0, 0x31c1, 0x31c2, 0x31c3, 0x31c4, 0x31c5, 0x31c6, 0x31c7, 0x31c8, 0x31c9, 0x31ca, 0x31cb, 0x31cc, 0x31cd, 0x31ce, 0x31cf, 0x31d0, 0x31d1, 0x31d2, 0x31d3, 0x31d4, 0x31d5, 0x31d6, 0x31d7, 0x31d8, 0x31d9, 0x31da, 0x31db, 0x31dc, 0x31dd, 0x31de, 0x31df, 0x31e0, 0x31e1, 0x31e2, 0x31e3, 0x31f0, 0x31f1, 0x31f2, 0x31f3, 0x31f4, 0x31f5, 0x31f6, 0x31f7, 0x31f8, 0x31f9
};

void BM_collation_element_lookup_241(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 0, cps_241 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 1, cps_241 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 2, cps_241 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 3, cps_241 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 4, cps_241 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 5, cps_241 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 6, cps_241 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 7, cps_241 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 8, cps_241 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 9, cps_241 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 10, cps_241 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 11, cps_241 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 12, cps_241 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 13, cps_241 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 14, cps_241 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 15, cps_241 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 16, cps_241 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 17, cps_241 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 18, cps_241 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 19, cps_241 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 20, cps_241 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 21, cps_241 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 22, cps_241 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 23, cps_241 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 24, cps_241 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 25, cps_241 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 26, cps_241 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 27, cps_241 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 28, cps_241 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 29, cps_241 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 30, cps_241 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 31, cps_241 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 32, cps_241 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 33, cps_241 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 34, cps_241 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 35, cps_241 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 36, cps_241 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 37, cps_241 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 38, cps_241 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 39, cps_241 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 40, cps_241 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 41, cps_241 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 42, cps_241 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 43, cps_241 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 44, cps_241 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 45, cps_241 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 46, cps_241 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 47, cps_241 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 48, cps_241 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_241 + 49, cps_241 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_241);

uint32_t cps_242[] = {
0x31fa, 0x31fb, 0x31fc, 0x31fd, 0x31fe, 0x31ff, 0x3200, 0x3201, 0x3202, 0x3203, 0x3204, 0x3205, 0x3206, 0x3207, 0x3208, 0x3209, 0x320a, 0x320b, 0x320c, 0x320d, 0x320e, 0x320f, 0x3210, 0x3211, 0x3212, 0x3213, 0x3214, 0x3215, 0x3216, 0x3217, 0x3218, 0x3219, 0x321a, 0x321b, 0x321c, 0x321d, 0x321e, 0x3220, 0x3221, 0x3222, 0x3223, 0x3224, 0x3225, 0x3226, 0x3227, 0x3228, 0x3229, 0x322a, 0x322b, 0x322c
};

void BM_collation_element_lookup_242(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 0, cps_242 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 1, cps_242 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 2, cps_242 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 3, cps_242 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 4, cps_242 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 5, cps_242 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 6, cps_242 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 7, cps_242 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 8, cps_242 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 9, cps_242 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 10, cps_242 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 11, cps_242 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 12, cps_242 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 13, cps_242 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 14, cps_242 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 15, cps_242 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 16, cps_242 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 17, cps_242 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 18, cps_242 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 19, cps_242 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 20, cps_242 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 21, cps_242 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 22, cps_242 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 23, cps_242 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 24, cps_242 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 25, cps_242 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 26, cps_242 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 27, cps_242 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 28, cps_242 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 29, cps_242 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 30, cps_242 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 31, cps_242 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 32, cps_242 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 33, cps_242 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 34, cps_242 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 35, cps_242 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 36, cps_242 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 37, cps_242 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 38, cps_242 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 39, cps_242 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 40, cps_242 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 41, cps_242 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 42, cps_242 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 43, cps_242 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 44, cps_242 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 45, cps_242 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 46, cps_242 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 47, cps_242 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 48, cps_242 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_242 + 49, cps_242 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_242);

uint32_t cps_243[] = {
0x322d, 0x322e, 0x322f, 0x3230, 0x3231, 0x3232, 0x3233, 0x3234, 0x3235, 0x3236, 0x3237, 0x3238, 0x3239, 0x323a, 0x323b, 0x323c, 0x323d, 0x323e, 0x323f, 0x3240, 0x3241, 0x3242, 0x3243, 0x3244, 0x3245, 0x3246, 0x3247, 0x3248, 0x3249, 0x324a, 0x324b, 0x324c, 0x324d, 0x324e, 0x324f, 0x3250, 0x3251, 0x3252, 0x3253, 0x3254, 0x3255, 0x3256, 0x3257, 0x3258, 0x3259, 0x325a, 0x325b, 0x325c, 0x325d, 0x325e
};

void BM_collation_element_lookup_243(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 0, cps_243 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 1, cps_243 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 2, cps_243 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 3, cps_243 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 4, cps_243 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 5, cps_243 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 6, cps_243 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 7, cps_243 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 8, cps_243 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 9, cps_243 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 10, cps_243 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 11, cps_243 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 12, cps_243 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 13, cps_243 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 14, cps_243 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 15, cps_243 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 16, cps_243 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 17, cps_243 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 18, cps_243 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 19, cps_243 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 20, cps_243 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 21, cps_243 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 22, cps_243 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 23, cps_243 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 24, cps_243 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 25, cps_243 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 26, cps_243 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 27, cps_243 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 28, cps_243 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 29, cps_243 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 30, cps_243 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 31, cps_243 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 32, cps_243 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 33, cps_243 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 34, cps_243 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 35, cps_243 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 36, cps_243 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 37, cps_243 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 38, cps_243 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 39, cps_243 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 40, cps_243 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 41, cps_243 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 42, cps_243 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 43, cps_243 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 44, cps_243 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 45, cps_243 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 46, cps_243 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 47, cps_243 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 48, cps_243 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_243 + 49, cps_243 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_243);

uint32_t cps_244[] = {
0x325f, 0x3260, 0x3261, 0x3262, 0x3263, 0x3264, 0x3265, 0x3266, 0x3267, 0x3268, 0x3269, 0x326a, 0x326b, 0x326c, 0x326d, 0x326e, 0x326f, 0x3270, 0x3271, 0x3272, 0x3273, 0x3274, 0x3275, 0x3276, 0x3277, 0x3278, 0x3279, 0x327a, 0x327b, 0x327c, 0x327d, 0x327e, 0x327f, 0x3280, 0x3281, 0x3282, 0x3283, 0x3284, 0x3285, 0x3286, 0x3287, 0x3288, 0x3289, 0x328a, 0x328b, 0x328c, 0x328d, 0x328e, 0x328f, 0x3290
};

void BM_collation_element_lookup_244(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 0, cps_244 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 1, cps_244 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 2, cps_244 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 3, cps_244 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 4, cps_244 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 5, cps_244 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 6, cps_244 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 7, cps_244 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 8, cps_244 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 9, cps_244 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 10, cps_244 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 11, cps_244 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 12, cps_244 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 13, cps_244 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 14, cps_244 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 15, cps_244 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 16, cps_244 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 17, cps_244 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 18, cps_244 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 19, cps_244 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 20, cps_244 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 21, cps_244 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 22, cps_244 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 23, cps_244 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 24, cps_244 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 25, cps_244 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 26, cps_244 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 27, cps_244 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 28, cps_244 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 29, cps_244 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 30, cps_244 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 31, cps_244 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 32, cps_244 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 33, cps_244 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 34, cps_244 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 35, cps_244 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 36, cps_244 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 37, cps_244 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 38, cps_244 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 39, cps_244 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 40, cps_244 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 41, cps_244 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 42, cps_244 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 43, cps_244 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 44, cps_244 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 45, cps_244 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 46, cps_244 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 47, cps_244 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 48, cps_244 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_244 + 49, cps_244 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_244);

uint32_t cps_245[] = {
0x3291, 0x3292, 0x3293, 0x3294, 0x3295, 0x3296, 0x3297, 0x3298, 0x3299, 0x329a, 0x329b, 0x329c, 0x329d, 0x329e, 0x329f, 0x32a0, 0x32a1, 0x32a2, 0x32a3, 0x32a4, 0x32a5, 0x32a6, 0x32a7, 0x32a8, 0x32a9, 0x32aa, 0x32ab, 0x32ac, 0x32ad, 0x32ae, 0x32af, 0x32b0, 0x32b1, 0x32b2, 0x32b3, 0x32b4, 0x32b5, 0x32b6, 0x32b7, 0x32b8, 0x32b9, 0x32ba, 0x32bb, 0x32bc, 0x32bd, 0x32be, 0x32bf, 0x32c0, 0x32c1, 0x32c2
};

void BM_collation_element_lookup_245(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 0, cps_245 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 1, cps_245 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 2, cps_245 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 3, cps_245 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 4, cps_245 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 5, cps_245 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 6, cps_245 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 7, cps_245 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 8, cps_245 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 9, cps_245 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 10, cps_245 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 11, cps_245 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 12, cps_245 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 13, cps_245 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 14, cps_245 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 15, cps_245 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 16, cps_245 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 17, cps_245 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 18, cps_245 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 19, cps_245 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 20, cps_245 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 21, cps_245 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 22, cps_245 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 23, cps_245 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 24, cps_245 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 25, cps_245 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 26, cps_245 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 27, cps_245 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 28, cps_245 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 29, cps_245 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 30, cps_245 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 31, cps_245 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 32, cps_245 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 33, cps_245 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 34, cps_245 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 35, cps_245 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 36, cps_245 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 37, cps_245 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 38, cps_245 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 39, cps_245 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 40, cps_245 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 41, cps_245 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 42, cps_245 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 43, cps_245 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 44, cps_245 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 45, cps_245 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 46, cps_245 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 47, cps_245 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 48, cps_245 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_245 + 49, cps_245 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_245);

uint32_t cps_246[] = {
0x32c3, 0x32c4, 0x32c5, 0x32c6, 0x32c7, 0x32c8, 0x32c9, 0x32ca, 0x32cb, 0x32cc, 0x32cd, 0x32ce, 0x32cf, 0x32d0, 0x32d1, 0x32d2, 0x32d3, 0x32d4, 0x32d5, 0x32d6, 0x32d7, 0x32d8, 0x32d9, 0x32da, 0x32db, 0x32dc, 0x32dd, 0x32de, 0x32df, 0x32e0, 0x32e1, 0x32e2, 0x32e3, 0x32e4, 0x32e5, 0x32e6, 0x32e7, 0x32e8, 0x32e9, 0x32ea, 0x32eb, 0x32ec, 0x32ed, 0x32ee, 0x32ef, 0x32f0, 0x32f1, 0x32f2, 0x32f3, 0x32f4
};

void BM_collation_element_lookup_246(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 0, cps_246 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 1, cps_246 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 2, cps_246 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 3, cps_246 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 4, cps_246 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 5, cps_246 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 6, cps_246 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 7, cps_246 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 8, cps_246 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 9, cps_246 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 10, cps_246 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 11, cps_246 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 12, cps_246 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 13, cps_246 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 14, cps_246 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 15, cps_246 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 16, cps_246 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 17, cps_246 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 18, cps_246 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 19, cps_246 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 20, cps_246 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 21, cps_246 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 22, cps_246 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 23, cps_246 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 24, cps_246 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 25, cps_246 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 26, cps_246 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 27, cps_246 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 28, cps_246 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 29, cps_246 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 30, cps_246 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 31, cps_246 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 32, cps_246 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 33, cps_246 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 34, cps_246 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 35, cps_246 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 36, cps_246 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 37, cps_246 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 38, cps_246 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 39, cps_246 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 40, cps_246 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 41, cps_246 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 42, cps_246 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 43, cps_246 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 44, cps_246 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 45, cps_246 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 46, cps_246 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 47, cps_246 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 48, cps_246 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_246 + 49, cps_246 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_246);

uint32_t cps_247[] = {
0x32f5, 0x32f6, 0x32f7, 0x32f8, 0x32f9, 0x32fa, 0x32fb, 0x32fc, 0x32fd, 0x32fe, 0x3300, 0x3301, 0x3302, 0x3303, 0x3304, 0x3305, 0x3306, 0x3307, 0x3308, 0x3309, 0x330a, 0x330b, 0x330c, 0x330d, 0x330e, 0x330f, 0x3310, 0x3311, 0x3312, 0x3313, 0x3314, 0x3315, 0x3316, 0x3317, 0x3318, 0x3319, 0x331a, 0x331b, 0x331c, 0x331d, 0x331e, 0x331f, 0x3320, 0x3321, 0x3322, 0x3323, 0x3324, 0x3325, 0x3326, 0x3327
};

void BM_collation_element_lookup_247(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 0, cps_247 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 1, cps_247 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 2, cps_247 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 3, cps_247 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 4, cps_247 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 5, cps_247 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 6, cps_247 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 7, cps_247 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 8, cps_247 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 9, cps_247 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 10, cps_247 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 11, cps_247 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 12, cps_247 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 13, cps_247 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 14, cps_247 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 15, cps_247 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 16, cps_247 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 17, cps_247 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 18, cps_247 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 19, cps_247 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 20, cps_247 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 21, cps_247 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 22, cps_247 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 23, cps_247 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 24, cps_247 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 25, cps_247 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 26, cps_247 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 27, cps_247 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 28, cps_247 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 29, cps_247 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 30, cps_247 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 31, cps_247 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 32, cps_247 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 33, cps_247 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 34, cps_247 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 35, cps_247 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 36, cps_247 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 37, cps_247 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 38, cps_247 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 39, cps_247 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 40, cps_247 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 41, cps_247 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 42, cps_247 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 43, cps_247 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 44, cps_247 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 45, cps_247 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 46, cps_247 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 47, cps_247 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 48, cps_247 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_247 + 49, cps_247 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_247);

uint32_t cps_248[] = {
0x3328, 0x3329, 0x332a, 0x332b, 0x332c, 0x332d, 0x332e, 0x332f, 0x3330, 0x3331, 0x3332, 0x3333, 0x3334, 0x3335, 0x3336, 0x3337, 0x3338, 0x3339, 0x333a, 0x333b, 0x333c, 0x333d, 0x333e, 0x333f, 0x3340, 0x3341, 0x3342, 0x3343, 0x3344, 0x3345, 0x3346, 0x3347, 0x3348, 0x3349, 0x334a, 0x334b, 0x334c, 0x334d, 0x334e, 0x334f, 0x3350, 0x3351, 0x3352, 0x3353, 0x3354, 0x3355, 0x3356, 0x3357, 0x3358, 0x3359
};

void BM_collation_element_lookup_248(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 0, cps_248 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 1, cps_248 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 2, cps_248 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 3, cps_248 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 4, cps_248 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 5, cps_248 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 6, cps_248 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 7, cps_248 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 8, cps_248 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 9, cps_248 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 10, cps_248 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 11, cps_248 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 12, cps_248 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 13, cps_248 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 14, cps_248 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 15, cps_248 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 16, cps_248 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 17, cps_248 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 18, cps_248 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 19, cps_248 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 20, cps_248 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 21, cps_248 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 22, cps_248 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 23, cps_248 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 24, cps_248 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 25, cps_248 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 26, cps_248 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 27, cps_248 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 28, cps_248 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 29, cps_248 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 30, cps_248 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 31, cps_248 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 32, cps_248 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 33, cps_248 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 34, cps_248 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 35, cps_248 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 36, cps_248 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 37, cps_248 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 38, cps_248 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 39, cps_248 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 40, cps_248 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 41, cps_248 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 42, cps_248 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 43, cps_248 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 44, cps_248 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 45, cps_248 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 46, cps_248 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 47, cps_248 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 48, cps_248 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_248 + 49, cps_248 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_248);

uint32_t cps_249[] = {
0x335a, 0x335b, 0x335c, 0x335d, 0x335e, 0x335f, 0x3360, 0x3361, 0x3362, 0x3363, 0x3364, 0x3365, 0x3366, 0x3367, 0x3368, 0x3369, 0x336a, 0x336b, 0x336c, 0x336d, 0x336e, 0x336f, 0x3370, 0x3371, 0x3372, 0x3373, 0x3374, 0x3375, 0x3376, 0x3377, 0x3378, 0x3379, 0x337a, 0x337b, 0x337c, 0x337d, 0x337e, 0x337f, 0x3380, 0x3381, 0x3382, 0x3383, 0x3384, 0x3385, 0x3386, 0x3387, 0x3388, 0x3389, 0x338a, 0x338b
};

void BM_collation_element_lookup_249(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 0, cps_249 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 1, cps_249 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 2, cps_249 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 3, cps_249 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 4, cps_249 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 5, cps_249 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 6, cps_249 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 7, cps_249 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 8, cps_249 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 9, cps_249 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 10, cps_249 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 11, cps_249 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 12, cps_249 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 13, cps_249 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 14, cps_249 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 15, cps_249 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 16, cps_249 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 17, cps_249 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 18, cps_249 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 19, cps_249 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 20, cps_249 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 21, cps_249 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 22, cps_249 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 23, cps_249 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 24, cps_249 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 25, cps_249 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 26, cps_249 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 27, cps_249 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 28, cps_249 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 29, cps_249 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 30, cps_249 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 31, cps_249 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 32, cps_249 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 33, cps_249 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 34, cps_249 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 35, cps_249 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 36, cps_249 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 37, cps_249 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 38, cps_249 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 39, cps_249 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 40, cps_249 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 41, cps_249 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 42, cps_249 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 43, cps_249 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 44, cps_249 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 45, cps_249 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 46, cps_249 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 47, cps_249 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 48, cps_249 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_249 + 49, cps_249 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_249);

uint32_t cps_250[] = {
0x338c, 0x338d, 0x338e, 0x338f, 0x3390, 0x3391, 0x3392, 0x3393, 0x3394, 0x3395, 0x3396, 0x3397, 0x3398, 0x3399, 0x339a, 0x339b, 0x339c, 0x339d, 0x339e, 0x339f, 0x33a0, 0x33a1, 0x33a2, 0x33a3, 0x33a4, 0x33a5, 0x33a6, 0x33a7, 0x33a8, 0x33a9, 0x33aa, 0x33ab, 0x33ac, 0x33ad, 0x33ae, 0x33af, 0x33b0, 0x33b1, 0x33b2, 0x33b3, 0x33b4, 0x33b5, 0x33b6, 0x33b7, 0x33b8, 0x33b9, 0x33ba, 0x33bb, 0x33bc, 0x33bd
};

void BM_collation_element_lookup_250(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 0, cps_250 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 1, cps_250 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 2, cps_250 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 3, cps_250 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 4, cps_250 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 5, cps_250 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 6, cps_250 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 7, cps_250 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 8, cps_250 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 9, cps_250 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 10, cps_250 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 11, cps_250 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 12, cps_250 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 13, cps_250 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 14, cps_250 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 15, cps_250 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 16, cps_250 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 17, cps_250 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 18, cps_250 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 19, cps_250 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 20, cps_250 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 21, cps_250 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 22, cps_250 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 23, cps_250 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 24, cps_250 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 25, cps_250 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 26, cps_250 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 27, cps_250 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 28, cps_250 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 29, cps_250 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 30, cps_250 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 31, cps_250 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 32, cps_250 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 33, cps_250 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 34, cps_250 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 35, cps_250 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 36, cps_250 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 37, cps_250 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 38, cps_250 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 39, cps_250 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 40, cps_250 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 41, cps_250 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 42, cps_250 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 43, cps_250 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 44, cps_250 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 45, cps_250 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 46, cps_250 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 47, cps_250 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 48, cps_250 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_250 + 49, cps_250 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_250);

uint32_t cps_251[] = {
0x33be, 0x33bf, 0x33c0, 0x33c1, 0x33c2, 0x33c3, 0x33c4, 0x33c5, 0x33c6, 0x33c7, 0x33c8, 0x33c9, 0x33ca, 0x33cb, 0x33cc, 0x33cd, 0x33ce, 0x33cf, 0x33d0, 0x33d1, 0x33d2, 0x33d3, 0x33d4, 0x33d5, 0x33d6, 0x33d7, 0x33d8, 0x33d9, 0x33da, 0x33db, 0x33dc, 0x33dd, 0x33de, 0x33df, 0x33e0, 0x33e1, 0x33e2, 0x33e3, 0x33e4, 0x33e5, 0x33e6, 0x33e7, 0x33e8, 0x33e9, 0x33ea, 0x33eb, 0x33ec, 0x33ed, 0x33ee, 0x33ef
};

void BM_collation_element_lookup_251(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 0, cps_251 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 1, cps_251 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 2, cps_251 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 3, cps_251 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 4, cps_251 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 5, cps_251 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 6, cps_251 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 7, cps_251 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 8, cps_251 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 9, cps_251 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 10, cps_251 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 11, cps_251 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 12, cps_251 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 13, cps_251 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 14, cps_251 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 15, cps_251 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 16, cps_251 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 17, cps_251 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 18, cps_251 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 19, cps_251 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 20, cps_251 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 21, cps_251 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 22, cps_251 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 23, cps_251 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 24, cps_251 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 25, cps_251 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 26, cps_251 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 27, cps_251 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 28, cps_251 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 29, cps_251 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 30, cps_251 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 31, cps_251 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 32, cps_251 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 33, cps_251 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 34, cps_251 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 35, cps_251 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 36, cps_251 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 37, cps_251 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 38, cps_251 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 39, cps_251 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 40, cps_251 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 41, cps_251 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 42, cps_251 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 43, cps_251 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 44, cps_251 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 45, cps_251 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 46, cps_251 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 47, cps_251 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 48, cps_251 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_251 + 49, cps_251 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_251);

uint32_t cps_252[] = {
0x33f0, 0x33f1, 0x33f2, 0x33f3, 0x33f4, 0x33f5, 0x33f6, 0x33f7, 0x33f8, 0x33f9, 0x33fa, 0x33fb, 0x33fc, 0x33fd, 0x33fe, 0x33ff, 0x4dc0, 0x4dc1, 0x4dc2, 0x4dc3, 0x4dc4, 0x4dc5, 0x4dc6, 0x4dc7, 0x4dc8, 0x4dc9, 0x4dca, 0x4dcb, 0x4dcc, 0x4dcd, 0x4dce, 0x4dcf, 0x4dd0, 0x4dd1, 0x4dd2, 0x4dd3, 0x4dd4, 0x4dd5, 0x4dd6, 0x4dd7, 0x4dd8, 0x4dd9, 0x4dda, 0x4ddb, 0x4ddc, 0x4ddd, 0x4dde, 0x4ddf, 0x4de0, 0x4de1
};

void BM_collation_element_lookup_252(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 0, cps_252 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 1, cps_252 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 2, cps_252 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 3, cps_252 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 4, cps_252 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 5, cps_252 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 6, cps_252 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 7, cps_252 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 8, cps_252 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 9, cps_252 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 10, cps_252 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 11, cps_252 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 12, cps_252 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 13, cps_252 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 14, cps_252 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 15, cps_252 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 16, cps_252 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 17, cps_252 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 18, cps_252 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 19, cps_252 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 20, cps_252 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 21, cps_252 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 22, cps_252 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 23, cps_252 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 24, cps_252 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 25, cps_252 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 26, cps_252 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 27, cps_252 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 28, cps_252 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 29, cps_252 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 30, cps_252 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 31, cps_252 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 32, cps_252 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 33, cps_252 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 34, cps_252 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 35, cps_252 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 36, cps_252 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 37, cps_252 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 38, cps_252 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 39, cps_252 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 40, cps_252 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 41, cps_252 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 42, cps_252 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 43, cps_252 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 44, cps_252 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 45, cps_252 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 46, cps_252 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 47, cps_252 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 48, cps_252 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_252 + 49, cps_252 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_252);

uint32_t cps_253[] = {
0x4de2, 0x4de3, 0x4de4, 0x4de5, 0x4de6, 0x4de7, 0x4de8, 0x4de9, 0x4dea, 0x4deb, 0x4dec, 0x4ded, 0x4dee, 0x4def, 0x4df0, 0x4df1, 0x4df2, 0x4df3, 0x4df4, 0x4df5, 0x4df6, 0x4df7, 0x4df8, 0x4df9, 0x4dfa, 0x4dfb, 0x4dfc, 0x4dfd, 0x4dfe, 0x4dff, 0xa000, 0xa001, 0xa002, 0xa003, 0xa004, 0xa005, 0xa006, 0xa007, 0xa008, 0xa009, 0xa00a, 0xa00b, 0xa00c, 0xa00d, 0xa00e, 0xa00f, 0xa010, 0xa011, 0xa012, 0xa013
};

void BM_collation_element_lookup_253(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 0, cps_253 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 1, cps_253 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 2, cps_253 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 3, cps_253 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 4, cps_253 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 5, cps_253 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 6, cps_253 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 7, cps_253 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 8, cps_253 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 9, cps_253 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 10, cps_253 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 11, cps_253 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 12, cps_253 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 13, cps_253 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 14, cps_253 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 15, cps_253 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 16, cps_253 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 17, cps_253 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 18, cps_253 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 19, cps_253 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 20, cps_253 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 21, cps_253 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 22, cps_253 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 23, cps_253 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 24, cps_253 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 25, cps_253 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 26, cps_253 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 27, cps_253 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 28, cps_253 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 29, cps_253 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 30, cps_253 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 31, cps_253 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 32, cps_253 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 33, cps_253 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 34, cps_253 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 35, cps_253 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 36, cps_253 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 37, cps_253 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 38, cps_253 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 39, cps_253 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 40, cps_253 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 41, cps_253 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 42, cps_253 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 43, cps_253 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 44, cps_253 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 45, cps_253 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 46, cps_253 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 47, cps_253 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 48, cps_253 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_253 + 49, cps_253 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_253);

uint32_t cps_254[] = {
0xa014, 0xa015, 0xa016, 0xa017, 0xa018, 0xa019, 0xa01a, 0xa01b, 0xa01c, 0xa01d, 0xa01e, 0xa01f, 0xa020, 0xa021, 0xa022, 0xa023, 0xa024, 0xa025, 0xa026, 0xa027, 0xa028, 0xa029, 0xa02a, 0xa02b, 0xa02c, 0xa02d, 0xa02e, 0xa02f, 0xa030, 0xa031, 0xa032, 0xa033, 0xa034, 0xa035, 0xa036, 0xa037, 0xa038, 0xa039, 0xa03a, 0xa03b, 0xa03c, 0xa03d, 0xa03e, 0xa03f, 0xa040, 0xa041, 0xa042, 0xa043, 0xa044, 0xa045
};

void BM_collation_element_lookup_254(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 0, cps_254 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 1, cps_254 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 2, cps_254 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 3, cps_254 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 4, cps_254 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 5, cps_254 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 6, cps_254 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 7, cps_254 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 8, cps_254 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 9, cps_254 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 10, cps_254 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 11, cps_254 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 12, cps_254 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 13, cps_254 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 14, cps_254 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 15, cps_254 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 16, cps_254 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 17, cps_254 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 18, cps_254 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 19, cps_254 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 20, cps_254 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 21, cps_254 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 22, cps_254 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 23, cps_254 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 24, cps_254 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 25, cps_254 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 26, cps_254 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 27, cps_254 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 28, cps_254 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 29, cps_254 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 30, cps_254 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 31, cps_254 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 32, cps_254 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 33, cps_254 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 34, cps_254 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 35, cps_254 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 36, cps_254 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 37, cps_254 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 38, cps_254 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 39, cps_254 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 40, cps_254 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 41, cps_254 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 42, cps_254 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 43, cps_254 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 44, cps_254 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 45, cps_254 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 46, cps_254 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 47, cps_254 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 48, cps_254 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_254 + 49, cps_254 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_254);

uint32_t cps_255[] = {
0xa046, 0xa047, 0xa048, 0xa049, 0xa04a, 0xa04b, 0xa04c, 0xa04d, 0xa04e, 0xa04f, 0xa050, 0xa051, 0xa052, 0xa053, 0xa054, 0xa055, 0xa056, 0xa057, 0xa058, 0xa059, 0xa05a, 0xa05b, 0xa05c, 0xa05d, 0xa05e, 0xa05f, 0xa060, 0xa061, 0xa062, 0xa063, 0xa064, 0xa065, 0xa066, 0xa067, 0xa068, 0xa069, 0xa06a, 0xa06b, 0xa06c, 0xa06d, 0xa06e, 0xa06f, 0xa070, 0xa071, 0xa072, 0xa073, 0xa074, 0xa075, 0xa076, 0xa077
};

void BM_collation_element_lookup_255(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 0, cps_255 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 1, cps_255 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 2, cps_255 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 3, cps_255 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 4, cps_255 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 5, cps_255 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 6, cps_255 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 7, cps_255 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 8, cps_255 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 9, cps_255 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 10, cps_255 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 11, cps_255 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 12, cps_255 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 13, cps_255 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 14, cps_255 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 15, cps_255 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 16, cps_255 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 17, cps_255 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 18, cps_255 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 19, cps_255 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 20, cps_255 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 21, cps_255 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 22, cps_255 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 23, cps_255 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 24, cps_255 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 25, cps_255 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 26, cps_255 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 27, cps_255 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 28, cps_255 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 29, cps_255 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 30, cps_255 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 31, cps_255 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 32, cps_255 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 33, cps_255 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 34, cps_255 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 35, cps_255 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 36, cps_255 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 37, cps_255 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 38, cps_255 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 39, cps_255 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 40, cps_255 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 41, cps_255 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 42, cps_255 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 43, cps_255 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 44, cps_255 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 45, cps_255 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 46, cps_255 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 47, cps_255 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 48, cps_255 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_255 + 49, cps_255 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_255);

uint32_t cps_256[] = {
0xa078, 0xa079, 0xa07a, 0xa07b, 0xa07c, 0xa07d, 0xa07e, 0xa07f, 0xa080, 0xa081, 0xa082, 0xa083, 0xa084, 0xa085, 0xa086, 0xa087, 0xa088, 0xa089, 0xa08a, 0xa08b, 0xa08c, 0xa08d, 0xa08e, 0xa08f, 0xa090, 0xa091, 0xa092, 0xa093, 0xa094, 0xa095, 0xa096, 0xa097, 0xa098, 0xa099, 0xa09a, 0xa09b, 0xa09c, 0xa09d, 0xa09e, 0xa09f, 0xa0a0, 0xa0a1, 0xa0a2, 0xa0a3, 0xa0a4, 0xa0a5, 0xa0a6, 0xa0a7, 0xa0a8, 0xa0a9
};

void BM_collation_element_lookup_256(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 0, cps_256 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 1, cps_256 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 2, cps_256 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 3, cps_256 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 4, cps_256 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 5, cps_256 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 6, cps_256 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 7, cps_256 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 8, cps_256 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 9, cps_256 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 10, cps_256 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 11, cps_256 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 12, cps_256 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 13, cps_256 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 14, cps_256 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 15, cps_256 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 16, cps_256 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 17, cps_256 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 18, cps_256 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 19, cps_256 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 20, cps_256 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 21, cps_256 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 22, cps_256 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 23, cps_256 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 24, cps_256 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 25, cps_256 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 26, cps_256 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 27, cps_256 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 28, cps_256 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 29, cps_256 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 30, cps_256 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 31, cps_256 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 32, cps_256 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 33, cps_256 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 34, cps_256 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 35, cps_256 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 36, cps_256 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 37, cps_256 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 38, cps_256 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 39, cps_256 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 40, cps_256 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 41, cps_256 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 42, cps_256 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 43, cps_256 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 44, cps_256 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 45, cps_256 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 46, cps_256 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 47, cps_256 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 48, cps_256 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_256 + 49, cps_256 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_256);

uint32_t cps_257[] = {
0xa0aa, 0xa0ab, 0xa0ac, 0xa0ad, 0xa0ae, 0xa0af, 0xa0b0, 0xa0b1, 0xa0b2, 0xa0b3, 0xa0b4, 0xa0b5, 0xa0b6, 0xa0b7, 0xa0b8, 0xa0b9, 0xa0ba, 0xa0bb, 0xa0bc, 0xa0bd, 0xa0be, 0xa0bf, 0xa0c0, 0xa0c1, 0xa0c2, 0xa0c3, 0xa0c4, 0xa0c5, 0xa0c6, 0xa0c7, 0xa0c8, 0xa0c9, 0xa0ca, 0xa0cb, 0xa0cc, 0xa0cd, 0xa0ce, 0xa0cf, 0xa0d0, 0xa0d1, 0xa0d2, 0xa0d3, 0xa0d4, 0xa0d5, 0xa0d6, 0xa0d7, 0xa0d8, 0xa0d9, 0xa0da, 0xa0db
};

void BM_collation_element_lookup_257(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 0, cps_257 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 1, cps_257 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 2, cps_257 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 3, cps_257 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 4, cps_257 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 5, cps_257 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 6, cps_257 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 7, cps_257 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 8, cps_257 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 9, cps_257 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 10, cps_257 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 11, cps_257 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 12, cps_257 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 13, cps_257 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 14, cps_257 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 15, cps_257 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 16, cps_257 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 17, cps_257 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 18, cps_257 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 19, cps_257 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 20, cps_257 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 21, cps_257 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 22, cps_257 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 23, cps_257 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 24, cps_257 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 25, cps_257 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 26, cps_257 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 27, cps_257 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 28, cps_257 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 29, cps_257 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 30, cps_257 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 31, cps_257 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 32, cps_257 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 33, cps_257 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 34, cps_257 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 35, cps_257 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 36, cps_257 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 37, cps_257 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 38, cps_257 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 39, cps_257 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 40, cps_257 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 41, cps_257 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 42, cps_257 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 43, cps_257 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 44, cps_257 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 45, cps_257 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 46, cps_257 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 47, cps_257 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 48, cps_257 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_257 + 49, cps_257 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_257);

uint32_t cps_258[] = {
0xa0dc, 0xa0dd, 0xa0de, 0xa0df, 0xa0e0, 0xa0e1, 0xa0e2, 0xa0e3, 0xa0e4, 0xa0e5, 0xa0e6, 0xa0e7, 0xa0e8, 0xa0e9, 0xa0ea, 0xa0eb, 0xa0ec, 0xa0ed, 0xa0ee, 0xa0ef, 0xa0f0, 0xa0f1, 0xa0f2, 0xa0f3, 0xa0f4, 0xa0f5, 0xa0f6, 0xa0f7, 0xa0f8, 0xa0f9, 0xa0fa, 0xa0fb, 0xa0fc, 0xa0fd, 0xa0fe, 0xa0ff, 0xa100, 0xa101, 0xa102, 0xa103, 0xa104, 0xa105, 0xa106, 0xa107, 0xa108, 0xa109, 0xa10a, 0xa10b, 0xa10c, 0xa10d
};

void BM_collation_element_lookup_258(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 0, cps_258 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 1, cps_258 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 2, cps_258 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 3, cps_258 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 4, cps_258 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 5, cps_258 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 6, cps_258 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 7, cps_258 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 8, cps_258 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 9, cps_258 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 10, cps_258 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 11, cps_258 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 12, cps_258 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 13, cps_258 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 14, cps_258 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 15, cps_258 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 16, cps_258 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 17, cps_258 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 18, cps_258 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 19, cps_258 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 20, cps_258 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 21, cps_258 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 22, cps_258 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 23, cps_258 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 24, cps_258 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 25, cps_258 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 26, cps_258 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 27, cps_258 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 28, cps_258 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 29, cps_258 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 30, cps_258 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 31, cps_258 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 32, cps_258 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 33, cps_258 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 34, cps_258 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 35, cps_258 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 36, cps_258 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 37, cps_258 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 38, cps_258 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 39, cps_258 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 40, cps_258 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 41, cps_258 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 42, cps_258 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 43, cps_258 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 44, cps_258 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 45, cps_258 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 46, cps_258 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 47, cps_258 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 48, cps_258 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_258 + 49, cps_258 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_258);

uint32_t cps_259[] = {
0xa10e, 0xa10f, 0xa110, 0xa111, 0xa112, 0xa113, 0xa114, 0xa115, 0xa116, 0xa117, 0xa118, 0xa119, 0xa11a, 0xa11b, 0xa11c, 0xa11d, 0xa11e, 0xa11f, 0xa120, 0xa121, 0xa122, 0xa123, 0xa124, 0xa125, 0xa126, 0xa127, 0xa128, 0xa129, 0xa12a, 0xa12b, 0xa12c, 0xa12d, 0xa12e, 0xa12f, 0xa130, 0xa131, 0xa132, 0xa133, 0xa134, 0xa135, 0xa136, 0xa137, 0xa138, 0xa139, 0xa13a, 0xa13b, 0xa13c, 0xa13d, 0xa13e, 0xa13f
};

void BM_collation_element_lookup_259(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 0, cps_259 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 1, cps_259 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 2, cps_259 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 3, cps_259 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 4, cps_259 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 5, cps_259 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 6, cps_259 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 7, cps_259 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 8, cps_259 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 9, cps_259 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 10, cps_259 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 11, cps_259 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 12, cps_259 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 13, cps_259 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 14, cps_259 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 15, cps_259 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 16, cps_259 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 17, cps_259 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 18, cps_259 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 19, cps_259 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 20, cps_259 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 21, cps_259 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 22, cps_259 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 23, cps_259 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 24, cps_259 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 25, cps_259 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 26, cps_259 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 27, cps_259 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 28, cps_259 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 29, cps_259 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 30, cps_259 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 31, cps_259 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 32, cps_259 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 33, cps_259 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 34, cps_259 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 35, cps_259 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 36, cps_259 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 37, cps_259 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 38, cps_259 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 39, cps_259 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 40, cps_259 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 41, cps_259 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 42, cps_259 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 43, cps_259 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 44, cps_259 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 45, cps_259 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 46, cps_259 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 47, cps_259 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 48, cps_259 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_259 + 49, cps_259 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_259);

uint32_t cps_260[] = {
0xa140, 0xa141, 0xa142, 0xa143, 0xa144, 0xa145, 0xa146, 0xa147, 0xa148, 0xa149, 0xa14a, 0xa14b, 0xa14c, 0xa14d, 0xa14e, 0xa14f, 0xa150, 0xa151, 0xa152, 0xa153, 0xa154, 0xa155, 0xa156, 0xa157, 0xa158, 0xa159, 0xa15a, 0xa15b, 0xa15c, 0xa15d, 0xa15e, 0xa15f, 0xa160, 0xa161, 0xa162, 0xa163, 0xa164, 0xa165, 0xa166, 0xa167, 0xa168, 0xa169, 0xa16a, 0xa16b, 0xa16c, 0xa16d, 0xa16e, 0xa16f, 0xa170, 0xa171
};

void BM_collation_element_lookup_260(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 0, cps_260 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 1, cps_260 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 2, cps_260 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 3, cps_260 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 4, cps_260 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 5, cps_260 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 6, cps_260 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 7, cps_260 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 8, cps_260 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 9, cps_260 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 10, cps_260 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 11, cps_260 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 12, cps_260 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 13, cps_260 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 14, cps_260 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 15, cps_260 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 16, cps_260 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 17, cps_260 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 18, cps_260 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 19, cps_260 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 20, cps_260 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 21, cps_260 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 22, cps_260 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 23, cps_260 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 24, cps_260 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 25, cps_260 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 26, cps_260 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 27, cps_260 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 28, cps_260 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 29, cps_260 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 30, cps_260 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 31, cps_260 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 32, cps_260 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 33, cps_260 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 34, cps_260 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 35, cps_260 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 36, cps_260 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 37, cps_260 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 38, cps_260 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 39, cps_260 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 40, cps_260 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 41, cps_260 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 42, cps_260 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 43, cps_260 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 44, cps_260 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 45, cps_260 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 46, cps_260 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 47, cps_260 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 48, cps_260 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_260 + 49, cps_260 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_260);

uint32_t cps_261[] = {
0xa172, 0xa173, 0xa174, 0xa175, 0xa176, 0xa177, 0xa178, 0xa179, 0xa17a, 0xa17b, 0xa17c, 0xa17d, 0xa17e, 0xa17f, 0xa180, 0xa181, 0xa182, 0xa183, 0xa184, 0xa185, 0xa186, 0xa187, 0xa188, 0xa189, 0xa18a, 0xa18b, 0xa18c, 0xa18d, 0xa18e, 0xa18f, 0xa190, 0xa191, 0xa192, 0xa193, 0xa194, 0xa195, 0xa196, 0xa197, 0xa198, 0xa199, 0xa19a, 0xa19b, 0xa19c, 0xa19d, 0xa19e, 0xa19f, 0xa1a0, 0xa1a1, 0xa1a2, 0xa1a3
};

void BM_collation_element_lookup_261(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 0, cps_261 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 1, cps_261 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 2, cps_261 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 3, cps_261 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 4, cps_261 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 5, cps_261 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 6, cps_261 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 7, cps_261 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 8, cps_261 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 9, cps_261 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 10, cps_261 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 11, cps_261 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 12, cps_261 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 13, cps_261 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 14, cps_261 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 15, cps_261 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 16, cps_261 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 17, cps_261 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 18, cps_261 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 19, cps_261 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 20, cps_261 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 21, cps_261 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 22, cps_261 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 23, cps_261 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 24, cps_261 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 25, cps_261 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 26, cps_261 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 27, cps_261 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 28, cps_261 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 29, cps_261 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 30, cps_261 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 31, cps_261 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 32, cps_261 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 33, cps_261 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 34, cps_261 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 35, cps_261 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 36, cps_261 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 37, cps_261 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 38, cps_261 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 39, cps_261 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 40, cps_261 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 41, cps_261 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 42, cps_261 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 43, cps_261 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 44, cps_261 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 45, cps_261 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 46, cps_261 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 47, cps_261 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 48, cps_261 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_261 + 49, cps_261 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_261);

uint32_t cps_262[] = {
0xa1a4, 0xa1a5, 0xa1a6, 0xa1a7, 0xa1a8, 0xa1a9, 0xa1aa, 0xa1ab, 0xa1ac, 0xa1ad, 0xa1ae, 0xa1af, 0xa1b0, 0xa1b1, 0xa1b2, 0xa1b3, 0xa1b4, 0xa1b5, 0xa1b6, 0xa1b7, 0xa1b8, 0xa1b9, 0xa1ba, 0xa1bb, 0xa1bc, 0xa1bd, 0xa1be, 0xa1bf, 0xa1c0, 0xa1c1, 0xa1c2, 0xa1c3, 0xa1c4, 0xa1c5, 0xa1c6, 0xa1c7, 0xa1c8, 0xa1c9, 0xa1ca, 0xa1cb, 0xa1cc, 0xa1cd, 0xa1ce, 0xa1cf, 0xa1d0, 0xa1d1, 0xa1d2, 0xa1d3, 0xa1d4, 0xa1d5
};

void BM_collation_element_lookup_262(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 0, cps_262 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 1, cps_262 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 2, cps_262 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 3, cps_262 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 4, cps_262 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 5, cps_262 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 6, cps_262 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 7, cps_262 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 8, cps_262 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 9, cps_262 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 10, cps_262 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 11, cps_262 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 12, cps_262 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 13, cps_262 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 14, cps_262 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 15, cps_262 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 16, cps_262 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 17, cps_262 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 18, cps_262 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 19, cps_262 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 20, cps_262 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 21, cps_262 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 22, cps_262 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 23, cps_262 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 24, cps_262 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 25, cps_262 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 26, cps_262 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 27, cps_262 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 28, cps_262 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 29, cps_262 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 30, cps_262 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 31, cps_262 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 32, cps_262 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 33, cps_262 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 34, cps_262 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 35, cps_262 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 36, cps_262 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 37, cps_262 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 38, cps_262 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 39, cps_262 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 40, cps_262 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 41, cps_262 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 42, cps_262 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 43, cps_262 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 44, cps_262 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 45, cps_262 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 46, cps_262 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 47, cps_262 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 48, cps_262 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_262 + 49, cps_262 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_262);

uint32_t cps_263[] = {
0xa1d6, 0xa1d7, 0xa1d8, 0xa1d9, 0xa1da, 0xa1db, 0xa1dc, 0xa1dd, 0xa1de, 0xa1df, 0xa1e0, 0xa1e1, 0xa1e2, 0xa1e3, 0xa1e4, 0xa1e5, 0xa1e6, 0xa1e7, 0xa1e8, 0xa1e9, 0xa1ea, 0xa1eb, 0xa1ec, 0xa1ed, 0xa1ee, 0xa1ef, 0xa1f0, 0xa1f1, 0xa1f2, 0xa1f3, 0xa1f4, 0xa1f5, 0xa1f6, 0xa1f7, 0xa1f8, 0xa1f9, 0xa1fa, 0xa1fb, 0xa1fc, 0xa1fd, 0xa1fe, 0xa1ff, 0xa200, 0xa201, 0xa202, 0xa203, 0xa204, 0xa205, 0xa206, 0xa207
};

void BM_collation_element_lookup_263(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 0, cps_263 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 1, cps_263 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 2, cps_263 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 3, cps_263 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 4, cps_263 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 5, cps_263 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 6, cps_263 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 7, cps_263 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 8, cps_263 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 9, cps_263 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 10, cps_263 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 11, cps_263 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 12, cps_263 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 13, cps_263 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 14, cps_263 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 15, cps_263 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 16, cps_263 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 17, cps_263 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 18, cps_263 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 19, cps_263 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 20, cps_263 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 21, cps_263 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 22, cps_263 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 23, cps_263 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 24, cps_263 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 25, cps_263 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 26, cps_263 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 27, cps_263 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 28, cps_263 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 29, cps_263 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 30, cps_263 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 31, cps_263 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 32, cps_263 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 33, cps_263 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 34, cps_263 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 35, cps_263 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 36, cps_263 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 37, cps_263 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 38, cps_263 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 39, cps_263 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 40, cps_263 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 41, cps_263 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 42, cps_263 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 43, cps_263 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 44, cps_263 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 45, cps_263 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 46, cps_263 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 47, cps_263 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 48, cps_263 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_263 + 49, cps_263 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_263);

uint32_t cps_264[] = {
0xa208, 0xa209, 0xa20a, 0xa20b, 0xa20c, 0xa20d, 0xa20e, 0xa20f, 0xa210, 0xa211, 0xa212, 0xa213, 0xa214, 0xa215, 0xa216, 0xa217, 0xa218, 0xa219, 0xa21a, 0xa21b, 0xa21c, 0xa21d, 0xa21e, 0xa21f, 0xa220, 0xa221, 0xa222, 0xa223, 0xa224, 0xa225, 0xa226, 0xa227, 0xa228, 0xa229, 0xa22a, 0xa22b, 0xa22c, 0xa22d, 0xa22e, 0xa22f, 0xa230, 0xa231, 0xa232, 0xa233, 0xa234, 0xa235, 0xa236, 0xa237, 0xa238, 0xa239
};

void BM_collation_element_lookup_264(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 0, cps_264 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 1, cps_264 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 2, cps_264 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 3, cps_264 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 4, cps_264 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 5, cps_264 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 6, cps_264 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 7, cps_264 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 8, cps_264 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 9, cps_264 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 10, cps_264 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 11, cps_264 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 12, cps_264 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 13, cps_264 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 14, cps_264 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 15, cps_264 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 16, cps_264 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 17, cps_264 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 18, cps_264 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 19, cps_264 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 20, cps_264 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 21, cps_264 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 22, cps_264 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 23, cps_264 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 24, cps_264 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 25, cps_264 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 26, cps_264 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 27, cps_264 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 28, cps_264 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 29, cps_264 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 30, cps_264 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 31, cps_264 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 32, cps_264 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 33, cps_264 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 34, cps_264 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 35, cps_264 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 36, cps_264 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 37, cps_264 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 38, cps_264 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 39, cps_264 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 40, cps_264 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 41, cps_264 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 42, cps_264 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 43, cps_264 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 44, cps_264 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 45, cps_264 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 46, cps_264 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 47, cps_264 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 48, cps_264 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_264 + 49, cps_264 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_264);

uint32_t cps_265[] = {
0xa23a, 0xa23b, 0xa23c, 0xa23d, 0xa23e, 0xa23f, 0xa240, 0xa241, 0xa242, 0xa243, 0xa244, 0xa245, 0xa246, 0xa247, 0xa248, 0xa249, 0xa24a, 0xa24b, 0xa24c, 0xa24d, 0xa24e, 0xa24f, 0xa250, 0xa251, 0xa252, 0xa253, 0xa254, 0xa255, 0xa256, 0xa257, 0xa258, 0xa259, 0xa25a, 0xa25b, 0xa25c, 0xa25d, 0xa25e, 0xa25f, 0xa260, 0xa261, 0xa262, 0xa263, 0xa264, 0xa265, 0xa266, 0xa267, 0xa268, 0xa269, 0xa26a, 0xa26b
};

void BM_collation_element_lookup_265(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 0, cps_265 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 1, cps_265 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 2, cps_265 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 3, cps_265 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 4, cps_265 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 5, cps_265 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 6, cps_265 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 7, cps_265 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 8, cps_265 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 9, cps_265 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 10, cps_265 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 11, cps_265 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 12, cps_265 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 13, cps_265 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 14, cps_265 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 15, cps_265 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 16, cps_265 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 17, cps_265 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 18, cps_265 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 19, cps_265 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 20, cps_265 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 21, cps_265 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 22, cps_265 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 23, cps_265 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 24, cps_265 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 25, cps_265 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 26, cps_265 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 27, cps_265 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 28, cps_265 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 29, cps_265 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 30, cps_265 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 31, cps_265 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 32, cps_265 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 33, cps_265 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 34, cps_265 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 35, cps_265 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 36, cps_265 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 37, cps_265 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 38, cps_265 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 39, cps_265 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 40, cps_265 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 41, cps_265 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 42, cps_265 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 43, cps_265 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 44, cps_265 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 45, cps_265 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 46, cps_265 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 47, cps_265 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 48, cps_265 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_265 + 49, cps_265 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_265);

uint32_t cps_266[] = {
0xa26c, 0xa26d, 0xa26e, 0xa26f, 0xa270, 0xa271, 0xa272, 0xa273, 0xa274, 0xa275, 0xa276, 0xa277, 0xa278, 0xa279, 0xa27a, 0xa27b, 0xa27c, 0xa27d, 0xa27e, 0xa27f, 0xa280, 0xa281, 0xa282, 0xa283, 0xa284, 0xa285, 0xa286, 0xa287, 0xa288, 0xa289, 0xa28a, 0xa28b, 0xa28c, 0xa28d, 0xa28e, 0xa28f, 0xa290, 0xa291, 0xa292, 0xa293, 0xa294, 0xa295, 0xa296, 0xa297, 0xa298, 0xa299, 0xa29a, 0xa29b, 0xa29c, 0xa29d
};

void BM_collation_element_lookup_266(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 0, cps_266 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 1, cps_266 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 2, cps_266 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 3, cps_266 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 4, cps_266 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 5, cps_266 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 6, cps_266 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 7, cps_266 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 8, cps_266 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 9, cps_266 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 10, cps_266 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 11, cps_266 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 12, cps_266 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 13, cps_266 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 14, cps_266 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 15, cps_266 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 16, cps_266 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 17, cps_266 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 18, cps_266 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 19, cps_266 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 20, cps_266 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 21, cps_266 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 22, cps_266 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 23, cps_266 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 24, cps_266 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 25, cps_266 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 26, cps_266 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 27, cps_266 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 28, cps_266 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 29, cps_266 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 30, cps_266 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 31, cps_266 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 32, cps_266 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 33, cps_266 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 34, cps_266 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 35, cps_266 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 36, cps_266 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 37, cps_266 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 38, cps_266 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 39, cps_266 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 40, cps_266 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 41, cps_266 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 42, cps_266 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 43, cps_266 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 44, cps_266 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 45, cps_266 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 46, cps_266 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 47, cps_266 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 48, cps_266 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_266 + 49, cps_266 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_266);

uint32_t cps_267[] = {
0xa29e, 0xa29f, 0xa2a0, 0xa2a1, 0xa2a2, 0xa2a3, 0xa2a4, 0xa2a5, 0xa2a6, 0xa2a7, 0xa2a8, 0xa2a9, 0xa2aa, 0xa2ab, 0xa2ac, 0xa2ad, 0xa2ae, 0xa2af, 0xa2b0, 0xa2b1, 0xa2b2, 0xa2b3, 0xa2b4, 0xa2b5, 0xa2b6, 0xa2b7, 0xa2b8, 0xa2b9, 0xa2ba, 0xa2bb, 0xa2bc, 0xa2bd, 0xa2be, 0xa2bf, 0xa2c0, 0xa2c1, 0xa2c2, 0xa2c3, 0xa2c4, 0xa2c5, 0xa2c6, 0xa2c7, 0xa2c8, 0xa2c9, 0xa2ca, 0xa2cb, 0xa2cc, 0xa2cd, 0xa2ce, 0xa2cf
};

void BM_collation_element_lookup_267(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 0, cps_267 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 1, cps_267 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 2, cps_267 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 3, cps_267 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 4, cps_267 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 5, cps_267 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 6, cps_267 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 7, cps_267 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 8, cps_267 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 9, cps_267 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 10, cps_267 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 11, cps_267 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 12, cps_267 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 13, cps_267 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 14, cps_267 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 15, cps_267 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 16, cps_267 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 17, cps_267 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 18, cps_267 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 19, cps_267 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 20, cps_267 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 21, cps_267 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 22, cps_267 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 23, cps_267 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 24, cps_267 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 25, cps_267 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 26, cps_267 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 27, cps_267 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 28, cps_267 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 29, cps_267 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 30, cps_267 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 31, cps_267 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 32, cps_267 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 33, cps_267 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 34, cps_267 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 35, cps_267 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 36, cps_267 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 37, cps_267 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 38, cps_267 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 39, cps_267 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 40, cps_267 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 41, cps_267 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 42, cps_267 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 43, cps_267 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 44, cps_267 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 45, cps_267 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 46, cps_267 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 47, cps_267 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 48, cps_267 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_267 + 49, cps_267 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_267);

uint32_t cps_268[] = {
0xa2d0, 0xa2d1, 0xa2d2, 0xa2d3, 0xa2d4, 0xa2d5, 0xa2d6, 0xa2d7, 0xa2d8, 0xa2d9, 0xa2da, 0xa2db, 0xa2dc, 0xa2dd, 0xa2de, 0xa2df, 0xa2e0, 0xa2e1, 0xa2e2, 0xa2e3, 0xa2e4, 0xa2e5, 0xa2e6, 0xa2e7, 0xa2e8, 0xa2e9, 0xa2ea, 0xa2eb, 0xa2ec, 0xa2ed, 0xa2ee, 0xa2ef, 0xa2f0, 0xa2f1, 0xa2f2, 0xa2f3, 0xa2f4, 0xa2f5, 0xa2f6, 0xa2f7, 0xa2f8, 0xa2f9, 0xa2fa, 0xa2fb, 0xa2fc, 0xa2fd, 0xa2fe, 0xa2ff, 0xa300, 0xa301
};

void BM_collation_element_lookup_268(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 0, cps_268 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 1, cps_268 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 2, cps_268 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 3, cps_268 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 4, cps_268 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 5, cps_268 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 6, cps_268 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 7, cps_268 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 8, cps_268 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 9, cps_268 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 10, cps_268 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 11, cps_268 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 12, cps_268 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 13, cps_268 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 14, cps_268 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 15, cps_268 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 16, cps_268 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 17, cps_268 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 18, cps_268 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 19, cps_268 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 20, cps_268 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 21, cps_268 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 22, cps_268 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 23, cps_268 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 24, cps_268 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 25, cps_268 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 26, cps_268 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 27, cps_268 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 28, cps_268 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 29, cps_268 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 30, cps_268 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 31, cps_268 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 32, cps_268 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 33, cps_268 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 34, cps_268 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 35, cps_268 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 36, cps_268 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 37, cps_268 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 38, cps_268 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 39, cps_268 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 40, cps_268 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 41, cps_268 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 42, cps_268 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 43, cps_268 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 44, cps_268 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 45, cps_268 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 46, cps_268 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 47, cps_268 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 48, cps_268 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_268 + 49, cps_268 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_268);

uint32_t cps_269[] = {
0xa302, 0xa303, 0xa304, 0xa305, 0xa306, 0xa307, 0xa308, 0xa309, 0xa30a, 0xa30b, 0xa30c, 0xa30d, 0xa30e, 0xa30f, 0xa310, 0xa311, 0xa312, 0xa313, 0xa314, 0xa315, 0xa316, 0xa317, 0xa318, 0xa319, 0xa31a, 0xa31b, 0xa31c, 0xa31d, 0xa31e, 0xa31f, 0xa320, 0xa321, 0xa322, 0xa323, 0xa324, 0xa325, 0xa326, 0xa327, 0xa328, 0xa329, 0xa32a, 0xa32b, 0xa32c, 0xa32d, 0xa32e, 0xa32f, 0xa330, 0xa331, 0xa332, 0xa333
};

void BM_collation_element_lookup_269(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 0, cps_269 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 1, cps_269 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 2, cps_269 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 3, cps_269 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 4, cps_269 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 5, cps_269 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 6, cps_269 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 7, cps_269 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 8, cps_269 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 9, cps_269 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 10, cps_269 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 11, cps_269 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 12, cps_269 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 13, cps_269 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 14, cps_269 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 15, cps_269 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 16, cps_269 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 17, cps_269 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 18, cps_269 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 19, cps_269 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 20, cps_269 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 21, cps_269 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 22, cps_269 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 23, cps_269 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 24, cps_269 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 25, cps_269 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 26, cps_269 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 27, cps_269 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 28, cps_269 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 29, cps_269 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 30, cps_269 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 31, cps_269 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 32, cps_269 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 33, cps_269 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 34, cps_269 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 35, cps_269 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 36, cps_269 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 37, cps_269 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 38, cps_269 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 39, cps_269 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 40, cps_269 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 41, cps_269 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 42, cps_269 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 43, cps_269 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 44, cps_269 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 45, cps_269 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 46, cps_269 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 47, cps_269 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 48, cps_269 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_269 + 49, cps_269 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_269);

uint32_t cps_270[] = {
0xa334, 0xa335, 0xa336, 0xa337, 0xa338, 0xa339, 0xa33a, 0xa33b, 0xa33c, 0xa33d, 0xa33e, 0xa33f, 0xa340, 0xa341, 0xa342, 0xa343, 0xa344, 0xa345, 0xa346, 0xa347, 0xa348, 0xa349, 0xa34a, 0xa34b, 0xa34c, 0xa34d, 0xa34e, 0xa34f, 0xa350, 0xa351, 0xa352, 0xa353, 0xa354, 0xa355, 0xa356, 0xa357, 0xa358, 0xa359, 0xa35a, 0xa35b, 0xa35c, 0xa35d, 0xa35e, 0xa35f, 0xa360, 0xa361, 0xa362, 0xa363, 0xa364, 0xa365
};

void BM_collation_element_lookup_270(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 0, cps_270 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 1, cps_270 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 2, cps_270 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 3, cps_270 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 4, cps_270 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 5, cps_270 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 6, cps_270 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 7, cps_270 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 8, cps_270 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 9, cps_270 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 10, cps_270 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 11, cps_270 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 12, cps_270 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 13, cps_270 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 14, cps_270 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 15, cps_270 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 16, cps_270 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 17, cps_270 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 18, cps_270 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 19, cps_270 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 20, cps_270 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 21, cps_270 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 22, cps_270 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 23, cps_270 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 24, cps_270 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 25, cps_270 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 26, cps_270 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 27, cps_270 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 28, cps_270 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 29, cps_270 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 30, cps_270 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 31, cps_270 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 32, cps_270 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 33, cps_270 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 34, cps_270 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 35, cps_270 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 36, cps_270 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 37, cps_270 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 38, cps_270 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 39, cps_270 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 40, cps_270 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 41, cps_270 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 42, cps_270 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 43, cps_270 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 44, cps_270 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 45, cps_270 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 46, cps_270 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 47, cps_270 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 48, cps_270 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_270 + 49, cps_270 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_270);

uint32_t cps_271[] = {
0xa366, 0xa367, 0xa368, 0xa369, 0xa36a, 0xa36b, 0xa36c, 0xa36d, 0xa36e, 0xa36f, 0xa370, 0xa371, 0xa372, 0xa373, 0xa374, 0xa375, 0xa376, 0xa377, 0xa378, 0xa379, 0xa37a, 0xa37b, 0xa37c, 0xa37d, 0xa37e, 0xa37f, 0xa380, 0xa381, 0xa382, 0xa383, 0xa384, 0xa385, 0xa386, 0xa387, 0xa388, 0xa389, 0xa38a, 0xa38b, 0xa38c, 0xa38d, 0xa38e, 0xa38f, 0xa390, 0xa391, 0xa392, 0xa393, 0xa394, 0xa395, 0xa396, 0xa397
};

void BM_collation_element_lookup_271(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 0, cps_271 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 1, cps_271 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 2, cps_271 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 3, cps_271 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 4, cps_271 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 5, cps_271 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 6, cps_271 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 7, cps_271 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 8, cps_271 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 9, cps_271 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 10, cps_271 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 11, cps_271 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 12, cps_271 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 13, cps_271 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 14, cps_271 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 15, cps_271 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 16, cps_271 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 17, cps_271 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 18, cps_271 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 19, cps_271 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 20, cps_271 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 21, cps_271 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 22, cps_271 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 23, cps_271 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 24, cps_271 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 25, cps_271 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 26, cps_271 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 27, cps_271 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 28, cps_271 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 29, cps_271 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 30, cps_271 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 31, cps_271 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 32, cps_271 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 33, cps_271 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 34, cps_271 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 35, cps_271 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 36, cps_271 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 37, cps_271 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 38, cps_271 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 39, cps_271 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 40, cps_271 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 41, cps_271 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 42, cps_271 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 43, cps_271 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 44, cps_271 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 45, cps_271 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 46, cps_271 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 47, cps_271 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 48, cps_271 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_271 + 49, cps_271 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_271);

uint32_t cps_272[] = {
0xa398, 0xa399, 0xa39a, 0xa39b, 0xa39c, 0xa39d, 0xa39e, 0xa39f, 0xa3a0, 0xa3a1, 0xa3a2, 0xa3a3, 0xa3a4, 0xa3a5, 0xa3a6, 0xa3a7, 0xa3a8, 0xa3a9, 0xa3aa, 0xa3ab, 0xa3ac, 0xa3ad, 0xa3ae, 0xa3af, 0xa3b0, 0xa3b1, 0xa3b2, 0xa3b3, 0xa3b4, 0xa3b5, 0xa3b6, 0xa3b7, 0xa3b8, 0xa3b9, 0xa3ba, 0xa3bb, 0xa3bc, 0xa3bd, 0xa3be, 0xa3bf, 0xa3c0, 0xa3c1, 0xa3c2, 0xa3c3, 0xa3c4, 0xa3c5, 0xa3c6, 0xa3c7, 0xa3c8, 0xa3c9
};

void BM_collation_element_lookup_272(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 0, cps_272 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 1, cps_272 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 2, cps_272 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 3, cps_272 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 4, cps_272 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 5, cps_272 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 6, cps_272 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 7, cps_272 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 8, cps_272 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 9, cps_272 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 10, cps_272 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 11, cps_272 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 12, cps_272 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 13, cps_272 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 14, cps_272 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 15, cps_272 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 16, cps_272 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 17, cps_272 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 18, cps_272 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 19, cps_272 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 20, cps_272 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 21, cps_272 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 22, cps_272 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 23, cps_272 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 24, cps_272 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 25, cps_272 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 26, cps_272 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 27, cps_272 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 28, cps_272 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 29, cps_272 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 30, cps_272 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 31, cps_272 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 32, cps_272 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 33, cps_272 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 34, cps_272 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 35, cps_272 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 36, cps_272 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 37, cps_272 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 38, cps_272 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 39, cps_272 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 40, cps_272 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 41, cps_272 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 42, cps_272 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 43, cps_272 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 44, cps_272 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 45, cps_272 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 46, cps_272 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 47, cps_272 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 48, cps_272 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_272 + 49, cps_272 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_272);

uint32_t cps_273[] = {
0xa3ca, 0xa3cb, 0xa3cc, 0xa3cd, 0xa3ce, 0xa3cf, 0xa3d0, 0xa3d1, 0xa3d2, 0xa3d3, 0xa3d4, 0xa3d5, 0xa3d6, 0xa3d7, 0xa3d8, 0xa3d9, 0xa3da, 0xa3db, 0xa3dc, 0xa3dd, 0xa3de, 0xa3df, 0xa3e0, 0xa3e1, 0xa3e2, 0xa3e3, 0xa3e4, 0xa3e5, 0xa3e6, 0xa3e7, 0xa3e8, 0xa3e9, 0xa3ea, 0xa3eb, 0xa3ec, 0xa3ed, 0xa3ee, 0xa3ef, 0xa3f0, 0xa3f1, 0xa3f2, 0xa3f3, 0xa3f4, 0xa3f5, 0xa3f6, 0xa3f7, 0xa3f8, 0xa3f9, 0xa3fa, 0xa3fb
};

void BM_collation_element_lookup_273(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 0, cps_273 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 1, cps_273 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 2, cps_273 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 3, cps_273 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 4, cps_273 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 5, cps_273 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 6, cps_273 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 7, cps_273 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 8, cps_273 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 9, cps_273 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 10, cps_273 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 11, cps_273 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 12, cps_273 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 13, cps_273 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 14, cps_273 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 15, cps_273 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 16, cps_273 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 17, cps_273 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 18, cps_273 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 19, cps_273 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 20, cps_273 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 21, cps_273 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 22, cps_273 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 23, cps_273 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 24, cps_273 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 25, cps_273 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 26, cps_273 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 27, cps_273 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 28, cps_273 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 29, cps_273 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 30, cps_273 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 31, cps_273 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 32, cps_273 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 33, cps_273 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 34, cps_273 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 35, cps_273 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 36, cps_273 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 37, cps_273 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 38, cps_273 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 39, cps_273 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 40, cps_273 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 41, cps_273 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 42, cps_273 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 43, cps_273 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 44, cps_273 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 45, cps_273 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 46, cps_273 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 47, cps_273 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 48, cps_273 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_273 + 49, cps_273 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_273);

uint32_t cps_274[] = {
0xa3fc, 0xa3fd, 0xa3fe, 0xa3ff, 0xa400, 0xa401, 0xa402, 0xa403, 0xa404, 0xa405, 0xa406, 0xa407, 0xa408, 0xa409, 0xa40a, 0xa40b, 0xa40c, 0xa40d, 0xa40e, 0xa40f, 0xa410, 0xa411, 0xa412, 0xa413, 0xa414, 0xa415, 0xa416, 0xa417, 0xa418, 0xa419, 0xa41a, 0xa41b, 0xa41c, 0xa41d, 0xa41e, 0xa41f, 0xa420, 0xa421, 0xa422, 0xa423, 0xa424, 0xa425, 0xa426, 0xa427, 0xa428, 0xa429, 0xa42a, 0xa42b, 0xa42c, 0xa42d
};

void BM_collation_element_lookup_274(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 0, cps_274 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 1, cps_274 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 2, cps_274 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 3, cps_274 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 4, cps_274 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 5, cps_274 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 6, cps_274 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 7, cps_274 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 8, cps_274 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 9, cps_274 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 10, cps_274 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 11, cps_274 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 12, cps_274 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 13, cps_274 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 14, cps_274 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 15, cps_274 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 16, cps_274 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 17, cps_274 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 18, cps_274 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 19, cps_274 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 20, cps_274 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 21, cps_274 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 22, cps_274 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 23, cps_274 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 24, cps_274 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 25, cps_274 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 26, cps_274 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 27, cps_274 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 28, cps_274 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 29, cps_274 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 30, cps_274 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 31, cps_274 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 32, cps_274 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 33, cps_274 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 34, cps_274 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 35, cps_274 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 36, cps_274 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 37, cps_274 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 38, cps_274 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 39, cps_274 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 40, cps_274 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 41, cps_274 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 42, cps_274 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 43, cps_274 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 44, cps_274 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 45, cps_274 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 46, cps_274 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 47, cps_274 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 48, cps_274 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_274 + 49, cps_274 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_274);

uint32_t cps_275[] = {
0xa42e, 0xa42f, 0xa430, 0xa431, 0xa432, 0xa433, 0xa434, 0xa435, 0xa436, 0xa437, 0xa438, 0xa439, 0xa43a, 0xa43b, 0xa43c, 0xa43d, 0xa43e, 0xa43f, 0xa440, 0xa441, 0xa442, 0xa443, 0xa444, 0xa445, 0xa446, 0xa447, 0xa448, 0xa449, 0xa44a, 0xa44b, 0xa44c, 0xa44d, 0xa44e, 0xa44f, 0xa450, 0xa451, 0xa452, 0xa453, 0xa454, 0xa455, 0xa456, 0xa457, 0xa458, 0xa459, 0xa45a, 0xa45b, 0xa45c, 0xa45d, 0xa45e, 0xa45f
};

void BM_collation_element_lookup_275(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 0, cps_275 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 1, cps_275 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 2, cps_275 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 3, cps_275 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 4, cps_275 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 5, cps_275 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 6, cps_275 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 7, cps_275 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 8, cps_275 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 9, cps_275 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 10, cps_275 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 11, cps_275 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 12, cps_275 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 13, cps_275 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 14, cps_275 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 15, cps_275 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 16, cps_275 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 17, cps_275 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 18, cps_275 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 19, cps_275 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 20, cps_275 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 21, cps_275 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 22, cps_275 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 23, cps_275 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 24, cps_275 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 25, cps_275 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 26, cps_275 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 27, cps_275 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 28, cps_275 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 29, cps_275 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 30, cps_275 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 31, cps_275 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 32, cps_275 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 33, cps_275 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 34, cps_275 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 35, cps_275 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 36, cps_275 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 37, cps_275 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 38, cps_275 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 39, cps_275 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 40, cps_275 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 41, cps_275 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 42, cps_275 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 43, cps_275 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 44, cps_275 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 45, cps_275 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 46, cps_275 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 47, cps_275 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 48, cps_275 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_275 + 49, cps_275 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_275);

uint32_t cps_276[] = {
0xa460, 0xa461, 0xa462, 0xa463, 0xa464, 0xa465, 0xa466, 0xa467, 0xa468, 0xa469, 0xa46a, 0xa46b, 0xa46c, 0xa46d, 0xa46e, 0xa46f, 0xa470, 0xa471, 0xa472, 0xa473, 0xa474, 0xa475, 0xa476, 0xa477, 0xa478, 0xa479, 0xa47a, 0xa47b, 0xa47c, 0xa47d, 0xa47e, 0xa47f, 0xa480, 0xa481, 0xa482, 0xa483, 0xa484, 0xa485, 0xa486, 0xa487, 0xa488, 0xa489, 0xa48a, 0xa48b, 0xa48c, 0xa490, 0xa491, 0xa492, 0xa493, 0xa494
};

void BM_collation_element_lookup_276(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 0, cps_276 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 1, cps_276 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 2, cps_276 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 3, cps_276 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 4, cps_276 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 5, cps_276 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 6, cps_276 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 7, cps_276 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 8, cps_276 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 9, cps_276 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 10, cps_276 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 11, cps_276 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 12, cps_276 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 13, cps_276 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 14, cps_276 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 15, cps_276 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 16, cps_276 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 17, cps_276 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 18, cps_276 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 19, cps_276 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 20, cps_276 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 21, cps_276 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 22, cps_276 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 23, cps_276 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 24, cps_276 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 25, cps_276 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 26, cps_276 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 27, cps_276 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 28, cps_276 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 29, cps_276 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 30, cps_276 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 31, cps_276 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 32, cps_276 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 33, cps_276 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 34, cps_276 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 35, cps_276 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 36, cps_276 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 37, cps_276 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 38, cps_276 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 39, cps_276 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 40, cps_276 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 41, cps_276 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 42, cps_276 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 43, cps_276 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 44, cps_276 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 45, cps_276 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 46, cps_276 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 47, cps_276 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 48, cps_276 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_276 + 49, cps_276 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_276);

uint32_t cps_277[] = {
0xa495, 0xa496, 0xa497, 0xa498, 0xa499, 0xa49a, 0xa49b, 0xa49c, 0xa49d, 0xa49e, 0xa49f, 0xa4a0, 0xa4a1, 0xa4a2, 0xa4a3, 0xa4a4, 0xa4a5, 0xa4a6, 0xa4a7, 0xa4a8, 0xa4a9, 0xa4aa, 0xa4ab, 0xa4ac, 0xa4ad, 0xa4ae, 0xa4af, 0xa4b0, 0xa4b1, 0xa4b2, 0xa4b3, 0xa4b4, 0xa4b5, 0xa4b6, 0xa4b7, 0xa4b8, 0xa4b9, 0xa4ba, 0xa4bb, 0xa4bc, 0xa4bd, 0xa4be, 0xa4bf, 0xa4c0, 0xa4c1, 0xa4c2, 0xa4c3, 0xa4c4, 0xa4c5, 0xa4c6
};

void BM_collation_element_lookup_277(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 0, cps_277 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 1, cps_277 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 2, cps_277 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 3, cps_277 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 4, cps_277 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 5, cps_277 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 6, cps_277 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 7, cps_277 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 8, cps_277 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 9, cps_277 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 10, cps_277 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 11, cps_277 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 12, cps_277 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 13, cps_277 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 14, cps_277 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 15, cps_277 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 16, cps_277 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 17, cps_277 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 18, cps_277 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 19, cps_277 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 20, cps_277 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 21, cps_277 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 22, cps_277 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 23, cps_277 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 24, cps_277 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 25, cps_277 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 26, cps_277 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 27, cps_277 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 28, cps_277 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 29, cps_277 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 30, cps_277 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 31, cps_277 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 32, cps_277 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 33, cps_277 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 34, cps_277 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 35, cps_277 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 36, cps_277 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 37, cps_277 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 38, cps_277 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 39, cps_277 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 40, cps_277 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 41, cps_277 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 42, cps_277 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 43, cps_277 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 44, cps_277 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 45, cps_277 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 46, cps_277 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 47, cps_277 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 48, cps_277 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_277 + 49, cps_277 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_277);

uint32_t cps_278[] = {
0xa4d0, 0xa4d1, 0xa4d2, 0xa4d3, 0xa4d4, 0xa4d5, 0xa4d6, 0xa4d7, 0xa4d8, 0xa4d9, 0xa4da, 0xa4db, 0xa4dc, 0xa4dd, 0xa4de, 0xa4df, 0xa4e0, 0xa4e1, 0xa4e2, 0xa4e3, 0xa4e4, 0xa4e5, 0xa4e6, 0xa4e7, 0xa4e8, 0xa4e9, 0xa4ea, 0xa4eb, 0xa4ec, 0xa4ed, 0xa4ee, 0xa4ef, 0xa4f0, 0xa4f1, 0xa4f2, 0xa4f3, 0xa4f4, 0xa4f5, 0xa4f6, 0xa4f7, 0xa4f8, 0xa4f9, 0xa4fa, 0xa4fb, 0xa4fc, 0xa4fd, 0xa4fe, 0xa4ff, 0xa500, 0xa501
};

void BM_collation_element_lookup_278(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 0, cps_278 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 1, cps_278 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 2, cps_278 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 3, cps_278 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 4, cps_278 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 5, cps_278 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 6, cps_278 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 7, cps_278 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 8, cps_278 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 9, cps_278 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 10, cps_278 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 11, cps_278 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 12, cps_278 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 13, cps_278 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 14, cps_278 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 15, cps_278 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 16, cps_278 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 17, cps_278 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 18, cps_278 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 19, cps_278 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 20, cps_278 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 21, cps_278 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 22, cps_278 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 23, cps_278 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 24, cps_278 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 25, cps_278 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 26, cps_278 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 27, cps_278 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 28, cps_278 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 29, cps_278 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 30, cps_278 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 31, cps_278 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 32, cps_278 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 33, cps_278 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 34, cps_278 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 35, cps_278 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 36, cps_278 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 37, cps_278 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 38, cps_278 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 39, cps_278 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 40, cps_278 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 41, cps_278 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 42, cps_278 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 43, cps_278 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 44, cps_278 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 45, cps_278 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 46, cps_278 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 47, cps_278 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 48, cps_278 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_278 + 49, cps_278 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_278);

uint32_t cps_279[] = {
0xa502, 0xa503, 0xa504, 0xa505, 0xa506, 0xa507, 0xa508, 0xa509, 0xa50a, 0xa50b, 0xa50c, 0xa50d, 0xa50e, 0xa50f, 0xa510, 0xa511, 0xa512, 0xa513, 0xa514, 0xa515, 0xa516, 0xa517, 0xa518, 0xa519, 0xa51a, 0xa51b, 0xa51c, 0xa51d, 0xa51e, 0xa51f, 0xa520, 0xa521, 0xa522, 0xa523, 0xa524, 0xa525, 0xa526, 0xa527, 0xa528, 0xa529, 0xa52a, 0xa52b, 0xa52c, 0xa52d, 0xa52e, 0xa52f, 0xa530, 0xa531, 0xa532, 0xa533
};

void BM_collation_element_lookup_279(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 0, cps_279 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 1, cps_279 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 2, cps_279 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 3, cps_279 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 4, cps_279 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 5, cps_279 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 6, cps_279 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 7, cps_279 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 8, cps_279 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 9, cps_279 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 10, cps_279 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 11, cps_279 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 12, cps_279 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 13, cps_279 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 14, cps_279 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 15, cps_279 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 16, cps_279 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 17, cps_279 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 18, cps_279 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 19, cps_279 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 20, cps_279 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 21, cps_279 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 22, cps_279 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 23, cps_279 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 24, cps_279 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 25, cps_279 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 26, cps_279 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 27, cps_279 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 28, cps_279 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 29, cps_279 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 30, cps_279 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 31, cps_279 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 32, cps_279 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 33, cps_279 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 34, cps_279 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 35, cps_279 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 36, cps_279 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 37, cps_279 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 38, cps_279 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 39, cps_279 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 40, cps_279 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 41, cps_279 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 42, cps_279 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 43, cps_279 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 44, cps_279 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 45, cps_279 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 46, cps_279 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 47, cps_279 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 48, cps_279 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_279 + 49, cps_279 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_279);

uint32_t cps_280[] = {
0xa534, 0xa535, 0xa536, 0xa537, 0xa538, 0xa539, 0xa53a, 0xa53b, 0xa53c, 0xa53d, 0xa53e, 0xa53f, 0xa540, 0xa541, 0xa542, 0xa543, 0xa544, 0xa545, 0xa546, 0xa547, 0xa548, 0xa549, 0xa54a, 0xa54b, 0xa54c, 0xa54d, 0xa54e, 0xa54f, 0xa550, 0xa551, 0xa552, 0xa553, 0xa554, 0xa555, 0xa556, 0xa557, 0xa558, 0xa559, 0xa55a, 0xa55b, 0xa55c, 0xa55d, 0xa55e, 0xa55f, 0xa560, 0xa561, 0xa562, 0xa563, 0xa564, 0xa565
};

void BM_collation_element_lookup_280(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 0, cps_280 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 1, cps_280 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 2, cps_280 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 3, cps_280 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 4, cps_280 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 5, cps_280 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 6, cps_280 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 7, cps_280 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 8, cps_280 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 9, cps_280 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 10, cps_280 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 11, cps_280 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 12, cps_280 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 13, cps_280 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 14, cps_280 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 15, cps_280 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 16, cps_280 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 17, cps_280 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 18, cps_280 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 19, cps_280 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 20, cps_280 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 21, cps_280 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 22, cps_280 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 23, cps_280 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 24, cps_280 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 25, cps_280 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 26, cps_280 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 27, cps_280 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 28, cps_280 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 29, cps_280 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 30, cps_280 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 31, cps_280 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 32, cps_280 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 33, cps_280 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 34, cps_280 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 35, cps_280 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 36, cps_280 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 37, cps_280 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 38, cps_280 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 39, cps_280 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 40, cps_280 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 41, cps_280 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 42, cps_280 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 43, cps_280 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 44, cps_280 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 45, cps_280 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 46, cps_280 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 47, cps_280 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 48, cps_280 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_280 + 49, cps_280 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_280);

uint32_t cps_281[] = {
0xa566, 0xa567, 0xa568, 0xa569, 0xa56a, 0xa56b, 0xa56c, 0xa56d, 0xa56e, 0xa56f, 0xa570, 0xa571, 0xa572, 0xa573, 0xa574, 0xa575, 0xa576, 0xa577, 0xa578, 0xa579, 0xa57a, 0xa57b, 0xa57c, 0xa57d, 0xa57e, 0xa57f, 0xa580, 0xa581, 0xa582, 0xa583, 0xa584, 0xa585, 0xa586, 0xa587, 0xa588, 0xa589, 0xa58a, 0xa58b, 0xa58c, 0xa58d, 0xa58e, 0xa58f, 0xa590, 0xa591, 0xa592, 0xa593, 0xa594, 0xa595, 0xa596, 0xa597
};

void BM_collation_element_lookup_281(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 0, cps_281 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 1, cps_281 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 2, cps_281 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 3, cps_281 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 4, cps_281 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 5, cps_281 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 6, cps_281 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 7, cps_281 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 8, cps_281 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 9, cps_281 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 10, cps_281 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 11, cps_281 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 12, cps_281 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 13, cps_281 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 14, cps_281 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 15, cps_281 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 16, cps_281 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 17, cps_281 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 18, cps_281 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 19, cps_281 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 20, cps_281 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 21, cps_281 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 22, cps_281 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 23, cps_281 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 24, cps_281 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 25, cps_281 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 26, cps_281 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 27, cps_281 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 28, cps_281 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 29, cps_281 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 30, cps_281 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 31, cps_281 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 32, cps_281 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 33, cps_281 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 34, cps_281 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 35, cps_281 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 36, cps_281 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 37, cps_281 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 38, cps_281 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 39, cps_281 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 40, cps_281 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 41, cps_281 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 42, cps_281 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 43, cps_281 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 44, cps_281 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 45, cps_281 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 46, cps_281 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 47, cps_281 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 48, cps_281 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_281 + 49, cps_281 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_281);

uint32_t cps_282[] = {
0xa598, 0xa599, 0xa59a, 0xa59b, 0xa59c, 0xa59d, 0xa59e, 0xa59f, 0xa5a0, 0xa5a1, 0xa5a2, 0xa5a3, 0xa5a4, 0xa5a5, 0xa5a6, 0xa5a7, 0xa5a8, 0xa5a9, 0xa5aa, 0xa5ab, 0xa5ac, 0xa5ad, 0xa5ae, 0xa5af, 0xa5b0, 0xa5b1, 0xa5b2, 0xa5b3, 0xa5b4, 0xa5b5, 0xa5b6, 0xa5b7, 0xa5b8, 0xa5b9, 0xa5ba, 0xa5bb, 0xa5bc, 0xa5bd, 0xa5be, 0xa5bf, 0xa5c0, 0xa5c1, 0xa5c2, 0xa5c3, 0xa5c4, 0xa5c5, 0xa5c6, 0xa5c7, 0xa5c8, 0xa5c9
};

void BM_collation_element_lookup_282(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 0, cps_282 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 1, cps_282 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 2, cps_282 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 3, cps_282 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 4, cps_282 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 5, cps_282 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 6, cps_282 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 7, cps_282 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 8, cps_282 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 9, cps_282 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 10, cps_282 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 11, cps_282 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 12, cps_282 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 13, cps_282 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 14, cps_282 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 15, cps_282 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 16, cps_282 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 17, cps_282 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 18, cps_282 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 19, cps_282 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 20, cps_282 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 21, cps_282 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 22, cps_282 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 23, cps_282 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 24, cps_282 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 25, cps_282 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 26, cps_282 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 27, cps_282 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 28, cps_282 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 29, cps_282 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 30, cps_282 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 31, cps_282 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 32, cps_282 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 33, cps_282 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 34, cps_282 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 35, cps_282 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 36, cps_282 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 37, cps_282 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 38, cps_282 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 39, cps_282 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 40, cps_282 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 41, cps_282 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 42, cps_282 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 43, cps_282 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 44, cps_282 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 45, cps_282 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 46, cps_282 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 47, cps_282 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 48, cps_282 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_282 + 49, cps_282 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_282);

uint32_t cps_283[] = {
0xa5ca, 0xa5cb, 0xa5cc, 0xa5cd, 0xa5ce, 0xa5cf, 0xa5d0, 0xa5d1, 0xa5d2, 0xa5d3, 0xa5d4, 0xa5d5, 0xa5d6, 0xa5d7, 0xa5d8, 0xa5d9, 0xa5da, 0xa5db, 0xa5dc, 0xa5dd, 0xa5de, 0xa5df, 0xa5e0, 0xa5e1, 0xa5e2, 0xa5e3, 0xa5e4, 0xa5e5, 0xa5e6, 0xa5e7, 0xa5e8, 0xa5e9, 0xa5ea, 0xa5eb, 0xa5ec, 0xa5ed, 0xa5ee, 0xa5ef, 0xa5f0, 0xa5f1, 0xa5f2, 0xa5f3, 0xa5f4, 0xa5f5, 0xa5f6, 0xa5f7, 0xa5f8, 0xa5f9, 0xa5fa, 0xa5fb
};

void BM_collation_element_lookup_283(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 0, cps_283 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 1, cps_283 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 2, cps_283 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 3, cps_283 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 4, cps_283 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 5, cps_283 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 6, cps_283 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 7, cps_283 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 8, cps_283 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 9, cps_283 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 10, cps_283 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 11, cps_283 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 12, cps_283 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 13, cps_283 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 14, cps_283 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 15, cps_283 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 16, cps_283 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 17, cps_283 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 18, cps_283 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 19, cps_283 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 20, cps_283 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 21, cps_283 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 22, cps_283 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 23, cps_283 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 24, cps_283 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 25, cps_283 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 26, cps_283 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 27, cps_283 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 28, cps_283 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 29, cps_283 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 30, cps_283 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 31, cps_283 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 32, cps_283 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 33, cps_283 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 34, cps_283 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 35, cps_283 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 36, cps_283 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 37, cps_283 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 38, cps_283 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 39, cps_283 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 40, cps_283 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 41, cps_283 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 42, cps_283 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 43, cps_283 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 44, cps_283 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 45, cps_283 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 46, cps_283 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 47, cps_283 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 48, cps_283 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_283 + 49, cps_283 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_283);

uint32_t cps_284[] = {
0xa5fc, 0xa5fd, 0xa5fe, 0xa5ff, 0xa600, 0xa601, 0xa602, 0xa603, 0xa604, 0xa605, 0xa606, 0xa607, 0xa608, 0xa609, 0xa60a, 0xa60b, 0xa60c, 0xa60d, 0xa60e, 0xa60f, 0xa610, 0xa611, 0xa612, 0xa613, 0xa614, 0xa615, 0xa616, 0xa617, 0xa618, 0xa619, 0xa61a, 0xa61b, 0xa61c, 0xa61d, 0xa61e, 0xa61f, 0xa620, 0xa621, 0xa622, 0xa623, 0xa624, 0xa625, 0xa626, 0xa627, 0xa628, 0xa629, 0xa62a, 0xa62b, 0xa640, 0xa641
};

void BM_collation_element_lookup_284(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 0, cps_284 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 1, cps_284 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 2, cps_284 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 3, cps_284 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 4, cps_284 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 5, cps_284 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 6, cps_284 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 7, cps_284 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 8, cps_284 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 9, cps_284 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 10, cps_284 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 11, cps_284 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 12, cps_284 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 13, cps_284 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 14, cps_284 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 15, cps_284 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 16, cps_284 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 17, cps_284 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 18, cps_284 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 19, cps_284 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 20, cps_284 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 21, cps_284 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 22, cps_284 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 23, cps_284 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 24, cps_284 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 25, cps_284 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 26, cps_284 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 27, cps_284 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 28, cps_284 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 29, cps_284 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 30, cps_284 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 31, cps_284 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 32, cps_284 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 33, cps_284 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 34, cps_284 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 35, cps_284 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 36, cps_284 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 37, cps_284 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 38, cps_284 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 39, cps_284 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 40, cps_284 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 41, cps_284 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 42, cps_284 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 43, cps_284 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 44, cps_284 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 45, cps_284 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 46, cps_284 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 47, cps_284 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 48, cps_284 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_284 + 49, cps_284 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_284);

uint32_t cps_285[] = {
0xa642, 0xa643, 0xa644, 0xa645, 0xa646, 0xa647, 0xa648, 0xa649, 0xa64a, 0xa64b, 0xa64c, 0xa64d, 0xa64e, 0xa64f, 0xa650, 0xa651, 0xa652, 0xa653, 0xa654, 0xa655, 0xa656, 0xa657, 0xa658, 0xa659, 0xa65a, 0xa65b, 0xa65c, 0xa65d, 0xa65e, 0xa65f, 0xa660, 0xa661, 0xa662, 0xa663, 0xa664, 0xa665, 0xa666, 0xa667, 0xa668, 0xa669, 0xa66a, 0xa66b, 0xa66c, 0xa66d, 0xa66e, 0xa66f, 0xa670, 0xa671, 0xa672, 0xa673
};

void BM_collation_element_lookup_285(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 0, cps_285 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 1, cps_285 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 2, cps_285 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 3, cps_285 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 4, cps_285 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 5, cps_285 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 6, cps_285 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 7, cps_285 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 8, cps_285 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 9, cps_285 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 10, cps_285 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 11, cps_285 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 12, cps_285 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 13, cps_285 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 14, cps_285 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 15, cps_285 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 16, cps_285 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 17, cps_285 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 18, cps_285 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 19, cps_285 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 20, cps_285 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 21, cps_285 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 22, cps_285 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 23, cps_285 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 24, cps_285 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 25, cps_285 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 26, cps_285 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 27, cps_285 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 28, cps_285 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 29, cps_285 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 30, cps_285 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 31, cps_285 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 32, cps_285 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 33, cps_285 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 34, cps_285 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 35, cps_285 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 36, cps_285 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 37, cps_285 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 38, cps_285 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 39, cps_285 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 40, cps_285 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 41, cps_285 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 42, cps_285 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 43, cps_285 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 44, cps_285 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 45, cps_285 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 46, cps_285 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 47, cps_285 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 48, cps_285 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_285 + 49, cps_285 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_285);

uint32_t cps_286[] = {
0xa674, 0xa675, 0xa676, 0xa677, 0xa678, 0xa679, 0xa67a, 0xa67b, 0xa67c, 0xa67d, 0xa67e, 0xa67f, 0xa680, 0xa681, 0xa682, 0xa683, 0xa684, 0xa685, 0xa686, 0xa687, 0xa688, 0xa689, 0xa68a, 0xa68b, 0xa68c, 0xa68d, 0xa68e, 0xa68f, 0xa690, 0xa691, 0xa692, 0xa693, 0xa694, 0xa695, 0xa696, 0xa697, 0xa698, 0xa699, 0xa69a, 0xa69b, 0xa69c, 0xa69d, 0xa69e, 0xa69f, 0xa6a0, 0xa6a1, 0xa6a2, 0xa6a3, 0xa6a4, 0xa6a5
};

void BM_collation_element_lookup_286(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 0, cps_286 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 1, cps_286 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 2, cps_286 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 3, cps_286 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 4, cps_286 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 5, cps_286 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 6, cps_286 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 7, cps_286 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 8, cps_286 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 9, cps_286 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 10, cps_286 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 11, cps_286 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 12, cps_286 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 13, cps_286 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 14, cps_286 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 15, cps_286 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 16, cps_286 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 17, cps_286 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 18, cps_286 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 19, cps_286 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 20, cps_286 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 21, cps_286 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 22, cps_286 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 23, cps_286 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 24, cps_286 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 25, cps_286 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 26, cps_286 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 27, cps_286 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 28, cps_286 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 29, cps_286 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 30, cps_286 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 31, cps_286 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 32, cps_286 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 33, cps_286 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 34, cps_286 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 35, cps_286 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 36, cps_286 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 37, cps_286 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 38, cps_286 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 39, cps_286 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 40, cps_286 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 41, cps_286 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 42, cps_286 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 43, cps_286 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 44, cps_286 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 45, cps_286 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 46, cps_286 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 47, cps_286 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 48, cps_286 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_286 + 49, cps_286 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_286);

uint32_t cps_287[] = {
0xa6a6, 0xa6a7, 0xa6a8, 0xa6a9, 0xa6aa, 0xa6ab, 0xa6ac, 0xa6ad, 0xa6ae, 0xa6af, 0xa6b0, 0xa6b1, 0xa6b2, 0xa6b3, 0xa6b4, 0xa6b5, 0xa6b6, 0xa6b7, 0xa6b8, 0xa6b9, 0xa6ba, 0xa6bb, 0xa6bc, 0xa6bd, 0xa6be, 0xa6bf, 0xa6c0, 0xa6c1, 0xa6c2, 0xa6c3, 0xa6c4, 0xa6c5, 0xa6c6, 0xa6c7, 0xa6c8, 0xa6c9, 0xa6ca, 0xa6cb, 0xa6cc, 0xa6cd, 0xa6ce, 0xa6cf, 0xa6d0, 0xa6d1, 0xa6d2, 0xa6d3, 0xa6d4, 0xa6d5, 0xa6d6, 0xa6d7
};

void BM_collation_element_lookup_287(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 0, cps_287 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 1, cps_287 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 2, cps_287 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 3, cps_287 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 4, cps_287 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 5, cps_287 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 6, cps_287 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 7, cps_287 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 8, cps_287 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 9, cps_287 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 10, cps_287 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 11, cps_287 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 12, cps_287 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 13, cps_287 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 14, cps_287 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 15, cps_287 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 16, cps_287 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 17, cps_287 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 18, cps_287 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 19, cps_287 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 20, cps_287 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 21, cps_287 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 22, cps_287 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 23, cps_287 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 24, cps_287 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 25, cps_287 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 26, cps_287 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 27, cps_287 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 28, cps_287 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 29, cps_287 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 30, cps_287 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 31, cps_287 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 32, cps_287 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 33, cps_287 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 34, cps_287 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 35, cps_287 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 36, cps_287 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 37, cps_287 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 38, cps_287 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 39, cps_287 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 40, cps_287 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 41, cps_287 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 42, cps_287 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 43, cps_287 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 44, cps_287 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 45, cps_287 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 46, cps_287 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 47, cps_287 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 48, cps_287 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_287 + 49, cps_287 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_287);

uint32_t cps_288[] = {
0xa6d8, 0xa6d9, 0xa6da, 0xa6db, 0xa6dc, 0xa6dd, 0xa6de, 0xa6df, 0xa6e0, 0xa6e1, 0xa6e2, 0xa6e3, 0xa6e4, 0xa6e5, 0xa6e6, 0xa6e7, 0xa6e8, 0xa6e9, 0xa6ea, 0xa6eb, 0xa6ec, 0xa6ed, 0xa6ee, 0xa6ef, 0xa6f0, 0xa6f1, 0xa6f2, 0xa6f3, 0xa6f4, 0xa6f5, 0xa6f6, 0xa6f7, 0xa700, 0xa701, 0xa702, 0xa703, 0xa704, 0xa705, 0xa706, 0xa707, 0xa708, 0xa709, 0xa70a, 0xa70b, 0xa70c, 0xa70d, 0xa70e, 0xa70f, 0xa710, 0xa711
};

void BM_collation_element_lookup_288(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 0, cps_288 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 1, cps_288 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 2, cps_288 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 3, cps_288 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 4, cps_288 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 5, cps_288 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 6, cps_288 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 7, cps_288 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 8, cps_288 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 9, cps_288 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 10, cps_288 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 11, cps_288 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 12, cps_288 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 13, cps_288 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 14, cps_288 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 15, cps_288 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 16, cps_288 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 17, cps_288 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 18, cps_288 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 19, cps_288 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 20, cps_288 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 21, cps_288 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 22, cps_288 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 23, cps_288 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 24, cps_288 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 25, cps_288 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 26, cps_288 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 27, cps_288 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 28, cps_288 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 29, cps_288 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 30, cps_288 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 31, cps_288 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 32, cps_288 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 33, cps_288 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 34, cps_288 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 35, cps_288 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 36, cps_288 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 37, cps_288 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 38, cps_288 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 39, cps_288 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 40, cps_288 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 41, cps_288 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 42, cps_288 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 43, cps_288 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 44, cps_288 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 45, cps_288 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 46, cps_288 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 47, cps_288 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 48, cps_288 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_288 + 49, cps_288 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_288);

uint32_t cps_289[] = {
0xa712, 0xa713, 0xa714, 0xa715, 0xa716, 0xa717, 0xa718, 0xa719, 0xa71a, 0xa71b, 0xa71c, 0xa71d, 0xa71e, 0xa71f, 0xa720, 0xa721, 0xa722, 0xa723, 0xa724, 0xa725, 0xa726, 0xa727, 0xa728, 0xa729, 0xa72a, 0xa72b, 0xa72c, 0xa72d, 0xa72e, 0xa72f, 0xa730, 0xa731, 0xa732, 0xa733, 0xa734, 0xa735, 0xa736, 0xa737, 0xa738, 0xa739, 0xa73a, 0xa73b, 0xa73c, 0xa73d, 0xa73e, 0xa73f, 0xa740, 0xa741, 0xa742, 0xa743
};

void BM_collation_element_lookup_289(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 0, cps_289 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 1, cps_289 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 2, cps_289 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 3, cps_289 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 4, cps_289 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 5, cps_289 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 6, cps_289 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 7, cps_289 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 8, cps_289 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 9, cps_289 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 10, cps_289 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 11, cps_289 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 12, cps_289 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 13, cps_289 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 14, cps_289 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 15, cps_289 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 16, cps_289 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 17, cps_289 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 18, cps_289 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 19, cps_289 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 20, cps_289 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 21, cps_289 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 22, cps_289 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 23, cps_289 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 24, cps_289 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 25, cps_289 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 26, cps_289 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 27, cps_289 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 28, cps_289 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 29, cps_289 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 30, cps_289 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 31, cps_289 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 32, cps_289 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 33, cps_289 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 34, cps_289 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 35, cps_289 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 36, cps_289 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 37, cps_289 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 38, cps_289 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 39, cps_289 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 40, cps_289 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 41, cps_289 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 42, cps_289 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 43, cps_289 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 44, cps_289 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 45, cps_289 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 46, cps_289 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 47, cps_289 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 48, cps_289 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_289 + 49, cps_289 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_289);

uint32_t cps_290[] = {
0xa744, 0xa745, 0xa746, 0xa747, 0xa748, 0xa749, 0xa74a, 0xa74b, 0xa74c, 0xa74d, 0xa74e, 0xa74f, 0xa750, 0xa751, 0xa752, 0xa753, 0xa754, 0xa755, 0xa756, 0xa757, 0xa758, 0xa759, 0xa75a, 0xa75b, 0xa75c, 0xa75d, 0xa75e, 0xa75f, 0xa760, 0xa761, 0xa762, 0xa763, 0xa764, 0xa765, 0xa766, 0xa767, 0xa768, 0xa769, 0xa76a, 0xa76b, 0xa76c, 0xa76d, 0xa76e, 0xa76f, 0xa770, 0xa771, 0xa772, 0xa773, 0xa774, 0xa775
};

void BM_collation_element_lookup_290(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 0, cps_290 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 1, cps_290 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 2, cps_290 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 3, cps_290 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 4, cps_290 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 5, cps_290 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 6, cps_290 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 7, cps_290 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 8, cps_290 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 9, cps_290 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 10, cps_290 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 11, cps_290 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 12, cps_290 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 13, cps_290 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 14, cps_290 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 15, cps_290 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 16, cps_290 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 17, cps_290 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 18, cps_290 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 19, cps_290 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 20, cps_290 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 21, cps_290 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 22, cps_290 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 23, cps_290 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 24, cps_290 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 25, cps_290 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 26, cps_290 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 27, cps_290 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 28, cps_290 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 29, cps_290 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 30, cps_290 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 31, cps_290 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 32, cps_290 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 33, cps_290 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 34, cps_290 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 35, cps_290 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 36, cps_290 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 37, cps_290 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 38, cps_290 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 39, cps_290 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 40, cps_290 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 41, cps_290 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 42, cps_290 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 43, cps_290 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 44, cps_290 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 45, cps_290 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 46, cps_290 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 47, cps_290 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 48, cps_290 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_290 + 49, cps_290 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_290);

uint32_t cps_291[] = {
0xa776, 0xa777, 0xa778, 0xa779, 0xa77a, 0xa77b, 0xa77c, 0xa77d, 0xa77e, 0xa77f, 0xa780, 0xa781, 0xa782, 0xa783, 0xa784, 0xa785, 0xa786, 0xa787, 0xa788, 0xa789, 0xa78a, 0xa78b, 0xa78c, 0xa78d, 0xa78e, 0xa78f, 0xa790, 0xa791, 0xa792, 0xa793, 0xa794, 0xa795, 0xa796, 0xa797, 0xa798, 0xa799, 0xa79a, 0xa79b, 0xa79c, 0xa79d, 0xa79e, 0xa79f, 0xa7a0, 0xa7a1, 0xa7a2, 0xa7a3, 0xa7a4, 0xa7a5, 0xa7a6, 0xa7a7
};

void BM_collation_element_lookup_291(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 0, cps_291 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 1, cps_291 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 2, cps_291 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 3, cps_291 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 4, cps_291 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 5, cps_291 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 6, cps_291 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 7, cps_291 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 8, cps_291 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 9, cps_291 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 10, cps_291 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 11, cps_291 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 12, cps_291 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 13, cps_291 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 14, cps_291 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 15, cps_291 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 16, cps_291 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 17, cps_291 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 18, cps_291 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 19, cps_291 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 20, cps_291 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 21, cps_291 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 22, cps_291 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 23, cps_291 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 24, cps_291 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 25, cps_291 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 26, cps_291 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 27, cps_291 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 28, cps_291 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 29, cps_291 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 30, cps_291 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 31, cps_291 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 32, cps_291 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 33, cps_291 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 34, cps_291 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 35, cps_291 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 36, cps_291 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 37, cps_291 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 38, cps_291 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 39, cps_291 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 40, cps_291 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 41, cps_291 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 42, cps_291 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 43, cps_291 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 44, cps_291 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 45, cps_291 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 46, cps_291 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 47, cps_291 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 48, cps_291 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_291 + 49, cps_291 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_291);

uint32_t cps_292[] = {
0xa7a8, 0xa7a9, 0xa7aa, 0xa7ab, 0xa7ac, 0xa7ad, 0xa7ae, 0xa7b0, 0xa7b1, 0xa7b2, 0xa7b3, 0xa7b4, 0xa7b5, 0xa7b6, 0xa7b7, 0xa7f7, 0xa7f8, 0xa7f9, 0xa7fa, 0xa7fb, 0xa7fc, 0xa7fd, 0xa7fe, 0xa7ff, 0xa800, 0xa801, 0xa802, 0xa803, 0xa804, 0xa805, 0xa806, 0xa807, 0xa808, 0xa809, 0xa80a, 0xa80b, 0xa80c, 0xa80d, 0xa80e, 0xa80f, 0xa810, 0xa811, 0xa812, 0xa813, 0xa814, 0xa815, 0xa816, 0xa817, 0xa818, 0xa819
};

void BM_collation_element_lookup_292(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 0, cps_292 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 1, cps_292 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 2, cps_292 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 3, cps_292 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 4, cps_292 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 5, cps_292 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 6, cps_292 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 7, cps_292 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 8, cps_292 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 9, cps_292 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 10, cps_292 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 11, cps_292 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 12, cps_292 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 13, cps_292 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 14, cps_292 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 15, cps_292 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 16, cps_292 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 17, cps_292 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 18, cps_292 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 19, cps_292 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 20, cps_292 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 21, cps_292 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 22, cps_292 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 23, cps_292 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 24, cps_292 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 25, cps_292 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 26, cps_292 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 27, cps_292 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 28, cps_292 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 29, cps_292 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 30, cps_292 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 31, cps_292 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 32, cps_292 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 33, cps_292 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 34, cps_292 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 35, cps_292 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 36, cps_292 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 37, cps_292 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 38, cps_292 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 39, cps_292 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 40, cps_292 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 41, cps_292 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 42, cps_292 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 43, cps_292 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 44, cps_292 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 45, cps_292 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 46, cps_292 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 47, cps_292 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 48, cps_292 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_292 + 49, cps_292 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_292);

uint32_t cps_293[] = {
0xa81a, 0xa81b, 0xa81c, 0xa81d, 0xa81e, 0xa81f, 0xa820, 0xa821, 0xa822, 0xa823, 0xa824, 0xa825, 0xa826, 0xa827, 0xa828, 0xa829, 0xa82a, 0xa82b, 0xa830, 0xa831, 0xa832, 0xa833, 0xa834, 0xa835, 0xa836, 0xa837, 0xa838, 0xa839, 0xa840, 0xa841, 0xa842, 0xa843, 0xa844, 0xa845, 0xa846, 0xa847, 0xa848, 0xa849, 0xa84a, 0xa84b, 0xa84c, 0xa84d, 0xa84e, 0xa84f, 0xa850, 0xa851, 0xa852, 0xa853, 0xa854, 0xa855
};

void BM_collation_element_lookup_293(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 0, cps_293 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 1, cps_293 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 2, cps_293 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 3, cps_293 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 4, cps_293 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 5, cps_293 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 6, cps_293 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 7, cps_293 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 8, cps_293 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 9, cps_293 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 10, cps_293 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 11, cps_293 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 12, cps_293 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 13, cps_293 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 14, cps_293 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 15, cps_293 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 16, cps_293 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 17, cps_293 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 18, cps_293 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 19, cps_293 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 20, cps_293 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 21, cps_293 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 22, cps_293 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 23, cps_293 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 24, cps_293 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 25, cps_293 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 26, cps_293 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 27, cps_293 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 28, cps_293 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 29, cps_293 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 30, cps_293 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 31, cps_293 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 32, cps_293 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 33, cps_293 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 34, cps_293 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 35, cps_293 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 36, cps_293 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 37, cps_293 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 38, cps_293 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 39, cps_293 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 40, cps_293 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 41, cps_293 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 42, cps_293 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 43, cps_293 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 44, cps_293 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 45, cps_293 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 46, cps_293 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 47, cps_293 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 48, cps_293 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_293 + 49, cps_293 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_293);

uint32_t cps_294[] = {
0xa856, 0xa857, 0xa858, 0xa859, 0xa85a, 0xa85b, 0xa85c, 0xa85d, 0xa85e, 0xa85f, 0xa860, 0xa861, 0xa862, 0xa863, 0xa864, 0xa865, 0xa866, 0xa867, 0xa868, 0xa869, 0xa86a, 0xa86b, 0xa86c, 0xa86d, 0xa86e, 0xa86f, 0xa870, 0xa871, 0xa872, 0xa873, 0xa874, 0xa875, 0xa876, 0xa877, 0xa880, 0xa881, 0xa882, 0xa883, 0xa884, 0xa885, 0xa886, 0xa887, 0xa888, 0xa889, 0xa88a, 0xa88b, 0xa88c, 0xa88d, 0xa88e, 0xa88f
};

void BM_collation_element_lookup_294(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 0, cps_294 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 1, cps_294 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 2, cps_294 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 3, cps_294 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 4, cps_294 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 5, cps_294 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 6, cps_294 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 7, cps_294 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 8, cps_294 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 9, cps_294 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 10, cps_294 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 11, cps_294 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 12, cps_294 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 13, cps_294 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 14, cps_294 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 15, cps_294 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 16, cps_294 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 17, cps_294 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 18, cps_294 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 19, cps_294 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 20, cps_294 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 21, cps_294 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 22, cps_294 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 23, cps_294 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 24, cps_294 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 25, cps_294 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 26, cps_294 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 27, cps_294 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 28, cps_294 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 29, cps_294 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 30, cps_294 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 31, cps_294 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 32, cps_294 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 33, cps_294 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 34, cps_294 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 35, cps_294 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 36, cps_294 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 37, cps_294 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 38, cps_294 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 39, cps_294 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 40, cps_294 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 41, cps_294 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 42, cps_294 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 43, cps_294 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 44, cps_294 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 45, cps_294 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 46, cps_294 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 47, cps_294 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 48, cps_294 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_294 + 49, cps_294 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_294);

uint32_t cps_295[] = {
0xa890, 0xa891, 0xa892, 0xa893, 0xa894, 0xa895, 0xa896, 0xa897, 0xa898, 0xa899, 0xa89a, 0xa89b, 0xa89c, 0xa89d, 0xa89e, 0xa89f, 0xa8a0, 0xa8a1, 0xa8a2, 0xa8a3, 0xa8a4, 0xa8a5, 0xa8a6, 0xa8a7, 0xa8a8, 0xa8a9, 0xa8aa, 0xa8ab, 0xa8ac, 0xa8ad, 0xa8ae, 0xa8af, 0xa8b0, 0xa8b1, 0xa8b2, 0xa8b3, 0xa8b4, 0xa8b5, 0xa8b6, 0xa8b7, 0xa8b8, 0xa8b9, 0xa8ba, 0xa8bb, 0xa8bc, 0xa8bd, 0xa8be, 0xa8bf, 0xa8c0, 0xa8c1
};

void BM_collation_element_lookup_295(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 0, cps_295 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 1, cps_295 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 2, cps_295 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 3, cps_295 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 4, cps_295 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 5, cps_295 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 6, cps_295 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 7, cps_295 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 8, cps_295 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 9, cps_295 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 10, cps_295 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 11, cps_295 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 12, cps_295 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 13, cps_295 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 14, cps_295 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 15, cps_295 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 16, cps_295 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 17, cps_295 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 18, cps_295 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 19, cps_295 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 20, cps_295 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 21, cps_295 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 22, cps_295 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 23, cps_295 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 24, cps_295 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 25, cps_295 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 26, cps_295 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 27, cps_295 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 28, cps_295 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 29, cps_295 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 30, cps_295 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 31, cps_295 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 32, cps_295 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 33, cps_295 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 34, cps_295 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 35, cps_295 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 36, cps_295 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 37, cps_295 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 38, cps_295 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 39, cps_295 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 40, cps_295 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 41, cps_295 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 42, cps_295 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 43, cps_295 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 44, cps_295 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 45, cps_295 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 46, cps_295 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 47, cps_295 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 48, cps_295 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_295 + 49, cps_295 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_295);

uint32_t cps_296[] = {
0xa8c2, 0xa8c3, 0xa8c4, 0xa8c5, 0xa8ce, 0xa8cf, 0xa8d0, 0xa8d1, 0xa8d2, 0xa8d3, 0xa8d4, 0xa8d5, 0xa8d6, 0xa8d7, 0xa8d8, 0xa8d9, 0xa8e0, 0xa8e1, 0xa8e2, 0xa8e3, 0xa8e4, 0xa8e5, 0xa8e6, 0xa8e7, 0xa8e8, 0xa8e9, 0xa8ea, 0xa8eb, 0xa8ec, 0xa8ed, 0xa8ee, 0xa8ef, 0xa8f0, 0xa8f1, 0xa8f2, 0xa8f3, 0xa8f4, 0xa8f5, 0xa8f6, 0xa8f7, 0xa8f8, 0xa8f9, 0xa8fa, 0xa8fb, 0xa8fc, 0xa8fd, 0xa900, 0xa901, 0xa902, 0xa903
};

void BM_collation_element_lookup_296(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 0, cps_296 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 1, cps_296 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 2, cps_296 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 3, cps_296 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 4, cps_296 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 5, cps_296 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 6, cps_296 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 7, cps_296 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 8, cps_296 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 9, cps_296 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 10, cps_296 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 11, cps_296 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 12, cps_296 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 13, cps_296 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 14, cps_296 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 15, cps_296 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 16, cps_296 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 17, cps_296 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 18, cps_296 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 19, cps_296 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 20, cps_296 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 21, cps_296 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 22, cps_296 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 23, cps_296 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 24, cps_296 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 25, cps_296 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 26, cps_296 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 27, cps_296 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 28, cps_296 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 29, cps_296 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 30, cps_296 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 31, cps_296 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 32, cps_296 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 33, cps_296 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 34, cps_296 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 35, cps_296 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 36, cps_296 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 37, cps_296 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 38, cps_296 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 39, cps_296 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 40, cps_296 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 41, cps_296 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 42, cps_296 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 43, cps_296 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 44, cps_296 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 45, cps_296 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 46, cps_296 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 47, cps_296 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 48, cps_296 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_296 + 49, cps_296 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_296);

uint32_t cps_297[] = {
0xa904, 0xa905, 0xa906, 0xa907, 0xa908, 0xa909, 0xa90a, 0xa90b, 0xa90c, 0xa90d, 0xa90e, 0xa90f, 0xa910, 0xa911, 0xa912, 0xa913, 0xa914, 0xa915, 0xa916, 0xa917, 0xa918, 0xa919, 0xa91a, 0xa91b, 0xa91c, 0xa91d, 0xa91e, 0xa91f, 0xa920, 0xa921, 0xa922, 0xa923, 0xa924, 0xa925, 0xa926, 0xa927, 0xa928, 0xa929, 0xa92a, 0xa92b, 0xa92c, 0xa92d, 0xa92e, 0xa92f, 0xa930, 0xa931, 0xa932, 0xa933, 0xa934, 0xa935
};

void BM_collation_element_lookup_297(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 0, cps_297 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 1, cps_297 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 2, cps_297 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 3, cps_297 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 4, cps_297 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 5, cps_297 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 6, cps_297 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 7, cps_297 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 8, cps_297 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 9, cps_297 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 10, cps_297 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 11, cps_297 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 12, cps_297 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 13, cps_297 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 14, cps_297 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 15, cps_297 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 16, cps_297 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 17, cps_297 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 18, cps_297 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 19, cps_297 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 20, cps_297 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 21, cps_297 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 22, cps_297 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 23, cps_297 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 24, cps_297 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 25, cps_297 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 26, cps_297 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 27, cps_297 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 28, cps_297 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 29, cps_297 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 30, cps_297 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 31, cps_297 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 32, cps_297 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 33, cps_297 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 34, cps_297 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 35, cps_297 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 36, cps_297 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 37, cps_297 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 38, cps_297 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 39, cps_297 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 40, cps_297 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 41, cps_297 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 42, cps_297 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 43, cps_297 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 44, cps_297 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 45, cps_297 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 46, cps_297 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 47, cps_297 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 48, cps_297 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_297 + 49, cps_297 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_297);

uint32_t cps_298[] = {
0xa936, 0xa937, 0xa938, 0xa939, 0xa93a, 0xa93b, 0xa93c, 0xa93d, 0xa93e, 0xa93f, 0xa940, 0xa941, 0xa942, 0xa943, 0xa944, 0xa945, 0xa946, 0xa947, 0xa948, 0xa949, 0xa94a, 0xa94b, 0xa94c, 0xa94d, 0xa94e, 0xa94f, 0xa950, 0xa951, 0xa952, 0xa953, 0xa95f, 0xa960, 0xa961, 0xa962, 0xa963, 0xa964, 0xa965, 0xa966, 0xa967, 0xa968, 0xa969, 0xa96a, 0xa96b, 0xa96c, 0xa96d, 0xa96e, 0xa96f, 0xa970, 0xa971, 0xa972
};

void BM_collation_element_lookup_298(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 0, cps_298 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 1, cps_298 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 2, cps_298 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 3, cps_298 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 4, cps_298 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 5, cps_298 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 6, cps_298 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 7, cps_298 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 8, cps_298 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 9, cps_298 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 10, cps_298 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 11, cps_298 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 12, cps_298 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 13, cps_298 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 14, cps_298 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 15, cps_298 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 16, cps_298 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 17, cps_298 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 18, cps_298 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 19, cps_298 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 20, cps_298 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 21, cps_298 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 22, cps_298 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 23, cps_298 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 24, cps_298 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 25, cps_298 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 26, cps_298 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 27, cps_298 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 28, cps_298 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 29, cps_298 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 30, cps_298 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 31, cps_298 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 32, cps_298 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 33, cps_298 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 34, cps_298 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 35, cps_298 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 36, cps_298 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 37, cps_298 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 38, cps_298 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 39, cps_298 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 40, cps_298 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 41, cps_298 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 42, cps_298 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 43, cps_298 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 44, cps_298 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 45, cps_298 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 46, cps_298 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 47, cps_298 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 48, cps_298 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_298 + 49, cps_298 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_298);

uint32_t cps_299[] = {
0xa973, 0xa974, 0xa975, 0xa976, 0xa977, 0xa978, 0xa979, 0xa97a, 0xa97b, 0xa97c, 0xa980, 0xa981, 0xa982, 0xa983, 0xa984, 0xa985, 0xa986, 0xa987, 0xa988, 0xa989, 0xa98a, 0xa98b, 0xa98c, 0xa98d, 0xa98e, 0xa98f, 0xa990, 0xa991, 0xa992, 0xa993, 0xa994, 0xa995, 0xa996, 0xa997, 0xa998, 0xa999, 0xa99a, 0xa99b, 0xa99c, 0xa99d, 0xa99e, 0xa99f, 0xa9a0, 0xa9a1, 0xa9a2, 0xa9a3, 0xa9a4, 0xa9a5, 0xa9a6, 0xa9a7
};

void BM_collation_element_lookup_299(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 0, cps_299 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 1, cps_299 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 2, cps_299 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 3, cps_299 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 4, cps_299 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 5, cps_299 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 6, cps_299 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 7, cps_299 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 8, cps_299 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 9, cps_299 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 10, cps_299 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 11, cps_299 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 12, cps_299 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 13, cps_299 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 14, cps_299 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 15, cps_299 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 16, cps_299 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 17, cps_299 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 18, cps_299 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 19, cps_299 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 20, cps_299 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 21, cps_299 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 22, cps_299 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 23, cps_299 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 24, cps_299 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 25, cps_299 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 26, cps_299 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 27, cps_299 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 28, cps_299 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 29, cps_299 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 30, cps_299 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 31, cps_299 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 32, cps_299 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 33, cps_299 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 34, cps_299 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 35, cps_299 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 36, cps_299 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 37, cps_299 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 38, cps_299 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 39, cps_299 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 40, cps_299 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 41, cps_299 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 42, cps_299 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 43, cps_299 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 44, cps_299 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 45, cps_299 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 46, cps_299 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 47, cps_299 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 48, cps_299 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_299 + 49, cps_299 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_299);



BENCHMARK_MAIN()
