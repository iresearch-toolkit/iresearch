// Copyright (C) 2020 T. Zachary Laine
//
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

// Warning! This file is autogenerated.
#include <boost/text/collate.hpp>
#include <boost/text/collation_table.hpp>

#include <benchmark/benchmark.h>

boost::text::detail::collation_trie_t const & trie()
{
    static auto const retval = boost::text::detail::make_default_trie();
    return retval;
}

boost::text::collation_table const & table()
{
    static auto const retval = boost::text::default_collation_table();
    return retval;
}

uint32_t cps_400[] = {
0x11154, 0x11155, 0x11156, 0x11157, 0x11158, 0x11159, 0x1115a, 0x1115b, 0x1115c, 0x1115d, 0x1115e, 0x1115f, 0x11160, 0x11161, 0x11162, 0x11163, 0x11164, 0x11165, 0x11166, 0x11167, 0x11168, 0x11169, 0x1116a, 0x1116b, 0x1116c, 0x1116d, 0x1116e, 0x1116f, 0x11170, 0x11171, 0x11172, 0x11173, 0x11174, 0x11175, 0x11176, 0x11180, 0x11181, 0x11182, 0x11183, 0x11184, 0x11185, 0x11186, 0x11187, 0x11188, 0x11189, 0x1118a, 0x1118b, 0x1118c, 0x1118d, 0x1118e
};

void BM_collation_element_lookup_400(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 0, cps_400 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 1, cps_400 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 2, cps_400 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 3, cps_400 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 4, cps_400 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 5, cps_400 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 6, cps_400 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 7, cps_400 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 8, cps_400 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 9, cps_400 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 10, cps_400 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 11, cps_400 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 12, cps_400 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 13, cps_400 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 14, cps_400 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 15, cps_400 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 16, cps_400 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 17, cps_400 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 18, cps_400 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 19, cps_400 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 20, cps_400 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 21, cps_400 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 22, cps_400 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 23, cps_400 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 24, cps_400 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 25, cps_400 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 26, cps_400 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 27, cps_400 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 28, cps_400 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 29, cps_400 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 30, cps_400 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 31, cps_400 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 32, cps_400 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 33, cps_400 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 34, cps_400 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 35, cps_400 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 36, cps_400 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 37, cps_400 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 38, cps_400 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 39, cps_400 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 40, cps_400 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 41, cps_400 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 42, cps_400 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 43, cps_400 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 44, cps_400 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 45, cps_400 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 46, cps_400 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 47, cps_400 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 48, cps_400 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_400 + 49, cps_400 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_400);

uint32_t cps_401[] = {
0x1118f, 0x11190, 0x11191, 0x11192, 0x11193, 0x11194, 0x11195, 0x11196, 0x11197, 0x11198, 0x11199, 0x1119a, 0x1119b, 0x1119c, 0x1119d, 0x1119e, 0x1119f, 0x111a0, 0x111a1, 0x111a2, 0x111a3, 0x111a4, 0x111a5, 0x111a6, 0x111a7, 0x111a8, 0x111a9, 0x111aa, 0x111ab, 0x111ac, 0x111ad, 0x111ae, 0x111af, 0x111b0, 0x111b1, 0x111b2, 0x111b3, 0x111b4, 0x111b5, 0x111b6, 0x111b7, 0x111b8, 0x111b9, 0x111ba, 0x111bb, 0x111bc, 0x111bd, 0x111be, 0x111bf, 0x111c0
};

void BM_collation_element_lookup_401(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 0, cps_401 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 1, cps_401 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 2, cps_401 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 3, cps_401 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 4, cps_401 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 5, cps_401 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 6, cps_401 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 7, cps_401 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 8, cps_401 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 9, cps_401 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 10, cps_401 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 11, cps_401 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 12, cps_401 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 13, cps_401 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 14, cps_401 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 15, cps_401 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 16, cps_401 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 17, cps_401 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 18, cps_401 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 19, cps_401 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 20, cps_401 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 21, cps_401 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 22, cps_401 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 23, cps_401 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 24, cps_401 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 25, cps_401 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 26, cps_401 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 27, cps_401 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 28, cps_401 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 29, cps_401 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 30, cps_401 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 31, cps_401 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 32, cps_401 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 33, cps_401 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 34, cps_401 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 35, cps_401 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 36, cps_401 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 37, cps_401 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 38, cps_401 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 39, cps_401 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 40, cps_401 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 41, cps_401 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 42, cps_401 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 43, cps_401 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 44, cps_401 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 45, cps_401 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 46, cps_401 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 47, cps_401 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 48, cps_401 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_401 + 49, cps_401 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_401);

uint32_t cps_402[] = {
0x111c1, 0x111c2, 0x111c3, 0x111c4, 0x111c5, 0x111c6, 0x111c7, 0x111c8, 0x111c9, 0x111ca, 0x111cb, 0x111cc, 0x111cd, 0x111d0, 0x111d1, 0x111d2, 0x111d3, 0x111d4, 0x111d5, 0x111d6, 0x111d7, 0x111d8, 0x111d9, 0x111da, 0x111db, 0x111dc, 0x111dd, 0x111de, 0x111df, 0x111e1, 0x111e2, 0x111e3, 0x111e4, 0x111e5, 0x111e6, 0x111e7, 0x111e8, 0x111e9, 0x111ea, 0x111eb, 0x111ec, 0x111ed, 0x111ee, 0x111ef, 0x111f0, 0x111f1, 0x111f2, 0x111f3, 0x111f4, 0x11200
};

void BM_collation_element_lookup_402(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 0, cps_402 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 1, cps_402 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 2, cps_402 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 3, cps_402 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 4, cps_402 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 5, cps_402 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 6, cps_402 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 7, cps_402 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 8, cps_402 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 9, cps_402 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 10, cps_402 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 11, cps_402 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 12, cps_402 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 13, cps_402 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 14, cps_402 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 15, cps_402 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 16, cps_402 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 17, cps_402 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 18, cps_402 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 19, cps_402 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 20, cps_402 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 21, cps_402 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 22, cps_402 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 23, cps_402 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 24, cps_402 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 25, cps_402 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 26, cps_402 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 27, cps_402 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 28, cps_402 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 29, cps_402 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 30, cps_402 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 31, cps_402 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 32, cps_402 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 33, cps_402 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 34, cps_402 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 35, cps_402 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 36, cps_402 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 37, cps_402 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 38, cps_402 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 39, cps_402 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 40, cps_402 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 41, cps_402 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 42, cps_402 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 43, cps_402 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 44, cps_402 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 45, cps_402 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 46, cps_402 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 47, cps_402 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 48, cps_402 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_402 + 49, cps_402 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_402);

uint32_t cps_403[] = {
0x11201, 0x11202, 0x11203, 0x11204, 0x11205, 0x11206, 0x11207, 0x11208, 0x11209, 0x1120a, 0x1120b, 0x1120c, 0x1120d, 0x1120e, 0x1120f, 0x11210, 0x11211, 0x11213, 0x11214, 0x11215, 0x11216, 0x11217, 0x11218, 0x11219, 0x1121a, 0x1121b, 0x1121c, 0x1121d, 0x1121e, 0x1121f, 0x11220, 0x11221, 0x11222, 0x11223, 0x11224, 0x11225, 0x11226, 0x11227, 0x11228, 0x11229, 0x1122a, 0x1122b, 0x1122c, 0x1122d, 0x1122e, 0x1122f, 0x11230, 0x11231, 0x11232, 0x11233
};

void BM_collation_element_lookup_403(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 0, cps_403 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 1, cps_403 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 2, cps_403 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 3, cps_403 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 4, cps_403 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 5, cps_403 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 6, cps_403 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 7, cps_403 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 8, cps_403 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 9, cps_403 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 10, cps_403 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 11, cps_403 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 12, cps_403 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 13, cps_403 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 14, cps_403 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 15, cps_403 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 16, cps_403 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 17, cps_403 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 18, cps_403 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 19, cps_403 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 20, cps_403 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 21, cps_403 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 22, cps_403 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 23, cps_403 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 24, cps_403 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 25, cps_403 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 26, cps_403 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 27, cps_403 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 28, cps_403 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 29, cps_403 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 30, cps_403 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 31, cps_403 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 32, cps_403 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 33, cps_403 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 34, cps_403 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 35, cps_403 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 36, cps_403 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 37, cps_403 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 38, cps_403 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 39, cps_403 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 40, cps_403 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 41, cps_403 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 42, cps_403 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 43, cps_403 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 44, cps_403 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 45, cps_403 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 46, cps_403 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 47, cps_403 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 48, cps_403 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_403 + 49, cps_403 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_403);

uint32_t cps_404[] = {
0x11234, 0x11235, 0x11236, 0x11237, 0x11238, 0x11239, 0x1123a, 0x1123b, 0x1123c, 0x1123d, 0x1123e, 0x11280, 0x11281, 0x11282, 0x11283, 0x11284, 0x11285, 0x11286, 0x11288, 0x1128a, 0x1128b, 0x1128c, 0x1128d, 0x1128f, 0x11290, 0x11291, 0x11292, 0x11293, 0x11294, 0x11295, 0x11296, 0x11297, 0x11298, 0x11299, 0x1129a, 0x1129b, 0x1129c, 0x1129d, 0x1129f, 0x112a0, 0x112a1, 0x112a2, 0x112a3, 0x112a4, 0x112a5, 0x112a6, 0x112a7, 0x112a8, 0x112a9, 0x112b0
};

void BM_collation_element_lookup_404(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 0, cps_404 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 1, cps_404 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 2, cps_404 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 3, cps_404 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 4, cps_404 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 5, cps_404 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 6, cps_404 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 7, cps_404 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 8, cps_404 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 9, cps_404 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 10, cps_404 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 11, cps_404 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 12, cps_404 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 13, cps_404 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 14, cps_404 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 15, cps_404 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 16, cps_404 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 17, cps_404 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 18, cps_404 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 19, cps_404 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 20, cps_404 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 21, cps_404 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 22, cps_404 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 23, cps_404 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 24, cps_404 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 25, cps_404 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 26, cps_404 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 27, cps_404 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 28, cps_404 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 29, cps_404 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 30, cps_404 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 31, cps_404 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 32, cps_404 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 33, cps_404 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 34, cps_404 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 35, cps_404 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 36, cps_404 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 37, cps_404 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 38, cps_404 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 39, cps_404 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 40, cps_404 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 41, cps_404 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 42, cps_404 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 43, cps_404 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 44, cps_404 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 45, cps_404 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 46, cps_404 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 47, cps_404 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 48, cps_404 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_404 + 49, cps_404 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_404);

uint32_t cps_405[] = {
0x112b1, 0x112b2, 0x112b3, 0x112b4, 0x112b5, 0x112b6, 0x112b7, 0x112b8, 0x112b9, 0x112ba, 0x112bb, 0x112bc, 0x112bd, 0x112be, 0x112bf, 0x112c0, 0x112c1, 0x112c2, 0x112c3, 0x112c4, 0x112c5, 0x112c6, 0x112c7, 0x112c8, 0x112c9, 0x112ca, 0x112cb, 0x112cc, 0x112cd, 0x112ce, 0x112cf, 0x112d0, 0x112d1, 0x112d2, 0x112d3, 0x112d4, 0x112d5, 0x112d6, 0x112d7, 0x112d8, 0x112d9, 0x112da, 0x112db, 0x112dc, 0x112dd, 0x112de, 0x112df, 0x112e0, 0x112e1, 0x112e2
};

void BM_collation_element_lookup_405(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 0, cps_405 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 1, cps_405 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 2, cps_405 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 3, cps_405 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 4, cps_405 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 5, cps_405 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 6, cps_405 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 7, cps_405 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 8, cps_405 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 9, cps_405 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 10, cps_405 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 11, cps_405 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 12, cps_405 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 13, cps_405 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 14, cps_405 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 15, cps_405 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 16, cps_405 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 17, cps_405 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 18, cps_405 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 19, cps_405 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 20, cps_405 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 21, cps_405 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 22, cps_405 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 23, cps_405 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 24, cps_405 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 25, cps_405 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 26, cps_405 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 27, cps_405 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 28, cps_405 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 29, cps_405 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 30, cps_405 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 31, cps_405 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 32, cps_405 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 33, cps_405 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 34, cps_405 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 35, cps_405 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 36, cps_405 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 37, cps_405 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 38, cps_405 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 39, cps_405 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 40, cps_405 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 41, cps_405 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 42, cps_405 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 43, cps_405 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 44, cps_405 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 45, cps_405 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 46, cps_405 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 47, cps_405 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 48, cps_405 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_405 + 49, cps_405 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_405);

uint32_t cps_406[] = {
0x112e3, 0x112e4, 0x112e5, 0x112e6, 0x112e7, 0x112e8, 0x112e9, 0x112ea, 0x112f0, 0x112f1, 0x112f2, 0x112f3, 0x112f4, 0x112f5, 0x112f6, 0x112f7, 0x112f8, 0x112f9, 0x11300, 0x11301, 0x11302, 0x11303, 0x11305, 0x11306, 0x11307, 0x11308, 0x11309, 0x1130a, 0x1130b, 0x1130c, 0x1130f, 0x11310, 0x11313, 0x11314, 0x11315, 0x11316, 0x11317, 0x11318, 0x11319, 0x1131a, 0x1131b, 0x1131c, 0x1131d, 0x1131e, 0x1131f, 0x11320, 0x11321, 0x11322, 0x11323, 0x11324
};

void BM_collation_element_lookup_406(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 0, cps_406 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 1, cps_406 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 2, cps_406 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 3, cps_406 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 4, cps_406 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 5, cps_406 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 6, cps_406 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 7, cps_406 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 8, cps_406 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 9, cps_406 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 10, cps_406 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 11, cps_406 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 12, cps_406 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 13, cps_406 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 14, cps_406 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 15, cps_406 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 16, cps_406 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 17, cps_406 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 18, cps_406 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 19, cps_406 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 20, cps_406 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 21, cps_406 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 22, cps_406 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 23, cps_406 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 24, cps_406 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 25, cps_406 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 26, cps_406 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 27, cps_406 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 28, cps_406 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 29, cps_406 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 30, cps_406 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 31, cps_406 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 32, cps_406 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 33, cps_406 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 34, cps_406 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 35, cps_406 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 36, cps_406 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 37, cps_406 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 38, cps_406 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 39, cps_406 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 40, cps_406 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 41, cps_406 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 42, cps_406 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 43, cps_406 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 44, cps_406 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 45, cps_406 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 46, cps_406 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 47, cps_406 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 48, cps_406 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_406 + 49, cps_406 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_406);

uint32_t cps_407[] = {
0x11325, 0x11326, 0x11327, 0x11328, 0x1132a, 0x1132b, 0x1132c, 0x1132d, 0x1132e, 0x1132f, 0x11330, 0x11332, 0x11333, 0x11335, 0x11336, 0x11337, 0x11338, 0x11339, 0x1133c, 0x1133d, 0x1133e, 0x1133f, 0x11340, 0x11341, 0x11342, 0x11343, 0x11344, 0x11347, 0x11347, 0x1133e, 0x11347, 0x11357, 0x11348, 0x1134b, 0x1134c, 0x1134d, 0x11350, 0x11357, 0x1135d, 0x1135e, 0x1135f, 0x11360, 0x11361, 0x11362, 0x11363, 0x11366, 0x11367, 0x11368, 0x11369, 0x1136a, 0x1136b, 0x1136c
};

void BM_collation_element_lookup_407(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 0, cps_407 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 1, cps_407 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 2, cps_407 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 3, cps_407 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 4, cps_407 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 5, cps_407 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 6, cps_407 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 7, cps_407 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 8, cps_407 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 9, cps_407 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 10, cps_407 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 11, cps_407 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 12, cps_407 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 13, cps_407 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 14, cps_407 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 15, cps_407 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 16, cps_407 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 17, cps_407 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 18, cps_407 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 19, cps_407 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 20, cps_407 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 21, cps_407 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 22, cps_407 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 23, cps_407 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 24, cps_407 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 25, cps_407 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 26, cps_407 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 27, cps_407 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 28, cps_407 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 30, cps_407 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 32, cps_407 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 33, cps_407 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 34, cps_407 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 35, cps_407 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 36, cps_407 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 37, cps_407 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 38, cps_407 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 39, cps_407 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 40, cps_407 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 41, cps_407 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 42, cps_407 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 43, cps_407 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 44, cps_407 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 45, cps_407 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 46, cps_407 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 47, cps_407 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 48, cps_407 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 49, cps_407 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 50, cps_407 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_407 + 51, cps_407 + 52));
    }
}
BENCHMARK(BM_collation_element_lookup_407);

uint32_t cps_408[] = {
0x11370, 0x11371, 0x11372, 0x11373, 0x11374, 0x11400, 0x11401, 0x11402, 0x11403, 0x11404, 0x11405, 0x11406, 0x11407, 0x11408, 0x11409, 0x1140a, 0x1140b, 0x1140c, 0x1140d, 0x1140e, 0x1140f, 0x11410, 0x11411, 0x11412, 0x11413, 0x11414, 0x11415, 0x11416, 0x11417, 0x11418, 0x11419, 0x1141a, 0x1141b, 0x1141c, 0x1141d, 0x1141e, 0x1141f, 0x11420, 0x11421, 0x11422, 0x11423, 0x11424, 0x11425, 0x11426, 0x11427, 0x11428, 0x11429, 0x1142a, 0x1142b, 0x1142c
};

void BM_collation_element_lookup_408(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 0, cps_408 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 1, cps_408 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 2, cps_408 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 3, cps_408 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 4, cps_408 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 5, cps_408 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 6, cps_408 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 7, cps_408 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 8, cps_408 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 9, cps_408 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 10, cps_408 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 11, cps_408 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 12, cps_408 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 13, cps_408 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 14, cps_408 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 15, cps_408 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 16, cps_408 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 17, cps_408 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 18, cps_408 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 19, cps_408 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 20, cps_408 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 21, cps_408 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 22, cps_408 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 23, cps_408 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 24, cps_408 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 25, cps_408 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 26, cps_408 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 27, cps_408 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 28, cps_408 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 29, cps_408 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 30, cps_408 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 31, cps_408 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 32, cps_408 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 33, cps_408 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 34, cps_408 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 35, cps_408 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 36, cps_408 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 37, cps_408 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 38, cps_408 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 39, cps_408 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 40, cps_408 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 41, cps_408 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 42, cps_408 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 43, cps_408 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 44, cps_408 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 45, cps_408 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 46, cps_408 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 47, cps_408 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 48, cps_408 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_408 + 49, cps_408 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_408);

uint32_t cps_409[] = {
0x1142d, 0x1142e, 0x1142f, 0x11430, 0x11431, 0x11432, 0x11433, 0x11434, 0x11435, 0x11436, 0x11437, 0x11438, 0x11439, 0x1143a, 0x1143b, 0x1143c, 0x1143d, 0x1143e, 0x1143f, 0x11440, 0x11441, 0x11442, 0x11443, 0x11444, 0x11445, 0x11446, 0x11447, 0x11448, 0x11449, 0x1144a, 0x1144b, 0x1144c, 0x1144d, 0x1144e, 0x1144f, 0x11450, 0x11451, 0x11452, 0x11453, 0x11454, 0x11455, 0x11456, 0x11457, 0x11458, 0x11459, 0x1145b, 0x1145d, 0x11480, 0x11481, 0x11482
};

void BM_collation_element_lookup_409(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 0, cps_409 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 1, cps_409 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 2, cps_409 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 3, cps_409 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 4, cps_409 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 5, cps_409 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 6, cps_409 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 7, cps_409 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 8, cps_409 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 9, cps_409 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 10, cps_409 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 11, cps_409 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 12, cps_409 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 13, cps_409 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 14, cps_409 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 15, cps_409 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 16, cps_409 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 17, cps_409 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 18, cps_409 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 19, cps_409 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 20, cps_409 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 21, cps_409 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 22, cps_409 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 23, cps_409 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 24, cps_409 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 25, cps_409 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 26, cps_409 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 27, cps_409 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 28, cps_409 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 29, cps_409 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 30, cps_409 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 31, cps_409 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 32, cps_409 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 33, cps_409 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 34, cps_409 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 35, cps_409 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 36, cps_409 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 37, cps_409 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 38, cps_409 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 39, cps_409 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 40, cps_409 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 41, cps_409 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 42, cps_409 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 43, cps_409 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 44, cps_409 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 45, cps_409 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 46, cps_409 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 47, cps_409 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 48, cps_409 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_409 + 49, cps_409 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_409);

uint32_t cps_410[] = {
0x11483, 0x11484, 0x11485, 0x11486, 0x11487, 0x11488, 0x11489, 0x1148a, 0x1148b, 0x1148c, 0x1148d, 0x1148e, 0x1148f, 0x11490, 0x11491, 0x11492, 0x11493, 0x11494, 0x11495, 0x11496, 0x11497, 0x11498, 0x11499, 0x1149a, 0x1149b, 0x1149c, 0x1149d, 0x1149e, 0x1149f, 0x114a0, 0x114a1, 0x114a2, 0x114a3, 0x114a4, 0x114a5, 0x114a6, 0x114a7, 0x114a8, 0x114a9, 0x114aa, 0x114ab, 0x114ac, 0x114ad, 0x114ae, 0x114af, 0x114b0, 0x114b1, 0x114b2, 0x114b3, 0x114b4
};

void BM_collation_element_lookup_410(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 0, cps_410 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 1, cps_410 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 2, cps_410 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 3, cps_410 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 4, cps_410 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 5, cps_410 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 6, cps_410 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 7, cps_410 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 8, cps_410 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 9, cps_410 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 10, cps_410 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 11, cps_410 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 12, cps_410 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 13, cps_410 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 14, cps_410 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 15, cps_410 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 16, cps_410 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 17, cps_410 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 18, cps_410 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 19, cps_410 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 20, cps_410 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 21, cps_410 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 22, cps_410 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 23, cps_410 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 24, cps_410 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 25, cps_410 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 26, cps_410 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 27, cps_410 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 28, cps_410 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 29, cps_410 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 30, cps_410 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 31, cps_410 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 32, cps_410 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 33, cps_410 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 34, cps_410 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 35, cps_410 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 36, cps_410 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 37, cps_410 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 38, cps_410 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 39, cps_410 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 40, cps_410 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 41, cps_410 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 42, cps_410 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 43, cps_410 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 44, cps_410 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 45, cps_410 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 46, cps_410 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 47, cps_410 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 48, cps_410 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_410 + 49, cps_410 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_410);

uint32_t cps_411[] = {
0x114b5, 0x114b6, 0x114b7, 0x114b8, 0x114b9, 0x114b9, 0x114b0, 0x114b9, 0x114ba, 0x114b9, 0x114bd, 0x114ba, 0x114bb, 0x114bc, 0x114bd, 0x114be, 0x114bf, 0x114c0, 0x114c1, 0x114c2, 0x114c3, 0x114c4, 0x114c5, 0x114c6, 0x114c7, 0x114d0, 0x114d1, 0x114d2, 0x114d3, 0x114d4, 0x114d5, 0x114d6, 0x114d7, 0x114d8, 0x114d9, 0x11580, 0x11581, 0x11582, 0x11583, 0x11584, 0x11585, 0x11586, 0x11587, 0x11588, 0x11589, 0x1158a, 0x1158b, 0x1158c, 0x1158d, 0x1158e, 0x1158f, 0x11590, 0x11591
};

void BM_collation_element_lookup_411(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 0, cps_411 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 1, cps_411 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 2, cps_411 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 3, cps_411 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 4, cps_411 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 5, cps_411 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 7, cps_411 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 9, cps_411 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 11, cps_411 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 12, cps_411 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 13, cps_411 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 14, cps_411 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 15, cps_411 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 16, cps_411 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 17, cps_411 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 18, cps_411 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 19, cps_411 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 20, cps_411 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 21, cps_411 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 22, cps_411 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 23, cps_411 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 24, cps_411 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 25, cps_411 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 26, cps_411 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 27, cps_411 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 28, cps_411 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 29, cps_411 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 30, cps_411 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 31, cps_411 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 32, cps_411 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 33, cps_411 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 34, cps_411 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 35, cps_411 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 36, cps_411 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 37, cps_411 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 38, cps_411 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 39, cps_411 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 40, cps_411 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 41, cps_411 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 42, cps_411 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 43, cps_411 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 44, cps_411 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 45, cps_411 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 46, cps_411 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 47, cps_411 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 48, cps_411 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 49, cps_411 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 50, cps_411 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 51, cps_411 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_411 + 52, cps_411 + 53));
    }
}
BENCHMARK(BM_collation_element_lookup_411);

uint32_t cps_412[] = {
0x11592, 0x11593, 0x11594, 0x11595, 0x11596, 0x11597, 0x11598, 0x11599, 0x1159a, 0x1159b, 0x1159c, 0x1159d, 0x1159e, 0x1159f, 0x115a0, 0x115a1, 0x115a2, 0x115a3, 0x115a4, 0x115a5, 0x115a6, 0x115a7, 0x115a8, 0x115a9, 0x115aa, 0x115ab, 0x115ac, 0x115ad, 0x115ae, 0x115af, 0x115b0, 0x115b1, 0x115b2, 0x115b3, 0x115b4, 0x115b5, 0x115b8, 0x115b8, 0x115af, 0x115b9, 0x115b9, 0x115af, 0x115ba, 0x115bb, 0x115bc, 0x115bd, 0x115be, 0x115bf, 0x115c0, 0x115c1, 0x115c2, 0x115c3
};

void BM_collation_element_lookup_412(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 0, cps_412 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 1, cps_412 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 2, cps_412 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 3, cps_412 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 4, cps_412 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 5, cps_412 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 6, cps_412 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 7, cps_412 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 8, cps_412 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 9, cps_412 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 10, cps_412 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 11, cps_412 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 12, cps_412 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 13, cps_412 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 14, cps_412 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 15, cps_412 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 16, cps_412 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 17, cps_412 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 18, cps_412 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 19, cps_412 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 20, cps_412 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 21, cps_412 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 22, cps_412 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 23, cps_412 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 24, cps_412 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 25, cps_412 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 26, cps_412 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 27, cps_412 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 28, cps_412 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 29, cps_412 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 30, cps_412 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 31, cps_412 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 32, cps_412 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 33, cps_412 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 34, cps_412 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 35, cps_412 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 36, cps_412 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 37, cps_412 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 39, cps_412 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 40, cps_412 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 42, cps_412 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 43, cps_412 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 44, cps_412 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 45, cps_412 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 46, cps_412 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 47, cps_412 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 48, cps_412 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 49, cps_412 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 50, cps_412 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_412 + 51, cps_412 + 52));
    }
}
BENCHMARK(BM_collation_element_lookup_412);

uint32_t cps_413[] = {
0x115c4, 0x115c5, 0x115c6, 0x115c7, 0x115c8, 0x115c9, 0x115ca, 0x115cb, 0x115cc, 0x115cd, 0x115ce, 0x115cf, 0x115d0, 0x115d1, 0x115d2, 0x115d3, 0x115d4, 0x115d5, 0x115d6, 0x115d7, 0x115d8, 0x115d9, 0x115da, 0x115db, 0x115dc, 0x115dd, 0x11600, 0x11601, 0x11602, 0x11603, 0x11604, 0x11605, 0x11606, 0x11607, 0x11608, 0x11609, 0x1160a, 0x1160b, 0x1160c, 0x1160d, 0x1160e, 0x1160f, 0x11610, 0x11611, 0x11612, 0x11613, 0x11614, 0x11615, 0x11616, 0x11617
};

void BM_collation_element_lookup_413(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 0, cps_413 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 1, cps_413 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 2, cps_413 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 3, cps_413 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 4, cps_413 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 5, cps_413 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 6, cps_413 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 7, cps_413 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 8, cps_413 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 9, cps_413 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 10, cps_413 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 11, cps_413 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 12, cps_413 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 13, cps_413 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 14, cps_413 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 15, cps_413 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 16, cps_413 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 17, cps_413 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 18, cps_413 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 19, cps_413 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 20, cps_413 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 21, cps_413 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 22, cps_413 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 23, cps_413 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 24, cps_413 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 25, cps_413 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 26, cps_413 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 27, cps_413 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 28, cps_413 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 29, cps_413 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 30, cps_413 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 31, cps_413 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 32, cps_413 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 33, cps_413 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 34, cps_413 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 35, cps_413 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 36, cps_413 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 37, cps_413 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 38, cps_413 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 39, cps_413 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 40, cps_413 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 41, cps_413 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 42, cps_413 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 43, cps_413 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 44, cps_413 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 45, cps_413 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 46, cps_413 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 47, cps_413 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 48, cps_413 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_413 + 49, cps_413 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_413);

uint32_t cps_414[] = {
0x11618, 0x11619, 0x1161a, 0x1161b, 0x1161c, 0x1161d, 0x1161e, 0x1161f, 0x11620, 0x11621, 0x11622, 0x11623, 0x11624, 0x11625, 0x11626, 0x11627, 0x11628, 0x11629, 0x1162a, 0x1162b, 0x1162c, 0x1162d, 0x1162e, 0x1162f, 0x11630, 0x11631, 0x11632, 0x11633, 0x11634, 0x11635, 0x11636, 0x11637, 0x11638, 0x11639, 0x1163a, 0x1163b, 0x1163c, 0x1163d, 0x1163e, 0x1163f, 0x11640, 0x11641, 0x11642, 0x11643, 0x11644, 0x11650, 0x11651, 0x11652, 0x11653, 0x11654
};

void BM_collation_element_lookup_414(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 0, cps_414 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 1, cps_414 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 2, cps_414 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 3, cps_414 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 4, cps_414 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 5, cps_414 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 6, cps_414 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 7, cps_414 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 8, cps_414 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 9, cps_414 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 10, cps_414 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 11, cps_414 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 12, cps_414 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 13, cps_414 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 14, cps_414 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 15, cps_414 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 16, cps_414 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 17, cps_414 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 18, cps_414 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 19, cps_414 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 20, cps_414 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 21, cps_414 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 22, cps_414 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 23, cps_414 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 24, cps_414 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 25, cps_414 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 26, cps_414 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 27, cps_414 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 28, cps_414 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 29, cps_414 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 30, cps_414 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 31, cps_414 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 32, cps_414 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 33, cps_414 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 34, cps_414 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 35, cps_414 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 36, cps_414 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 37, cps_414 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 38, cps_414 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 39, cps_414 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 40, cps_414 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 41, cps_414 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 42, cps_414 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 43, cps_414 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 44, cps_414 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 45, cps_414 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 46, cps_414 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 47, cps_414 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 48, cps_414 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_414 + 49, cps_414 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_414);

uint32_t cps_415[] = {
0x11655, 0x11656, 0x11657, 0x11658, 0x11659, 0x11660, 0x11661, 0x11662, 0x11663, 0x11664, 0x11665, 0x11666, 0x11667, 0x11668, 0x11669, 0x1166a, 0x1166b, 0x1166c, 0x11680, 0x11681, 0x11682, 0x11683, 0x11684, 0x11685, 0x11686, 0x11687, 0x11688, 0x11689, 0x1168a, 0x1168b, 0x1168c, 0x1168d, 0x1168e, 0x1168f, 0x11690, 0x11691, 0x11692, 0x11693, 0x11694, 0x11695, 0x11696, 0x11697, 0x11698, 0x11699, 0x1169a, 0x1169b, 0x1169c, 0x1169d, 0x1169e, 0x1169f
};

void BM_collation_element_lookup_415(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 0, cps_415 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 1, cps_415 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 2, cps_415 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 3, cps_415 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 4, cps_415 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 5, cps_415 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 6, cps_415 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 7, cps_415 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 8, cps_415 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 9, cps_415 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 10, cps_415 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 11, cps_415 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 12, cps_415 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 13, cps_415 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 14, cps_415 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 15, cps_415 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 16, cps_415 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 17, cps_415 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 18, cps_415 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 19, cps_415 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 20, cps_415 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 21, cps_415 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 22, cps_415 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 23, cps_415 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 24, cps_415 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 25, cps_415 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 26, cps_415 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 27, cps_415 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 28, cps_415 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 29, cps_415 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 30, cps_415 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 31, cps_415 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 32, cps_415 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 33, cps_415 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 34, cps_415 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 35, cps_415 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 36, cps_415 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 37, cps_415 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 38, cps_415 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 39, cps_415 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 40, cps_415 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 41, cps_415 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 42, cps_415 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 43, cps_415 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 44, cps_415 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 45, cps_415 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 46, cps_415 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 47, cps_415 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 48, cps_415 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_415 + 49, cps_415 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_415);

uint32_t cps_416[] = {
0x116a0, 0x116a1, 0x116a2, 0x116a3, 0x116a4, 0x116a5, 0x116a6, 0x116a7, 0x116a8, 0x116a9, 0x116aa, 0x116ab, 0x116ac, 0x116ad, 0x116ae, 0x116af, 0x116b0, 0x116b1, 0x116b2, 0x116b3, 0x116b4, 0x116b5, 0x116b6, 0x116b7, 0x116c0, 0x116c1, 0x116c2, 0x116c3, 0x116c4, 0x116c5, 0x116c6, 0x116c7, 0x116c8, 0x116c9, 0x11700, 0x11701, 0x11702, 0x11703, 0x11704, 0x11705, 0x11706, 0x11707, 0x11708, 0x11709, 0x1170a, 0x1170b, 0x1170c, 0x1170d, 0x1170e, 0x1170f
};

void BM_collation_element_lookup_416(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 0, cps_416 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 1, cps_416 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 2, cps_416 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 3, cps_416 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 4, cps_416 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 5, cps_416 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 6, cps_416 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 7, cps_416 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 8, cps_416 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 9, cps_416 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 10, cps_416 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 11, cps_416 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 12, cps_416 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 13, cps_416 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 14, cps_416 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 15, cps_416 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 16, cps_416 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 17, cps_416 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 18, cps_416 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 19, cps_416 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 20, cps_416 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 21, cps_416 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 22, cps_416 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 23, cps_416 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 24, cps_416 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 25, cps_416 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 26, cps_416 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 27, cps_416 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 28, cps_416 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 29, cps_416 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 30, cps_416 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 31, cps_416 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 32, cps_416 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 33, cps_416 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 34, cps_416 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 35, cps_416 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 36, cps_416 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 37, cps_416 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 38, cps_416 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 39, cps_416 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 40, cps_416 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 41, cps_416 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 42, cps_416 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 43, cps_416 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 44, cps_416 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 45, cps_416 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 46, cps_416 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 47, cps_416 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 48, cps_416 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_416 + 49, cps_416 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_416);

uint32_t cps_417[] = {
0x11710, 0x11711, 0x11712, 0x11713, 0x11714, 0x11715, 0x11716, 0x11717, 0x11718, 0x11719, 0x1171d, 0x1171e, 0x1171f, 0x11720, 0x11721, 0x11722, 0x11723, 0x11724, 0x11725, 0x11726, 0x11727, 0x11728, 0x11729, 0x1172a, 0x1172b, 0x11730, 0x11731, 0x11732, 0x11733, 0x11734, 0x11735, 0x11736, 0x11737, 0x11738, 0x11739, 0x1173a, 0x1173b, 0x1173c, 0x1173d, 0x1173e, 0x1173f, 0x118a0, 0x118a1, 0x118a2, 0x118a3, 0x118a4, 0x118a5, 0x118a6, 0x118a7, 0x118a8
};

void BM_collation_element_lookup_417(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 0, cps_417 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 1, cps_417 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 2, cps_417 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 3, cps_417 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 4, cps_417 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 5, cps_417 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 6, cps_417 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 7, cps_417 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 8, cps_417 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 9, cps_417 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 10, cps_417 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 11, cps_417 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 12, cps_417 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 13, cps_417 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 14, cps_417 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 15, cps_417 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 16, cps_417 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 17, cps_417 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 18, cps_417 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 19, cps_417 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 20, cps_417 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 21, cps_417 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 22, cps_417 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 23, cps_417 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 24, cps_417 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 25, cps_417 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 26, cps_417 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 27, cps_417 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 28, cps_417 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 29, cps_417 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 30, cps_417 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 31, cps_417 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 32, cps_417 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 33, cps_417 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 34, cps_417 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 35, cps_417 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 36, cps_417 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 37, cps_417 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 38, cps_417 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 39, cps_417 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 40, cps_417 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 41, cps_417 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 42, cps_417 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 43, cps_417 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 44, cps_417 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 45, cps_417 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 46, cps_417 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 47, cps_417 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 48, cps_417 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_417 + 49, cps_417 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_417);

uint32_t cps_418[] = {
0x118a9, 0x118aa, 0x118ab, 0x118ac, 0x118ad, 0x118ae, 0x118af, 0x118b0, 0x118b1, 0x118b2, 0x118b3, 0x118b4, 0x118b5, 0x118b6, 0x118b7, 0x118b8, 0x118b9, 0x118ba, 0x118bb, 0x118bc, 0x118bd, 0x118be, 0x118bf, 0x118c0, 0x118c1, 0x118c2, 0x118c3, 0x118c4, 0x118c5, 0x118c6, 0x118c7, 0x118c8, 0x118c9, 0x118ca, 0x118cb, 0x118cc, 0x118cd, 0x118ce, 0x118cf, 0x118d0, 0x118d1, 0x118d2, 0x118d3, 0x118d4, 0x118d5, 0x118d6, 0x118d7, 0x118d8, 0x118d9, 0x118da
};

void BM_collation_element_lookup_418(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 0, cps_418 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 1, cps_418 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 2, cps_418 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 3, cps_418 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 4, cps_418 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 5, cps_418 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 6, cps_418 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 7, cps_418 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 8, cps_418 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 9, cps_418 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 10, cps_418 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 11, cps_418 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 12, cps_418 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 13, cps_418 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 14, cps_418 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 15, cps_418 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 16, cps_418 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 17, cps_418 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 18, cps_418 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 19, cps_418 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 20, cps_418 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 21, cps_418 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 22, cps_418 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 23, cps_418 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 24, cps_418 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 25, cps_418 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 26, cps_418 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 27, cps_418 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 28, cps_418 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 29, cps_418 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 30, cps_418 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 31, cps_418 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 32, cps_418 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 33, cps_418 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 34, cps_418 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 35, cps_418 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 36, cps_418 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 37, cps_418 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 38, cps_418 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 39, cps_418 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 40, cps_418 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 41, cps_418 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 42, cps_418 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 43, cps_418 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 44, cps_418 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 45, cps_418 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 46, cps_418 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 47, cps_418 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 48, cps_418 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_418 + 49, cps_418 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_418);

uint32_t cps_419[] = {
0x118db, 0x118dc, 0x118dd, 0x118de, 0x118df, 0x118e0, 0x118e1, 0x118e2, 0x118e3, 0x118e4, 0x118e5, 0x118e6, 0x118e7, 0x118e8, 0x118e9, 0x118ea, 0x118eb, 0x118ec, 0x118ed, 0x118ee, 0x118ef, 0x118f0, 0x118f1, 0x118f2, 0x118ff, 0x11a00, 0x11a01, 0x11a02, 0x11a03, 0x11a04, 0x11a05, 0x11a06, 0x11a07, 0x11a08, 0x11a09, 0x11a0a, 0x11a0b, 0x11a0c, 0x11a0d, 0x11a0e, 0x11a0f, 0x11a10, 0x11a11, 0x11a12, 0x11a13, 0x11a14, 0x11a15, 0x11a16, 0x11a17, 0x11a18
};

void BM_collation_element_lookup_419(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 0, cps_419 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 1, cps_419 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 2, cps_419 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 3, cps_419 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 4, cps_419 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 5, cps_419 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 6, cps_419 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 7, cps_419 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 8, cps_419 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 9, cps_419 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 10, cps_419 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 11, cps_419 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 12, cps_419 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 13, cps_419 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 14, cps_419 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 15, cps_419 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 16, cps_419 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 17, cps_419 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 18, cps_419 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 19, cps_419 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 20, cps_419 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 21, cps_419 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 22, cps_419 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 23, cps_419 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 24, cps_419 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 25, cps_419 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 26, cps_419 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 27, cps_419 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 28, cps_419 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 29, cps_419 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 30, cps_419 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 31, cps_419 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 32, cps_419 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 33, cps_419 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 34, cps_419 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 35, cps_419 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 36, cps_419 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 37, cps_419 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 38, cps_419 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 39, cps_419 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 40, cps_419 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 41, cps_419 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 42, cps_419 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 43, cps_419 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 44, cps_419 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 45, cps_419 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 46, cps_419 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 47, cps_419 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 48, cps_419 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_419 + 49, cps_419 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_419);

uint32_t cps_420[] = {
0x11a19, 0x11a1a, 0x11a1b, 0x11a1c, 0x11a1d, 0x11a1e, 0x11a1f, 0x11a20, 0x11a21, 0x11a22, 0x11a23, 0x11a24, 0x11a25, 0x11a26, 0x11a27, 0x11a28, 0x11a29, 0x11a2a, 0x11a2b, 0x11a2c, 0x11a2d, 0x11a2e, 0x11a2f, 0x11a30, 0x11a31, 0x11a32, 0x11a33, 0x11a34, 0x11a35, 0x11a36, 0x11a37, 0x11a38, 0x11a39, 0x11a3a, 0x11a3b, 0x11a3c, 0x11a3d, 0x11a3e, 0x11a3f, 0x11a40, 0x11a41, 0x11a42, 0x11a43, 0x11a44, 0x11a45, 0x11a46, 0x11a47, 0x11a50, 0x11a51, 0x11a52
};

void BM_collation_element_lookup_420(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 0, cps_420 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 1, cps_420 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 2, cps_420 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 3, cps_420 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 4, cps_420 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 5, cps_420 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 6, cps_420 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 7, cps_420 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 8, cps_420 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 9, cps_420 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 10, cps_420 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 11, cps_420 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 12, cps_420 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 13, cps_420 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 14, cps_420 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 15, cps_420 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 16, cps_420 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 17, cps_420 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 18, cps_420 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 19, cps_420 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 20, cps_420 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 21, cps_420 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 22, cps_420 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 23, cps_420 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 24, cps_420 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 25, cps_420 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 26, cps_420 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 27, cps_420 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 28, cps_420 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 29, cps_420 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 30, cps_420 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 31, cps_420 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 32, cps_420 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 33, cps_420 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 34, cps_420 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 35, cps_420 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 36, cps_420 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 37, cps_420 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 38, cps_420 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 39, cps_420 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 40, cps_420 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 41, cps_420 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 42, cps_420 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 43, cps_420 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 44, cps_420 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 45, cps_420 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 46, cps_420 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 47, cps_420 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 48, cps_420 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_420 + 49, cps_420 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_420);

uint32_t cps_421[] = {
0x11a53, 0x11a54, 0x11a55, 0x11a56, 0x11a57, 0x11a58, 0x11a59, 0x11a5a, 0x11a5b, 0x11a5c, 0x11a5d, 0x11a5e, 0x11a5f, 0x11a60, 0x11a61, 0x11a62, 0x11a63, 0x11a64, 0x11a65, 0x11a66, 0x11a67, 0x11a68, 0x11a69, 0x11a6a, 0x11a6b, 0x11a6c, 0x11a6d, 0x11a6e, 0x11a6f, 0x11a70, 0x11a71, 0x11a72, 0x11a73, 0x11a74, 0x11a75, 0x11a76, 0x11a77, 0x11a78, 0x11a79, 0x11a7a, 0x11a7b, 0x11a7c, 0x11a7d, 0x11a7e, 0x11a7f, 0x11a80, 0x11a81, 0x11a82, 0x11a83, 0x11a86
};

void BM_collation_element_lookup_421(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 0, cps_421 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 1, cps_421 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 2, cps_421 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 3, cps_421 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 4, cps_421 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 5, cps_421 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 6, cps_421 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 7, cps_421 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 8, cps_421 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 9, cps_421 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 10, cps_421 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 11, cps_421 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 12, cps_421 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 13, cps_421 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 14, cps_421 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 15, cps_421 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 16, cps_421 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 17, cps_421 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 18, cps_421 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 19, cps_421 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 20, cps_421 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 21, cps_421 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 22, cps_421 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 23, cps_421 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 24, cps_421 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 25, cps_421 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 26, cps_421 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 27, cps_421 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 28, cps_421 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 29, cps_421 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 30, cps_421 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 31, cps_421 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 32, cps_421 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 33, cps_421 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 34, cps_421 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 35, cps_421 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 36, cps_421 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 37, cps_421 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 38, cps_421 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 39, cps_421 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 40, cps_421 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 41, cps_421 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 42, cps_421 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 43, cps_421 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 44, cps_421 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 45, cps_421 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 46, cps_421 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 47, cps_421 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 48, cps_421 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_421 + 49, cps_421 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_421);

uint32_t cps_422[] = {
0x11a87, 0x11a88, 0x11a89, 0x11a8a, 0x11a8b, 0x11a8c, 0x11a8d, 0x11a8e, 0x11a8f, 0x11a90, 0x11a91, 0x11a92, 0x11a93, 0x11a94, 0x11a95, 0x11a96, 0x11a97, 0x11a98, 0x11a99, 0x11a9a, 0x11a9b, 0x11a9c, 0x11a9e, 0x11a9f, 0x11aa0, 0x11aa1, 0x11aa2, 0x11ac0, 0x11ac1, 0x11ac2, 0x11ac3, 0x11ac4, 0x11ac5, 0x11ac6, 0x11ac7, 0x11ac8, 0x11ac9, 0x11aca, 0x11acb, 0x11acc, 0x11acd, 0x11ace, 0x11acf, 0x11ad0, 0x11ad1, 0x11ad2, 0x11ad3, 0x11ad4, 0x11ad5, 0x11ad6
};

void BM_collation_element_lookup_422(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 0, cps_422 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 1, cps_422 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 2, cps_422 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 3, cps_422 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 4, cps_422 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 5, cps_422 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 6, cps_422 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 7, cps_422 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 8, cps_422 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 9, cps_422 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 10, cps_422 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 11, cps_422 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 12, cps_422 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 13, cps_422 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 14, cps_422 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 15, cps_422 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 16, cps_422 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 17, cps_422 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 18, cps_422 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 19, cps_422 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 20, cps_422 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 21, cps_422 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 22, cps_422 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 23, cps_422 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 24, cps_422 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 25, cps_422 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 26, cps_422 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 27, cps_422 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 28, cps_422 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 29, cps_422 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 30, cps_422 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 31, cps_422 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 32, cps_422 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 33, cps_422 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 34, cps_422 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 35, cps_422 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 36, cps_422 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 37, cps_422 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 38, cps_422 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 39, cps_422 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 40, cps_422 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 41, cps_422 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 42, cps_422 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 43, cps_422 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 44, cps_422 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 45, cps_422 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 46, cps_422 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 47, cps_422 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 48, cps_422 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_422 + 49, cps_422 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_422);

uint32_t cps_423[] = {
0x11ad7, 0x11ad8, 0x11ad9, 0x11ada, 0x11adb, 0x11adc, 0x11add, 0x11ade, 0x11adf, 0x11ae0, 0x11ae1, 0x11ae2, 0x11ae3, 0x11ae4, 0x11ae5, 0x11ae6, 0x11ae7, 0x11ae8, 0x11ae9, 0x11aea, 0x11aeb, 0x11aec, 0x11aed, 0x11aee, 0x11aef, 0x11af0, 0x11af1, 0x11af2, 0x11af3, 0x11af4, 0x11af5, 0x11af6, 0x11af7, 0x11af8, 0x11c00, 0x11c01, 0x11c02, 0x11c03, 0x11c04, 0x11c05, 0x11c06, 0x11c07, 0x11c08, 0x11c0a, 0x11c0b, 0x11c0c, 0x11c0d, 0x11c0e, 0x11c0f, 0x11c10
};

void BM_collation_element_lookup_423(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 0, cps_423 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 1, cps_423 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 2, cps_423 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 3, cps_423 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 4, cps_423 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 5, cps_423 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 6, cps_423 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 7, cps_423 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 8, cps_423 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 9, cps_423 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 10, cps_423 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 11, cps_423 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 12, cps_423 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 13, cps_423 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 14, cps_423 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 15, cps_423 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 16, cps_423 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 17, cps_423 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 18, cps_423 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 19, cps_423 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 20, cps_423 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 21, cps_423 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 22, cps_423 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 23, cps_423 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 24, cps_423 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 25, cps_423 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 26, cps_423 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 27, cps_423 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 28, cps_423 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 29, cps_423 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 30, cps_423 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 31, cps_423 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 32, cps_423 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 33, cps_423 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 34, cps_423 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 35, cps_423 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 36, cps_423 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 37, cps_423 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 38, cps_423 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 39, cps_423 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 40, cps_423 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 41, cps_423 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 42, cps_423 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 43, cps_423 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 44, cps_423 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 45, cps_423 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 46, cps_423 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 47, cps_423 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 48, cps_423 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_423 + 49, cps_423 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_423);

uint32_t cps_424[] = {
0x11c11, 0x11c12, 0x11c13, 0x11c14, 0x11c15, 0x11c16, 0x11c17, 0x11c18, 0x11c19, 0x11c1a, 0x11c1b, 0x11c1c, 0x11c1d, 0x11c1e, 0x11c1f, 0x11c20, 0x11c21, 0x11c22, 0x11c23, 0x11c24, 0x11c25, 0x11c26, 0x11c27, 0x11c28, 0x11c29, 0x11c2a, 0x11c2b, 0x11c2c, 0x11c2d, 0x11c2e, 0x11c2f, 0x11c30, 0x11c31, 0x11c32, 0x11c33, 0x11c34, 0x11c35, 0x11c36, 0x11c38, 0x11c39, 0x11c3a, 0x11c3b, 0x11c3c, 0x11c3d, 0x11c3e, 0x11c3f, 0x11c40, 0x11c41, 0x11c42, 0x11c43
};

void BM_collation_element_lookup_424(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 0, cps_424 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 1, cps_424 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 2, cps_424 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 3, cps_424 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 4, cps_424 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 5, cps_424 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 6, cps_424 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 7, cps_424 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 8, cps_424 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 9, cps_424 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 10, cps_424 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 11, cps_424 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 12, cps_424 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 13, cps_424 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 14, cps_424 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 15, cps_424 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 16, cps_424 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 17, cps_424 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 18, cps_424 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 19, cps_424 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 20, cps_424 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 21, cps_424 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 22, cps_424 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 23, cps_424 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 24, cps_424 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 25, cps_424 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 26, cps_424 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 27, cps_424 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 28, cps_424 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 29, cps_424 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 30, cps_424 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 31, cps_424 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 32, cps_424 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 33, cps_424 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 34, cps_424 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 35, cps_424 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 36, cps_424 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 37, cps_424 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 38, cps_424 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 39, cps_424 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 40, cps_424 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 41, cps_424 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 42, cps_424 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 43, cps_424 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 44, cps_424 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 45, cps_424 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 46, cps_424 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 47, cps_424 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 48, cps_424 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_424 + 49, cps_424 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_424);

uint32_t cps_425[] = {
0x11c44, 0x11c45, 0x11c50, 0x11c51, 0x11c52, 0x11c53, 0x11c54, 0x11c55, 0x11c56, 0x11c57, 0x11c58, 0x11c59, 0x11c5a, 0x11c5b, 0x11c5c, 0x11c5d, 0x11c5e, 0x11c5f, 0x11c60, 0x11c61, 0x11c62, 0x11c63, 0x11c64, 0x11c65, 0x11c66, 0x11c67, 0x11c68, 0x11c69, 0x11c6a, 0x11c6b, 0x11c6c, 0x11c70, 0x11c71, 0x11c72, 0x11c73, 0x11c74, 0x11c75, 0x11c76, 0x11c77, 0x11c78, 0x11c79, 0x11c7a, 0x11c7b, 0x11c7c, 0x11c7d, 0x11c7e, 0x11c7f, 0x11c80, 0x11c81, 0x11c82
};

void BM_collation_element_lookup_425(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 0, cps_425 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 1, cps_425 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 2, cps_425 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 3, cps_425 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 4, cps_425 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 5, cps_425 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 6, cps_425 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 7, cps_425 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 8, cps_425 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 9, cps_425 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 10, cps_425 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 11, cps_425 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 12, cps_425 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 13, cps_425 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 14, cps_425 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 15, cps_425 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 16, cps_425 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 17, cps_425 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 18, cps_425 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 19, cps_425 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 20, cps_425 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 21, cps_425 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 22, cps_425 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 23, cps_425 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 24, cps_425 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 25, cps_425 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 26, cps_425 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 27, cps_425 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 28, cps_425 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 29, cps_425 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 30, cps_425 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 31, cps_425 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 32, cps_425 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 33, cps_425 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 34, cps_425 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 35, cps_425 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 36, cps_425 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 37, cps_425 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 38, cps_425 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 39, cps_425 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 40, cps_425 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 41, cps_425 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 42, cps_425 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 43, cps_425 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 44, cps_425 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 45, cps_425 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 46, cps_425 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 47, cps_425 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 48, cps_425 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_425 + 49, cps_425 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_425);

uint32_t cps_426[] = {
0x11c83, 0x11c84, 0x11c85, 0x11c86, 0x11c87, 0x11c88, 0x11c89, 0x11c8a, 0x11c8b, 0x11c8c, 0x11c8d, 0x11c8e, 0x11c8f, 0x11c92, 0x11c93, 0x11c94, 0x11c95, 0x11c96, 0x11c97, 0x11c98, 0x11c99, 0x11c9a, 0x11c9b, 0x11c9c, 0x11c9d, 0x11c9e, 0x11c9f, 0x11ca0, 0x11ca1, 0x11ca2, 0x11ca3, 0x11ca4, 0x11ca5, 0x11ca6, 0x11ca7, 0x11ca9, 0x11caa, 0x11cab, 0x11cac, 0x11cad, 0x11cae, 0x11caf, 0x11cb0, 0x11cb1, 0x11cb2, 0x11cb3, 0x11cb4, 0x11cb5, 0x11cb6, 0x11d00
};

void BM_collation_element_lookup_426(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 0, cps_426 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 1, cps_426 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 2, cps_426 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 3, cps_426 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 4, cps_426 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 5, cps_426 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 6, cps_426 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 7, cps_426 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 8, cps_426 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 9, cps_426 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 10, cps_426 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 11, cps_426 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 12, cps_426 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 13, cps_426 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 14, cps_426 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 15, cps_426 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 16, cps_426 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 17, cps_426 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 18, cps_426 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 19, cps_426 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 20, cps_426 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 21, cps_426 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 22, cps_426 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 23, cps_426 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 24, cps_426 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 25, cps_426 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 26, cps_426 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 27, cps_426 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 28, cps_426 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 29, cps_426 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 30, cps_426 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 31, cps_426 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 32, cps_426 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 33, cps_426 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 34, cps_426 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 35, cps_426 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 36, cps_426 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 37, cps_426 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 38, cps_426 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 39, cps_426 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 40, cps_426 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 41, cps_426 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 42, cps_426 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 43, cps_426 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 44, cps_426 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 45, cps_426 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 46, cps_426 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 47, cps_426 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 48, cps_426 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_426 + 49, cps_426 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_426);

uint32_t cps_427[] = {
0x11d01, 0x11d02, 0x11d03, 0x11d04, 0x11d05, 0x11d06, 0x11d08, 0x11d09, 0x11d0b, 0x11d0c, 0x11d0d, 0x11d0e, 0x11d0f, 0x11d10, 0x11d11, 0x11d12, 0x11d13, 0x11d14, 0x11d15, 0x11d16, 0x11d17, 0x11d18, 0x11d19, 0x11d1a, 0x11d1b, 0x11d1c, 0x11d1d, 0x11d1e, 0x11d1f, 0x11d20, 0x11d21, 0x11d22, 0x11d23, 0x11d24, 0x11d25, 0x11d26, 0x11d27, 0x11d28, 0x11d29, 0x11d2a, 0x11d2b, 0x11d2c, 0x11d2d, 0x11d2e, 0x11d2f, 0x11d30, 0x11d31, 0x11d32, 0x11d33, 0x11d34
};

void BM_collation_element_lookup_427(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 0, cps_427 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 1, cps_427 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 2, cps_427 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 3, cps_427 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 4, cps_427 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 5, cps_427 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 6, cps_427 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 7, cps_427 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 8, cps_427 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 9, cps_427 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 10, cps_427 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 11, cps_427 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 12, cps_427 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 13, cps_427 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 14, cps_427 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 15, cps_427 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 16, cps_427 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 17, cps_427 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 18, cps_427 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 19, cps_427 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 20, cps_427 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 21, cps_427 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 22, cps_427 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 23, cps_427 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 24, cps_427 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 25, cps_427 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 26, cps_427 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 27, cps_427 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 28, cps_427 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 29, cps_427 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 30, cps_427 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 31, cps_427 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 32, cps_427 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 33, cps_427 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 34, cps_427 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 35, cps_427 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 36, cps_427 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 37, cps_427 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 38, cps_427 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 39, cps_427 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 40, cps_427 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 41, cps_427 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 42, cps_427 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 43, cps_427 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 44, cps_427 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 45, cps_427 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 46, cps_427 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 47, cps_427 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 48, cps_427 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_427 + 49, cps_427 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_427);

uint32_t cps_428[] = {
0x11d35, 0x11d36, 0x11d3a, 0x11d3c, 0x11d3d, 0x11d3f, 0x11d40, 0x11d41, 0x11d42, 0x11d43, 0x11d44, 0x11d45, 0x11d46, 0x11d47, 0x11d50, 0x11d51, 0x11d52, 0x11d53, 0x11d54, 0x11d55, 0x11d56, 0x11d57, 0x11d58, 0x11d59, 0x12000, 0x12001, 0x12002, 0x12003, 0x12004, 0x12005, 0x12006, 0x12007, 0x12008, 0x12009, 0x1200a, 0x1200b, 0x1200c, 0x1200d, 0x1200e, 0x1200f, 0x12010, 0x12011, 0x12012, 0x12013, 0x12014, 0x12015, 0x12016, 0x12017, 0x12018, 0x12019
};

void BM_collation_element_lookup_428(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 0, cps_428 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 1, cps_428 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 2, cps_428 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 3, cps_428 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 4, cps_428 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 5, cps_428 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 6, cps_428 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 7, cps_428 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 8, cps_428 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 9, cps_428 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 10, cps_428 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 11, cps_428 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 12, cps_428 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 13, cps_428 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 14, cps_428 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 15, cps_428 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 16, cps_428 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 17, cps_428 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 18, cps_428 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 19, cps_428 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 20, cps_428 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 21, cps_428 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 22, cps_428 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 23, cps_428 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 24, cps_428 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 25, cps_428 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 26, cps_428 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 27, cps_428 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 28, cps_428 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 29, cps_428 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 30, cps_428 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 31, cps_428 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 32, cps_428 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 33, cps_428 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 34, cps_428 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 35, cps_428 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 36, cps_428 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 37, cps_428 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 38, cps_428 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 39, cps_428 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 40, cps_428 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 41, cps_428 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 42, cps_428 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 43, cps_428 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 44, cps_428 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 45, cps_428 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 46, cps_428 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 47, cps_428 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 48, cps_428 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_428 + 49, cps_428 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_428);

uint32_t cps_429[] = {
0x1201a, 0x1201b, 0x1201c, 0x1201d, 0x1201e, 0x1201f, 0x12020, 0x12021, 0x12022, 0x12023, 0x12024, 0x12025, 0x12026, 0x12027, 0x12028, 0x12029, 0x1202a, 0x1202b, 0x1202c, 0x1202d, 0x1202e, 0x1202f, 0x12030, 0x12031, 0x12032, 0x12033, 0x12034, 0x12035, 0x12036, 0x12037, 0x12038, 0x12039, 0x1203a, 0x1203b, 0x1203c, 0x1203d, 0x1203e, 0x1203f, 0x12040, 0x12041, 0x12042, 0x12043, 0x12044, 0x12045, 0x12046, 0x12047, 0x12048, 0x12049, 0x1204a, 0x1204b
};

void BM_collation_element_lookup_429(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 0, cps_429 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 1, cps_429 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 2, cps_429 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 3, cps_429 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 4, cps_429 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 5, cps_429 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 6, cps_429 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 7, cps_429 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 8, cps_429 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 9, cps_429 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 10, cps_429 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 11, cps_429 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 12, cps_429 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 13, cps_429 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 14, cps_429 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 15, cps_429 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 16, cps_429 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 17, cps_429 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 18, cps_429 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 19, cps_429 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 20, cps_429 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 21, cps_429 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 22, cps_429 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 23, cps_429 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 24, cps_429 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 25, cps_429 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 26, cps_429 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 27, cps_429 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 28, cps_429 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 29, cps_429 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 30, cps_429 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 31, cps_429 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 32, cps_429 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 33, cps_429 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 34, cps_429 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 35, cps_429 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 36, cps_429 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 37, cps_429 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 38, cps_429 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 39, cps_429 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 40, cps_429 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 41, cps_429 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 42, cps_429 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 43, cps_429 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 44, cps_429 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 45, cps_429 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 46, cps_429 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 47, cps_429 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 48, cps_429 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_429 + 49, cps_429 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_429);

uint32_t cps_430[] = {
0x1204c, 0x1204d, 0x1204e, 0x1204f, 0x12050, 0x12051, 0x12052, 0x12053, 0x12054, 0x12055, 0x12056, 0x12057, 0x12058, 0x12059, 0x1205a, 0x1205b, 0x1205c, 0x1205d, 0x1205e, 0x1205f, 0x12060, 0x12061, 0x12062, 0x12063, 0x12064, 0x12065, 0x12066, 0x12067, 0x12068, 0x12069, 0x1206a, 0x1206b, 0x1206c, 0x1206d, 0x1206e, 0x1206f, 0x12070, 0x12071, 0x12072, 0x12073, 0x12074, 0x12075, 0x12076, 0x12077, 0x12078, 0x12079, 0x1207a, 0x1207b, 0x1207c, 0x1207d
};

void BM_collation_element_lookup_430(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 0, cps_430 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 1, cps_430 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 2, cps_430 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 3, cps_430 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 4, cps_430 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 5, cps_430 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 6, cps_430 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 7, cps_430 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 8, cps_430 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 9, cps_430 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 10, cps_430 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 11, cps_430 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 12, cps_430 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 13, cps_430 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 14, cps_430 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 15, cps_430 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 16, cps_430 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 17, cps_430 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 18, cps_430 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 19, cps_430 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 20, cps_430 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 21, cps_430 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 22, cps_430 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 23, cps_430 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 24, cps_430 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 25, cps_430 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 26, cps_430 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 27, cps_430 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 28, cps_430 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 29, cps_430 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 30, cps_430 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 31, cps_430 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 32, cps_430 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 33, cps_430 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 34, cps_430 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 35, cps_430 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 36, cps_430 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 37, cps_430 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 38, cps_430 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 39, cps_430 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 40, cps_430 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 41, cps_430 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 42, cps_430 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 43, cps_430 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 44, cps_430 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 45, cps_430 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 46, cps_430 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 47, cps_430 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 48, cps_430 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_430 + 49, cps_430 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_430);

uint32_t cps_431[] = {
0x1207e, 0x1207f, 0x12080, 0x12081, 0x12082, 0x12083, 0x12084, 0x12085, 0x12086, 0x12087, 0x12088, 0x12089, 0x1208a, 0x1208b, 0x1208c, 0x1208d, 0x1208e, 0x1208f, 0x12090, 0x12091, 0x12092, 0x12093, 0x12094, 0x12095, 0x12096, 0x12097, 0x12098, 0x12099, 0x1209a, 0x1209b, 0x1209c, 0x1209d, 0x1209e, 0x1209f, 0x120a0, 0x120a1, 0x120a2, 0x120a3, 0x120a4, 0x120a5, 0x120a6, 0x120a7, 0x120a8, 0x120a9, 0x120aa, 0x120ab, 0x120ac, 0x120ad, 0x120ae, 0x120af
};

void BM_collation_element_lookup_431(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 0, cps_431 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 1, cps_431 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 2, cps_431 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 3, cps_431 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 4, cps_431 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 5, cps_431 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 6, cps_431 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 7, cps_431 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 8, cps_431 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 9, cps_431 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 10, cps_431 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 11, cps_431 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 12, cps_431 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 13, cps_431 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 14, cps_431 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 15, cps_431 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 16, cps_431 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 17, cps_431 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 18, cps_431 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 19, cps_431 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 20, cps_431 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 21, cps_431 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 22, cps_431 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 23, cps_431 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 24, cps_431 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 25, cps_431 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 26, cps_431 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 27, cps_431 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 28, cps_431 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 29, cps_431 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 30, cps_431 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 31, cps_431 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 32, cps_431 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 33, cps_431 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 34, cps_431 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 35, cps_431 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 36, cps_431 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 37, cps_431 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 38, cps_431 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 39, cps_431 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 40, cps_431 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 41, cps_431 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 42, cps_431 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 43, cps_431 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 44, cps_431 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 45, cps_431 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 46, cps_431 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 47, cps_431 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 48, cps_431 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_431 + 49, cps_431 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_431);

uint32_t cps_432[] = {
0x120b0, 0x120b1, 0x120b2, 0x120b3, 0x120b4, 0x120b5, 0x120b6, 0x120b7, 0x120b8, 0x120b9, 0x120ba, 0x120bb, 0x120bc, 0x120bd, 0x120be, 0x120bf, 0x120c0, 0x120c1, 0x120c2, 0x120c3, 0x120c4, 0x120c5, 0x120c6, 0x120c7, 0x120c8, 0x120c9, 0x120ca, 0x120cb, 0x120cc, 0x120cd, 0x120ce, 0x120cf, 0x120d0, 0x120d1, 0x120d2, 0x120d3, 0x120d4, 0x120d5, 0x120d6, 0x120d7, 0x120d8, 0x120d9, 0x120da, 0x120db, 0x120dc, 0x120dd, 0x120de, 0x120df, 0x120e0, 0x120e1
};

void BM_collation_element_lookup_432(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 0, cps_432 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 1, cps_432 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 2, cps_432 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 3, cps_432 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 4, cps_432 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 5, cps_432 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 6, cps_432 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 7, cps_432 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 8, cps_432 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 9, cps_432 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 10, cps_432 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 11, cps_432 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 12, cps_432 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 13, cps_432 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 14, cps_432 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 15, cps_432 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 16, cps_432 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 17, cps_432 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 18, cps_432 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 19, cps_432 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 20, cps_432 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 21, cps_432 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 22, cps_432 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 23, cps_432 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 24, cps_432 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 25, cps_432 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 26, cps_432 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 27, cps_432 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 28, cps_432 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 29, cps_432 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 30, cps_432 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 31, cps_432 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 32, cps_432 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 33, cps_432 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 34, cps_432 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 35, cps_432 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 36, cps_432 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 37, cps_432 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 38, cps_432 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 39, cps_432 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 40, cps_432 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 41, cps_432 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 42, cps_432 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 43, cps_432 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 44, cps_432 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 45, cps_432 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 46, cps_432 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 47, cps_432 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 48, cps_432 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_432 + 49, cps_432 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_432);

uint32_t cps_433[] = {
0x120e2, 0x120e3, 0x120e4, 0x120e5, 0x120e6, 0x120e7, 0x120e8, 0x120e9, 0x120ea, 0x120eb, 0x120ec, 0x120ed, 0x120ee, 0x120ef, 0x120f0, 0x120f1, 0x120f2, 0x120f3, 0x120f4, 0x120f5, 0x120f6, 0x120f7, 0x120f8, 0x120f9, 0x120fa, 0x120fb, 0x120fc, 0x120fd, 0x120fe, 0x120ff, 0x12100, 0x12101, 0x12102, 0x12103, 0x12104, 0x12105, 0x12106, 0x12107, 0x12108, 0x12109, 0x1210a, 0x1210b, 0x1210c, 0x1210d, 0x1210e, 0x1210f, 0x12110, 0x12111, 0x12112, 0x12113
};

void BM_collation_element_lookup_433(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 0, cps_433 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 1, cps_433 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 2, cps_433 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 3, cps_433 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 4, cps_433 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 5, cps_433 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 6, cps_433 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 7, cps_433 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 8, cps_433 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 9, cps_433 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 10, cps_433 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 11, cps_433 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 12, cps_433 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 13, cps_433 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 14, cps_433 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 15, cps_433 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 16, cps_433 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 17, cps_433 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 18, cps_433 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 19, cps_433 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 20, cps_433 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 21, cps_433 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 22, cps_433 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 23, cps_433 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 24, cps_433 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 25, cps_433 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 26, cps_433 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 27, cps_433 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 28, cps_433 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 29, cps_433 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 30, cps_433 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 31, cps_433 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 32, cps_433 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 33, cps_433 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 34, cps_433 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 35, cps_433 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 36, cps_433 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 37, cps_433 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 38, cps_433 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 39, cps_433 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 40, cps_433 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 41, cps_433 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 42, cps_433 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 43, cps_433 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 44, cps_433 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 45, cps_433 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 46, cps_433 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 47, cps_433 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 48, cps_433 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_433 + 49, cps_433 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_433);

uint32_t cps_434[] = {
0x12114, 0x12115, 0x12116, 0x12117, 0x12118, 0x12119, 0x1211a, 0x1211b, 0x1211c, 0x1211d, 0x1211e, 0x1211f, 0x12120, 0x12121, 0x12122, 0x12123, 0x12124, 0x12125, 0x12126, 0x12127, 0x12128, 0x12129, 0x1212a, 0x1212b, 0x1212c, 0x1212d, 0x1212e, 0x1212f, 0x12130, 0x12131, 0x12132, 0x12133, 0x12134, 0x12135, 0x12136, 0x12137, 0x12138, 0x12139, 0x1213a, 0x1213b, 0x1213c, 0x1213d, 0x1213e, 0x1213f, 0x12140, 0x12141, 0x12142, 0x12143, 0x12144, 0x12145
};

void BM_collation_element_lookup_434(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 0, cps_434 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 1, cps_434 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 2, cps_434 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 3, cps_434 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 4, cps_434 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 5, cps_434 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 6, cps_434 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 7, cps_434 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 8, cps_434 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 9, cps_434 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 10, cps_434 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 11, cps_434 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 12, cps_434 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 13, cps_434 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 14, cps_434 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 15, cps_434 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 16, cps_434 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 17, cps_434 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 18, cps_434 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 19, cps_434 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 20, cps_434 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 21, cps_434 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 22, cps_434 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 23, cps_434 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 24, cps_434 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 25, cps_434 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 26, cps_434 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 27, cps_434 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 28, cps_434 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 29, cps_434 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 30, cps_434 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 31, cps_434 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 32, cps_434 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 33, cps_434 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 34, cps_434 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 35, cps_434 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 36, cps_434 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 37, cps_434 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 38, cps_434 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 39, cps_434 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 40, cps_434 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 41, cps_434 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 42, cps_434 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 43, cps_434 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 44, cps_434 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 45, cps_434 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 46, cps_434 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 47, cps_434 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 48, cps_434 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_434 + 49, cps_434 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_434);

uint32_t cps_435[] = {
0x12146, 0x12147, 0x12148, 0x12149, 0x1214a, 0x1214b, 0x1214c, 0x1214d, 0x1214e, 0x1214f, 0x12150, 0x12151, 0x12152, 0x12153, 0x12154, 0x12155, 0x12156, 0x12157, 0x12158, 0x12159, 0x1215a, 0x1215b, 0x1215c, 0x1215d, 0x1215e, 0x1215f, 0x12160, 0x12161, 0x12162, 0x12163, 0x12164, 0x12165, 0x12166, 0x12167, 0x12168, 0x12169, 0x1216a, 0x1216b, 0x1216c, 0x1216d, 0x1216e, 0x1216f, 0x12170, 0x12171, 0x12172, 0x12173, 0x12174, 0x12175, 0x12176, 0x12177
};

void BM_collation_element_lookup_435(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 0, cps_435 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 1, cps_435 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 2, cps_435 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 3, cps_435 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 4, cps_435 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 5, cps_435 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 6, cps_435 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 7, cps_435 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 8, cps_435 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 9, cps_435 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 10, cps_435 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 11, cps_435 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 12, cps_435 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 13, cps_435 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 14, cps_435 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 15, cps_435 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 16, cps_435 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 17, cps_435 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 18, cps_435 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 19, cps_435 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 20, cps_435 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 21, cps_435 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 22, cps_435 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 23, cps_435 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 24, cps_435 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 25, cps_435 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 26, cps_435 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 27, cps_435 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 28, cps_435 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 29, cps_435 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 30, cps_435 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 31, cps_435 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 32, cps_435 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 33, cps_435 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 34, cps_435 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 35, cps_435 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 36, cps_435 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 37, cps_435 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 38, cps_435 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 39, cps_435 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 40, cps_435 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 41, cps_435 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 42, cps_435 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 43, cps_435 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 44, cps_435 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 45, cps_435 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 46, cps_435 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 47, cps_435 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 48, cps_435 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_435 + 49, cps_435 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_435);

uint32_t cps_436[] = {
0x12178, 0x12179, 0x1217a, 0x1217b, 0x1217c, 0x1217d, 0x1217e, 0x1217f, 0x12180, 0x12181, 0x12182, 0x12183, 0x12184, 0x12185, 0x12186, 0x12187, 0x12188, 0x12189, 0x1218a, 0x1218b, 0x1218c, 0x1218d, 0x1218e, 0x1218f, 0x12190, 0x12191, 0x12192, 0x12193, 0x12194, 0x12195, 0x12196, 0x12197, 0x12198, 0x12199, 0x1219a, 0x1219b, 0x1219c, 0x1219d, 0x1219e, 0x1219f, 0x121a0, 0x121a1, 0x121a2, 0x121a3, 0x121a4, 0x121a5, 0x121a6, 0x121a7, 0x121a8, 0x121a9
};

void BM_collation_element_lookup_436(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 0, cps_436 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 1, cps_436 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 2, cps_436 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 3, cps_436 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 4, cps_436 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 5, cps_436 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 6, cps_436 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 7, cps_436 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 8, cps_436 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 9, cps_436 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 10, cps_436 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 11, cps_436 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 12, cps_436 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 13, cps_436 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 14, cps_436 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 15, cps_436 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 16, cps_436 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 17, cps_436 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 18, cps_436 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 19, cps_436 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 20, cps_436 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 21, cps_436 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 22, cps_436 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 23, cps_436 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 24, cps_436 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 25, cps_436 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 26, cps_436 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 27, cps_436 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 28, cps_436 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 29, cps_436 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 30, cps_436 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 31, cps_436 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 32, cps_436 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 33, cps_436 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 34, cps_436 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 35, cps_436 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 36, cps_436 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 37, cps_436 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 38, cps_436 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 39, cps_436 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 40, cps_436 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 41, cps_436 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 42, cps_436 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 43, cps_436 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 44, cps_436 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 45, cps_436 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 46, cps_436 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 47, cps_436 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 48, cps_436 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_436 + 49, cps_436 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_436);

uint32_t cps_437[] = {
0x121aa, 0x121ab, 0x121ac, 0x121ad, 0x121ae, 0x121af, 0x121b0, 0x121b1, 0x121b2, 0x121b3, 0x121b4, 0x121b5, 0x121b6, 0x121b7, 0x121b8, 0x121b9, 0x121ba, 0x121bb, 0x121bc, 0x121bd, 0x121be, 0x121bf, 0x121c0, 0x121c1, 0x121c2, 0x121c3, 0x121c4, 0x121c5, 0x121c6, 0x121c7, 0x121c8, 0x121c9, 0x121ca, 0x121cb, 0x121cc, 0x121cd, 0x121ce, 0x121cf, 0x121d0, 0x121d1, 0x121d2, 0x121d3, 0x121d4, 0x121d5, 0x121d6, 0x121d7, 0x121d8, 0x121d9, 0x121da, 0x121db
};

void BM_collation_element_lookup_437(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 0, cps_437 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 1, cps_437 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 2, cps_437 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 3, cps_437 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 4, cps_437 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 5, cps_437 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 6, cps_437 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 7, cps_437 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 8, cps_437 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 9, cps_437 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 10, cps_437 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 11, cps_437 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 12, cps_437 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 13, cps_437 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 14, cps_437 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 15, cps_437 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 16, cps_437 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 17, cps_437 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 18, cps_437 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 19, cps_437 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 20, cps_437 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 21, cps_437 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 22, cps_437 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 23, cps_437 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 24, cps_437 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 25, cps_437 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 26, cps_437 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 27, cps_437 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 28, cps_437 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 29, cps_437 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 30, cps_437 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 31, cps_437 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 32, cps_437 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 33, cps_437 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 34, cps_437 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 35, cps_437 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 36, cps_437 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 37, cps_437 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 38, cps_437 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 39, cps_437 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 40, cps_437 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 41, cps_437 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 42, cps_437 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 43, cps_437 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 44, cps_437 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 45, cps_437 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 46, cps_437 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 47, cps_437 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 48, cps_437 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_437 + 49, cps_437 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_437);

uint32_t cps_438[] = {
0x121dc, 0x121dd, 0x121de, 0x121df, 0x121e0, 0x121e1, 0x121e2, 0x121e3, 0x121e4, 0x121e5, 0x121e6, 0x121e7, 0x121e8, 0x121e9, 0x121ea, 0x121eb, 0x121ec, 0x121ed, 0x121ee, 0x121ef, 0x121f0, 0x121f1, 0x121f2, 0x121f3, 0x121f4, 0x121f5, 0x121f6, 0x121f7, 0x121f8, 0x121f9, 0x121fa, 0x121fb, 0x121fc, 0x121fd, 0x121fe, 0x121ff, 0x12200, 0x12201, 0x12202, 0x12203, 0x12204, 0x12205, 0x12206, 0x12207, 0x12208, 0x12209, 0x1220a, 0x1220b, 0x1220c, 0x1220d
};

void BM_collation_element_lookup_438(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 0, cps_438 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 1, cps_438 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 2, cps_438 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 3, cps_438 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 4, cps_438 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 5, cps_438 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 6, cps_438 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 7, cps_438 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 8, cps_438 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 9, cps_438 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 10, cps_438 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 11, cps_438 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 12, cps_438 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 13, cps_438 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 14, cps_438 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 15, cps_438 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 16, cps_438 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 17, cps_438 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 18, cps_438 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 19, cps_438 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 20, cps_438 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 21, cps_438 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 22, cps_438 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 23, cps_438 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 24, cps_438 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 25, cps_438 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 26, cps_438 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 27, cps_438 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 28, cps_438 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 29, cps_438 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 30, cps_438 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 31, cps_438 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 32, cps_438 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 33, cps_438 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 34, cps_438 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 35, cps_438 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 36, cps_438 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 37, cps_438 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 38, cps_438 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 39, cps_438 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 40, cps_438 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 41, cps_438 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 42, cps_438 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 43, cps_438 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 44, cps_438 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 45, cps_438 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 46, cps_438 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 47, cps_438 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 48, cps_438 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_438 + 49, cps_438 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_438);

uint32_t cps_439[] = {
0x1220e, 0x1220f, 0x12210, 0x12211, 0x12212, 0x12213, 0x12214, 0x12215, 0x12216, 0x12217, 0x12218, 0x12219, 0x1221a, 0x1221b, 0x1221c, 0x1221d, 0x1221e, 0x1221f, 0x12220, 0x12221, 0x12222, 0x12223, 0x12224, 0x12225, 0x12226, 0x12227, 0x12228, 0x12229, 0x1222a, 0x1222b, 0x1222c, 0x1222d, 0x1222e, 0x1222f, 0x12230, 0x12231, 0x12232, 0x12233, 0x12234, 0x12235, 0x12236, 0x12237, 0x12238, 0x12239, 0x1223a, 0x1223b, 0x1223c, 0x1223d, 0x1223e, 0x1223f
};

void BM_collation_element_lookup_439(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 0, cps_439 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 1, cps_439 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 2, cps_439 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 3, cps_439 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 4, cps_439 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 5, cps_439 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 6, cps_439 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 7, cps_439 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 8, cps_439 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 9, cps_439 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 10, cps_439 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 11, cps_439 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 12, cps_439 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 13, cps_439 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 14, cps_439 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 15, cps_439 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 16, cps_439 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 17, cps_439 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 18, cps_439 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 19, cps_439 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 20, cps_439 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 21, cps_439 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 22, cps_439 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 23, cps_439 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 24, cps_439 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 25, cps_439 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 26, cps_439 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 27, cps_439 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 28, cps_439 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 29, cps_439 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 30, cps_439 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 31, cps_439 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 32, cps_439 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 33, cps_439 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 34, cps_439 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 35, cps_439 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 36, cps_439 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 37, cps_439 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 38, cps_439 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 39, cps_439 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 40, cps_439 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 41, cps_439 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 42, cps_439 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 43, cps_439 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 44, cps_439 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 45, cps_439 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 46, cps_439 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 47, cps_439 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 48, cps_439 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_439 + 49, cps_439 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_439);

uint32_t cps_440[] = {
0x12240, 0x12241, 0x12242, 0x12243, 0x12244, 0x12245, 0x12246, 0x12247, 0x12248, 0x12249, 0x1224a, 0x1224b, 0x1224c, 0x1224d, 0x1224e, 0x1224f, 0x12250, 0x12251, 0x12252, 0x12253, 0x12254, 0x12255, 0x12256, 0x12257, 0x12258, 0x12259, 0x1225a, 0x1225b, 0x1225c, 0x1225d, 0x1225e, 0x1225f, 0x12260, 0x12261, 0x12262, 0x12263, 0x12264, 0x12265, 0x12266, 0x12267, 0x12268, 0x12269, 0x1226a, 0x1226b, 0x1226c, 0x1226d, 0x1226e, 0x1226f, 0x12270, 0x12271
};

void BM_collation_element_lookup_440(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 0, cps_440 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 1, cps_440 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 2, cps_440 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 3, cps_440 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 4, cps_440 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 5, cps_440 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 6, cps_440 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 7, cps_440 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 8, cps_440 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 9, cps_440 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 10, cps_440 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 11, cps_440 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 12, cps_440 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 13, cps_440 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 14, cps_440 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 15, cps_440 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 16, cps_440 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 17, cps_440 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 18, cps_440 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 19, cps_440 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 20, cps_440 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 21, cps_440 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 22, cps_440 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 23, cps_440 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 24, cps_440 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 25, cps_440 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 26, cps_440 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 27, cps_440 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 28, cps_440 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 29, cps_440 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 30, cps_440 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 31, cps_440 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 32, cps_440 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 33, cps_440 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 34, cps_440 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 35, cps_440 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 36, cps_440 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 37, cps_440 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 38, cps_440 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 39, cps_440 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 40, cps_440 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 41, cps_440 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 42, cps_440 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 43, cps_440 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 44, cps_440 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 45, cps_440 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 46, cps_440 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 47, cps_440 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 48, cps_440 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_440 + 49, cps_440 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_440);

uint32_t cps_441[] = {
0x12272, 0x12273, 0x12274, 0x12275, 0x12276, 0x12277, 0x12278, 0x12279, 0x1227a, 0x1227b, 0x1227c, 0x1227d, 0x1227e, 0x1227f, 0x12280, 0x12281, 0x12282, 0x12283, 0x12284, 0x12285, 0x12286, 0x12287, 0x12288, 0x12289, 0x1228a, 0x1228b, 0x1228c, 0x1228d, 0x1228e, 0x1228f, 0x12290, 0x12291, 0x12292, 0x12293, 0x12294, 0x12295, 0x12296, 0x12297, 0x12298, 0x12299, 0x1229a, 0x1229b, 0x1229c, 0x1229d, 0x1229e, 0x1229f, 0x122a0, 0x122a1, 0x122a2, 0x122a3
};

void BM_collation_element_lookup_441(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 0, cps_441 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 1, cps_441 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 2, cps_441 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 3, cps_441 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 4, cps_441 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 5, cps_441 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 6, cps_441 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 7, cps_441 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 8, cps_441 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 9, cps_441 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 10, cps_441 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 11, cps_441 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 12, cps_441 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 13, cps_441 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 14, cps_441 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 15, cps_441 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 16, cps_441 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 17, cps_441 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 18, cps_441 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 19, cps_441 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 20, cps_441 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 21, cps_441 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 22, cps_441 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 23, cps_441 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 24, cps_441 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 25, cps_441 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 26, cps_441 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 27, cps_441 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 28, cps_441 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 29, cps_441 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 30, cps_441 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 31, cps_441 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 32, cps_441 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 33, cps_441 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 34, cps_441 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 35, cps_441 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 36, cps_441 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 37, cps_441 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 38, cps_441 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 39, cps_441 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 40, cps_441 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 41, cps_441 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 42, cps_441 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 43, cps_441 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 44, cps_441 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 45, cps_441 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 46, cps_441 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 47, cps_441 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 48, cps_441 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_441 + 49, cps_441 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_441);

uint32_t cps_442[] = {
0x122a4, 0x122a5, 0x122a6, 0x122a7, 0x122a8, 0x122a9, 0x122aa, 0x122ab, 0x122ac, 0x122ad, 0x122ae, 0x122af, 0x122b0, 0x122b1, 0x122b2, 0x122b3, 0x122b4, 0x122b5, 0x122b6, 0x122b7, 0x122b8, 0x122b9, 0x122ba, 0x122bb, 0x122bc, 0x122bd, 0x122be, 0x122bf, 0x122c0, 0x122c1, 0x122c2, 0x122c3, 0x122c4, 0x122c5, 0x122c6, 0x122c7, 0x122c8, 0x122c9, 0x122ca, 0x122cb, 0x122cc, 0x122cd, 0x122ce, 0x122cf, 0x122d0, 0x122d1, 0x122d2, 0x122d3, 0x122d4, 0x122d5
};

void BM_collation_element_lookup_442(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 0, cps_442 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 1, cps_442 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 2, cps_442 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 3, cps_442 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 4, cps_442 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 5, cps_442 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 6, cps_442 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 7, cps_442 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 8, cps_442 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 9, cps_442 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 10, cps_442 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 11, cps_442 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 12, cps_442 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 13, cps_442 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 14, cps_442 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 15, cps_442 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 16, cps_442 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 17, cps_442 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 18, cps_442 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 19, cps_442 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 20, cps_442 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 21, cps_442 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 22, cps_442 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 23, cps_442 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 24, cps_442 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 25, cps_442 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 26, cps_442 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 27, cps_442 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 28, cps_442 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 29, cps_442 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 30, cps_442 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 31, cps_442 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 32, cps_442 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 33, cps_442 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 34, cps_442 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 35, cps_442 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 36, cps_442 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 37, cps_442 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 38, cps_442 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 39, cps_442 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 40, cps_442 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 41, cps_442 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 42, cps_442 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 43, cps_442 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 44, cps_442 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 45, cps_442 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 46, cps_442 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 47, cps_442 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 48, cps_442 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_442 + 49, cps_442 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_442);

uint32_t cps_443[] = {
0x122d6, 0x122d7, 0x122d8, 0x122d9, 0x122da, 0x122db, 0x122dc, 0x122dd, 0x122de, 0x122df, 0x122e0, 0x122e1, 0x122e2, 0x122e3, 0x122e4, 0x122e5, 0x122e6, 0x122e7, 0x122e8, 0x122e9, 0x122ea, 0x122eb, 0x122ec, 0x122ed, 0x122ee, 0x122ef, 0x122f0, 0x122f1, 0x122f2, 0x122f3, 0x122f4, 0x122f5, 0x122f6, 0x122f7, 0x122f8, 0x122f9, 0x122fa, 0x122fb, 0x122fc, 0x122fd, 0x122fe, 0x122ff, 0x12300, 0x12301, 0x12302, 0x12303, 0x12304, 0x12305, 0x12306, 0x12307
};

void BM_collation_element_lookup_443(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 0, cps_443 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 1, cps_443 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 2, cps_443 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 3, cps_443 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 4, cps_443 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 5, cps_443 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 6, cps_443 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 7, cps_443 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 8, cps_443 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 9, cps_443 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 10, cps_443 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 11, cps_443 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 12, cps_443 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 13, cps_443 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 14, cps_443 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 15, cps_443 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 16, cps_443 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 17, cps_443 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 18, cps_443 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 19, cps_443 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 20, cps_443 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 21, cps_443 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 22, cps_443 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 23, cps_443 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 24, cps_443 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 25, cps_443 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 26, cps_443 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 27, cps_443 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 28, cps_443 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 29, cps_443 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 30, cps_443 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 31, cps_443 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 32, cps_443 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 33, cps_443 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 34, cps_443 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 35, cps_443 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 36, cps_443 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 37, cps_443 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 38, cps_443 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 39, cps_443 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 40, cps_443 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 41, cps_443 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 42, cps_443 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 43, cps_443 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 44, cps_443 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 45, cps_443 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 46, cps_443 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 47, cps_443 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 48, cps_443 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_443 + 49, cps_443 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_443);

uint32_t cps_444[] = {
0x12308, 0x12309, 0x1230a, 0x1230b, 0x1230c, 0x1230d, 0x1230e, 0x1230f, 0x12310, 0x12311, 0x12312, 0x12313, 0x12314, 0x12315, 0x12316, 0x12317, 0x12318, 0x12319, 0x1231a, 0x1231b, 0x1231c, 0x1231d, 0x1231e, 0x1231f, 0x12320, 0x12321, 0x12322, 0x12323, 0x12324, 0x12325, 0x12326, 0x12327, 0x12328, 0x12329, 0x1232a, 0x1232b, 0x1232c, 0x1232d, 0x1232e, 0x1232f, 0x12330, 0x12331, 0x12332, 0x12333, 0x12334, 0x12335, 0x12336, 0x12337, 0x12338, 0x12339
};

void BM_collation_element_lookup_444(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 0, cps_444 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 1, cps_444 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 2, cps_444 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 3, cps_444 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 4, cps_444 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 5, cps_444 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 6, cps_444 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 7, cps_444 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 8, cps_444 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 9, cps_444 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 10, cps_444 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 11, cps_444 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 12, cps_444 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 13, cps_444 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 14, cps_444 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 15, cps_444 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 16, cps_444 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 17, cps_444 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 18, cps_444 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 19, cps_444 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 20, cps_444 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 21, cps_444 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 22, cps_444 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 23, cps_444 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 24, cps_444 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 25, cps_444 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 26, cps_444 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 27, cps_444 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 28, cps_444 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 29, cps_444 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 30, cps_444 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 31, cps_444 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 32, cps_444 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 33, cps_444 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 34, cps_444 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 35, cps_444 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 36, cps_444 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 37, cps_444 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 38, cps_444 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 39, cps_444 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 40, cps_444 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 41, cps_444 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 42, cps_444 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 43, cps_444 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 44, cps_444 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 45, cps_444 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 46, cps_444 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 47, cps_444 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 48, cps_444 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_444 + 49, cps_444 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_444);

uint32_t cps_445[] = {
0x1233a, 0x1233b, 0x1233c, 0x1233d, 0x1233e, 0x1233f, 0x12340, 0x12341, 0x12342, 0x12343, 0x12344, 0x12345, 0x12346, 0x12347, 0x12348, 0x12349, 0x1234a, 0x1234b, 0x1234c, 0x1234d, 0x1234e, 0x1234f, 0x12350, 0x12351, 0x12352, 0x12353, 0x12354, 0x12355, 0x12356, 0x12357, 0x12358, 0x12359, 0x1235a, 0x1235b, 0x1235c, 0x1235d, 0x1235e, 0x1235f, 0x12360, 0x12361, 0x12362, 0x12363, 0x12364, 0x12365, 0x12366, 0x12367, 0x12368, 0x12369, 0x1236a, 0x1236b
};

void BM_collation_element_lookup_445(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 0, cps_445 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 1, cps_445 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 2, cps_445 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 3, cps_445 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 4, cps_445 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 5, cps_445 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 6, cps_445 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 7, cps_445 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 8, cps_445 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 9, cps_445 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 10, cps_445 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 11, cps_445 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 12, cps_445 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 13, cps_445 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 14, cps_445 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 15, cps_445 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 16, cps_445 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 17, cps_445 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 18, cps_445 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 19, cps_445 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 20, cps_445 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 21, cps_445 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 22, cps_445 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 23, cps_445 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 24, cps_445 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 25, cps_445 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 26, cps_445 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 27, cps_445 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 28, cps_445 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 29, cps_445 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 30, cps_445 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 31, cps_445 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 32, cps_445 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 33, cps_445 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 34, cps_445 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 35, cps_445 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 36, cps_445 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 37, cps_445 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 38, cps_445 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 39, cps_445 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 40, cps_445 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 41, cps_445 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 42, cps_445 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 43, cps_445 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 44, cps_445 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 45, cps_445 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 46, cps_445 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 47, cps_445 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 48, cps_445 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_445 + 49, cps_445 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_445);

uint32_t cps_446[] = {
0x1236c, 0x1236d, 0x1236e, 0x1236f, 0x12370, 0x12371, 0x12372, 0x12373, 0x12374, 0x12375, 0x12376, 0x12377, 0x12378, 0x12379, 0x1237a, 0x1237b, 0x1237c, 0x1237d, 0x1237e, 0x1237f, 0x12380, 0x12381, 0x12382, 0x12383, 0x12384, 0x12385, 0x12386, 0x12387, 0x12388, 0x12389, 0x1238a, 0x1238b, 0x1238c, 0x1238d, 0x1238e, 0x1238f, 0x12390, 0x12391, 0x12392, 0x12393, 0x12394, 0x12395, 0x12396, 0x12397, 0x12398, 0x12399, 0x12400, 0x12401, 0x12402, 0x12403
};

void BM_collation_element_lookup_446(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 0, cps_446 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 1, cps_446 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 2, cps_446 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 3, cps_446 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 4, cps_446 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 5, cps_446 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 6, cps_446 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 7, cps_446 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 8, cps_446 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 9, cps_446 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 10, cps_446 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 11, cps_446 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 12, cps_446 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 13, cps_446 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 14, cps_446 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 15, cps_446 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 16, cps_446 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 17, cps_446 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 18, cps_446 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 19, cps_446 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 20, cps_446 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 21, cps_446 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 22, cps_446 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 23, cps_446 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 24, cps_446 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 25, cps_446 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 26, cps_446 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 27, cps_446 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 28, cps_446 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 29, cps_446 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 30, cps_446 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 31, cps_446 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 32, cps_446 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 33, cps_446 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 34, cps_446 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 35, cps_446 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 36, cps_446 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 37, cps_446 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 38, cps_446 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 39, cps_446 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 40, cps_446 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 41, cps_446 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 42, cps_446 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 43, cps_446 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 44, cps_446 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 45, cps_446 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 46, cps_446 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 47, cps_446 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 48, cps_446 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_446 + 49, cps_446 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_446);

uint32_t cps_447[] = {
0x12404, 0x12405, 0x12406, 0x12407, 0x12408, 0x12409, 0x1240a, 0x1240b, 0x1240c, 0x1240d, 0x1240e, 0x1240f, 0x12410, 0x12411, 0x12412, 0x12413, 0x12414, 0x12415, 0x12416, 0x12417, 0x12418, 0x12419, 0x1241a, 0x1241b, 0x1241c, 0x1241d, 0x1241e, 0x1241f, 0x12420, 0x12421, 0x12422, 0x12423, 0x12424, 0x12425, 0x12426, 0x12427, 0x12428, 0x12429, 0x1242a, 0x1242b, 0x1242c, 0x1242d, 0x1242e, 0x1242f, 0x12430, 0x12431, 0x12432, 0x12433, 0x12434, 0x12435
};

void BM_collation_element_lookup_447(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 0, cps_447 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 1, cps_447 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 2, cps_447 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 3, cps_447 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 4, cps_447 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 5, cps_447 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 6, cps_447 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 7, cps_447 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 8, cps_447 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 9, cps_447 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 10, cps_447 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 11, cps_447 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 12, cps_447 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 13, cps_447 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 14, cps_447 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 15, cps_447 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 16, cps_447 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 17, cps_447 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 18, cps_447 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 19, cps_447 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 20, cps_447 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 21, cps_447 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 22, cps_447 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 23, cps_447 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 24, cps_447 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 25, cps_447 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 26, cps_447 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 27, cps_447 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 28, cps_447 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 29, cps_447 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 30, cps_447 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 31, cps_447 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 32, cps_447 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 33, cps_447 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 34, cps_447 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 35, cps_447 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 36, cps_447 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 37, cps_447 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 38, cps_447 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 39, cps_447 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 40, cps_447 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 41, cps_447 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 42, cps_447 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 43, cps_447 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 44, cps_447 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 45, cps_447 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 46, cps_447 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 47, cps_447 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 48, cps_447 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_447 + 49, cps_447 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_447);

uint32_t cps_448[] = {
0x12436, 0x12437, 0x12438, 0x12439, 0x1243a, 0x1243b, 0x1243c, 0x1243d, 0x1243e, 0x1243f, 0x12440, 0x12441, 0x12442, 0x12443, 0x12444, 0x12445, 0x12446, 0x12447, 0x12448, 0x12449, 0x1244a, 0x1244b, 0x1244c, 0x1244d, 0x1244e, 0x1244f, 0x12450, 0x12451, 0x12452, 0x12453, 0x12454, 0x12455, 0x12456, 0x12457, 0x12458, 0x12459, 0x1245a, 0x1245b, 0x1245c, 0x1245d, 0x1245e, 0x1245f, 0x12460, 0x12461, 0x12462, 0x12463, 0x12464, 0x12465, 0x12466, 0x12467
};

void BM_collation_element_lookup_448(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 0, cps_448 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 1, cps_448 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 2, cps_448 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 3, cps_448 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 4, cps_448 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 5, cps_448 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 6, cps_448 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 7, cps_448 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 8, cps_448 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 9, cps_448 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 10, cps_448 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 11, cps_448 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 12, cps_448 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 13, cps_448 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 14, cps_448 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 15, cps_448 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 16, cps_448 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 17, cps_448 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 18, cps_448 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 19, cps_448 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 20, cps_448 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 21, cps_448 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 22, cps_448 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 23, cps_448 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 24, cps_448 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 25, cps_448 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 26, cps_448 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 27, cps_448 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 28, cps_448 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 29, cps_448 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 30, cps_448 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 31, cps_448 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 32, cps_448 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 33, cps_448 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 34, cps_448 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 35, cps_448 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 36, cps_448 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 37, cps_448 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 38, cps_448 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 39, cps_448 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 40, cps_448 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 41, cps_448 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 42, cps_448 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 43, cps_448 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 44, cps_448 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 45, cps_448 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 46, cps_448 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 47, cps_448 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 48, cps_448 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_448 + 49, cps_448 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_448);

uint32_t cps_449[] = {
0x12468, 0x12469, 0x1246a, 0x1246b, 0x1246c, 0x1246d, 0x1246e, 0x12470, 0x12471, 0x12472, 0x12473, 0x12474, 0x12480, 0x12481, 0x12482, 0x12483, 0x12484, 0x12485, 0x12486, 0x12487, 0x12488, 0x12489, 0x1248a, 0x1248b, 0x1248c, 0x1248d, 0x1248e, 0x1248f, 0x12490, 0x12491, 0x12492, 0x12493, 0x12494, 0x12495, 0x12496, 0x12497, 0x12498, 0x12499, 0x1249a, 0x1249b, 0x1249c, 0x1249d, 0x1249e, 0x1249f, 0x124a0, 0x124a1, 0x124a2, 0x124a3, 0x124a4, 0x124a5
};

void BM_collation_element_lookup_449(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 0, cps_449 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 1, cps_449 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 2, cps_449 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 3, cps_449 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 4, cps_449 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 5, cps_449 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 6, cps_449 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 7, cps_449 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 8, cps_449 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 9, cps_449 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 10, cps_449 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 11, cps_449 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 12, cps_449 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 13, cps_449 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 14, cps_449 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 15, cps_449 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 16, cps_449 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 17, cps_449 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 18, cps_449 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 19, cps_449 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 20, cps_449 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 21, cps_449 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 22, cps_449 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 23, cps_449 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 24, cps_449 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 25, cps_449 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 26, cps_449 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 27, cps_449 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 28, cps_449 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 29, cps_449 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 30, cps_449 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 31, cps_449 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 32, cps_449 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 33, cps_449 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 34, cps_449 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 35, cps_449 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 36, cps_449 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 37, cps_449 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 38, cps_449 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 39, cps_449 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 40, cps_449 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 41, cps_449 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 42, cps_449 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 43, cps_449 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 44, cps_449 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 45, cps_449 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 46, cps_449 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 47, cps_449 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 48, cps_449 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_449 + 49, cps_449 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_449);

uint32_t cps_450[] = {
0x124a6, 0x124a7, 0x124a8, 0x124a9, 0x124aa, 0x124ab, 0x124ac, 0x124ad, 0x124ae, 0x124af, 0x124b0, 0x124b1, 0x124b2, 0x124b3, 0x124b4, 0x124b5, 0x124b6, 0x124b7, 0x124b8, 0x124b9, 0x124ba, 0x124bb, 0x124bc, 0x124bd, 0x124be, 0x124bf, 0x124c0, 0x124c1, 0x124c2, 0x124c3, 0x124c4, 0x124c5, 0x124c6, 0x124c7, 0x124c8, 0x124c9, 0x124ca, 0x124cb, 0x124cc, 0x124cd, 0x124ce, 0x124cf, 0x124d0, 0x124d1, 0x124d2, 0x124d3, 0x124d4, 0x124d5, 0x124d6, 0x124d7
};

void BM_collation_element_lookup_450(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 0, cps_450 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 1, cps_450 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 2, cps_450 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 3, cps_450 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 4, cps_450 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 5, cps_450 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 6, cps_450 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 7, cps_450 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 8, cps_450 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 9, cps_450 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 10, cps_450 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 11, cps_450 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 12, cps_450 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 13, cps_450 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 14, cps_450 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 15, cps_450 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 16, cps_450 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 17, cps_450 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 18, cps_450 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 19, cps_450 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 20, cps_450 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 21, cps_450 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 22, cps_450 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 23, cps_450 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 24, cps_450 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 25, cps_450 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 26, cps_450 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 27, cps_450 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 28, cps_450 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 29, cps_450 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 30, cps_450 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 31, cps_450 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 32, cps_450 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 33, cps_450 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 34, cps_450 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 35, cps_450 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 36, cps_450 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 37, cps_450 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 38, cps_450 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 39, cps_450 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 40, cps_450 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 41, cps_450 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 42, cps_450 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 43, cps_450 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 44, cps_450 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 45, cps_450 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 46, cps_450 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 47, cps_450 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 48, cps_450 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_450 + 49, cps_450 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_450);

uint32_t cps_451[] = {
0x124d8, 0x124d9, 0x124da, 0x124db, 0x124dc, 0x124dd, 0x124de, 0x124df, 0x124e0, 0x124e1, 0x124e2, 0x124e3, 0x124e4, 0x124e5, 0x124e6, 0x124e7, 0x124e8, 0x124e9, 0x124ea, 0x124eb, 0x124ec, 0x124ed, 0x124ee, 0x124ef, 0x124f0, 0x124f1, 0x124f2, 0x124f3, 0x124f4, 0x124f5, 0x124f6, 0x124f7, 0x124f8, 0x124f9, 0x124fa, 0x124fb, 0x124fc, 0x124fd, 0x124fe, 0x124ff, 0x12500, 0x12501, 0x12502, 0x12503, 0x12504, 0x12505, 0x12506, 0x12507, 0x12508, 0x12509
};

void BM_collation_element_lookup_451(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 0, cps_451 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 1, cps_451 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 2, cps_451 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 3, cps_451 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 4, cps_451 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 5, cps_451 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 6, cps_451 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 7, cps_451 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 8, cps_451 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 9, cps_451 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 10, cps_451 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 11, cps_451 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 12, cps_451 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 13, cps_451 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 14, cps_451 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 15, cps_451 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 16, cps_451 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 17, cps_451 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 18, cps_451 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 19, cps_451 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 20, cps_451 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 21, cps_451 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 22, cps_451 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 23, cps_451 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 24, cps_451 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 25, cps_451 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 26, cps_451 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 27, cps_451 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 28, cps_451 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 29, cps_451 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 30, cps_451 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 31, cps_451 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 32, cps_451 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 33, cps_451 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 34, cps_451 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 35, cps_451 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 36, cps_451 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 37, cps_451 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 38, cps_451 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 39, cps_451 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 40, cps_451 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 41, cps_451 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 42, cps_451 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 43, cps_451 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 44, cps_451 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 45, cps_451 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 46, cps_451 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 47, cps_451 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 48, cps_451 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_451 + 49, cps_451 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_451);

uint32_t cps_452[] = {
0x1250a, 0x1250b, 0x1250c, 0x1250d, 0x1250e, 0x1250f, 0x12510, 0x12511, 0x12512, 0x12513, 0x12514, 0x12515, 0x12516, 0x12517, 0x12518, 0x12519, 0x1251a, 0x1251b, 0x1251c, 0x1251d, 0x1251e, 0x1251f, 0x12520, 0x12521, 0x12522, 0x12523, 0x12524, 0x12525, 0x12526, 0x12527, 0x12528, 0x12529, 0x1252a, 0x1252b, 0x1252c, 0x1252d, 0x1252e, 0x1252f, 0x12530, 0x12531, 0x12532, 0x12533, 0x12534, 0x12535, 0x12536, 0x12537, 0x12538, 0x12539, 0x1253a, 0x1253b
};

void BM_collation_element_lookup_452(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 0, cps_452 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 1, cps_452 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 2, cps_452 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 3, cps_452 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 4, cps_452 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 5, cps_452 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 6, cps_452 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 7, cps_452 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 8, cps_452 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 9, cps_452 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 10, cps_452 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 11, cps_452 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 12, cps_452 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 13, cps_452 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 14, cps_452 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 15, cps_452 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 16, cps_452 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 17, cps_452 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 18, cps_452 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 19, cps_452 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 20, cps_452 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 21, cps_452 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 22, cps_452 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 23, cps_452 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 24, cps_452 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 25, cps_452 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 26, cps_452 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 27, cps_452 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 28, cps_452 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 29, cps_452 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 30, cps_452 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 31, cps_452 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 32, cps_452 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 33, cps_452 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 34, cps_452 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 35, cps_452 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 36, cps_452 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 37, cps_452 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 38, cps_452 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 39, cps_452 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 40, cps_452 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 41, cps_452 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 42, cps_452 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 43, cps_452 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 44, cps_452 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 45, cps_452 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 46, cps_452 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 47, cps_452 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 48, cps_452 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_452 + 49, cps_452 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_452);

uint32_t cps_453[] = {
0x1253c, 0x1253d, 0x1253e, 0x1253f, 0x12540, 0x12541, 0x12542, 0x12543, 0x13000, 0x13001, 0x13002, 0x13003, 0x13004, 0x13005, 0x13006, 0x13007, 0x13008, 0x13009, 0x1300a, 0x1300b, 0x1300c, 0x1300d, 0x1300e, 0x1300f, 0x13010, 0x13011, 0x13012, 0x13013, 0x13014, 0x13015, 0x13016, 0x13017, 0x13018, 0x13019, 0x1301a, 0x1301b, 0x1301c, 0x1301d, 0x1301e, 0x1301f, 0x13020, 0x13021, 0x13022, 0x13023, 0x13024, 0x13025, 0x13026, 0x13027, 0x13028, 0x13029
};

void BM_collation_element_lookup_453(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 0, cps_453 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 1, cps_453 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 2, cps_453 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 3, cps_453 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 4, cps_453 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 5, cps_453 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 6, cps_453 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 7, cps_453 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 8, cps_453 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 9, cps_453 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 10, cps_453 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 11, cps_453 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 12, cps_453 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 13, cps_453 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 14, cps_453 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 15, cps_453 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 16, cps_453 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 17, cps_453 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 18, cps_453 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 19, cps_453 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 20, cps_453 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 21, cps_453 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 22, cps_453 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 23, cps_453 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 24, cps_453 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 25, cps_453 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 26, cps_453 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 27, cps_453 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 28, cps_453 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 29, cps_453 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 30, cps_453 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 31, cps_453 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 32, cps_453 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 33, cps_453 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 34, cps_453 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 35, cps_453 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 36, cps_453 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 37, cps_453 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 38, cps_453 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 39, cps_453 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 40, cps_453 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 41, cps_453 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 42, cps_453 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 43, cps_453 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 44, cps_453 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 45, cps_453 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 46, cps_453 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 47, cps_453 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 48, cps_453 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_453 + 49, cps_453 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_453);

uint32_t cps_454[] = {
0x1302a, 0x1302b, 0x1302c, 0x1302d, 0x1302e, 0x1302f, 0x13030, 0x13031, 0x13032, 0x13033, 0x13034, 0x13035, 0x13036, 0x13037, 0x13038, 0x13039, 0x1303a, 0x1303b, 0x1303c, 0x1303d, 0x1303e, 0x1303f, 0x13040, 0x13041, 0x13042, 0x13043, 0x13044, 0x13045, 0x13046, 0x13047, 0x13048, 0x13049, 0x1304a, 0x1304b, 0x1304c, 0x1304d, 0x1304e, 0x1304f, 0x13050, 0x13051, 0x13052, 0x13053, 0x13054, 0x13055, 0x13056, 0x13057, 0x13058, 0x13059, 0x1305a, 0x1305b
};

void BM_collation_element_lookup_454(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 0, cps_454 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 1, cps_454 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 2, cps_454 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 3, cps_454 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 4, cps_454 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 5, cps_454 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 6, cps_454 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 7, cps_454 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 8, cps_454 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 9, cps_454 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 10, cps_454 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 11, cps_454 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 12, cps_454 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 13, cps_454 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 14, cps_454 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 15, cps_454 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 16, cps_454 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 17, cps_454 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 18, cps_454 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 19, cps_454 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 20, cps_454 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 21, cps_454 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 22, cps_454 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 23, cps_454 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 24, cps_454 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 25, cps_454 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 26, cps_454 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 27, cps_454 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 28, cps_454 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 29, cps_454 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 30, cps_454 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 31, cps_454 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 32, cps_454 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 33, cps_454 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 34, cps_454 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 35, cps_454 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 36, cps_454 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 37, cps_454 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 38, cps_454 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 39, cps_454 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 40, cps_454 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 41, cps_454 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 42, cps_454 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 43, cps_454 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 44, cps_454 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 45, cps_454 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 46, cps_454 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 47, cps_454 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 48, cps_454 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_454 + 49, cps_454 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_454);

uint32_t cps_455[] = {
0x1305c, 0x1305d, 0x1305e, 0x1305f, 0x13060, 0x13061, 0x13062, 0x13063, 0x13064, 0x13065, 0x13066, 0x13067, 0x13068, 0x13069, 0x1306a, 0x1306b, 0x1306c, 0x1306d, 0x1306e, 0x1306f, 0x13070, 0x13071, 0x13072, 0x13073, 0x13074, 0x13075, 0x13076, 0x13077, 0x13078, 0x13079, 0x1307a, 0x1307b, 0x1307c, 0x1307d, 0x1307e, 0x1307f, 0x13080, 0x13081, 0x13082, 0x13083, 0x13084, 0x13085, 0x13086, 0x13087, 0x13088, 0x13089, 0x1308a, 0x1308b, 0x1308c, 0x1308d
};

void BM_collation_element_lookup_455(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 0, cps_455 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 1, cps_455 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 2, cps_455 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 3, cps_455 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 4, cps_455 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 5, cps_455 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 6, cps_455 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 7, cps_455 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 8, cps_455 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 9, cps_455 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 10, cps_455 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 11, cps_455 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 12, cps_455 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 13, cps_455 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 14, cps_455 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 15, cps_455 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 16, cps_455 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 17, cps_455 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 18, cps_455 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 19, cps_455 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 20, cps_455 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 21, cps_455 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 22, cps_455 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 23, cps_455 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 24, cps_455 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 25, cps_455 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 26, cps_455 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 27, cps_455 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 28, cps_455 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 29, cps_455 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 30, cps_455 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 31, cps_455 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 32, cps_455 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 33, cps_455 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 34, cps_455 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 35, cps_455 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 36, cps_455 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 37, cps_455 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 38, cps_455 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 39, cps_455 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 40, cps_455 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 41, cps_455 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 42, cps_455 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 43, cps_455 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 44, cps_455 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 45, cps_455 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 46, cps_455 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 47, cps_455 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 48, cps_455 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_455 + 49, cps_455 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_455);

uint32_t cps_456[] = {
0x1308e, 0x1308f, 0x13090, 0x13091, 0x13092, 0x13093, 0x13094, 0x13095, 0x13096, 0x13097, 0x13098, 0x13099, 0x1309a, 0x1309b, 0x1309c, 0x1309d, 0x1309e, 0x1309f, 0x130a0, 0x130a1, 0x130a2, 0x130a3, 0x130a4, 0x130a5, 0x130a6, 0x130a7, 0x130a8, 0x130a9, 0x130aa, 0x130ab, 0x130ac, 0x130ad, 0x130ae, 0x130af, 0x130b0, 0x130b1, 0x130b2, 0x130b3, 0x130b4, 0x130b5, 0x130b6, 0x130b7, 0x130b8, 0x130b9, 0x130ba, 0x130bb, 0x130bc, 0x130bd, 0x130be, 0x130bf
};

void BM_collation_element_lookup_456(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 0, cps_456 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 1, cps_456 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 2, cps_456 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 3, cps_456 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 4, cps_456 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 5, cps_456 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 6, cps_456 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 7, cps_456 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 8, cps_456 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 9, cps_456 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 10, cps_456 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 11, cps_456 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 12, cps_456 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 13, cps_456 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 14, cps_456 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 15, cps_456 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 16, cps_456 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 17, cps_456 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 18, cps_456 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 19, cps_456 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 20, cps_456 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 21, cps_456 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 22, cps_456 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 23, cps_456 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 24, cps_456 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 25, cps_456 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 26, cps_456 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 27, cps_456 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 28, cps_456 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 29, cps_456 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 30, cps_456 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 31, cps_456 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 32, cps_456 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 33, cps_456 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 34, cps_456 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 35, cps_456 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 36, cps_456 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 37, cps_456 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 38, cps_456 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 39, cps_456 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 40, cps_456 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 41, cps_456 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 42, cps_456 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 43, cps_456 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 44, cps_456 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 45, cps_456 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 46, cps_456 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 47, cps_456 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 48, cps_456 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_456 + 49, cps_456 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_456);

uint32_t cps_457[] = {
0x130c0, 0x130c1, 0x130c2, 0x130c3, 0x130c4, 0x130c5, 0x130c6, 0x130c7, 0x130c8, 0x130c9, 0x130ca, 0x130cb, 0x130cc, 0x130cd, 0x130ce, 0x130cf, 0x130d0, 0x130d1, 0x130d2, 0x130d3, 0x130d4, 0x130d5, 0x130d6, 0x130d7, 0x130d8, 0x130d9, 0x130da, 0x130db, 0x130dc, 0x130dd, 0x130de, 0x130df, 0x130e0, 0x130e1, 0x130e2, 0x130e3, 0x130e4, 0x130e5, 0x130e6, 0x130e7, 0x130e8, 0x130e9, 0x130ea, 0x130eb, 0x130ec, 0x130ed, 0x130ee, 0x130ef, 0x130f0, 0x130f1
};

void BM_collation_element_lookup_457(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 0, cps_457 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 1, cps_457 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 2, cps_457 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 3, cps_457 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 4, cps_457 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 5, cps_457 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 6, cps_457 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 7, cps_457 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 8, cps_457 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 9, cps_457 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 10, cps_457 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 11, cps_457 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 12, cps_457 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 13, cps_457 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 14, cps_457 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 15, cps_457 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 16, cps_457 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 17, cps_457 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 18, cps_457 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 19, cps_457 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 20, cps_457 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 21, cps_457 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 22, cps_457 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 23, cps_457 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 24, cps_457 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 25, cps_457 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 26, cps_457 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 27, cps_457 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 28, cps_457 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 29, cps_457 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 30, cps_457 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 31, cps_457 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 32, cps_457 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 33, cps_457 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 34, cps_457 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 35, cps_457 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 36, cps_457 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 37, cps_457 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 38, cps_457 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 39, cps_457 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 40, cps_457 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 41, cps_457 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 42, cps_457 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 43, cps_457 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 44, cps_457 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 45, cps_457 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 46, cps_457 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 47, cps_457 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 48, cps_457 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_457 + 49, cps_457 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_457);

uint32_t cps_458[] = {
0x130f2, 0x130f3, 0x130f4, 0x130f5, 0x130f6, 0x130f7, 0x130f8, 0x130f9, 0x130fa, 0x130fb, 0x130fc, 0x130fd, 0x130fe, 0x130ff, 0x13100, 0x13101, 0x13102, 0x13103, 0x13104, 0x13105, 0x13106, 0x13107, 0x13108, 0x13109, 0x1310a, 0x1310b, 0x1310c, 0x1310d, 0x1310e, 0x1310f, 0x13110, 0x13111, 0x13112, 0x13113, 0x13114, 0x13115, 0x13116, 0x13117, 0x13118, 0x13119, 0x1311a, 0x1311b, 0x1311c, 0x1311d, 0x1311e, 0x1311f, 0x13120, 0x13121, 0x13122, 0x13123
};

void BM_collation_element_lookup_458(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 0, cps_458 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 1, cps_458 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 2, cps_458 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 3, cps_458 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 4, cps_458 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 5, cps_458 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 6, cps_458 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 7, cps_458 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 8, cps_458 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 9, cps_458 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 10, cps_458 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 11, cps_458 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 12, cps_458 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 13, cps_458 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 14, cps_458 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 15, cps_458 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 16, cps_458 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 17, cps_458 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 18, cps_458 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 19, cps_458 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 20, cps_458 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 21, cps_458 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 22, cps_458 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 23, cps_458 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 24, cps_458 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 25, cps_458 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 26, cps_458 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 27, cps_458 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 28, cps_458 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 29, cps_458 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 30, cps_458 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 31, cps_458 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 32, cps_458 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 33, cps_458 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 34, cps_458 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 35, cps_458 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 36, cps_458 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 37, cps_458 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 38, cps_458 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 39, cps_458 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 40, cps_458 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 41, cps_458 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 42, cps_458 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 43, cps_458 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 44, cps_458 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 45, cps_458 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 46, cps_458 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 47, cps_458 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 48, cps_458 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_458 + 49, cps_458 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_458);

uint32_t cps_459[] = {
0x13124, 0x13125, 0x13126, 0x13127, 0x13128, 0x13129, 0x1312a, 0x1312b, 0x1312c, 0x1312d, 0x1312e, 0x1312f, 0x13130, 0x13131, 0x13132, 0x13133, 0x13134, 0x13135, 0x13136, 0x13137, 0x13138, 0x13139, 0x1313a, 0x1313b, 0x1313c, 0x1313d, 0x1313e, 0x1313f, 0x13140, 0x13141, 0x13142, 0x13143, 0x13144, 0x13145, 0x13146, 0x13147, 0x13148, 0x13149, 0x1314a, 0x1314b, 0x1314c, 0x1314d, 0x1314e, 0x1314f, 0x13150, 0x13151, 0x13152, 0x13153, 0x13154, 0x13155
};

void BM_collation_element_lookup_459(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 0, cps_459 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 1, cps_459 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 2, cps_459 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 3, cps_459 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 4, cps_459 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 5, cps_459 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 6, cps_459 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 7, cps_459 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 8, cps_459 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 9, cps_459 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 10, cps_459 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 11, cps_459 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 12, cps_459 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 13, cps_459 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 14, cps_459 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 15, cps_459 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 16, cps_459 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 17, cps_459 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 18, cps_459 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 19, cps_459 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 20, cps_459 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 21, cps_459 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 22, cps_459 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 23, cps_459 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 24, cps_459 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 25, cps_459 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 26, cps_459 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 27, cps_459 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 28, cps_459 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 29, cps_459 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 30, cps_459 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 31, cps_459 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 32, cps_459 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 33, cps_459 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 34, cps_459 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 35, cps_459 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 36, cps_459 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 37, cps_459 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 38, cps_459 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 39, cps_459 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 40, cps_459 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 41, cps_459 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 42, cps_459 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 43, cps_459 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 44, cps_459 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 45, cps_459 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 46, cps_459 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 47, cps_459 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 48, cps_459 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_459 + 49, cps_459 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_459);

uint32_t cps_460[] = {
0x13156, 0x13157, 0x13158, 0x13159, 0x1315a, 0x1315b, 0x1315c, 0x1315d, 0x1315e, 0x1315f, 0x13160, 0x13161, 0x13162, 0x13163, 0x13164, 0x13165, 0x13166, 0x13167, 0x13168, 0x13169, 0x1316a, 0x1316b, 0x1316c, 0x1316d, 0x1316e, 0x1316f, 0x13170, 0x13171, 0x13172, 0x13173, 0x13174, 0x13175, 0x13176, 0x13177, 0x13178, 0x13179, 0x1317a, 0x1317b, 0x1317c, 0x1317d, 0x1317e, 0x1317f, 0x13180, 0x13181, 0x13182, 0x13183, 0x13184, 0x13185, 0x13186, 0x13187
};

void BM_collation_element_lookup_460(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 0, cps_460 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 1, cps_460 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 2, cps_460 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 3, cps_460 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 4, cps_460 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 5, cps_460 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 6, cps_460 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 7, cps_460 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 8, cps_460 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 9, cps_460 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 10, cps_460 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 11, cps_460 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 12, cps_460 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 13, cps_460 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 14, cps_460 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 15, cps_460 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 16, cps_460 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 17, cps_460 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 18, cps_460 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 19, cps_460 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 20, cps_460 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 21, cps_460 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 22, cps_460 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 23, cps_460 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 24, cps_460 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 25, cps_460 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 26, cps_460 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 27, cps_460 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 28, cps_460 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 29, cps_460 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 30, cps_460 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 31, cps_460 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 32, cps_460 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 33, cps_460 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 34, cps_460 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 35, cps_460 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 36, cps_460 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 37, cps_460 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 38, cps_460 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 39, cps_460 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 40, cps_460 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 41, cps_460 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 42, cps_460 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 43, cps_460 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 44, cps_460 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 45, cps_460 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 46, cps_460 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 47, cps_460 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 48, cps_460 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_460 + 49, cps_460 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_460);

uint32_t cps_461[] = {
0x13188, 0x13189, 0x1318a, 0x1318b, 0x1318c, 0x1318d, 0x1318e, 0x1318f, 0x13190, 0x13191, 0x13192, 0x13193, 0x13194, 0x13195, 0x13196, 0x13197, 0x13198, 0x13199, 0x1319a, 0x1319b, 0x1319c, 0x1319d, 0x1319e, 0x1319f, 0x131a0, 0x131a1, 0x131a2, 0x131a3, 0x131a4, 0x131a5, 0x131a6, 0x131a7, 0x131a8, 0x131a9, 0x131aa, 0x131ab, 0x131ac, 0x131ad, 0x131ae, 0x131af, 0x131b0, 0x131b1, 0x131b2, 0x131b3, 0x131b4, 0x131b5, 0x131b6, 0x131b7, 0x131b8, 0x131b9
};

void BM_collation_element_lookup_461(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 0, cps_461 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 1, cps_461 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 2, cps_461 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 3, cps_461 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 4, cps_461 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 5, cps_461 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 6, cps_461 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 7, cps_461 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 8, cps_461 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 9, cps_461 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 10, cps_461 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 11, cps_461 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 12, cps_461 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 13, cps_461 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 14, cps_461 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 15, cps_461 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 16, cps_461 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 17, cps_461 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 18, cps_461 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 19, cps_461 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 20, cps_461 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 21, cps_461 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 22, cps_461 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 23, cps_461 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 24, cps_461 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 25, cps_461 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 26, cps_461 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 27, cps_461 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 28, cps_461 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 29, cps_461 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 30, cps_461 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 31, cps_461 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 32, cps_461 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 33, cps_461 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 34, cps_461 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 35, cps_461 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 36, cps_461 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 37, cps_461 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 38, cps_461 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 39, cps_461 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 40, cps_461 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 41, cps_461 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 42, cps_461 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 43, cps_461 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 44, cps_461 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 45, cps_461 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 46, cps_461 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 47, cps_461 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 48, cps_461 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_461 + 49, cps_461 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_461);

uint32_t cps_462[] = {
0x131ba, 0x131bb, 0x131bc, 0x131bd, 0x131be, 0x131bf, 0x131c0, 0x131c1, 0x131c2, 0x131c3, 0x131c4, 0x131c5, 0x131c6, 0x131c7, 0x131c8, 0x131c9, 0x131ca, 0x131cb, 0x131cc, 0x131cd, 0x131ce, 0x131cf, 0x131d0, 0x131d1, 0x131d2, 0x131d3, 0x131d4, 0x131d5, 0x131d6, 0x131d7, 0x131d8, 0x131d9, 0x131da, 0x131db, 0x131dc, 0x131dd, 0x131de, 0x131df, 0x131e0, 0x131e1, 0x131e2, 0x131e3, 0x131e4, 0x131e5, 0x131e6, 0x131e7, 0x131e8, 0x131e9, 0x131ea, 0x131eb
};

void BM_collation_element_lookup_462(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 0, cps_462 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 1, cps_462 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 2, cps_462 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 3, cps_462 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 4, cps_462 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 5, cps_462 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 6, cps_462 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 7, cps_462 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 8, cps_462 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 9, cps_462 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 10, cps_462 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 11, cps_462 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 12, cps_462 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 13, cps_462 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 14, cps_462 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 15, cps_462 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 16, cps_462 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 17, cps_462 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 18, cps_462 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 19, cps_462 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 20, cps_462 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 21, cps_462 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 22, cps_462 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 23, cps_462 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 24, cps_462 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 25, cps_462 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 26, cps_462 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 27, cps_462 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 28, cps_462 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 29, cps_462 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 30, cps_462 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 31, cps_462 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 32, cps_462 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 33, cps_462 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 34, cps_462 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 35, cps_462 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 36, cps_462 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 37, cps_462 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 38, cps_462 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 39, cps_462 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 40, cps_462 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 41, cps_462 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 42, cps_462 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 43, cps_462 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 44, cps_462 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 45, cps_462 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 46, cps_462 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 47, cps_462 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 48, cps_462 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_462 + 49, cps_462 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_462);

uint32_t cps_463[] = {
0x131ec, 0x131ed, 0x131ee, 0x131ef, 0x131f0, 0x131f1, 0x131f2, 0x131f3, 0x131f4, 0x131f5, 0x131f6, 0x131f7, 0x131f8, 0x131f9, 0x131fa, 0x131fb, 0x131fc, 0x131fd, 0x131fe, 0x131ff, 0x13200, 0x13201, 0x13202, 0x13203, 0x13204, 0x13205, 0x13206, 0x13207, 0x13208, 0x13209, 0x1320a, 0x1320b, 0x1320c, 0x1320d, 0x1320e, 0x1320f, 0x13210, 0x13211, 0x13212, 0x13213, 0x13214, 0x13215, 0x13216, 0x13217, 0x13218, 0x13219, 0x1321a, 0x1321b, 0x1321c, 0x1321d
};

void BM_collation_element_lookup_463(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 0, cps_463 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 1, cps_463 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 2, cps_463 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 3, cps_463 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 4, cps_463 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 5, cps_463 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 6, cps_463 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 7, cps_463 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 8, cps_463 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 9, cps_463 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 10, cps_463 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 11, cps_463 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 12, cps_463 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 13, cps_463 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 14, cps_463 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 15, cps_463 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 16, cps_463 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 17, cps_463 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 18, cps_463 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 19, cps_463 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 20, cps_463 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 21, cps_463 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 22, cps_463 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 23, cps_463 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 24, cps_463 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 25, cps_463 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 26, cps_463 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 27, cps_463 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 28, cps_463 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 29, cps_463 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 30, cps_463 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 31, cps_463 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 32, cps_463 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 33, cps_463 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 34, cps_463 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 35, cps_463 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 36, cps_463 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 37, cps_463 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 38, cps_463 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 39, cps_463 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 40, cps_463 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 41, cps_463 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 42, cps_463 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 43, cps_463 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 44, cps_463 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 45, cps_463 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 46, cps_463 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 47, cps_463 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 48, cps_463 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_463 + 49, cps_463 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_463);

uint32_t cps_464[] = {
0x1321e, 0x1321f, 0x13220, 0x13221, 0x13222, 0x13223, 0x13224, 0x13225, 0x13226, 0x13227, 0x13228, 0x13229, 0x1322a, 0x1322b, 0x1322c, 0x1322d, 0x1322e, 0x1322f, 0x13230, 0x13231, 0x13232, 0x13233, 0x13234, 0x13235, 0x13236, 0x13237, 0x13238, 0x13239, 0x1323a, 0x1323b, 0x1323c, 0x1323d, 0x1323e, 0x1323f, 0x13240, 0x13241, 0x13242, 0x13243, 0x13244, 0x13245, 0x13246, 0x13247, 0x13248, 0x13249, 0x1324a, 0x1324b, 0x1324c, 0x1324d, 0x1324e, 0x1324f
};

void BM_collation_element_lookup_464(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 0, cps_464 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 1, cps_464 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 2, cps_464 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 3, cps_464 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 4, cps_464 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 5, cps_464 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 6, cps_464 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 7, cps_464 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 8, cps_464 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 9, cps_464 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 10, cps_464 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 11, cps_464 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 12, cps_464 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 13, cps_464 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 14, cps_464 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 15, cps_464 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 16, cps_464 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 17, cps_464 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 18, cps_464 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 19, cps_464 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 20, cps_464 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 21, cps_464 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 22, cps_464 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 23, cps_464 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 24, cps_464 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 25, cps_464 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 26, cps_464 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 27, cps_464 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 28, cps_464 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 29, cps_464 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 30, cps_464 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 31, cps_464 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 32, cps_464 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 33, cps_464 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 34, cps_464 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 35, cps_464 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 36, cps_464 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 37, cps_464 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 38, cps_464 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 39, cps_464 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 40, cps_464 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 41, cps_464 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 42, cps_464 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 43, cps_464 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 44, cps_464 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 45, cps_464 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 46, cps_464 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 47, cps_464 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 48, cps_464 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_464 + 49, cps_464 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_464);

uint32_t cps_465[] = {
0x13250, 0x13251, 0x13252, 0x13253, 0x13254, 0x13255, 0x13256, 0x13257, 0x13258, 0x13259, 0x1325a, 0x1325b, 0x1325c, 0x1325d, 0x1325e, 0x1325f, 0x13260, 0x13261, 0x13262, 0x13263, 0x13264, 0x13265, 0x13266, 0x13267, 0x13268, 0x13269, 0x1326a, 0x1326b, 0x1326c, 0x1326d, 0x1326e, 0x1326f, 0x13270, 0x13271, 0x13272, 0x13273, 0x13274, 0x13275, 0x13276, 0x13277, 0x13278, 0x13279, 0x1327a, 0x1327b, 0x1327c, 0x1327d, 0x1327e, 0x1327f, 0x13280, 0x13281
};

void BM_collation_element_lookup_465(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 0, cps_465 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 1, cps_465 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 2, cps_465 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 3, cps_465 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 4, cps_465 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 5, cps_465 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 6, cps_465 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 7, cps_465 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 8, cps_465 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 9, cps_465 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 10, cps_465 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 11, cps_465 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 12, cps_465 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 13, cps_465 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 14, cps_465 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 15, cps_465 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 16, cps_465 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 17, cps_465 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 18, cps_465 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 19, cps_465 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 20, cps_465 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 21, cps_465 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 22, cps_465 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 23, cps_465 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 24, cps_465 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 25, cps_465 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 26, cps_465 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 27, cps_465 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 28, cps_465 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 29, cps_465 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 30, cps_465 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 31, cps_465 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 32, cps_465 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 33, cps_465 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 34, cps_465 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 35, cps_465 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 36, cps_465 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 37, cps_465 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 38, cps_465 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 39, cps_465 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 40, cps_465 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 41, cps_465 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 42, cps_465 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 43, cps_465 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 44, cps_465 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 45, cps_465 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 46, cps_465 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 47, cps_465 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 48, cps_465 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_465 + 49, cps_465 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_465);

uint32_t cps_466[] = {
0x13282, 0x13283, 0x13284, 0x13285, 0x13286, 0x13287, 0x13288, 0x13289, 0x1328a, 0x1328b, 0x1328c, 0x1328d, 0x1328e, 0x1328f, 0x13290, 0x13291, 0x13292, 0x13293, 0x13294, 0x13295, 0x13296, 0x13297, 0x13298, 0x13299, 0x1329a, 0x1329b, 0x1329c, 0x1329d, 0x1329e, 0x1329f, 0x132a0, 0x132a1, 0x132a2, 0x132a3, 0x132a4, 0x132a5, 0x132a6, 0x132a7, 0x132a8, 0x132a9, 0x132aa, 0x132ab, 0x132ac, 0x132ad, 0x132ae, 0x132af, 0x132b0, 0x132b1, 0x132b2, 0x132b3
};

void BM_collation_element_lookup_466(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 0, cps_466 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 1, cps_466 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 2, cps_466 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 3, cps_466 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 4, cps_466 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 5, cps_466 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 6, cps_466 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 7, cps_466 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 8, cps_466 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 9, cps_466 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 10, cps_466 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 11, cps_466 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 12, cps_466 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 13, cps_466 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 14, cps_466 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 15, cps_466 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 16, cps_466 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 17, cps_466 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 18, cps_466 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 19, cps_466 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 20, cps_466 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 21, cps_466 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 22, cps_466 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 23, cps_466 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 24, cps_466 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 25, cps_466 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 26, cps_466 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 27, cps_466 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 28, cps_466 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 29, cps_466 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 30, cps_466 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 31, cps_466 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 32, cps_466 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 33, cps_466 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 34, cps_466 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 35, cps_466 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 36, cps_466 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 37, cps_466 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 38, cps_466 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 39, cps_466 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 40, cps_466 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 41, cps_466 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 42, cps_466 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 43, cps_466 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 44, cps_466 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 45, cps_466 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 46, cps_466 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 47, cps_466 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 48, cps_466 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_466 + 49, cps_466 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_466);

uint32_t cps_467[] = {
0x132b4, 0x132b5, 0x132b6, 0x132b7, 0x132b8, 0x132b9, 0x132ba, 0x132bb, 0x132bc, 0x132bd, 0x132be, 0x132bf, 0x132c0, 0x132c1, 0x132c2, 0x132c3, 0x132c4, 0x132c5, 0x132c6, 0x132c7, 0x132c8, 0x132c9, 0x132ca, 0x132cb, 0x132cc, 0x132cd, 0x132ce, 0x132cf, 0x132d0, 0x132d1, 0x132d2, 0x132d3, 0x132d4, 0x132d5, 0x132d6, 0x132d7, 0x132d8, 0x132d9, 0x132da, 0x132db, 0x132dc, 0x132dd, 0x132de, 0x132df, 0x132e0, 0x132e1, 0x132e2, 0x132e3, 0x132e4, 0x132e5
};

void BM_collation_element_lookup_467(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 0, cps_467 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 1, cps_467 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 2, cps_467 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 3, cps_467 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 4, cps_467 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 5, cps_467 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 6, cps_467 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 7, cps_467 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 8, cps_467 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 9, cps_467 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 10, cps_467 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 11, cps_467 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 12, cps_467 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 13, cps_467 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 14, cps_467 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 15, cps_467 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 16, cps_467 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 17, cps_467 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 18, cps_467 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 19, cps_467 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 20, cps_467 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 21, cps_467 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 22, cps_467 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 23, cps_467 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 24, cps_467 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 25, cps_467 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 26, cps_467 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 27, cps_467 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 28, cps_467 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 29, cps_467 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 30, cps_467 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 31, cps_467 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 32, cps_467 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 33, cps_467 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 34, cps_467 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 35, cps_467 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 36, cps_467 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 37, cps_467 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 38, cps_467 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 39, cps_467 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 40, cps_467 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 41, cps_467 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 42, cps_467 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 43, cps_467 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 44, cps_467 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 45, cps_467 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 46, cps_467 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 47, cps_467 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 48, cps_467 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_467 + 49, cps_467 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_467);

uint32_t cps_468[] = {
0x132e6, 0x132e7, 0x132e8, 0x132e9, 0x132ea, 0x132eb, 0x132ec, 0x132ed, 0x132ee, 0x132ef, 0x132f0, 0x132f1, 0x132f2, 0x132f3, 0x132f4, 0x132f5, 0x132f6, 0x132f7, 0x132f8, 0x132f9, 0x132fa, 0x132fb, 0x132fc, 0x132fd, 0x132fe, 0x132ff, 0x13300, 0x13301, 0x13302, 0x13303, 0x13304, 0x13305, 0x13306, 0x13307, 0x13308, 0x13309, 0x1330a, 0x1330b, 0x1330c, 0x1330d, 0x1330e, 0x1330f, 0x13310, 0x13311, 0x13312, 0x13313, 0x13314, 0x13315, 0x13316, 0x13317
};

void BM_collation_element_lookup_468(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 0, cps_468 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 1, cps_468 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 2, cps_468 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 3, cps_468 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 4, cps_468 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 5, cps_468 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 6, cps_468 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 7, cps_468 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 8, cps_468 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 9, cps_468 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 10, cps_468 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 11, cps_468 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 12, cps_468 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 13, cps_468 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 14, cps_468 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 15, cps_468 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 16, cps_468 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 17, cps_468 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 18, cps_468 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 19, cps_468 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 20, cps_468 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 21, cps_468 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 22, cps_468 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 23, cps_468 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 24, cps_468 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 25, cps_468 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 26, cps_468 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 27, cps_468 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 28, cps_468 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 29, cps_468 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 30, cps_468 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 31, cps_468 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 32, cps_468 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 33, cps_468 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 34, cps_468 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 35, cps_468 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 36, cps_468 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 37, cps_468 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 38, cps_468 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 39, cps_468 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 40, cps_468 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 41, cps_468 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 42, cps_468 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 43, cps_468 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 44, cps_468 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 45, cps_468 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 46, cps_468 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 47, cps_468 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 48, cps_468 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_468 + 49, cps_468 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_468);

uint32_t cps_469[] = {
0x13318, 0x13319, 0x1331a, 0x1331b, 0x1331c, 0x1331d, 0x1331e, 0x1331f, 0x13320, 0x13321, 0x13322, 0x13323, 0x13324, 0x13325, 0x13326, 0x13327, 0x13328, 0x13329, 0x1332a, 0x1332b, 0x1332c, 0x1332d, 0x1332e, 0x1332f, 0x13330, 0x13331, 0x13332, 0x13333, 0x13334, 0x13335, 0x13336, 0x13337, 0x13338, 0x13339, 0x1333a, 0x1333b, 0x1333c, 0x1333d, 0x1333e, 0x1333f, 0x13340, 0x13341, 0x13342, 0x13343, 0x13344, 0x13345, 0x13346, 0x13347, 0x13348, 0x13349
};

void BM_collation_element_lookup_469(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 0, cps_469 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 1, cps_469 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 2, cps_469 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 3, cps_469 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 4, cps_469 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 5, cps_469 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 6, cps_469 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 7, cps_469 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 8, cps_469 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 9, cps_469 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 10, cps_469 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 11, cps_469 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 12, cps_469 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 13, cps_469 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 14, cps_469 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 15, cps_469 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 16, cps_469 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 17, cps_469 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 18, cps_469 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 19, cps_469 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 20, cps_469 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 21, cps_469 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 22, cps_469 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 23, cps_469 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 24, cps_469 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 25, cps_469 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 26, cps_469 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 27, cps_469 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 28, cps_469 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 29, cps_469 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 30, cps_469 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 31, cps_469 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 32, cps_469 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 33, cps_469 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 34, cps_469 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 35, cps_469 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 36, cps_469 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 37, cps_469 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 38, cps_469 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 39, cps_469 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 40, cps_469 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 41, cps_469 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 42, cps_469 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 43, cps_469 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 44, cps_469 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 45, cps_469 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 46, cps_469 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 47, cps_469 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 48, cps_469 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_469 + 49, cps_469 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_469);

uint32_t cps_470[] = {
0x1334a, 0x1334b, 0x1334c, 0x1334d, 0x1334e, 0x1334f, 0x13350, 0x13351, 0x13352, 0x13353, 0x13354, 0x13355, 0x13356, 0x13357, 0x13358, 0x13359, 0x1335a, 0x1335b, 0x1335c, 0x1335d, 0x1335e, 0x1335f, 0x13360, 0x13361, 0x13362, 0x13363, 0x13364, 0x13365, 0x13366, 0x13367, 0x13368, 0x13369, 0x1336a, 0x1336b, 0x1336c, 0x1336d, 0x1336e, 0x1336f, 0x13370, 0x13371, 0x13372, 0x13373, 0x13374, 0x13375, 0x13376, 0x13377, 0x13378, 0x13379, 0x1337a, 0x1337b
};

void BM_collation_element_lookup_470(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 0, cps_470 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 1, cps_470 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 2, cps_470 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 3, cps_470 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 4, cps_470 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 5, cps_470 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 6, cps_470 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 7, cps_470 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 8, cps_470 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 9, cps_470 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 10, cps_470 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 11, cps_470 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 12, cps_470 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 13, cps_470 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 14, cps_470 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 15, cps_470 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 16, cps_470 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 17, cps_470 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 18, cps_470 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 19, cps_470 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 20, cps_470 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 21, cps_470 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 22, cps_470 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 23, cps_470 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 24, cps_470 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 25, cps_470 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 26, cps_470 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 27, cps_470 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 28, cps_470 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 29, cps_470 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 30, cps_470 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 31, cps_470 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 32, cps_470 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 33, cps_470 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 34, cps_470 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 35, cps_470 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 36, cps_470 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 37, cps_470 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 38, cps_470 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 39, cps_470 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 40, cps_470 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 41, cps_470 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 42, cps_470 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 43, cps_470 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 44, cps_470 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 45, cps_470 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 46, cps_470 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 47, cps_470 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 48, cps_470 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_470 + 49, cps_470 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_470);

uint32_t cps_471[] = {
0x1337c, 0x1337d, 0x1337e, 0x1337f, 0x13380, 0x13381, 0x13382, 0x13383, 0x13384, 0x13385, 0x13386, 0x13387, 0x13388, 0x13389, 0x1338a, 0x1338b, 0x1338c, 0x1338d, 0x1338e, 0x1338f, 0x13390, 0x13391, 0x13392, 0x13393, 0x13394, 0x13395, 0x13396, 0x13397, 0x13398, 0x13399, 0x1339a, 0x1339b, 0x1339c, 0x1339d, 0x1339e, 0x1339f, 0x133a0, 0x133a1, 0x133a2, 0x133a3, 0x133a4, 0x133a5, 0x133a6, 0x133a7, 0x133a8, 0x133a9, 0x133aa, 0x133ab, 0x133ac, 0x133ad
};

void BM_collation_element_lookup_471(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 0, cps_471 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 1, cps_471 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 2, cps_471 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 3, cps_471 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 4, cps_471 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 5, cps_471 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 6, cps_471 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 7, cps_471 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 8, cps_471 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 9, cps_471 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 10, cps_471 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 11, cps_471 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 12, cps_471 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 13, cps_471 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 14, cps_471 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 15, cps_471 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 16, cps_471 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 17, cps_471 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 18, cps_471 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 19, cps_471 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 20, cps_471 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 21, cps_471 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 22, cps_471 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 23, cps_471 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 24, cps_471 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 25, cps_471 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 26, cps_471 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 27, cps_471 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 28, cps_471 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 29, cps_471 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 30, cps_471 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 31, cps_471 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 32, cps_471 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 33, cps_471 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 34, cps_471 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 35, cps_471 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 36, cps_471 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 37, cps_471 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 38, cps_471 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 39, cps_471 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 40, cps_471 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 41, cps_471 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 42, cps_471 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 43, cps_471 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 44, cps_471 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 45, cps_471 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 46, cps_471 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 47, cps_471 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 48, cps_471 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_471 + 49, cps_471 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_471);

uint32_t cps_472[] = {
0x133ae, 0x133af, 0x133b0, 0x133b1, 0x133b2, 0x133b3, 0x133b4, 0x133b5, 0x133b6, 0x133b7, 0x133b8, 0x133b9, 0x133ba, 0x133bb, 0x133bc, 0x133bd, 0x133be, 0x133bf, 0x133c0, 0x133c1, 0x133c2, 0x133c3, 0x133c4, 0x133c5, 0x133c6, 0x133c7, 0x133c8, 0x133c9, 0x133ca, 0x133cb, 0x133cc, 0x133cd, 0x133ce, 0x133cf, 0x133d0, 0x133d1, 0x133d2, 0x133d3, 0x133d4, 0x133d5, 0x133d6, 0x133d7, 0x133d8, 0x133d9, 0x133da, 0x133db, 0x133dc, 0x133dd, 0x133de, 0x133df
};

void BM_collation_element_lookup_472(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 0, cps_472 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 1, cps_472 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 2, cps_472 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 3, cps_472 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 4, cps_472 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 5, cps_472 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 6, cps_472 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 7, cps_472 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 8, cps_472 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 9, cps_472 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 10, cps_472 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 11, cps_472 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 12, cps_472 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 13, cps_472 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 14, cps_472 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 15, cps_472 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 16, cps_472 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 17, cps_472 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 18, cps_472 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 19, cps_472 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 20, cps_472 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 21, cps_472 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 22, cps_472 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 23, cps_472 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 24, cps_472 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 25, cps_472 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 26, cps_472 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 27, cps_472 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 28, cps_472 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 29, cps_472 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 30, cps_472 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 31, cps_472 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 32, cps_472 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 33, cps_472 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 34, cps_472 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 35, cps_472 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 36, cps_472 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 37, cps_472 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 38, cps_472 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 39, cps_472 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 40, cps_472 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 41, cps_472 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 42, cps_472 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 43, cps_472 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 44, cps_472 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 45, cps_472 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 46, cps_472 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 47, cps_472 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 48, cps_472 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_472 + 49, cps_472 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_472);

uint32_t cps_473[] = {
0x133e0, 0x133e1, 0x133e2, 0x133e3, 0x133e4, 0x133e5, 0x133e6, 0x133e7, 0x133e8, 0x133e9, 0x133ea, 0x133eb, 0x133ec, 0x133ed, 0x133ee, 0x133ef, 0x133f0, 0x133f1, 0x133f2, 0x133f3, 0x133f4, 0x133f5, 0x133f6, 0x133f7, 0x133f8, 0x133f9, 0x133fa, 0x133fb, 0x133fc, 0x133fd, 0x133fe, 0x133ff, 0x13400, 0x13401, 0x13402, 0x13403, 0x13404, 0x13405, 0x13406, 0x13407, 0x13408, 0x13409, 0x1340a, 0x1340b, 0x1340c, 0x1340d, 0x1340e, 0x1340f, 0x13410, 0x13411
};

void BM_collation_element_lookup_473(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 0, cps_473 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 1, cps_473 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 2, cps_473 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 3, cps_473 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 4, cps_473 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 5, cps_473 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 6, cps_473 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 7, cps_473 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 8, cps_473 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 9, cps_473 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 10, cps_473 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 11, cps_473 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 12, cps_473 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 13, cps_473 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 14, cps_473 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 15, cps_473 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 16, cps_473 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 17, cps_473 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 18, cps_473 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 19, cps_473 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 20, cps_473 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 21, cps_473 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 22, cps_473 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 23, cps_473 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 24, cps_473 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 25, cps_473 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 26, cps_473 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 27, cps_473 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 28, cps_473 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 29, cps_473 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 30, cps_473 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 31, cps_473 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 32, cps_473 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 33, cps_473 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 34, cps_473 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 35, cps_473 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 36, cps_473 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 37, cps_473 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 38, cps_473 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 39, cps_473 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 40, cps_473 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 41, cps_473 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 42, cps_473 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 43, cps_473 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 44, cps_473 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 45, cps_473 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 46, cps_473 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 47, cps_473 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 48, cps_473 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_473 + 49, cps_473 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_473);

uint32_t cps_474[] = {
0x13412, 0x13413, 0x13414, 0x13415, 0x13416, 0x13417, 0x13418, 0x13419, 0x1341a, 0x1341b, 0x1341c, 0x1341d, 0x1341e, 0x1341f, 0x13420, 0x13421, 0x13422, 0x13423, 0x13424, 0x13425, 0x13426, 0x13427, 0x13428, 0x13429, 0x1342a, 0x1342b, 0x1342c, 0x1342d, 0x1342e, 0x14400, 0x14401, 0x14402, 0x14403, 0x14404, 0x14405, 0x14406, 0x14407, 0x14408, 0x14409, 0x1440a, 0x1440b, 0x1440c, 0x1440d, 0x1440e, 0x1440f, 0x14410, 0x14411, 0x14412, 0x14413, 0x14414
};

void BM_collation_element_lookup_474(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 0, cps_474 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 1, cps_474 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 2, cps_474 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 3, cps_474 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 4, cps_474 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 5, cps_474 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 6, cps_474 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 7, cps_474 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 8, cps_474 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 9, cps_474 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 10, cps_474 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 11, cps_474 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 12, cps_474 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 13, cps_474 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 14, cps_474 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 15, cps_474 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 16, cps_474 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 17, cps_474 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 18, cps_474 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 19, cps_474 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 20, cps_474 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 21, cps_474 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 22, cps_474 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 23, cps_474 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 24, cps_474 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 25, cps_474 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 26, cps_474 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 27, cps_474 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 28, cps_474 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 29, cps_474 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 30, cps_474 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 31, cps_474 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 32, cps_474 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 33, cps_474 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 34, cps_474 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 35, cps_474 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 36, cps_474 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 37, cps_474 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 38, cps_474 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 39, cps_474 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 40, cps_474 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 41, cps_474 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 42, cps_474 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 43, cps_474 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 44, cps_474 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 45, cps_474 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 46, cps_474 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 47, cps_474 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 48, cps_474 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_474 + 49, cps_474 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_474);

uint32_t cps_475[] = {
0x14415, 0x14416, 0x14417, 0x14418, 0x14419, 0x1441a, 0x1441b, 0x1441c, 0x1441d, 0x1441e, 0x1441f, 0x14420, 0x14421, 0x14422, 0x14423, 0x14424, 0x14425, 0x14426, 0x14427, 0x14428, 0x14429, 0x1442a, 0x1442b, 0x1442c, 0x1442d, 0x1442e, 0x1442f, 0x14430, 0x14431, 0x14432, 0x14433, 0x14434, 0x14435, 0x14436, 0x14437, 0x14438, 0x14439, 0x1443a, 0x1443b, 0x1443c, 0x1443d, 0x1443e, 0x1443f, 0x14440, 0x14441, 0x14442, 0x14443, 0x14444, 0x14445, 0x14446
};

void BM_collation_element_lookup_475(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 0, cps_475 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 1, cps_475 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 2, cps_475 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 3, cps_475 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 4, cps_475 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 5, cps_475 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 6, cps_475 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 7, cps_475 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 8, cps_475 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 9, cps_475 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 10, cps_475 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 11, cps_475 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 12, cps_475 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 13, cps_475 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 14, cps_475 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 15, cps_475 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 16, cps_475 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 17, cps_475 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 18, cps_475 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 19, cps_475 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 20, cps_475 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 21, cps_475 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 22, cps_475 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 23, cps_475 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 24, cps_475 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 25, cps_475 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 26, cps_475 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 27, cps_475 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 28, cps_475 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 29, cps_475 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 30, cps_475 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 31, cps_475 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 32, cps_475 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 33, cps_475 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 34, cps_475 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 35, cps_475 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 36, cps_475 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 37, cps_475 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 38, cps_475 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 39, cps_475 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 40, cps_475 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 41, cps_475 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 42, cps_475 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 43, cps_475 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 44, cps_475 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 45, cps_475 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 46, cps_475 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 47, cps_475 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 48, cps_475 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_475 + 49, cps_475 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_475);

uint32_t cps_476[] = {
0x14447, 0x14448, 0x14449, 0x1444a, 0x1444b, 0x1444c, 0x1444d, 0x1444e, 0x1444f, 0x14450, 0x14451, 0x14452, 0x14453, 0x14454, 0x14455, 0x14456, 0x14457, 0x14458, 0x14459, 0x1445a, 0x1445b, 0x1445c, 0x1445d, 0x1445e, 0x1445f, 0x14460, 0x14461, 0x14462, 0x14463, 0x14464, 0x14465, 0x14466, 0x14467, 0x14468, 0x14469, 0x1446a, 0x1446b, 0x1446c, 0x1446d, 0x1446e, 0x1446f, 0x14470, 0x14471, 0x14472, 0x14473, 0x14474, 0x14475, 0x14476, 0x14477, 0x14478
};

void BM_collation_element_lookup_476(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 0, cps_476 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 1, cps_476 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 2, cps_476 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 3, cps_476 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 4, cps_476 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 5, cps_476 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 6, cps_476 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 7, cps_476 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 8, cps_476 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 9, cps_476 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 10, cps_476 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 11, cps_476 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 12, cps_476 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 13, cps_476 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 14, cps_476 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 15, cps_476 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 16, cps_476 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 17, cps_476 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 18, cps_476 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 19, cps_476 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 20, cps_476 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 21, cps_476 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 22, cps_476 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 23, cps_476 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 24, cps_476 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 25, cps_476 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 26, cps_476 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 27, cps_476 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 28, cps_476 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 29, cps_476 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 30, cps_476 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 31, cps_476 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 32, cps_476 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 33, cps_476 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 34, cps_476 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 35, cps_476 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 36, cps_476 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 37, cps_476 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 38, cps_476 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 39, cps_476 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 40, cps_476 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 41, cps_476 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 42, cps_476 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 43, cps_476 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 44, cps_476 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 45, cps_476 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 46, cps_476 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 47, cps_476 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 48, cps_476 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_476 + 49, cps_476 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_476);

uint32_t cps_477[] = {
0x14479, 0x1447a, 0x1447b, 0x1447c, 0x1447d, 0x1447e, 0x1447f, 0x14480, 0x14481, 0x14482, 0x14483, 0x14484, 0x14485, 0x14486, 0x14487, 0x14488, 0x14489, 0x1448a, 0x1448b, 0x1448c, 0x1448d, 0x1448e, 0x1448f, 0x14490, 0x14491, 0x14492, 0x14493, 0x14494, 0x14495, 0x14496, 0x14497, 0x14498, 0x14499, 0x1449a, 0x1449b, 0x1449c, 0x1449d, 0x1449e, 0x1449f, 0x144a0, 0x144a1, 0x144a2, 0x144a3, 0x144a4, 0x144a5, 0x144a6, 0x144a7, 0x144a8, 0x144a9, 0x144aa
};

void BM_collation_element_lookup_477(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 0, cps_477 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 1, cps_477 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 2, cps_477 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 3, cps_477 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 4, cps_477 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 5, cps_477 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 6, cps_477 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 7, cps_477 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 8, cps_477 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 9, cps_477 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 10, cps_477 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 11, cps_477 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 12, cps_477 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 13, cps_477 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 14, cps_477 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 15, cps_477 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 16, cps_477 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 17, cps_477 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 18, cps_477 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 19, cps_477 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 20, cps_477 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 21, cps_477 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 22, cps_477 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 23, cps_477 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 24, cps_477 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 25, cps_477 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 26, cps_477 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 27, cps_477 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 28, cps_477 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 29, cps_477 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 30, cps_477 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 31, cps_477 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 32, cps_477 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 33, cps_477 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 34, cps_477 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 35, cps_477 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 36, cps_477 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 37, cps_477 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 38, cps_477 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 39, cps_477 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 40, cps_477 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 41, cps_477 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 42, cps_477 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 43, cps_477 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 44, cps_477 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 45, cps_477 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 46, cps_477 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 47, cps_477 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 48, cps_477 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_477 + 49, cps_477 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_477);

uint32_t cps_478[] = {
0x144ab, 0x144ac, 0x144ad, 0x144ae, 0x144af, 0x144b0, 0x144b1, 0x144b2, 0x144b3, 0x144b4, 0x144b5, 0x144b6, 0x144b7, 0x144b8, 0x144b9, 0x144ba, 0x144bb, 0x144bc, 0x144bd, 0x144be, 0x144bf, 0x144c0, 0x144c1, 0x144c2, 0x144c3, 0x144c4, 0x144c5, 0x144c6, 0x144c7, 0x144c8, 0x144c9, 0x144ca, 0x144cb, 0x144cc, 0x144cd, 0x144ce, 0x144cf, 0x144d0, 0x144d1, 0x144d2, 0x144d3, 0x144d4, 0x144d5, 0x144d6, 0x144d7, 0x144d8, 0x144d9, 0x144da, 0x144db, 0x144dc
};

void BM_collation_element_lookup_478(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 0, cps_478 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 1, cps_478 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 2, cps_478 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 3, cps_478 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 4, cps_478 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 5, cps_478 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 6, cps_478 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 7, cps_478 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 8, cps_478 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 9, cps_478 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 10, cps_478 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 11, cps_478 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 12, cps_478 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 13, cps_478 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 14, cps_478 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 15, cps_478 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 16, cps_478 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 17, cps_478 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 18, cps_478 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 19, cps_478 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 20, cps_478 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 21, cps_478 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 22, cps_478 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 23, cps_478 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 24, cps_478 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 25, cps_478 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 26, cps_478 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 27, cps_478 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 28, cps_478 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 29, cps_478 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 30, cps_478 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 31, cps_478 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 32, cps_478 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 33, cps_478 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 34, cps_478 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 35, cps_478 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 36, cps_478 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 37, cps_478 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 38, cps_478 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 39, cps_478 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 40, cps_478 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 41, cps_478 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 42, cps_478 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 43, cps_478 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 44, cps_478 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 45, cps_478 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 46, cps_478 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 47, cps_478 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 48, cps_478 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_478 + 49, cps_478 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_478);

uint32_t cps_479[] = {
0x144dd, 0x144de, 0x144df, 0x144e0, 0x144e1, 0x144e2, 0x144e3, 0x144e4, 0x144e5, 0x144e6, 0x144e7, 0x144e8, 0x144e9, 0x144ea, 0x144eb, 0x144ec, 0x144ed, 0x144ee, 0x144ef, 0x144f0, 0x144f1, 0x144f2, 0x144f3, 0x144f4, 0x144f5, 0x144f6, 0x144f7, 0x144f8, 0x144f9, 0x144fa, 0x144fb, 0x144fc, 0x144fd, 0x144fe, 0x144ff, 0x14500, 0x14501, 0x14502, 0x14503, 0x14504, 0x14505, 0x14506, 0x14507, 0x14508, 0x14509, 0x1450a, 0x1450b, 0x1450c, 0x1450d, 0x1450e
};

void BM_collation_element_lookup_479(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 0, cps_479 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 1, cps_479 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 2, cps_479 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 3, cps_479 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 4, cps_479 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 5, cps_479 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 6, cps_479 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 7, cps_479 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 8, cps_479 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 9, cps_479 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 10, cps_479 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 11, cps_479 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 12, cps_479 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 13, cps_479 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 14, cps_479 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 15, cps_479 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 16, cps_479 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 17, cps_479 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 18, cps_479 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 19, cps_479 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 20, cps_479 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 21, cps_479 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 22, cps_479 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 23, cps_479 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 24, cps_479 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 25, cps_479 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 26, cps_479 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 27, cps_479 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 28, cps_479 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 29, cps_479 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 30, cps_479 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 31, cps_479 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 32, cps_479 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 33, cps_479 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 34, cps_479 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 35, cps_479 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 36, cps_479 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 37, cps_479 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 38, cps_479 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 39, cps_479 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 40, cps_479 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 41, cps_479 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 42, cps_479 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 43, cps_479 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 44, cps_479 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 45, cps_479 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 46, cps_479 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 47, cps_479 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 48, cps_479 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_479 + 49, cps_479 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_479);

uint32_t cps_480[] = {
0x1450f, 0x14510, 0x14511, 0x14512, 0x14513, 0x14514, 0x14515, 0x14516, 0x14517, 0x14518, 0x14519, 0x1451a, 0x1451b, 0x1451c, 0x1451d, 0x1451e, 0x1451f, 0x14520, 0x14521, 0x14522, 0x14523, 0x14524, 0x14525, 0x14526, 0x14527, 0x14528, 0x14529, 0x1452a, 0x1452b, 0x1452c, 0x1452d, 0x1452e, 0x1452f, 0x14530, 0x14531, 0x14532, 0x14533, 0x14534, 0x14535, 0x14536, 0x14537, 0x14538, 0x14539, 0x1453a, 0x1453b, 0x1453c, 0x1453d, 0x1453e, 0x1453f, 0x14540
};

void BM_collation_element_lookup_480(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 0, cps_480 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 1, cps_480 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 2, cps_480 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 3, cps_480 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 4, cps_480 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 5, cps_480 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 6, cps_480 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 7, cps_480 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 8, cps_480 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 9, cps_480 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 10, cps_480 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 11, cps_480 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 12, cps_480 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 13, cps_480 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 14, cps_480 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 15, cps_480 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 16, cps_480 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 17, cps_480 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 18, cps_480 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 19, cps_480 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 20, cps_480 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 21, cps_480 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 22, cps_480 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 23, cps_480 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 24, cps_480 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 25, cps_480 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 26, cps_480 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 27, cps_480 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 28, cps_480 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 29, cps_480 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 30, cps_480 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 31, cps_480 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 32, cps_480 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 33, cps_480 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 34, cps_480 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 35, cps_480 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 36, cps_480 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 37, cps_480 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 38, cps_480 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 39, cps_480 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 40, cps_480 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 41, cps_480 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 42, cps_480 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 43, cps_480 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 44, cps_480 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 45, cps_480 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 46, cps_480 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 47, cps_480 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 48, cps_480 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_480 + 49, cps_480 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_480);

uint32_t cps_481[] = {
0x14541, 0x14542, 0x14543, 0x14544, 0x14545, 0x14546, 0x14547, 0x14548, 0x14549, 0x1454a, 0x1454b, 0x1454c, 0x1454d, 0x1454e, 0x1454f, 0x14550, 0x14551, 0x14552, 0x14553, 0x14554, 0x14555, 0x14556, 0x14557, 0x14558, 0x14559, 0x1455a, 0x1455b, 0x1455c, 0x1455d, 0x1455e, 0x1455f, 0x14560, 0x14561, 0x14562, 0x14563, 0x14564, 0x14565, 0x14566, 0x14567, 0x14568, 0x14569, 0x1456a, 0x1456b, 0x1456c, 0x1456d, 0x1456e, 0x1456f, 0x14570, 0x14571, 0x14572
};

void BM_collation_element_lookup_481(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 0, cps_481 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 1, cps_481 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 2, cps_481 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 3, cps_481 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 4, cps_481 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 5, cps_481 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 6, cps_481 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 7, cps_481 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 8, cps_481 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 9, cps_481 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 10, cps_481 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 11, cps_481 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 12, cps_481 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 13, cps_481 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 14, cps_481 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 15, cps_481 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 16, cps_481 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 17, cps_481 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 18, cps_481 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 19, cps_481 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 20, cps_481 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 21, cps_481 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 22, cps_481 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 23, cps_481 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 24, cps_481 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 25, cps_481 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 26, cps_481 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 27, cps_481 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 28, cps_481 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 29, cps_481 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 30, cps_481 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 31, cps_481 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 32, cps_481 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 33, cps_481 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 34, cps_481 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 35, cps_481 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 36, cps_481 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 37, cps_481 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 38, cps_481 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 39, cps_481 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 40, cps_481 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 41, cps_481 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 42, cps_481 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 43, cps_481 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 44, cps_481 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 45, cps_481 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 46, cps_481 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 47, cps_481 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 48, cps_481 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_481 + 49, cps_481 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_481);

uint32_t cps_482[] = {
0x14573, 0x14574, 0x14575, 0x14576, 0x14577, 0x14578, 0x14579, 0x1457a, 0x1457b, 0x1457c, 0x1457d, 0x1457e, 0x1457f, 0x14580, 0x14581, 0x14582, 0x14583, 0x14584, 0x14585, 0x14586, 0x14587, 0x14588, 0x14589, 0x1458a, 0x1458b, 0x1458c, 0x1458d, 0x1458e, 0x1458f, 0x14590, 0x14591, 0x14592, 0x14593, 0x14594, 0x14595, 0x14596, 0x14597, 0x14598, 0x14599, 0x1459a, 0x1459b, 0x1459c, 0x1459d, 0x1459e, 0x1459f, 0x145a0, 0x145a1, 0x145a2, 0x145a3, 0x145a4
};

void BM_collation_element_lookup_482(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 0, cps_482 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 1, cps_482 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 2, cps_482 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 3, cps_482 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 4, cps_482 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 5, cps_482 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 6, cps_482 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 7, cps_482 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 8, cps_482 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 9, cps_482 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 10, cps_482 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 11, cps_482 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 12, cps_482 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 13, cps_482 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 14, cps_482 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 15, cps_482 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 16, cps_482 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 17, cps_482 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 18, cps_482 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 19, cps_482 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 20, cps_482 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 21, cps_482 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 22, cps_482 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 23, cps_482 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 24, cps_482 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 25, cps_482 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 26, cps_482 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 27, cps_482 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 28, cps_482 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 29, cps_482 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 30, cps_482 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 31, cps_482 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 32, cps_482 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 33, cps_482 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 34, cps_482 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 35, cps_482 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 36, cps_482 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 37, cps_482 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 38, cps_482 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 39, cps_482 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 40, cps_482 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 41, cps_482 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 42, cps_482 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 43, cps_482 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 44, cps_482 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 45, cps_482 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 46, cps_482 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 47, cps_482 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 48, cps_482 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_482 + 49, cps_482 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_482);

uint32_t cps_483[] = {
0x145a5, 0x145a6, 0x145a7, 0x145a8, 0x145a9, 0x145aa, 0x145ab, 0x145ac, 0x145ad, 0x145ae, 0x145af, 0x145b0, 0x145b1, 0x145b2, 0x145b3, 0x145b4, 0x145b5, 0x145b6, 0x145b7, 0x145b8, 0x145b9, 0x145ba, 0x145bb, 0x145bc, 0x145bd, 0x145be, 0x145bf, 0x145c0, 0x145c1, 0x145c2, 0x145c3, 0x145c4, 0x145c5, 0x145c6, 0x145c7, 0x145c8, 0x145c9, 0x145ca, 0x145cb, 0x145cc, 0x145cd, 0x145ce, 0x145cf, 0x145d0, 0x145d1, 0x145d2, 0x145d3, 0x145d4, 0x145d5, 0x145d6
};

void BM_collation_element_lookup_483(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 0, cps_483 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 1, cps_483 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 2, cps_483 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 3, cps_483 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 4, cps_483 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 5, cps_483 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 6, cps_483 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 7, cps_483 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 8, cps_483 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 9, cps_483 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 10, cps_483 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 11, cps_483 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 12, cps_483 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 13, cps_483 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 14, cps_483 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 15, cps_483 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 16, cps_483 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 17, cps_483 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 18, cps_483 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 19, cps_483 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 20, cps_483 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 21, cps_483 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 22, cps_483 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 23, cps_483 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 24, cps_483 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 25, cps_483 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 26, cps_483 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 27, cps_483 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 28, cps_483 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 29, cps_483 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 30, cps_483 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 31, cps_483 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 32, cps_483 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 33, cps_483 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 34, cps_483 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 35, cps_483 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 36, cps_483 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 37, cps_483 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 38, cps_483 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 39, cps_483 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 40, cps_483 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 41, cps_483 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 42, cps_483 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 43, cps_483 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 44, cps_483 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 45, cps_483 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 46, cps_483 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 47, cps_483 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 48, cps_483 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_483 + 49, cps_483 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_483);

uint32_t cps_484[] = {
0x145d7, 0x145d8, 0x145d9, 0x145da, 0x145db, 0x145dc, 0x145dd, 0x145de, 0x145df, 0x145e0, 0x145e1, 0x145e2, 0x145e3, 0x145e4, 0x145e5, 0x145e6, 0x145e7, 0x145e8, 0x145e9, 0x145ea, 0x145eb, 0x145ec, 0x145ed, 0x145ee, 0x145ef, 0x145f0, 0x145f1, 0x145f2, 0x145f3, 0x145f4, 0x145f5, 0x145f6, 0x145f7, 0x145f8, 0x145f9, 0x145fa, 0x145fb, 0x145fc, 0x145fd, 0x145fe, 0x145ff, 0x14600, 0x14601, 0x14602, 0x14603, 0x14604, 0x14605, 0x14606, 0x14607, 0x14608
};

void BM_collation_element_lookup_484(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 0, cps_484 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 1, cps_484 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 2, cps_484 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 3, cps_484 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 4, cps_484 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 5, cps_484 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 6, cps_484 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 7, cps_484 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 8, cps_484 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 9, cps_484 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 10, cps_484 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 11, cps_484 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 12, cps_484 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 13, cps_484 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 14, cps_484 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 15, cps_484 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 16, cps_484 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 17, cps_484 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 18, cps_484 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 19, cps_484 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 20, cps_484 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 21, cps_484 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 22, cps_484 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 23, cps_484 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 24, cps_484 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 25, cps_484 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 26, cps_484 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 27, cps_484 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 28, cps_484 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 29, cps_484 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 30, cps_484 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 31, cps_484 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 32, cps_484 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 33, cps_484 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 34, cps_484 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 35, cps_484 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 36, cps_484 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 37, cps_484 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 38, cps_484 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 39, cps_484 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 40, cps_484 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 41, cps_484 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 42, cps_484 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 43, cps_484 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 44, cps_484 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 45, cps_484 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 46, cps_484 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 47, cps_484 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 48, cps_484 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_484 + 49, cps_484 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_484);

uint32_t cps_485[] = {
0x14609, 0x1460a, 0x1460b, 0x1460c, 0x1460d, 0x1460e, 0x1460f, 0x14610, 0x14611, 0x14612, 0x14613, 0x14614, 0x14615, 0x14616, 0x14617, 0x14618, 0x14619, 0x1461a, 0x1461b, 0x1461c, 0x1461d, 0x1461e, 0x1461f, 0x14620, 0x14621, 0x14622, 0x14623, 0x14624, 0x14625, 0x14626, 0x14627, 0x14628, 0x14629, 0x1462a, 0x1462b, 0x1462c, 0x1462d, 0x1462e, 0x1462f, 0x14630, 0x14631, 0x14632, 0x14633, 0x14634, 0x14635, 0x14636, 0x14637, 0x14638, 0x14639, 0x1463a
};

void BM_collation_element_lookup_485(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 0, cps_485 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 1, cps_485 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 2, cps_485 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 3, cps_485 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 4, cps_485 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 5, cps_485 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 6, cps_485 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 7, cps_485 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 8, cps_485 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 9, cps_485 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 10, cps_485 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 11, cps_485 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 12, cps_485 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 13, cps_485 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 14, cps_485 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 15, cps_485 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 16, cps_485 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 17, cps_485 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 18, cps_485 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 19, cps_485 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 20, cps_485 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 21, cps_485 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 22, cps_485 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 23, cps_485 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 24, cps_485 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 25, cps_485 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 26, cps_485 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 27, cps_485 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 28, cps_485 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 29, cps_485 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 30, cps_485 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 31, cps_485 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 32, cps_485 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 33, cps_485 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 34, cps_485 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 35, cps_485 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 36, cps_485 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 37, cps_485 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 38, cps_485 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 39, cps_485 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 40, cps_485 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 41, cps_485 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 42, cps_485 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 43, cps_485 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 44, cps_485 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 45, cps_485 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 46, cps_485 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 47, cps_485 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 48, cps_485 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_485 + 49, cps_485 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_485);

uint32_t cps_486[] = {
0x1463b, 0x1463c, 0x1463d, 0x1463e, 0x1463f, 0x14640, 0x14641, 0x14642, 0x14643, 0x14644, 0x14645, 0x14646, 0x16800, 0x16801, 0x16802, 0x16803, 0x16804, 0x16805, 0x16806, 0x16807, 0x16808, 0x16809, 0x1680a, 0x1680b, 0x1680c, 0x1680d, 0x1680e, 0x1680f, 0x16810, 0x16811, 0x16812, 0x16813, 0x16814, 0x16815, 0x16816, 0x16817, 0x16818, 0x16819, 0x1681a, 0x1681b, 0x1681c, 0x1681d, 0x1681e, 0x1681f, 0x16820, 0x16821, 0x16822, 0x16823, 0x16824, 0x16825
};

void BM_collation_element_lookup_486(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 0, cps_486 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 1, cps_486 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 2, cps_486 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 3, cps_486 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 4, cps_486 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 5, cps_486 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 6, cps_486 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 7, cps_486 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 8, cps_486 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 9, cps_486 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 10, cps_486 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 11, cps_486 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 12, cps_486 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 13, cps_486 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 14, cps_486 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 15, cps_486 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 16, cps_486 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 17, cps_486 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 18, cps_486 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 19, cps_486 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 20, cps_486 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 21, cps_486 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 22, cps_486 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 23, cps_486 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 24, cps_486 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 25, cps_486 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 26, cps_486 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 27, cps_486 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 28, cps_486 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 29, cps_486 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 30, cps_486 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 31, cps_486 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 32, cps_486 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 33, cps_486 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 34, cps_486 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 35, cps_486 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 36, cps_486 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 37, cps_486 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 38, cps_486 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 39, cps_486 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 40, cps_486 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 41, cps_486 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 42, cps_486 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 43, cps_486 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 44, cps_486 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 45, cps_486 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 46, cps_486 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 47, cps_486 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 48, cps_486 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_486 + 49, cps_486 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_486);

uint32_t cps_487[] = {
0x16826, 0x16827, 0x16828, 0x16829, 0x1682a, 0x1682b, 0x1682c, 0x1682d, 0x1682e, 0x1682f, 0x16830, 0x16831, 0x16832, 0x16833, 0x16834, 0x16835, 0x16836, 0x16837, 0x16838, 0x16839, 0x1683a, 0x1683b, 0x1683c, 0x1683d, 0x1683e, 0x1683f, 0x16840, 0x16841, 0x16842, 0x16843, 0x16844, 0x16845, 0x16846, 0x16847, 0x16848, 0x16849, 0x1684a, 0x1684b, 0x1684c, 0x1684d, 0x1684e, 0x1684f, 0x16850, 0x16851, 0x16852, 0x16853, 0x16854, 0x16855, 0x16856, 0x16857
};

void BM_collation_element_lookup_487(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 0, cps_487 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 1, cps_487 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 2, cps_487 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 3, cps_487 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 4, cps_487 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 5, cps_487 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 6, cps_487 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 7, cps_487 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 8, cps_487 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 9, cps_487 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 10, cps_487 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 11, cps_487 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 12, cps_487 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 13, cps_487 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 14, cps_487 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 15, cps_487 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 16, cps_487 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 17, cps_487 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 18, cps_487 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 19, cps_487 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 20, cps_487 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 21, cps_487 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 22, cps_487 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 23, cps_487 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 24, cps_487 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 25, cps_487 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 26, cps_487 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 27, cps_487 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 28, cps_487 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 29, cps_487 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 30, cps_487 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 31, cps_487 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 32, cps_487 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 33, cps_487 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 34, cps_487 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 35, cps_487 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 36, cps_487 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 37, cps_487 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 38, cps_487 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 39, cps_487 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 40, cps_487 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 41, cps_487 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 42, cps_487 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 43, cps_487 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 44, cps_487 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 45, cps_487 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 46, cps_487 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 47, cps_487 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 48, cps_487 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_487 + 49, cps_487 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_487);

uint32_t cps_488[] = {
0x16858, 0x16859, 0x1685a, 0x1685b, 0x1685c, 0x1685d, 0x1685e, 0x1685f, 0x16860, 0x16861, 0x16862, 0x16863, 0x16864, 0x16865, 0x16866, 0x16867, 0x16868, 0x16869, 0x1686a, 0x1686b, 0x1686c, 0x1686d, 0x1686e, 0x1686f, 0x16870, 0x16871, 0x16872, 0x16873, 0x16874, 0x16875, 0x16876, 0x16877, 0x16878, 0x16879, 0x1687a, 0x1687b, 0x1687c, 0x1687d, 0x1687e, 0x1687f, 0x16880, 0x16881, 0x16882, 0x16883, 0x16884, 0x16885, 0x16886, 0x16887, 0x16888, 0x16889
};

void BM_collation_element_lookup_488(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 0, cps_488 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 1, cps_488 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 2, cps_488 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 3, cps_488 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 4, cps_488 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 5, cps_488 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 6, cps_488 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 7, cps_488 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 8, cps_488 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 9, cps_488 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 10, cps_488 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 11, cps_488 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 12, cps_488 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 13, cps_488 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 14, cps_488 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 15, cps_488 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 16, cps_488 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 17, cps_488 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 18, cps_488 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 19, cps_488 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 20, cps_488 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 21, cps_488 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 22, cps_488 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 23, cps_488 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 24, cps_488 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 25, cps_488 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 26, cps_488 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 27, cps_488 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 28, cps_488 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 29, cps_488 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 30, cps_488 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 31, cps_488 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 32, cps_488 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 33, cps_488 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 34, cps_488 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 35, cps_488 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 36, cps_488 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 37, cps_488 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 38, cps_488 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 39, cps_488 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 40, cps_488 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 41, cps_488 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 42, cps_488 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 43, cps_488 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 44, cps_488 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 45, cps_488 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 46, cps_488 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 47, cps_488 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 48, cps_488 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_488 + 49, cps_488 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_488);

uint32_t cps_489[] = {
0x1688a, 0x1688b, 0x1688c, 0x1688d, 0x1688e, 0x1688f, 0x16890, 0x16891, 0x16892, 0x16893, 0x16894, 0x16895, 0x16896, 0x16897, 0x16898, 0x16899, 0x1689a, 0x1689b, 0x1689c, 0x1689d, 0x1689e, 0x1689f, 0x168a0, 0x168a1, 0x168a2, 0x168a3, 0x168a4, 0x168a5, 0x168a6, 0x168a7, 0x168a8, 0x168a9, 0x168aa, 0x168ab, 0x168ac, 0x168ad, 0x168ae, 0x168af, 0x168b0, 0x168b1, 0x168b2, 0x168b3, 0x168b4, 0x168b5, 0x168b6, 0x168b7, 0x168b8, 0x168b9, 0x168ba, 0x168bb
};

void BM_collation_element_lookup_489(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 0, cps_489 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 1, cps_489 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 2, cps_489 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 3, cps_489 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 4, cps_489 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 5, cps_489 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 6, cps_489 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 7, cps_489 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 8, cps_489 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 9, cps_489 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 10, cps_489 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 11, cps_489 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 12, cps_489 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 13, cps_489 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 14, cps_489 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 15, cps_489 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 16, cps_489 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 17, cps_489 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 18, cps_489 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 19, cps_489 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 20, cps_489 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 21, cps_489 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 22, cps_489 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 23, cps_489 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 24, cps_489 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 25, cps_489 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 26, cps_489 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 27, cps_489 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 28, cps_489 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 29, cps_489 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 30, cps_489 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 31, cps_489 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 32, cps_489 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 33, cps_489 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 34, cps_489 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 35, cps_489 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 36, cps_489 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 37, cps_489 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 38, cps_489 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 39, cps_489 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 40, cps_489 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 41, cps_489 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 42, cps_489 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 43, cps_489 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 44, cps_489 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 45, cps_489 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 46, cps_489 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 47, cps_489 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 48, cps_489 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_489 + 49, cps_489 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_489);

uint32_t cps_490[] = {
0x168bc, 0x168bd, 0x168be, 0x168bf, 0x168c0, 0x168c1, 0x168c2, 0x168c3, 0x168c4, 0x168c5, 0x168c6, 0x168c7, 0x168c8, 0x168c9, 0x168ca, 0x168cb, 0x168cc, 0x168cd, 0x168ce, 0x168cf, 0x168d0, 0x168d1, 0x168d2, 0x168d3, 0x168d4, 0x168d5, 0x168d6, 0x168d7, 0x168d8, 0x168d9, 0x168da, 0x168db, 0x168dc, 0x168dd, 0x168de, 0x168df, 0x168e0, 0x168e1, 0x168e2, 0x168e3, 0x168e4, 0x168e5, 0x168e6, 0x168e7, 0x168e8, 0x168e9, 0x168ea, 0x168eb, 0x168ec, 0x168ed
};

void BM_collation_element_lookup_490(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 0, cps_490 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 1, cps_490 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 2, cps_490 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 3, cps_490 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 4, cps_490 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 5, cps_490 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 6, cps_490 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 7, cps_490 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 8, cps_490 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 9, cps_490 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 10, cps_490 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 11, cps_490 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 12, cps_490 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 13, cps_490 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 14, cps_490 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 15, cps_490 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 16, cps_490 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 17, cps_490 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 18, cps_490 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 19, cps_490 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 20, cps_490 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 21, cps_490 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 22, cps_490 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 23, cps_490 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 24, cps_490 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 25, cps_490 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 26, cps_490 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 27, cps_490 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 28, cps_490 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 29, cps_490 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 30, cps_490 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 31, cps_490 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 32, cps_490 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 33, cps_490 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 34, cps_490 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 35, cps_490 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 36, cps_490 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 37, cps_490 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 38, cps_490 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 39, cps_490 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 40, cps_490 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 41, cps_490 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 42, cps_490 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 43, cps_490 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 44, cps_490 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 45, cps_490 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 46, cps_490 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 47, cps_490 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 48, cps_490 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_490 + 49, cps_490 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_490);

uint32_t cps_491[] = {
0x168ee, 0x168ef, 0x168f0, 0x168f1, 0x168f2, 0x168f3, 0x168f4, 0x168f5, 0x168f6, 0x168f7, 0x168f8, 0x168f9, 0x168fa, 0x168fb, 0x168fc, 0x168fd, 0x168fe, 0x168ff, 0x16900, 0x16901, 0x16902, 0x16903, 0x16904, 0x16905, 0x16906, 0x16907, 0x16908, 0x16909, 0x1690a, 0x1690b, 0x1690c, 0x1690d, 0x1690e, 0x1690f, 0x16910, 0x16911, 0x16912, 0x16913, 0x16914, 0x16915, 0x16916, 0x16917, 0x16918, 0x16919, 0x1691a, 0x1691b, 0x1691c, 0x1691d, 0x1691e, 0x1691f
};

void BM_collation_element_lookup_491(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 0, cps_491 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 1, cps_491 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 2, cps_491 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 3, cps_491 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 4, cps_491 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 5, cps_491 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 6, cps_491 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 7, cps_491 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 8, cps_491 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 9, cps_491 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 10, cps_491 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 11, cps_491 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 12, cps_491 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 13, cps_491 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 14, cps_491 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 15, cps_491 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 16, cps_491 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 17, cps_491 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 18, cps_491 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 19, cps_491 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 20, cps_491 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 21, cps_491 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 22, cps_491 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 23, cps_491 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 24, cps_491 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 25, cps_491 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 26, cps_491 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 27, cps_491 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 28, cps_491 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 29, cps_491 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 30, cps_491 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 31, cps_491 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 32, cps_491 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 33, cps_491 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 34, cps_491 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 35, cps_491 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 36, cps_491 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 37, cps_491 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 38, cps_491 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 39, cps_491 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 40, cps_491 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 41, cps_491 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 42, cps_491 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 43, cps_491 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 44, cps_491 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 45, cps_491 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 46, cps_491 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 47, cps_491 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 48, cps_491 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_491 + 49, cps_491 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_491);

uint32_t cps_492[] = {
0x16920, 0x16921, 0x16922, 0x16923, 0x16924, 0x16925, 0x16926, 0x16927, 0x16928, 0x16929, 0x1692a, 0x1692b, 0x1692c, 0x1692d, 0x1692e, 0x1692f, 0x16930, 0x16931, 0x16932, 0x16933, 0x16934, 0x16935, 0x16936, 0x16937, 0x16938, 0x16939, 0x1693a, 0x1693b, 0x1693c, 0x1693d, 0x1693e, 0x1693f, 0x16940, 0x16941, 0x16942, 0x16943, 0x16944, 0x16945, 0x16946, 0x16947, 0x16948, 0x16949, 0x1694a, 0x1694b, 0x1694c, 0x1694d, 0x1694e, 0x1694f, 0x16950, 0x16951
};

void BM_collation_element_lookup_492(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 0, cps_492 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 1, cps_492 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 2, cps_492 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 3, cps_492 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 4, cps_492 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 5, cps_492 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 6, cps_492 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 7, cps_492 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 8, cps_492 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 9, cps_492 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 10, cps_492 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 11, cps_492 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 12, cps_492 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 13, cps_492 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 14, cps_492 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 15, cps_492 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 16, cps_492 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 17, cps_492 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 18, cps_492 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 19, cps_492 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 20, cps_492 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 21, cps_492 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 22, cps_492 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 23, cps_492 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 24, cps_492 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 25, cps_492 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 26, cps_492 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 27, cps_492 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 28, cps_492 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 29, cps_492 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 30, cps_492 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 31, cps_492 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 32, cps_492 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 33, cps_492 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 34, cps_492 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 35, cps_492 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 36, cps_492 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 37, cps_492 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 38, cps_492 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 39, cps_492 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 40, cps_492 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 41, cps_492 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 42, cps_492 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 43, cps_492 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 44, cps_492 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 45, cps_492 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 46, cps_492 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 47, cps_492 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 48, cps_492 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_492 + 49, cps_492 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_492);

uint32_t cps_493[] = {
0x16952, 0x16953, 0x16954, 0x16955, 0x16956, 0x16957, 0x16958, 0x16959, 0x1695a, 0x1695b, 0x1695c, 0x1695d, 0x1695e, 0x1695f, 0x16960, 0x16961, 0x16962, 0x16963, 0x16964, 0x16965, 0x16966, 0x16967, 0x16968, 0x16969, 0x1696a, 0x1696b, 0x1696c, 0x1696d, 0x1696e, 0x1696f, 0x16970, 0x16971, 0x16972, 0x16973, 0x16974, 0x16975, 0x16976, 0x16977, 0x16978, 0x16979, 0x1697a, 0x1697b, 0x1697c, 0x1697d, 0x1697e, 0x1697f, 0x16980, 0x16981, 0x16982, 0x16983
};

void BM_collation_element_lookup_493(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 0, cps_493 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 1, cps_493 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 2, cps_493 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 3, cps_493 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 4, cps_493 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 5, cps_493 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 6, cps_493 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 7, cps_493 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 8, cps_493 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 9, cps_493 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 10, cps_493 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 11, cps_493 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 12, cps_493 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 13, cps_493 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 14, cps_493 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 15, cps_493 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 16, cps_493 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 17, cps_493 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 18, cps_493 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 19, cps_493 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 20, cps_493 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 21, cps_493 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 22, cps_493 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 23, cps_493 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 24, cps_493 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 25, cps_493 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 26, cps_493 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 27, cps_493 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 28, cps_493 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 29, cps_493 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 30, cps_493 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 31, cps_493 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 32, cps_493 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 33, cps_493 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 34, cps_493 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 35, cps_493 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 36, cps_493 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 37, cps_493 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 38, cps_493 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 39, cps_493 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 40, cps_493 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 41, cps_493 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 42, cps_493 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 43, cps_493 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 44, cps_493 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 45, cps_493 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 46, cps_493 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 47, cps_493 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 48, cps_493 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_493 + 49, cps_493 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_493);

uint32_t cps_494[] = {
0x16984, 0x16985, 0x16986, 0x16987, 0x16988, 0x16989, 0x1698a, 0x1698b, 0x1698c, 0x1698d, 0x1698e, 0x1698f, 0x16990, 0x16991, 0x16992, 0x16993, 0x16994, 0x16995, 0x16996, 0x16997, 0x16998, 0x16999, 0x1699a, 0x1699b, 0x1699c, 0x1699d, 0x1699e, 0x1699f, 0x169a0, 0x169a1, 0x169a2, 0x169a3, 0x169a4, 0x169a5, 0x169a6, 0x169a7, 0x169a8, 0x169a9, 0x169aa, 0x169ab, 0x169ac, 0x169ad, 0x169ae, 0x169af, 0x169b0, 0x169b1, 0x169b2, 0x169b3, 0x169b4, 0x169b5
};

void BM_collation_element_lookup_494(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 0, cps_494 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 1, cps_494 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 2, cps_494 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 3, cps_494 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 4, cps_494 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 5, cps_494 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 6, cps_494 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 7, cps_494 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 8, cps_494 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 9, cps_494 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 10, cps_494 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 11, cps_494 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 12, cps_494 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 13, cps_494 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 14, cps_494 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 15, cps_494 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 16, cps_494 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 17, cps_494 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 18, cps_494 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 19, cps_494 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 20, cps_494 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 21, cps_494 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 22, cps_494 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 23, cps_494 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 24, cps_494 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 25, cps_494 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 26, cps_494 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 27, cps_494 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 28, cps_494 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 29, cps_494 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 30, cps_494 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 31, cps_494 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 32, cps_494 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 33, cps_494 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 34, cps_494 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 35, cps_494 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 36, cps_494 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 37, cps_494 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 38, cps_494 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 39, cps_494 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 40, cps_494 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 41, cps_494 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 42, cps_494 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 43, cps_494 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 44, cps_494 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 45, cps_494 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 46, cps_494 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 47, cps_494 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 48, cps_494 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_494 + 49, cps_494 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_494);

uint32_t cps_495[] = {
0x169b6, 0x169b7, 0x169b8, 0x169b9, 0x169ba, 0x169bb, 0x169bc, 0x169bd, 0x169be, 0x169bf, 0x169c0, 0x169c1, 0x169c2, 0x169c3, 0x169c4, 0x169c5, 0x169c6, 0x169c7, 0x169c8, 0x169c9, 0x169ca, 0x169cb, 0x169cc, 0x169cd, 0x169ce, 0x169cf, 0x169d0, 0x169d1, 0x169d2, 0x169d3, 0x169d4, 0x169d5, 0x169d6, 0x169d7, 0x169d8, 0x169d9, 0x169da, 0x169db, 0x169dc, 0x169dd, 0x169de, 0x169df, 0x169e0, 0x169e1, 0x169e2, 0x169e3, 0x169e4, 0x169e5, 0x169e6, 0x169e7
};

void BM_collation_element_lookup_495(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 0, cps_495 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 1, cps_495 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 2, cps_495 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 3, cps_495 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 4, cps_495 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 5, cps_495 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 6, cps_495 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 7, cps_495 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 8, cps_495 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 9, cps_495 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 10, cps_495 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 11, cps_495 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 12, cps_495 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 13, cps_495 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 14, cps_495 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 15, cps_495 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 16, cps_495 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 17, cps_495 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 18, cps_495 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 19, cps_495 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 20, cps_495 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 21, cps_495 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 22, cps_495 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 23, cps_495 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 24, cps_495 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 25, cps_495 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 26, cps_495 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 27, cps_495 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 28, cps_495 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 29, cps_495 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 30, cps_495 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 31, cps_495 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 32, cps_495 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 33, cps_495 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 34, cps_495 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 35, cps_495 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 36, cps_495 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 37, cps_495 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 38, cps_495 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 39, cps_495 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 40, cps_495 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 41, cps_495 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 42, cps_495 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 43, cps_495 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 44, cps_495 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 45, cps_495 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 46, cps_495 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 47, cps_495 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 48, cps_495 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_495 + 49, cps_495 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_495);

uint32_t cps_496[] = {
0x169e8, 0x169e9, 0x169ea, 0x169eb, 0x169ec, 0x169ed, 0x169ee, 0x169ef, 0x169f0, 0x169f1, 0x169f2, 0x169f3, 0x169f4, 0x169f5, 0x169f6, 0x169f7, 0x169f8, 0x169f9, 0x169fa, 0x169fb, 0x169fc, 0x169fd, 0x169fe, 0x169ff, 0x16a00, 0x16a01, 0x16a02, 0x16a03, 0x16a04, 0x16a05, 0x16a06, 0x16a07, 0x16a08, 0x16a09, 0x16a0a, 0x16a0b, 0x16a0c, 0x16a0d, 0x16a0e, 0x16a0f, 0x16a10, 0x16a11, 0x16a12, 0x16a13, 0x16a14, 0x16a15, 0x16a16, 0x16a17, 0x16a18, 0x16a19
};

void BM_collation_element_lookup_496(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 0, cps_496 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 1, cps_496 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 2, cps_496 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 3, cps_496 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 4, cps_496 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 5, cps_496 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 6, cps_496 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 7, cps_496 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 8, cps_496 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 9, cps_496 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 10, cps_496 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 11, cps_496 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 12, cps_496 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 13, cps_496 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 14, cps_496 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 15, cps_496 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 16, cps_496 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 17, cps_496 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 18, cps_496 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 19, cps_496 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 20, cps_496 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 21, cps_496 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 22, cps_496 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 23, cps_496 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 24, cps_496 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 25, cps_496 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 26, cps_496 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 27, cps_496 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 28, cps_496 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 29, cps_496 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 30, cps_496 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 31, cps_496 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 32, cps_496 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 33, cps_496 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 34, cps_496 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 35, cps_496 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 36, cps_496 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 37, cps_496 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 38, cps_496 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 39, cps_496 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 40, cps_496 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 41, cps_496 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 42, cps_496 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 43, cps_496 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 44, cps_496 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 45, cps_496 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 46, cps_496 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 47, cps_496 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 48, cps_496 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_496 + 49, cps_496 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_496);

uint32_t cps_497[] = {
0x16a1a, 0x16a1b, 0x16a1c, 0x16a1d, 0x16a1e, 0x16a1f, 0x16a20, 0x16a21, 0x16a22, 0x16a23, 0x16a24, 0x16a25, 0x16a26, 0x16a27, 0x16a28, 0x16a29, 0x16a2a, 0x16a2b, 0x16a2c, 0x16a2d, 0x16a2e, 0x16a2f, 0x16a30, 0x16a31, 0x16a32, 0x16a33, 0x16a34, 0x16a35, 0x16a36, 0x16a37, 0x16a38, 0x16a40, 0x16a41, 0x16a42, 0x16a43, 0x16a44, 0x16a45, 0x16a46, 0x16a47, 0x16a48, 0x16a49, 0x16a4a, 0x16a4b, 0x16a4c, 0x16a4d, 0x16a4e, 0x16a4f, 0x16a50, 0x16a51, 0x16a52
};

void BM_collation_element_lookup_497(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 0, cps_497 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 1, cps_497 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 2, cps_497 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 3, cps_497 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 4, cps_497 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 5, cps_497 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 6, cps_497 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 7, cps_497 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 8, cps_497 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 9, cps_497 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 10, cps_497 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 11, cps_497 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 12, cps_497 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 13, cps_497 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 14, cps_497 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 15, cps_497 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 16, cps_497 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 17, cps_497 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 18, cps_497 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 19, cps_497 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 20, cps_497 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 21, cps_497 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 22, cps_497 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 23, cps_497 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 24, cps_497 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 25, cps_497 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 26, cps_497 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 27, cps_497 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 28, cps_497 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 29, cps_497 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 30, cps_497 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 31, cps_497 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 32, cps_497 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 33, cps_497 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 34, cps_497 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 35, cps_497 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 36, cps_497 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 37, cps_497 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 38, cps_497 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 39, cps_497 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 40, cps_497 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 41, cps_497 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 42, cps_497 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 43, cps_497 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 44, cps_497 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 45, cps_497 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 46, cps_497 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 47, cps_497 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 48, cps_497 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_497 + 49, cps_497 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_497);

uint32_t cps_498[] = {
0x16a53, 0x16a54, 0x16a55, 0x16a56, 0x16a57, 0x16a58, 0x16a59, 0x16a5a, 0x16a5b, 0x16a5c, 0x16a5d, 0x16a5e, 0x16a60, 0x16a61, 0x16a62, 0x16a63, 0x16a64, 0x16a65, 0x16a66, 0x16a67, 0x16a68, 0x16a69, 0x16a6e, 0x16a6f, 0x16ad0, 0x16ad1, 0x16ad2, 0x16ad3, 0x16ad4, 0x16ad5, 0x16ad6, 0x16ad7, 0x16ad8, 0x16ad9, 0x16ada, 0x16adb, 0x16adc, 0x16add, 0x16ade, 0x16adf, 0x16ae0, 0x16ae1, 0x16ae2, 0x16ae3, 0x16ae4, 0x16ae5, 0x16ae6, 0x16ae7, 0x16ae8, 0x16ae9
};

void BM_collation_element_lookup_498(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 0, cps_498 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 1, cps_498 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 2, cps_498 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 3, cps_498 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 4, cps_498 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 5, cps_498 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 6, cps_498 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 7, cps_498 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 8, cps_498 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 9, cps_498 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 10, cps_498 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 11, cps_498 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 12, cps_498 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 13, cps_498 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 14, cps_498 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 15, cps_498 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 16, cps_498 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 17, cps_498 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 18, cps_498 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 19, cps_498 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 20, cps_498 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 21, cps_498 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 22, cps_498 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 23, cps_498 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 24, cps_498 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 25, cps_498 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 26, cps_498 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 27, cps_498 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 28, cps_498 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 29, cps_498 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 30, cps_498 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 31, cps_498 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 32, cps_498 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 33, cps_498 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 34, cps_498 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 35, cps_498 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 36, cps_498 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 37, cps_498 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 38, cps_498 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 39, cps_498 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 40, cps_498 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 41, cps_498 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 42, cps_498 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 43, cps_498 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 44, cps_498 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 45, cps_498 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 46, cps_498 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 47, cps_498 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 48, cps_498 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_498 + 49, cps_498 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_498);

uint32_t cps_499[] = {
0x16aea, 0x16aeb, 0x16aec, 0x16aed, 0x16af0, 0x16af1, 0x16af2, 0x16af3, 0x16af4, 0x16af5, 0x16b00, 0x16b01, 0x16b02, 0x16b03, 0x16b04, 0x16b05, 0x16b06, 0x16b07, 0x16b08, 0x16b09, 0x16b0a, 0x16b0b, 0x16b0c, 0x16b0d, 0x16b0e, 0x16b0f, 0x16b10, 0x16b11, 0x16b12, 0x16b13, 0x16b14, 0x16b15, 0x16b16, 0x16b17, 0x16b18, 0x16b19, 0x16b1a, 0x16b1b, 0x16b1c, 0x16b1d, 0x16b1e, 0x16b1f, 0x16b20, 0x16b21, 0x16b22, 0x16b23, 0x16b24, 0x16b25, 0x16b26, 0x16b27
};

void BM_collation_element_lookup_499(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 0, cps_499 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 1, cps_499 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 2, cps_499 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 3, cps_499 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 4, cps_499 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 5, cps_499 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 6, cps_499 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 7, cps_499 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 8, cps_499 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 9, cps_499 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 10, cps_499 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 11, cps_499 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 12, cps_499 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 13, cps_499 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 14, cps_499 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 15, cps_499 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 16, cps_499 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 17, cps_499 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 18, cps_499 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 19, cps_499 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 20, cps_499 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 21, cps_499 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 22, cps_499 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 23, cps_499 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 24, cps_499 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 25, cps_499 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 26, cps_499 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 27, cps_499 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 28, cps_499 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 29, cps_499 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 30, cps_499 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 31, cps_499 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 32, cps_499 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 33, cps_499 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 34, cps_499 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 35, cps_499 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 36, cps_499 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 37, cps_499 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 38, cps_499 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 39, cps_499 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 40, cps_499 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 41, cps_499 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 42, cps_499 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 43, cps_499 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 44, cps_499 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 45, cps_499 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 46, cps_499 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 47, cps_499 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 48, cps_499 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_499 + 49, cps_499 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_499);



BENCHMARK_MAIN()
