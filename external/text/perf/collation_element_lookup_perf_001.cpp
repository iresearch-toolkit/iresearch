// Copyright (C) 2020 T. Zachary Laine
//
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

// Warning! This file is autogenerated.
#include <boost/text/collate.hpp>
#include <boost/text/collation_table.hpp>

#include <benchmark/benchmark.h>

boost::text::detail::collation_trie_t const & trie()
{
    static auto const retval = boost::text::detail::make_default_trie();
    return retval;
}

boost::text::collation_table const & table()
{
    static auto const retval = boost::text::default_collation_table();
    return retval;
}

uint32_t cps_100[] = {
0x146d, 0x146e, 0x146f, 0x1470, 0x1471, 0x1472, 0x1473, 0x1474, 0x1475, 0x1476, 0x1477, 0x1478, 0x1479, 0x147a, 0x147b, 0x147c, 0x147d, 0x147e, 0x147f, 0x1480, 0x1481, 0x1482, 0x1483, 0x1484, 0x1485, 0x1486, 0x1487, 0x1488, 0x1489, 0x148a, 0x148b, 0x148c, 0x148d, 0x148e, 0x148f, 0x1490, 0x1491, 0x1492, 0x1493, 0x1494, 0x1495, 0x1496, 0x1497, 0x1498, 0x1499, 0x149a, 0x149b, 0x149c, 0x149d, 0x149e
};

void BM_collation_element_lookup_100(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 0, cps_100 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 1, cps_100 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 2, cps_100 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 3, cps_100 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 4, cps_100 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 5, cps_100 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 6, cps_100 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 7, cps_100 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 8, cps_100 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 9, cps_100 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 10, cps_100 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 11, cps_100 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 12, cps_100 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 13, cps_100 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 14, cps_100 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 15, cps_100 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 16, cps_100 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 17, cps_100 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 18, cps_100 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 19, cps_100 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 20, cps_100 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 21, cps_100 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 22, cps_100 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 23, cps_100 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 24, cps_100 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 25, cps_100 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 26, cps_100 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 27, cps_100 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 28, cps_100 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 29, cps_100 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 30, cps_100 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 31, cps_100 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 32, cps_100 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 33, cps_100 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 34, cps_100 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 35, cps_100 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 36, cps_100 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 37, cps_100 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 38, cps_100 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 39, cps_100 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 40, cps_100 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 41, cps_100 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 42, cps_100 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 43, cps_100 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 44, cps_100 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 45, cps_100 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 46, cps_100 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 47, cps_100 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 48, cps_100 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_100 + 49, cps_100 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_100);

uint32_t cps_101[] = {
0x149f, 0x14a0, 0x14a1, 0x14a2, 0x14a3, 0x14a4, 0x14a5, 0x14a6, 0x14a7, 0x14a8, 0x14a9, 0x14aa, 0x14ab, 0x14ac, 0x14ad, 0x14ae, 0x14af, 0x14b0, 0x14b1, 0x14b2, 0x14b3, 0x14b4, 0x14b5, 0x14b6, 0x14b7, 0x14b8, 0x14b9, 0x14ba, 0x14bb, 0x14bc, 0x14bd, 0x14be, 0x14bf, 0x14c0, 0x14c1, 0x14c2, 0x14c3, 0x14c4, 0x14c5, 0x14c6, 0x14c7, 0x14c8, 0x14c9, 0x14ca, 0x14cb, 0x14cc, 0x14cd, 0x14ce, 0x14cf, 0x14d0
};

void BM_collation_element_lookup_101(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 0, cps_101 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 1, cps_101 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 2, cps_101 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 3, cps_101 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 4, cps_101 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 5, cps_101 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 6, cps_101 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 7, cps_101 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 8, cps_101 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 9, cps_101 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 10, cps_101 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 11, cps_101 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 12, cps_101 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 13, cps_101 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 14, cps_101 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 15, cps_101 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 16, cps_101 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 17, cps_101 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 18, cps_101 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 19, cps_101 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 20, cps_101 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 21, cps_101 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 22, cps_101 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 23, cps_101 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 24, cps_101 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 25, cps_101 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 26, cps_101 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 27, cps_101 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 28, cps_101 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 29, cps_101 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 30, cps_101 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 31, cps_101 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 32, cps_101 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 33, cps_101 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 34, cps_101 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 35, cps_101 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 36, cps_101 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 37, cps_101 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 38, cps_101 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 39, cps_101 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 40, cps_101 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 41, cps_101 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 42, cps_101 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 43, cps_101 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 44, cps_101 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 45, cps_101 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 46, cps_101 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 47, cps_101 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 48, cps_101 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_101 + 49, cps_101 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_101);

uint32_t cps_102[] = {
0x14d1, 0x14d2, 0x14d3, 0x14d4, 0x14d5, 0x14d6, 0x14d7, 0x14d8, 0x14d9, 0x14da, 0x14db, 0x14dc, 0x14dd, 0x14de, 0x14df, 0x14e0, 0x14e1, 0x14e2, 0x14e3, 0x14e4, 0x14e5, 0x14e6, 0x14e7, 0x14e8, 0x14e9, 0x14ea, 0x14eb, 0x14ec, 0x14ed, 0x14ee, 0x14ef, 0x14f0, 0x14f1, 0x14f2, 0x14f3, 0x14f4, 0x14f5, 0x14f6, 0x14f7, 0x14f8, 0x14f9, 0x14fa, 0x14fb, 0x14fc, 0x14fd, 0x14fe, 0x14ff, 0x1500, 0x1501, 0x1502
};

void BM_collation_element_lookup_102(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 0, cps_102 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 1, cps_102 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 2, cps_102 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 3, cps_102 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 4, cps_102 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 5, cps_102 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 6, cps_102 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 7, cps_102 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 8, cps_102 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 9, cps_102 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 10, cps_102 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 11, cps_102 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 12, cps_102 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 13, cps_102 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 14, cps_102 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 15, cps_102 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 16, cps_102 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 17, cps_102 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 18, cps_102 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 19, cps_102 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 20, cps_102 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 21, cps_102 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 22, cps_102 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 23, cps_102 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 24, cps_102 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 25, cps_102 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 26, cps_102 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 27, cps_102 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 28, cps_102 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 29, cps_102 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 30, cps_102 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 31, cps_102 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 32, cps_102 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 33, cps_102 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 34, cps_102 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 35, cps_102 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 36, cps_102 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 37, cps_102 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 38, cps_102 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 39, cps_102 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 40, cps_102 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 41, cps_102 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 42, cps_102 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 43, cps_102 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 44, cps_102 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 45, cps_102 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 46, cps_102 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 47, cps_102 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 48, cps_102 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_102 + 49, cps_102 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_102);

uint32_t cps_103[] = {
0x1503, 0x1504, 0x1505, 0x1506, 0x1507, 0x1508, 0x1509, 0x150a, 0x150b, 0x150c, 0x150d, 0x150e, 0x150f, 0x1510, 0x1511, 0x1512, 0x1513, 0x1514, 0x1515, 0x1516, 0x1517, 0x1518, 0x1519, 0x151a, 0x151b, 0x151c, 0x151d, 0x151e, 0x151f, 0x1520, 0x1521, 0x1522, 0x1523, 0x1524, 0x1525, 0x1526, 0x1527, 0x1528, 0x1529, 0x152a, 0x152b, 0x152c, 0x152d, 0x152e, 0x152f, 0x1530, 0x1531, 0x1532, 0x1533, 0x1534
};

void BM_collation_element_lookup_103(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 0, cps_103 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 1, cps_103 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 2, cps_103 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 3, cps_103 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 4, cps_103 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 5, cps_103 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 6, cps_103 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 7, cps_103 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 8, cps_103 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 9, cps_103 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 10, cps_103 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 11, cps_103 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 12, cps_103 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 13, cps_103 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 14, cps_103 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 15, cps_103 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 16, cps_103 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 17, cps_103 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 18, cps_103 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 19, cps_103 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 20, cps_103 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 21, cps_103 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 22, cps_103 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 23, cps_103 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 24, cps_103 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 25, cps_103 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 26, cps_103 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 27, cps_103 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 28, cps_103 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 29, cps_103 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 30, cps_103 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 31, cps_103 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 32, cps_103 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 33, cps_103 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 34, cps_103 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 35, cps_103 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 36, cps_103 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 37, cps_103 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 38, cps_103 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 39, cps_103 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 40, cps_103 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 41, cps_103 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 42, cps_103 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 43, cps_103 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 44, cps_103 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 45, cps_103 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 46, cps_103 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 47, cps_103 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 48, cps_103 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_103 + 49, cps_103 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_103);

uint32_t cps_104[] = {
0x1535, 0x1536, 0x1537, 0x1538, 0x1539, 0x153a, 0x153b, 0x153c, 0x153d, 0x153e, 0x153f, 0x1540, 0x1541, 0x1542, 0x1543, 0x1544, 0x1545, 0x1546, 0x1547, 0x1548, 0x1549, 0x154a, 0x154b, 0x154c, 0x154d, 0x154e, 0x154f, 0x1550, 0x1551, 0x1552, 0x1553, 0x1554, 0x1555, 0x1556, 0x1557, 0x1558, 0x1559, 0x155a, 0x155b, 0x155c, 0x155d, 0x155e, 0x155f, 0x1560, 0x1561, 0x1562, 0x1563, 0x1564, 0x1565, 0x1566
};

void BM_collation_element_lookup_104(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 0, cps_104 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 1, cps_104 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 2, cps_104 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 3, cps_104 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 4, cps_104 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 5, cps_104 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 6, cps_104 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 7, cps_104 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 8, cps_104 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 9, cps_104 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 10, cps_104 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 11, cps_104 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 12, cps_104 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 13, cps_104 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 14, cps_104 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 15, cps_104 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 16, cps_104 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 17, cps_104 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 18, cps_104 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 19, cps_104 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 20, cps_104 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 21, cps_104 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 22, cps_104 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 23, cps_104 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 24, cps_104 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 25, cps_104 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 26, cps_104 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 27, cps_104 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 28, cps_104 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 29, cps_104 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 30, cps_104 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 31, cps_104 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 32, cps_104 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 33, cps_104 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 34, cps_104 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 35, cps_104 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 36, cps_104 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 37, cps_104 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 38, cps_104 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 39, cps_104 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 40, cps_104 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 41, cps_104 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 42, cps_104 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 43, cps_104 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 44, cps_104 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 45, cps_104 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 46, cps_104 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 47, cps_104 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 48, cps_104 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_104 + 49, cps_104 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_104);

uint32_t cps_105[] = {
0x1567, 0x1568, 0x1569, 0x156a, 0x156b, 0x156c, 0x156d, 0x156e, 0x156f, 0x1570, 0x1571, 0x1572, 0x1573, 0x1574, 0x1575, 0x1576, 0x1577, 0x1578, 0x1579, 0x157a, 0x157b, 0x157c, 0x157d, 0x157e, 0x157f, 0x1580, 0x1581, 0x1582, 0x1583, 0x1584, 0x1585, 0x1586, 0x1587, 0x1588, 0x1589, 0x158a, 0x158b, 0x158c, 0x158d, 0x158e, 0x158f, 0x1590, 0x1591, 0x1592, 0x1593, 0x1594, 0x1595, 0x1596, 0x1597, 0x1598
};

void BM_collation_element_lookup_105(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 0, cps_105 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 1, cps_105 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 2, cps_105 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 3, cps_105 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 4, cps_105 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 5, cps_105 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 6, cps_105 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 7, cps_105 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 8, cps_105 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 9, cps_105 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 10, cps_105 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 11, cps_105 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 12, cps_105 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 13, cps_105 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 14, cps_105 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 15, cps_105 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 16, cps_105 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 17, cps_105 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 18, cps_105 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 19, cps_105 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 20, cps_105 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 21, cps_105 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 22, cps_105 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 23, cps_105 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 24, cps_105 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 25, cps_105 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 26, cps_105 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 27, cps_105 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 28, cps_105 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 29, cps_105 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 30, cps_105 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 31, cps_105 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 32, cps_105 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 33, cps_105 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 34, cps_105 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 35, cps_105 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 36, cps_105 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 37, cps_105 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 38, cps_105 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 39, cps_105 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 40, cps_105 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 41, cps_105 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 42, cps_105 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 43, cps_105 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 44, cps_105 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 45, cps_105 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 46, cps_105 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 47, cps_105 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 48, cps_105 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_105 + 49, cps_105 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_105);

uint32_t cps_106[] = {
0x1599, 0x159a, 0x159b, 0x159c, 0x159d, 0x159e, 0x159f, 0x15a0, 0x15a1, 0x15a2, 0x15a3, 0x15a4, 0x15a5, 0x15a6, 0x15a7, 0x15a8, 0x15a9, 0x15aa, 0x15ab, 0x15ac, 0x15ad, 0x15ae, 0x15af, 0x15b0, 0x15b1, 0x15b2, 0x15b3, 0x15b4, 0x15b5, 0x15b6, 0x15b7, 0x15b8, 0x15b9, 0x15ba, 0x15bb, 0x15bc, 0x15bd, 0x15be, 0x15bf, 0x15c0, 0x15c1, 0x15c2, 0x15c3, 0x15c4, 0x15c5, 0x15c6, 0x15c7, 0x15c8, 0x15c9, 0x15ca
};

void BM_collation_element_lookup_106(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 0, cps_106 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 1, cps_106 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 2, cps_106 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 3, cps_106 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 4, cps_106 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 5, cps_106 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 6, cps_106 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 7, cps_106 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 8, cps_106 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 9, cps_106 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 10, cps_106 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 11, cps_106 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 12, cps_106 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 13, cps_106 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 14, cps_106 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 15, cps_106 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 16, cps_106 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 17, cps_106 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 18, cps_106 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 19, cps_106 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 20, cps_106 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 21, cps_106 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 22, cps_106 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 23, cps_106 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 24, cps_106 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 25, cps_106 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 26, cps_106 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 27, cps_106 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 28, cps_106 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 29, cps_106 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 30, cps_106 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 31, cps_106 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 32, cps_106 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 33, cps_106 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 34, cps_106 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 35, cps_106 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 36, cps_106 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 37, cps_106 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 38, cps_106 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 39, cps_106 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 40, cps_106 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 41, cps_106 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 42, cps_106 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 43, cps_106 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 44, cps_106 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 45, cps_106 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 46, cps_106 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 47, cps_106 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 48, cps_106 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_106 + 49, cps_106 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_106);

uint32_t cps_107[] = {
0x15cb, 0x15cc, 0x15cd, 0x15ce, 0x15cf, 0x15d0, 0x15d1, 0x15d2, 0x15d3, 0x15d4, 0x15d5, 0x15d6, 0x15d7, 0x15d8, 0x15d9, 0x15da, 0x15db, 0x15dc, 0x15dd, 0x15de, 0x15df, 0x15e0, 0x15e1, 0x15e2, 0x15e3, 0x15e4, 0x15e5, 0x15e6, 0x15e7, 0x15e8, 0x15e9, 0x15ea, 0x15eb, 0x15ec, 0x15ed, 0x15ee, 0x15ef, 0x15f0, 0x15f1, 0x15f2, 0x15f3, 0x15f4, 0x15f5, 0x15f6, 0x15f7, 0x15f8, 0x15f9, 0x15fa, 0x15fb, 0x15fc
};

void BM_collation_element_lookup_107(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 0, cps_107 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 1, cps_107 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 2, cps_107 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 3, cps_107 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 4, cps_107 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 5, cps_107 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 6, cps_107 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 7, cps_107 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 8, cps_107 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 9, cps_107 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 10, cps_107 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 11, cps_107 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 12, cps_107 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 13, cps_107 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 14, cps_107 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 15, cps_107 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 16, cps_107 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 17, cps_107 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 18, cps_107 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 19, cps_107 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 20, cps_107 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 21, cps_107 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 22, cps_107 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 23, cps_107 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 24, cps_107 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 25, cps_107 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 26, cps_107 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 27, cps_107 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 28, cps_107 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 29, cps_107 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 30, cps_107 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 31, cps_107 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 32, cps_107 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 33, cps_107 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 34, cps_107 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 35, cps_107 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 36, cps_107 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 37, cps_107 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 38, cps_107 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 39, cps_107 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 40, cps_107 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 41, cps_107 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 42, cps_107 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 43, cps_107 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 44, cps_107 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 45, cps_107 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 46, cps_107 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 47, cps_107 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 48, cps_107 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_107 + 49, cps_107 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_107);

uint32_t cps_108[] = {
0x15fd, 0x15fe, 0x15ff, 0x1600, 0x1601, 0x1602, 0x1603, 0x1604, 0x1605, 0x1606, 0x1607, 0x1608, 0x1609, 0x160a, 0x160b, 0x160c, 0x160d, 0x160e, 0x160f, 0x1610, 0x1611, 0x1612, 0x1613, 0x1614, 0x1615, 0x1616, 0x1617, 0x1618, 0x1619, 0x161a, 0x161b, 0x161c, 0x161d, 0x161e, 0x161f, 0x1620, 0x1621, 0x1622, 0x1623, 0x1624, 0x1625, 0x1626, 0x1627, 0x1628, 0x1629, 0x162a, 0x162b, 0x162c, 0x162d, 0x162e
};

void BM_collation_element_lookup_108(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 0, cps_108 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 1, cps_108 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 2, cps_108 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 3, cps_108 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 4, cps_108 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 5, cps_108 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 6, cps_108 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 7, cps_108 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 8, cps_108 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 9, cps_108 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 10, cps_108 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 11, cps_108 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 12, cps_108 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 13, cps_108 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 14, cps_108 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 15, cps_108 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 16, cps_108 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 17, cps_108 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 18, cps_108 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 19, cps_108 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 20, cps_108 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 21, cps_108 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 22, cps_108 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 23, cps_108 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 24, cps_108 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 25, cps_108 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 26, cps_108 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 27, cps_108 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 28, cps_108 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 29, cps_108 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 30, cps_108 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 31, cps_108 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 32, cps_108 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 33, cps_108 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 34, cps_108 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 35, cps_108 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 36, cps_108 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 37, cps_108 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 38, cps_108 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 39, cps_108 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 40, cps_108 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 41, cps_108 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 42, cps_108 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 43, cps_108 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 44, cps_108 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 45, cps_108 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 46, cps_108 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 47, cps_108 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 48, cps_108 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_108 + 49, cps_108 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_108);

uint32_t cps_109[] = {
0x162f, 0x1630, 0x1631, 0x1632, 0x1633, 0x1634, 0x1635, 0x1636, 0x1637, 0x1638, 0x1639, 0x163a, 0x163b, 0x163c, 0x163d, 0x163e, 0x163f, 0x1640, 0x1641, 0x1642, 0x1643, 0x1644, 0x1645, 0x1646, 0x1647, 0x1648, 0x1649, 0x164a, 0x164b, 0x164c, 0x164d, 0x164e, 0x164f, 0x1650, 0x1651, 0x1652, 0x1653, 0x1654, 0x1655, 0x1656, 0x1657, 0x1658, 0x1659, 0x165a, 0x165b, 0x165c, 0x165d, 0x165e, 0x165f, 0x1660
};

void BM_collation_element_lookup_109(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 0, cps_109 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 1, cps_109 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 2, cps_109 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 3, cps_109 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 4, cps_109 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 5, cps_109 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 6, cps_109 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 7, cps_109 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 8, cps_109 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 9, cps_109 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 10, cps_109 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 11, cps_109 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 12, cps_109 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 13, cps_109 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 14, cps_109 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 15, cps_109 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 16, cps_109 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 17, cps_109 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 18, cps_109 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 19, cps_109 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 20, cps_109 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 21, cps_109 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 22, cps_109 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 23, cps_109 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 24, cps_109 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 25, cps_109 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 26, cps_109 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 27, cps_109 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 28, cps_109 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 29, cps_109 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 30, cps_109 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 31, cps_109 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 32, cps_109 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 33, cps_109 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 34, cps_109 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 35, cps_109 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 36, cps_109 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 37, cps_109 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 38, cps_109 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 39, cps_109 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 40, cps_109 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 41, cps_109 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 42, cps_109 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 43, cps_109 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 44, cps_109 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 45, cps_109 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 46, cps_109 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 47, cps_109 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 48, cps_109 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_109 + 49, cps_109 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_109);

uint32_t cps_110[] = {
0x1661, 0x1662, 0x1663, 0x1664, 0x1665, 0x1666, 0x1667, 0x1668, 0x1669, 0x166a, 0x166b, 0x166c, 0x166d, 0x166e, 0x166f, 0x1670, 0x1671, 0x1672, 0x1673, 0x1674, 0x1675, 0x1676, 0x1677, 0x1678, 0x1679, 0x167a, 0x167b, 0x167c, 0x167d, 0x167e, 0x167f, 0x1680, 0x1681, 0x1682, 0x1683, 0x1684, 0x1685, 0x1686, 0x1687, 0x1688, 0x1689, 0x168a, 0x168b, 0x168c, 0x168d, 0x168e, 0x168f, 0x1690, 0x1691, 0x1692
};

void BM_collation_element_lookup_110(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 0, cps_110 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 1, cps_110 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 2, cps_110 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 3, cps_110 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 4, cps_110 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 5, cps_110 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 6, cps_110 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 7, cps_110 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 8, cps_110 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 9, cps_110 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 10, cps_110 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 11, cps_110 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 12, cps_110 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 13, cps_110 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 14, cps_110 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 15, cps_110 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 16, cps_110 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 17, cps_110 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 18, cps_110 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 19, cps_110 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 20, cps_110 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 21, cps_110 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 22, cps_110 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 23, cps_110 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 24, cps_110 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 25, cps_110 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 26, cps_110 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 27, cps_110 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 28, cps_110 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 29, cps_110 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 30, cps_110 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 31, cps_110 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 32, cps_110 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 33, cps_110 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 34, cps_110 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 35, cps_110 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 36, cps_110 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 37, cps_110 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 38, cps_110 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 39, cps_110 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 40, cps_110 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 41, cps_110 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 42, cps_110 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 43, cps_110 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 44, cps_110 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 45, cps_110 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 46, cps_110 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 47, cps_110 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 48, cps_110 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_110 + 49, cps_110 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_110);

uint32_t cps_111[] = {
0x1693, 0x1694, 0x1695, 0x1696, 0x1697, 0x1698, 0x1699, 0x169a, 0x169b, 0x169c, 0x16a0, 0x16a1, 0x16a2, 0x16a3, 0x16a4, 0x16a5, 0x16a6, 0x16a7, 0x16a8, 0x16a9, 0x16aa, 0x16ab, 0x16ac, 0x16ad, 0x16ae, 0x16af, 0x16b0, 0x16b1, 0x16b2, 0x16b3, 0x16b4, 0x16b5, 0x16b6, 0x16b7, 0x16b8, 0x16b9, 0x16ba, 0x16bb, 0x16bc, 0x16bd, 0x16be, 0x16bf, 0x16c0, 0x16c1, 0x16c2, 0x16c3, 0x16c4, 0x16c5, 0x16c6, 0x16c7
};

void BM_collation_element_lookup_111(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 0, cps_111 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 1, cps_111 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 2, cps_111 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 3, cps_111 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 4, cps_111 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 5, cps_111 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 6, cps_111 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 7, cps_111 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 8, cps_111 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 9, cps_111 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 10, cps_111 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 11, cps_111 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 12, cps_111 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 13, cps_111 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 14, cps_111 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 15, cps_111 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 16, cps_111 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 17, cps_111 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 18, cps_111 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 19, cps_111 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 20, cps_111 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 21, cps_111 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 22, cps_111 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 23, cps_111 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 24, cps_111 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 25, cps_111 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 26, cps_111 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 27, cps_111 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 28, cps_111 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 29, cps_111 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 30, cps_111 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 31, cps_111 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 32, cps_111 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 33, cps_111 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 34, cps_111 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 35, cps_111 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 36, cps_111 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 37, cps_111 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 38, cps_111 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 39, cps_111 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 40, cps_111 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 41, cps_111 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 42, cps_111 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 43, cps_111 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 44, cps_111 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 45, cps_111 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 46, cps_111 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 47, cps_111 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 48, cps_111 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_111 + 49, cps_111 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_111);

uint32_t cps_112[] = {
0x16c8, 0x16c9, 0x16ca, 0x16cb, 0x16cc, 0x16cd, 0x16ce, 0x16cf, 0x16d0, 0x16d1, 0x16d2, 0x16d3, 0x16d4, 0x16d5, 0x16d6, 0x16d7, 0x16d8, 0x16d9, 0x16da, 0x16db, 0x16dc, 0x16dd, 0x16de, 0x16df, 0x16e0, 0x16e1, 0x16e2, 0x16e3, 0x16e4, 0x16e5, 0x16e6, 0x16e7, 0x16e8, 0x16e9, 0x16ea, 0x16eb, 0x16ec, 0x16ed, 0x16ee, 0x16ef, 0x16f0, 0x16f1, 0x16f2, 0x16f3, 0x16f4, 0x16f5, 0x16f6, 0x16f7, 0x16f8, 0x1700
};

void BM_collation_element_lookup_112(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 0, cps_112 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 1, cps_112 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 2, cps_112 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 3, cps_112 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 4, cps_112 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 5, cps_112 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 6, cps_112 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 7, cps_112 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 8, cps_112 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 9, cps_112 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 10, cps_112 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 11, cps_112 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 12, cps_112 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 13, cps_112 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 14, cps_112 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 15, cps_112 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 16, cps_112 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 17, cps_112 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 18, cps_112 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 19, cps_112 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 20, cps_112 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 21, cps_112 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 22, cps_112 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 23, cps_112 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 24, cps_112 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 25, cps_112 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 26, cps_112 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 27, cps_112 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 28, cps_112 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 29, cps_112 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 30, cps_112 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 31, cps_112 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 32, cps_112 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 33, cps_112 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 34, cps_112 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 35, cps_112 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 36, cps_112 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 37, cps_112 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 38, cps_112 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 39, cps_112 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 40, cps_112 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 41, cps_112 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 42, cps_112 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 43, cps_112 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 44, cps_112 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 45, cps_112 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 46, cps_112 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 47, cps_112 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 48, cps_112 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_112 + 49, cps_112 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_112);

uint32_t cps_113[] = {
0x1701, 0x1702, 0x1703, 0x1704, 0x1705, 0x1706, 0x1707, 0x1708, 0x1709, 0x170a, 0x170b, 0x170c, 0x170e, 0x170f, 0x1710, 0x1711, 0x1712, 0x1713, 0x1714, 0x1720, 0x1721, 0x1722, 0x1723, 0x1724, 0x1725, 0x1726, 0x1727, 0x1728, 0x1729, 0x172a, 0x172b, 0x172c, 0x172d, 0x172e, 0x172f, 0x1730, 0x1731, 0x1732, 0x1733, 0x1734, 0x1735, 0x1736, 0x1740, 0x1741, 0x1742, 0x1743, 0x1744, 0x1745, 0x1746, 0x1747
};

void BM_collation_element_lookup_113(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 0, cps_113 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 1, cps_113 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 2, cps_113 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 3, cps_113 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 4, cps_113 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 5, cps_113 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 6, cps_113 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 7, cps_113 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 8, cps_113 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 9, cps_113 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 10, cps_113 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 11, cps_113 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 12, cps_113 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 13, cps_113 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 14, cps_113 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 15, cps_113 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 16, cps_113 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 17, cps_113 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 18, cps_113 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 19, cps_113 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 20, cps_113 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 21, cps_113 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 22, cps_113 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 23, cps_113 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 24, cps_113 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 25, cps_113 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 26, cps_113 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 27, cps_113 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 28, cps_113 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 29, cps_113 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 30, cps_113 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 31, cps_113 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 32, cps_113 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 33, cps_113 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 34, cps_113 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 35, cps_113 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 36, cps_113 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 37, cps_113 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 38, cps_113 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 39, cps_113 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 40, cps_113 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 41, cps_113 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 42, cps_113 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 43, cps_113 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 44, cps_113 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 45, cps_113 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 46, cps_113 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 47, cps_113 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 48, cps_113 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_113 + 49, cps_113 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_113);

uint32_t cps_114[] = {
0x1748, 0x1749, 0x174a, 0x174b, 0x174c, 0x174d, 0x174e, 0x174f, 0x1750, 0x1751, 0x1752, 0x1753, 0x1760, 0x1761, 0x1762, 0x1763, 0x1764, 0x1765, 0x1766, 0x1767, 0x1768, 0x1769, 0x176a, 0x176b, 0x176c, 0x176e, 0x176f, 0x1770, 0x1772, 0x1773, 0x1780, 0x1781, 0x1782, 0x1783, 0x1784, 0x1785, 0x1786, 0x1787, 0x1788, 0x1789, 0x178a, 0x178b, 0x178c, 0x178d, 0x178e, 0x178f, 0x1790, 0x1791, 0x1792, 0x1793
};

void BM_collation_element_lookup_114(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 0, cps_114 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 1, cps_114 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 2, cps_114 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 3, cps_114 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 4, cps_114 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 5, cps_114 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 6, cps_114 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 7, cps_114 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 8, cps_114 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 9, cps_114 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 10, cps_114 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 11, cps_114 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 12, cps_114 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 13, cps_114 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 14, cps_114 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 15, cps_114 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 16, cps_114 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 17, cps_114 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 18, cps_114 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 19, cps_114 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 20, cps_114 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 21, cps_114 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 22, cps_114 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 23, cps_114 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 24, cps_114 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 25, cps_114 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 26, cps_114 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 27, cps_114 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 28, cps_114 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 29, cps_114 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 30, cps_114 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 31, cps_114 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 32, cps_114 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 33, cps_114 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 34, cps_114 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 35, cps_114 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 36, cps_114 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 37, cps_114 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 38, cps_114 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 39, cps_114 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 40, cps_114 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 41, cps_114 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 42, cps_114 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 43, cps_114 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 44, cps_114 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 45, cps_114 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 46, cps_114 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 47, cps_114 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 48, cps_114 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_114 + 49, cps_114 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_114);

uint32_t cps_115[] = {
0x1794, 0x1795, 0x1796, 0x1797, 0x1798, 0x1799, 0x179a, 0x179b, 0x179c, 0x179d, 0x179e, 0x179f, 0x17a0, 0x17a1, 0x17a2, 0x17a3, 0x17a4, 0x17a5, 0x17a6, 0x17a7, 0x17a8, 0x17a9, 0x17aa, 0x17ab, 0x17ac, 0x17ad, 0x17ae, 0x17af, 0x17b0, 0x17b1, 0x17b2, 0x17b3, 0x17b4, 0x17b5, 0x17b6, 0x17b7, 0x17b8, 0x17b9, 0x17ba, 0x17bb, 0x17bc, 0x17bd, 0x17be, 0x17bf, 0x17c0, 0x17c1, 0x17c2, 0x17c3, 0x17c4, 0x17c5
};

void BM_collation_element_lookup_115(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 0, cps_115 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 1, cps_115 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 2, cps_115 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 3, cps_115 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 4, cps_115 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 5, cps_115 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 6, cps_115 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 7, cps_115 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 8, cps_115 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 9, cps_115 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 10, cps_115 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 11, cps_115 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 12, cps_115 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 13, cps_115 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 14, cps_115 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 15, cps_115 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 16, cps_115 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 17, cps_115 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 18, cps_115 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 19, cps_115 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 20, cps_115 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 21, cps_115 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 22, cps_115 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 23, cps_115 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 24, cps_115 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 25, cps_115 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 26, cps_115 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 27, cps_115 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 28, cps_115 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 29, cps_115 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 30, cps_115 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 31, cps_115 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 32, cps_115 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 33, cps_115 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 34, cps_115 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 35, cps_115 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 36, cps_115 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 37, cps_115 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 38, cps_115 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 39, cps_115 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 40, cps_115 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 41, cps_115 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 42, cps_115 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 43, cps_115 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 44, cps_115 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 45, cps_115 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 46, cps_115 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 47, cps_115 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 48, cps_115 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_115 + 49, cps_115 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_115);

uint32_t cps_116[] = {
0x17c6, 0x17c7, 0x17c8, 0x17c9, 0x17ca, 0x17cb, 0x17cc, 0x17cd, 0x17ce, 0x17cf, 0x17d0, 0x17d1, 0x17d2, 0x17d3, 0x17d4, 0x17d5, 0x17d6, 0x17d7, 0x17d8, 0x17d9, 0x17da, 0x17db, 0x17dc, 0x17dd, 0x17e0, 0x17e1, 0x17e2, 0x17e3, 0x17e4, 0x17e5, 0x17e6, 0x17e7, 0x17e8, 0x17e9, 0x17f0, 0x17f1, 0x17f2, 0x17f3, 0x17f4, 0x17f5, 0x17f6, 0x17f7, 0x17f8, 0x17f9, 0x1800, 0x1801, 0x1802, 0x1803, 0x1804, 0x1805
};

void BM_collation_element_lookup_116(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 0, cps_116 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 1, cps_116 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 2, cps_116 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 3, cps_116 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 4, cps_116 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 5, cps_116 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 6, cps_116 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 7, cps_116 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 8, cps_116 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 9, cps_116 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 10, cps_116 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 11, cps_116 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 12, cps_116 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 13, cps_116 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 14, cps_116 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 15, cps_116 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 16, cps_116 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 17, cps_116 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 18, cps_116 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 19, cps_116 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 20, cps_116 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 21, cps_116 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 22, cps_116 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 23, cps_116 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 24, cps_116 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 25, cps_116 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 26, cps_116 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 27, cps_116 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 28, cps_116 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 29, cps_116 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 30, cps_116 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 31, cps_116 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 32, cps_116 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 33, cps_116 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 34, cps_116 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 35, cps_116 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 36, cps_116 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 37, cps_116 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 38, cps_116 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 39, cps_116 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 40, cps_116 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 41, cps_116 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 42, cps_116 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 43, cps_116 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 44, cps_116 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 45, cps_116 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 46, cps_116 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 47, cps_116 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 48, cps_116 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_116 + 49, cps_116 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_116);

uint32_t cps_117[] = {
0x1806, 0x1807, 0x1808, 0x1809, 0x180a, 0x180b, 0x180c, 0x180d, 0x180e, 0x1810, 0x1811, 0x1812, 0x1813, 0x1814, 0x1815, 0x1816, 0x1817, 0x1818, 0x1819, 0x1820, 0x1821, 0x1822, 0x1823, 0x1824, 0x1825, 0x1826, 0x1827, 0x1828, 0x1829, 0x182a, 0x182b, 0x182c, 0x182d, 0x182e, 0x182f, 0x1830, 0x1831, 0x1832, 0x1833, 0x1834, 0x1835, 0x1836, 0x1837, 0x1838, 0x1839, 0x183a, 0x183b, 0x183c, 0x183d, 0x183e
};

void BM_collation_element_lookup_117(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 0, cps_117 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 1, cps_117 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 2, cps_117 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 3, cps_117 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 4, cps_117 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 5, cps_117 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 6, cps_117 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 7, cps_117 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 8, cps_117 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 9, cps_117 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 10, cps_117 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 11, cps_117 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 12, cps_117 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 13, cps_117 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 14, cps_117 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 15, cps_117 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 16, cps_117 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 17, cps_117 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 18, cps_117 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 19, cps_117 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 20, cps_117 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 21, cps_117 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 22, cps_117 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 23, cps_117 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 24, cps_117 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 25, cps_117 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 26, cps_117 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 27, cps_117 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 28, cps_117 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 29, cps_117 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 30, cps_117 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 31, cps_117 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 32, cps_117 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 33, cps_117 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 34, cps_117 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 35, cps_117 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 36, cps_117 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 37, cps_117 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 38, cps_117 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 39, cps_117 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 40, cps_117 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 41, cps_117 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 42, cps_117 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 43, cps_117 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 44, cps_117 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 45, cps_117 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 46, cps_117 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 47, cps_117 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 48, cps_117 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_117 + 49, cps_117 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_117);

uint32_t cps_118[] = {
0x183f, 0x1840, 0x1841, 0x1842, 0x1843, 0x1844, 0x1845, 0x1846, 0x1847, 0x1848, 0x1849, 0x184a, 0x184b, 0x184c, 0x184d, 0x184e, 0x184f, 0x1850, 0x1851, 0x1852, 0x1853, 0x1854, 0x1855, 0x1856, 0x1857, 0x1858, 0x1859, 0x185a, 0x185b, 0x185c, 0x185d, 0x185e, 0x185f, 0x1860, 0x1861, 0x1862, 0x1863, 0x1864, 0x1865, 0x1866, 0x1867, 0x1868, 0x1869, 0x186a, 0x186b, 0x186c, 0x186d, 0x186e, 0x186f, 0x1870
};

void BM_collation_element_lookup_118(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 0, cps_118 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 1, cps_118 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 2, cps_118 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 3, cps_118 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 4, cps_118 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 5, cps_118 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 6, cps_118 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 7, cps_118 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 8, cps_118 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 9, cps_118 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 10, cps_118 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 11, cps_118 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 12, cps_118 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 13, cps_118 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 14, cps_118 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 15, cps_118 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 16, cps_118 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 17, cps_118 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 18, cps_118 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 19, cps_118 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 20, cps_118 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 21, cps_118 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 22, cps_118 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 23, cps_118 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 24, cps_118 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 25, cps_118 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 26, cps_118 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 27, cps_118 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 28, cps_118 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 29, cps_118 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 30, cps_118 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 31, cps_118 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 32, cps_118 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 33, cps_118 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 34, cps_118 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 35, cps_118 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 36, cps_118 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 37, cps_118 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 38, cps_118 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 39, cps_118 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 40, cps_118 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 41, cps_118 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 42, cps_118 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 43, cps_118 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 44, cps_118 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 45, cps_118 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 46, cps_118 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 47, cps_118 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 48, cps_118 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_118 + 49, cps_118 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_118);

uint32_t cps_119[] = {
0x1871, 0x1872, 0x1873, 0x1874, 0x1875, 0x1876, 0x1877, 0x1880, 0x1881, 0x1882, 0x1883, 0x1884, 0x1885, 0x1886, 0x1887, 0x1888, 0x1889, 0x188a, 0x188b, 0x188c, 0x188d, 0x188e, 0x188f, 0x1890, 0x1891, 0x1892, 0x1893, 0x1894, 0x1895, 0x1896, 0x1897, 0x1898, 0x1899, 0x189a, 0x189b, 0x189c, 0x189d, 0x189e, 0x189f, 0x18a0, 0x18a1, 0x18a2, 0x18a3, 0x18a4, 0x18a5, 0x18a6, 0x18a7, 0x18a8, 0x18a9, 0x18aa
};

void BM_collation_element_lookup_119(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 0, cps_119 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 1, cps_119 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 2, cps_119 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 3, cps_119 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 4, cps_119 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 5, cps_119 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 6, cps_119 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 7, cps_119 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 8, cps_119 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 9, cps_119 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 10, cps_119 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 11, cps_119 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 12, cps_119 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 13, cps_119 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 14, cps_119 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 15, cps_119 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 16, cps_119 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 17, cps_119 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 18, cps_119 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 19, cps_119 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 20, cps_119 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 21, cps_119 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 22, cps_119 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 23, cps_119 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 24, cps_119 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 25, cps_119 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 26, cps_119 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 27, cps_119 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 28, cps_119 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 29, cps_119 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 30, cps_119 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 31, cps_119 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 32, cps_119 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 33, cps_119 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 34, cps_119 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 35, cps_119 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 36, cps_119 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 37, cps_119 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 38, cps_119 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 39, cps_119 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 40, cps_119 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 41, cps_119 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 42, cps_119 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 43, cps_119 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 44, cps_119 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 45, cps_119 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 46, cps_119 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 47, cps_119 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 48, cps_119 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_119 + 49, cps_119 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_119);

uint32_t cps_120[] = {
0x18b0, 0x18b1, 0x18b2, 0x18b3, 0x18b4, 0x18b5, 0x18b6, 0x18b7, 0x18b8, 0x18b9, 0x18ba, 0x18bb, 0x18bc, 0x18bd, 0x18be, 0x18bf, 0x18c0, 0x18c1, 0x18c2, 0x18c3, 0x18c4, 0x18c5, 0x18c6, 0x18c7, 0x18c8, 0x18c9, 0x18ca, 0x18cb, 0x18cc, 0x18cd, 0x18ce, 0x18cf, 0x18d0, 0x18d1, 0x18d2, 0x18d3, 0x18d4, 0x18d5, 0x18d6, 0x18d7, 0x18d8, 0x18d9, 0x18da, 0x18db, 0x18dc, 0x18dd, 0x18de, 0x18df, 0x18e0, 0x18e1
};

void BM_collation_element_lookup_120(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 0, cps_120 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 1, cps_120 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 2, cps_120 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 3, cps_120 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 4, cps_120 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 5, cps_120 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 6, cps_120 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 7, cps_120 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 8, cps_120 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 9, cps_120 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 10, cps_120 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 11, cps_120 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 12, cps_120 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 13, cps_120 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 14, cps_120 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 15, cps_120 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 16, cps_120 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 17, cps_120 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 18, cps_120 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 19, cps_120 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 20, cps_120 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 21, cps_120 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 22, cps_120 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 23, cps_120 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 24, cps_120 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 25, cps_120 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 26, cps_120 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 27, cps_120 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 28, cps_120 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 29, cps_120 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 30, cps_120 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 31, cps_120 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 32, cps_120 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 33, cps_120 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 34, cps_120 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 35, cps_120 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 36, cps_120 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 37, cps_120 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 38, cps_120 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 39, cps_120 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 40, cps_120 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 41, cps_120 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 42, cps_120 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 43, cps_120 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 44, cps_120 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 45, cps_120 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 46, cps_120 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 47, cps_120 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 48, cps_120 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_120 + 49, cps_120 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_120);

uint32_t cps_121[] = {
0x18e2, 0x18e3, 0x18e4, 0x18e5, 0x18e6, 0x18e7, 0x18e8, 0x18e9, 0x18ea, 0x18eb, 0x18ec, 0x18ed, 0x18ee, 0x18ef, 0x18f0, 0x18f1, 0x18f2, 0x18f3, 0x18f4, 0x18f5, 0x1900, 0x1901, 0x1902, 0x1903, 0x1904, 0x1905, 0x1906, 0x1907, 0x1908, 0x1909, 0x190a, 0x190b, 0x190c, 0x190d, 0x190e, 0x190f, 0x1910, 0x1911, 0x1912, 0x1913, 0x1914, 0x1915, 0x1916, 0x1917, 0x1918, 0x1919, 0x191a, 0x191b, 0x191c, 0x191d
};

void BM_collation_element_lookup_121(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 0, cps_121 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 1, cps_121 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 2, cps_121 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 3, cps_121 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 4, cps_121 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 5, cps_121 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 6, cps_121 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 7, cps_121 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 8, cps_121 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 9, cps_121 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 10, cps_121 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 11, cps_121 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 12, cps_121 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 13, cps_121 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 14, cps_121 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 15, cps_121 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 16, cps_121 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 17, cps_121 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 18, cps_121 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 19, cps_121 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 20, cps_121 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 21, cps_121 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 22, cps_121 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 23, cps_121 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 24, cps_121 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 25, cps_121 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 26, cps_121 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 27, cps_121 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 28, cps_121 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 29, cps_121 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 30, cps_121 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 31, cps_121 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 32, cps_121 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 33, cps_121 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 34, cps_121 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 35, cps_121 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 36, cps_121 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 37, cps_121 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 38, cps_121 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 39, cps_121 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 40, cps_121 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 41, cps_121 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 42, cps_121 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 43, cps_121 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 44, cps_121 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 45, cps_121 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 46, cps_121 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 47, cps_121 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 48, cps_121 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_121 + 49, cps_121 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_121);

uint32_t cps_122[] = {
0x191e, 0x1920, 0x1921, 0x1922, 0x1923, 0x1924, 0x1925, 0x1926, 0x1927, 0x1928, 0x1929, 0x192a, 0x192b, 0x1930, 0x1931, 0x1932, 0x1933, 0x1934, 0x1935, 0x1936, 0x1937, 0x1938, 0x1939, 0x193a, 0x193b, 0x1940, 0x1944, 0x1945, 0x1946, 0x1947, 0x1948, 0x1949, 0x194a, 0x194b, 0x194c, 0x194d, 0x194e, 0x194f, 0x1950, 0x1951, 0x1952, 0x1953, 0x1954, 0x1955, 0x1956, 0x1957, 0x1958, 0x1959, 0x195a, 0x195b
};

void BM_collation_element_lookup_122(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 0, cps_122 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 1, cps_122 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 2, cps_122 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 3, cps_122 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 4, cps_122 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 5, cps_122 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 6, cps_122 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 7, cps_122 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 8, cps_122 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 9, cps_122 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 10, cps_122 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 11, cps_122 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 12, cps_122 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 13, cps_122 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 14, cps_122 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 15, cps_122 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 16, cps_122 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 17, cps_122 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 18, cps_122 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 19, cps_122 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 20, cps_122 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 21, cps_122 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 22, cps_122 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 23, cps_122 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 24, cps_122 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 25, cps_122 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 26, cps_122 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 27, cps_122 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 28, cps_122 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 29, cps_122 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 30, cps_122 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 31, cps_122 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 32, cps_122 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 33, cps_122 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 34, cps_122 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 35, cps_122 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 36, cps_122 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 37, cps_122 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 38, cps_122 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 39, cps_122 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 40, cps_122 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 41, cps_122 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 42, cps_122 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 43, cps_122 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 44, cps_122 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 45, cps_122 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 46, cps_122 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 47, cps_122 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 48, cps_122 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_122 + 49, cps_122 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_122);

uint32_t cps_123[] = {
0x195c, 0x195d, 0x195e, 0x195f, 0x1960, 0x1961, 0x1962, 0x1963, 0x1964, 0x1965, 0x1966, 0x1967, 0x1968, 0x1969, 0x196a, 0x196b, 0x196c, 0x196d, 0x1970, 0x1971, 0x1972, 0x1973, 0x1974, 0x1980, 0x1981, 0x1982, 0x1983, 0x1984, 0x1985, 0x1986, 0x1987, 0x1988, 0x1989, 0x198a, 0x198b, 0x198c, 0x198d, 0x198e, 0x198f, 0x1990, 0x1991, 0x1992, 0x1993, 0x1994, 0x1995, 0x1996, 0x1997, 0x1998, 0x1999, 0x199a
};

void BM_collation_element_lookup_123(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 0, cps_123 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 1, cps_123 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 2, cps_123 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 3, cps_123 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 4, cps_123 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 5, cps_123 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 6, cps_123 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 7, cps_123 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 8, cps_123 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 9, cps_123 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 10, cps_123 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 11, cps_123 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 12, cps_123 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 13, cps_123 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 14, cps_123 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 15, cps_123 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 16, cps_123 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 17, cps_123 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 18, cps_123 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 19, cps_123 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 20, cps_123 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 21, cps_123 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 22, cps_123 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 23, cps_123 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 24, cps_123 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 25, cps_123 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 26, cps_123 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 27, cps_123 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 28, cps_123 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 29, cps_123 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 30, cps_123 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 31, cps_123 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 32, cps_123 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 33, cps_123 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 34, cps_123 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 35, cps_123 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 36, cps_123 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 37, cps_123 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 38, cps_123 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 39, cps_123 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 40, cps_123 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 41, cps_123 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 42, cps_123 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 43, cps_123 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 44, cps_123 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 45, cps_123 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 46, cps_123 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 47, cps_123 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 48, cps_123 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_123 + 49, cps_123 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_123);

uint32_t cps_124[] = {
0x199b, 0x199c, 0x199d, 0x199e, 0x199f, 0x19a0, 0x19a1, 0x19a2, 0x19a3, 0x19a4, 0x19a5, 0x19a6, 0x19a7, 0x19a8, 0x19a9, 0x19aa, 0x19ab, 0x19b0, 0x19b1, 0x19b2, 0x19b3, 0x19b4, 0x19b5, 0x19b5, 0x1980, 0x19b5, 0x1981, 0x19b5, 0x1982, 0x19b5, 0x1983, 0x19b5, 0x1984, 0x19b5, 0x1985, 0x19b5, 0x1986, 0x19b5, 0x1987, 0x19b5, 0x1988, 0x19b5, 0x1989, 0x19b5, 0x198a, 0x19b5, 0x198b, 0x19b5, 0x198c, 0x19b5, 0x198d, 0x19b5, 0x198e, 0x19b5, 0x198f, 0x19b5, 0x1990, 0x19b5, 0x1991, 0x19b5, 0x1992, 0x19b5, 0x1993, 0x19b5, 0x1994, 0x19b5, 0x1995, 0x19b5, 0x1996, 0x19b5, 0x1997, 0x19b5, 0x1998, 0x19b5, 0x1999, 0x19b5, 0x199a
};

void BM_collation_element_lookup_124(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 0, cps_124 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 1, cps_124 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 2, cps_124 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 3, cps_124 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 4, cps_124 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 5, cps_124 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 6, cps_124 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 7, cps_124 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 8, cps_124 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 9, cps_124 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 10, cps_124 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 11, cps_124 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 12, cps_124 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 13, cps_124 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 14, cps_124 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 15, cps_124 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 16, cps_124 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 17, cps_124 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 18, cps_124 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 19, cps_124 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 20, cps_124 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 21, cps_124 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 22, cps_124 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 23, cps_124 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 25, cps_124 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 27, cps_124 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 29, cps_124 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 31, cps_124 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 33, cps_124 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 35, cps_124 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 37, cps_124 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 39, cps_124 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 41, cps_124 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 43, cps_124 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 45, cps_124 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 47, cps_124 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 49, cps_124 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 51, cps_124 + 53));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 53, cps_124 + 55));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 55, cps_124 + 57));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 57, cps_124 + 59));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 59, cps_124 + 61));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 61, cps_124 + 63));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 63, cps_124 + 65));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 65, cps_124 + 67));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 67, cps_124 + 69));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 69, cps_124 + 71));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 71, cps_124 + 73));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 73, cps_124 + 75));
            benchmark::DoNotOptimize(trie().longest_match(cps_124 + 75, cps_124 + 77));
    }
}
BENCHMARK(BM_collation_element_lookup_124);

uint32_t cps_125[] = {
0x19b5, 0x199b, 0x19b5, 0x199c, 0x19b5, 0x199d, 0x19b5, 0x199e, 0x19b5, 0x199f, 0x19b5, 0x19a0, 0x19b5, 0x19a1, 0x19b5, 0x19a2, 0x19b5, 0x19a3, 0x19b5, 0x19a4, 0x19b5, 0x19a5, 0x19b5, 0x19a6, 0x19b5, 0x19a7, 0x19b5, 0x19a8, 0x19b5, 0x19a9, 0x19b5, 0x19aa, 0x19b5, 0x19ab, 0x19b6, 0x19b6, 0x1980, 0x19b6, 0x1981, 0x19b6, 0x1982, 0x19b6, 0x1983, 0x19b6, 0x1984, 0x19b6, 0x1985, 0x19b6, 0x1986, 0x19b6, 0x1987, 0x19b6, 0x1988, 0x19b6, 0x1989, 0x19b6, 0x198a, 0x19b6, 0x198b, 0x19b6, 0x198c, 0x19b6, 0x198d, 0x19b6, 0x198e, 0x19b6, 0x198f, 0x19b6, 0x1990, 0x19b6, 0x1991, 0x19b6, 0x1992, 0x19b6, 0x1993, 0x19b6, 0x1994, 0x19b6, 0x1995, 0x19b6, 0x1996, 0x19b6, 0x1997, 0x19b6, 0x1998, 0x19b6, 0x1999, 0x19b6, 0x199a, 0x19b6, 0x199b, 0x19b6, 0x199c, 0x19b6, 0x199d, 0x19b6, 0x199e, 0x19b6, 0x199f
};

void BM_collation_element_lookup_125(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 0, cps_125 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 2, cps_125 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 4, cps_125 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 6, cps_125 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 8, cps_125 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 10, cps_125 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 12, cps_125 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 14, cps_125 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 16, cps_125 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 18, cps_125 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 20, cps_125 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 22, cps_125 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 24, cps_125 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 26, cps_125 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 28, cps_125 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 30, cps_125 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 32, cps_125 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 34, cps_125 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 35, cps_125 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 37, cps_125 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 39, cps_125 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 41, cps_125 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 43, cps_125 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 45, cps_125 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 47, cps_125 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 49, cps_125 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 51, cps_125 + 53));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 53, cps_125 + 55));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 55, cps_125 + 57));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 57, cps_125 + 59));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 59, cps_125 + 61));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 61, cps_125 + 63));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 63, cps_125 + 65));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 65, cps_125 + 67));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 67, cps_125 + 69));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 69, cps_125 + 71));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 71, cps_125 + 73));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 73, cps_125 + 75));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 75, cps_125 + 77));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 77, cps_125 + 79));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 79, cps_125 + 81));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 81, cps_125 + 83));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 83, cps_125 + 85));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 85, cps_125 + 87));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 87, cps_125 + 89));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 89, cps_125 + 91));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 91, cps_125 + 93));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 93, cps_125 + 95));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 95, cps_125 + 97));
            benchmark::DoNotOptimize(trie().longest_match(cps_125 + 97, cps_125 + 99));
    }
}
BENCHMARK(BM_collation_element_lookup_125);

uint32_t cps_126[] = {
0x19b6, 0x19a0, 0x19b6, 0x19a1, 0x19b6, 0x19a2, 0x19b6, 0x19a3, 0x19b6, 0x19a4, 0x19b6, 0x19a5, 0x19b6, 0x19a6, 0x19b6, 0x19a7, 0x19b6, 0x19a8, 0x19b6, 0x19a9, 0x19b6, 0x19aa, 0x19b6, 0x19ab, 0x19b7, 0x19b7, 0x1980, 0x19b7, 0x1981, 0x19b7, 0x1982, 0x19b7, 0x1983, 0x19b7, 0x1984, 0x19b7, 0x1985, 0x19b7, 0x1986, 0x19b7, 0x1987, 0x19b7, 0x1988, 0x19b7, 0x1989, 0x19b7, 0x198a, 0x19b7, 0x198b, 0x19b7, 0x198c, 0x19b7, 0x198d, 0x19b7, 0x198e, 0x19b7, 0x198f, 0x19b7, 0x1990, 0x19b7, 0x1991, 0x19b7, 0x1992, 0x19b7, 0x1993, 0x19b7, 0x1994, 0x19b7, 0x1995, 0x19b7, 0x1996, 0x19b7, 0x1997, 0x19b7, 0x1998, 0x19b7, 0x1999, 0x19b7, 0x199a, 0x19b7, 0x199b, 0x19b7, 0x199c, 0x19b7, 0x199d, 0x19b7, 0x199e, 0x19b7, 0x199f, 0x19b7, 0x19a0, 0x19b7, 0x19a1, 0x19b7, 0x19a2, 0x19b7, 0x19a3, 0x19b7, 0x19a4
};

void BM_collation_element_lookup_126(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 0, cps_126 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 2, cps_126 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 4, cps_126 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 6, cps_126 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 8, cps_126 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 10, cps_126 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 12, cps_126 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 14, cps_126 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 16, cps_126 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 18, cps_126 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 20, cps_126 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 22, cps_126 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 24, cps_126 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 25, cps_126 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 27, cps_126 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 29, cps_126 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 31, cps_126 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 33, cps_126 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 35, cps_126 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 37, cps_126 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 39, cps_126 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 41, cps_126 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 43, cps_126 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 45, cps_126 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 47, cps_126 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 49, cps_126 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 51, cps_126 + 53));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 53, cps_126 + 55));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 55, cps_126 + 57));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 57, cps_126 + 59));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 59, cps_126 + 61));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 61, cps_126 + 63));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 63, cps_126 + 65));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 65, cps_126 + 67));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 67, cps_126 + 69));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 69, cps_126 + 71));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 71, cps_126 + 73));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 73, cps_126 + 75));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 75, cps_126 + 77));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 77, cps_126 + 79));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 79, cps_126 + 81));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 81, cps_126 + 83));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 83, cps_126 + 85));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 85, cps_126 + 87));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 87, cps_126 + 89));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 89, cps_126 + 91));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 91, cps_126 + 93));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 93, cps_126 + 95));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 95, cps_126 + 97));
            benchmark::DoNotOptimize(trie().longest_match(cps_126 + 97, cps_126 + 99));
    }
}
BENCHMARK(BM_collation_element_lookup_126);

uint32_t cps_127[] = {
0x19b7, 0x19a5, 0x19b7, 0x19a6, 0x19b7, 0x19a7, 0x19b7, 0x19a8, 0x19b7, 0x19a9, 0x19b7, 0x19aa, 0x19b7, 0x19ab, 0x19b8, 0x19b9, 0x19ba, 0x19ba, 0x1980, 0x19ba, 0x1981, 0x19ba, 0x1982, 0x19ba, 0x1983, 0x19ba, 0x1984, 0x19ba, 0x1985, 0x19ba, 0x1986, 0x19ba, 0x1987, 0x19ba, 0x1988, 0x19ba, 0x1989, 0x19ba, 0x198a, 0x19ba, 0x198b, 0x19ba, 0x198c, 0x19ba, 0x198d, 0x19ba, 0x198e, 0x19ba, 0x198f, 0x19ba, 0x1990, 0x19ba, 0x1991, 0x19ba, 0x1992, 0x19ba, 0x1993, 0x19ba, 0x1994, 0x19ba, 0x1995, 0x19ba, 0x1996, 0x19ba, 0x1997, 0x19ba, 0x1998, 0x19ba, 0x1999, 0x19ba, 0x199a, 0x19ba, 0x199b, 0x19ba, 0x199c, 0x19ba, 0x199d, 0x19ba, 0x199e, 0x19ba, 0x199f, 0x19ba, 0x19a0, 0x19ba, 0x19a1, 0x19ba, 0x19a2, 0x19ba, 0x19a3, 0x19ba, 0x19a4, 0x19ba, 0x19a5, 0x19ba, 0x19a6, 0x19ba, 0x19a7
};

void BM_collation_element_lookup_127(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 0, cps_127 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 2, cps_127 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 4, cps_127 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 6, cps_127 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 8, cps_127 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 10, cps_127 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 12, cps_127 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 14, cps_127 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 15, cps_127 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 16, cps_127 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 17, cps_127 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 19, cps_127 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 21, cps_127 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 23, cps_127 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 25, cps_127 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 27, cps_127 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 29, cps_127 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 31, cps_127 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 33, cps_127 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 35, cps_127 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 37, cps_127 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 39, cps_127 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 41, cps_127 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 43, cps_127 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 45, cps_127 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 47, cps_127 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 49, cps_127 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 51, cps_127 + 53));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 53, cps_127 + 55));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 55, cps_127 + 57));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 57, cps_127 + 59));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 59, cps_127 + 61));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 61, cps_127 + 63));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 63, cps_127 + 65));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 65, cps_127 + 67));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 67, cps_127 + 69));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 69, cps_127 + 71));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 71, cps_127 + 73));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 73, cps_127 + 75));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 75, cps_127 + 77));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 77, cps_127 + 79));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 79, cps_127 + 81));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 81, cps_127 + 83));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 83, cps_127 + 85));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 85, cps_127 + 87));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 87, cps_127 + 89));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 89, cps_127 + 91));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 91, cps_127 + 93));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 93, cps_127 + 95));
            benchmark::DoNotOptimize(trie().longest_match(cps_127 + 95, cps_127 + 97));
    }
}
BENCHMARK(BM_collation_element_lookup_127);

uint32_t cps_128[] = {
0x19ba, 0x19a8, 0x19ba, 0x19a9, 0x19ba, 0x19aa, 0x19ba, 0x19ab, 0x19bb, 0x19bc, 0x19bd, 0x19be, 0x19bf, 0x19c0, 0x19c1, 0x19c2, 0x19c3, 0x19c4, 0x19c5, 0x19c6, 0x19c7, 0x19c8, 0x19c9, 0x19d0, 0x19d1, 0x19d2, 0x19d3, 0x19d4, 0x19d5, 0x19d6, 0x19d7, 0x19d8, 0x19d9, 0x19da, 0x19de, 0x19df, 0x19e0, 0x19e1, 0x19e2, 0x19e3, 0x19e4, 0x19e5, 0x19e6, 0x19e7, 0x19e8, 0x19e9, 0x19ea, 0x19eb, 0x19ec, 0x19ed, 0x19ee, 0x19ef, 0x19f0, 0x19f1
};

void BM_collation_element_lookup_128(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 0, cps_128 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 2, cps_128 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 4, cps_128 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 6, cps_128 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 8, cps_128 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 9, cps_128 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 10, cps_128 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 11, cps_128 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 12, cps_128 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 13, cps_128 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 14, cps_128 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 15, cps_128 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 16, cps_128 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 17, cps_128 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 18, cps_128 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 19, cps_128 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 20, cps_128 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 21, cps_128 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 22, cps_128 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 23, cps_128 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 24, cps_128 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 25, cps_128 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 26, cps_128 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 27, cps_128 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 28, cps_128 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 29, cps_128 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 30, cps_128 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 31, cps_128 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 32, cps_128 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 33, cps_128 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 34, cps_128 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 35, cps_128 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 36, cps_128 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 37, cps_128 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 38, cps_128 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 39, cps_128 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 40, cps_128 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 41, cps_128 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 42, cps_128 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 43, cps_128 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 44, cps_128 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 45, cps_128 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 46, cps_128 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 47, cps_128 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 48, cps_128 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 49, cps_128 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 50, cps_128 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 51, cps_128 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 52, cps_128 + 53));
            benchmark::DoNotOptimize(trie().longest_match(cps_128 + 53, cps_128 + 54));
    }
}
BENCHMARK(BM_collation_element_lookup_128);

uint32_t cps_129[] = {
0x19f2, 0x19f3, 0x19f4, 0x19f5, 0x19f6, 0x19f7, 0x19f8, 0x19f9, 0x19fa, 0x19fb, 0x19fc, 0x19fd, 0x19fe, 0x19ff, 0x1a00, 0x1a01, 0x1a02, 0x1a03, 0x1a04, 0x1a05, 0x1a06, 0x1a07, 0x1a08, 0x1a09, 0x1a0a, 0x1a0b, 0x1a0c, 0x1a0d, 0x1a0e, 0x1a0f, 0x1a10, 0x1a11, 0x1a12, 0x1a13, 0x1a14, 0x1a15, 0x1a16, 0x1a17, 0x1a18, 0x1a19, 0x1a1a, 0x1a1b, 0x1a1e, 0x1a1f, 0x1a20, 0x1a21, 0x1a22, 0x1a23, 0x1a24, 0x1a25
};

void BM_collation_element_lookup_129(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 0, cps_129 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 1, cps_129 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 2, cps_129 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 3, cps_129 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 4, cps_129 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 5, cps_129 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 6, cps_129 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 7, cps_129 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 8, cps_129 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 9, cps_129 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 10, cps_129 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 11, cps_129 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 12, cps_129 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 13, cps_129 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 14, cps_129 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 15, cps_129 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 16, cps_129 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 17, cps_129 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 18, cps_129 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 19, cps_129 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 20, cps_129 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 21, cps_129 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 22, cps_129 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 23, cps_129 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 24, cps_129 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 25, cps_129 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 26, cps_129 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 27, cps_129 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 28, cps_129 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 29, cps_129 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 30, cps_129 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 31, cps_129 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 32, cps_129 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 33, cps_129 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 34, cps_129 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 35, cps_129 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 36, cps_129 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 37, cps_129 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 38, cps_129 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 39, cps_129 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 40, cps_129 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 41, cps_129 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 42, cps_129 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 43, cps_129 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 44, cps_129 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 45, cps_129 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 46, cps_129 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 47, cps_129 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 48, cps_129 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_129 + 49, cps_129 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_129);

uint32_t cps_130[] = {
0x1a26, 0x1a27, 0x1a28, 0x1a29, 0x1a2a, 0x1a2b, 0x1a2c, 0x1a2d, 0x1a2e, 0x1a2f, 0x1a30, 0x1a31, 0x1a32, 0x1a33, 0x1a34, 0x1a35, 0x1a36, 0x1a37, 0x1a38, 0x1a39, 0x1a3a, 0x1a3b, 0x1a3c, 0x1a3d, 0x1a3e, 0x1a3f, 0x1a40, 0x1a41, 0x1a42, 0x1a43, 0x1a44, 0x1a45, 0x1a46, 0x1a47, 0x1a48, 0x1a49, 0x1a4a, 0x1a4b, 0x1a4c, 0x1a4d, 0x1a4e, 0x1a4f, 0x1a50, 0x1a51, 0x1a52, 0x1a53, 0x1a54, 0x1a55, 0x1a56, 0x1a57
};

void BM_collation_element_lookup_130(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 0, cps_130 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 1, cps_130 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 2, cps_130 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 3, cps_130 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 4, cps_130 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 5, cps_130 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 6, cps_130 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 7, cps_130 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 8, cps_130 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 9, cps_130 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 10, cps_130 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 11, cps_130 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 12, cps_130 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 13, cps_130 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 14, cps_130 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 15, cps_130 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 16, cps_130 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 17, cps_130 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 18, cps_130 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 19, cps_130 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 20, cps_130 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 21, cps_130 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 22, cps_130 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 23, cps_130 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 24, cps_130 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 25, cps_130 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 26, cps_130 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 27, cps_130 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 28, cps_130 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 29, cps_130 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 30, cps_130 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 31, cps_130 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 32, cps_130 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 33, cps_130 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 34, cps_130 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 35, cps_130 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 36, cps_130 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 37, cps_130 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 38, cps_130 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 39, cps_130 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 40, cps_130 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 41, cps_130 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 42, cps_130 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 43, cps_130 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 44, cps_130 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 45, cps_130 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 46, cps_130 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 47, cps_130 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 48, cps_130 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_130 + 49, cps_130 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_130);

uint32_t cps_131[] = {
0x1a58, 0x1a59, 0x1a5a, 0x1a5b, 0x1a5c, 0x1a5d, 0x1a5e, 0x1a60, 0x1a61, 0x1a62, 0x1a63, 0x1a64, 0x1a65, 0x1a66, 0x1a67, 0x1a68, 0x1a69, 0x1a6a, 0x1a6b, 0x1a6c, 0x1a6d, 0x1a6e, 0x1a6f, 0x1a70, 0x1a71, 0x1a72, 0x1a73, 0x1a74, 0x1a75, 0x1a76, 0x1a77, 0x1a78, 0x1a79, 0x1a7a, 0x1a7b, 0x1a7c, 0x1a7f, 0x1a80, 0x1a81, 0x1a82, 0x1a83, 0x1a84, 0x1a85, 0x1a86, 0x1a87, 0x1a88, 0x1a89, 0x1a90, 0x1a91, 0x1a92
};

void BM_collation_element_lookup_131(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 0, cps_131 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 1, cps_131 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 2, cps_131 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 3, cps_131 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 4, cps_131 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 5, cps_131 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 6, cps_131 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 7, cps_131 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 8, cps_131 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 9, cps_131 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 10, cps_131 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 11, cps_131 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 12, cps_131 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 13, cps_131 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 14, cps_131 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 15, cps_131 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 16, cps_131 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 17, cps_131 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 18, cps_131 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 19, cps_131 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 20, cps_131 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 21, cps_131 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 22, cps_131 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 23, cps_131 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 24, cps_131 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 25, cps_131 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 26, cps_131 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 27, cps_131 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 28, cps_131 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 29, cps_131 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 30, cps_131 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 31, cps_131 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 32, cps_131 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 33, cps_131 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 34, cps_131 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 35, cps_131 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 36, cps_131 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 37, cps_131 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 38, cps_131 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 39, cps_131 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 40, cps_131 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 41, cps_131 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 42, cps_131 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 43, cps_131 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 44, cps_131 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 45, cps_131 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 46, cps_131 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 47, cps_131 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 48, cps_131 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_131 + 49, cps_131 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_131);

uint32_t cps_132[] = {
0x1a93, 0x1a94, 0x1a95, 0x1a96, 0x1a97, 0x1a98, 0x1a99, 0x1aa0, 0x1aa1, 0x1aa2, 0x1aa3, 0x1aa4, 0x1aa5, 0x1aa6, 0x1aa7, 0x1aa8, 0x1aa9, 0x1aaa, 0x1aab, 0x1aac, 0x1aad, 0x1ab0, 0x1ab1, 0x1ab2, 0x1ab3, 0x1ab4, 0x1ab5, 0x1ab6, 0x1ab7, 0x1ab8, 0x1ab9, 0x1aba, 0x1abb, 0x1abc, 0x1abd, 0x1abe, 0x1b00, 0x1b01, 0x1b02, 0x1b03, 0x1b04, 0x1b05, 0x1b05, 0x1b35, 0x1b06, 0x1b07, 0x1b07, 0x1b35, 0x1b08, 0x1b09, 0x1b09, 0x1b35, 0x1b0a
};

void BM_collation_element_lookup_132(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 0, cps_132 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 1, cps_132 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 2, cps_132 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 3, cps_132 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 4, cps_132 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 5, cps_132 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 6, cps_132 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 7, cps_132 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 8, cps_132 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 9, cps_132 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 10, cps_132 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 11, cps_132 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 12, cps_132 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 13, cps_132 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 14, cps_132 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 15, cps_132 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 16, cps_132 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 17, cps_132 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 18, cps_132 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 19, cps_132 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 20, cps_132 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 21, cps_132 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 22, cps_132 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 23, cps_132 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 24, cps_132 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 25, cps_132 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 26, cps_132 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 27, cps_132 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 28, cps_132 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 29, cps_132 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 30, cps_132 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 31, cps_132 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 32, cps_132 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 33, cps_132 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 34, cps_132 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 35, cps_132 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 36, cps_132 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 37, cps_132 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 38, cps_132 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 39, cps_132 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 40, cps_132 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 41, cps_132 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 42, cps_132 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 44, cps_132 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 45, cps_132 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 46, cps_132 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 48, cps_132 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 49, cps_132 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 50, cps_132 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_132 + 52, cps_132 + 53));
    }
}
BENCHMARK(BM_collation_element_lookup_132);

uint32_t cps_133[] = {
0x1b0b, 0x1b0b, 0x1b35, 0x1b0c, 0x1b0d, 0x1b0d, 0x1b35, 0x1b0e, 0x1b0f, 0x1b10, 0x1b11, 0x1b11, 0x1b35, 0x1b12, 0x1b13, 0x1b14, 0x1b15, 0x1b16, 0x1b17, 0x1b18, 0x1b19, 0x1b1a, 0x1b1b, 0x1b1c, 0x1b1d, 0x1b1e, 0x1b1f, 0x1b20, 0x1b21, 0x1b22, 0x1b23, 0x1b24, 0x1b25, 0x1b26, 0x1b27, 0x1b28, 0x1b29, 0x1b2a, 0x1b2b, 0x1b2c, 0x1b2d, 0x1b2e, 0x1b2f, 0x1b30, 0x1b31, 0x1b32, 0x1b33, 0x1b34, 0x1b35, 0x1b36, 0x1b37, 0x1b38, 0x1b39
};

void BM_collation_element_lookup_133(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 0, cps_133 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 1, cps_133 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 3, cps_133 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 4, cps_133 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 5, cps_133 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 7, cps_133 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 8, cps_133 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 9, cps_133 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 10, cps_133 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 11, cps_133 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 13, cps_133 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 14, cps_133 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 15, cps_133 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 16, cps_133 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 17, cps_133 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 18, cps_133 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 19, cps_133 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 20, cps_133 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 21, cps_133 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 22, cps_133 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 23, cps_133 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 24, cps_133 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 25, cps_133 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 26, cps_133 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 27, cps_133 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 28, cps_133 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 29, cps_133 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 30, cps_133 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 31, cps_133 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 32, cps_133 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 33, cps_133 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 34, cps_133 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 35, cps_133 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 36, cps_133 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 37, cps_133 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 38, cps_133 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 39, cps_133 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 40, cps_133 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 41, cps_133 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 42, cps_133 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 43, cps_133 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 44, cps_133 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 45, cps_133 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 46, cps_133 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 47, cps_133 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 48, cps_133 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 49, cps_133 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 50, cps_133 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 51, cps_133 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_133 + 52, cps_133 + 53));
    }
}
BENCHMARK(BM_collation_element_lookup_133);

uint32_t cps_134[] = {
0x1b3a, 0x1b3a, 0x1b35, 0x1b3b, 0x1b3c, 0x1b3c, 0x1b35, 0x1b3d, 0x1b3e, 0x1b3e, 0x1b35, 0x1b3f, 0x1b3f, 0x1b35, 0x1b40, 0x1b41, 0x1b42, 0x1b42, 0x1b35, 0x1b43, 0x1b44, 0x1b45, 0x1b46, 0x1b47, 0x1b48, 0x1b49, 0x1b4a, 0x1b4b, 0x1b50, 0x1b51, 0x1b52, 0x1b53, 0x1b54, 0x1b55, 0x1b56, 0x1b57, 0x1b58, 0x1b59, 0x1b5a, 0x1b5b, 0x1b5c, 0x1b5d, 0x1b5e, 0x1b5f, 0x1b60, 0x1b61, 0x1b62, 0x1b63, 0x1b64, 0x1b65, 0x1b66, 0x1b67, 0x1b68, 0x1b69, 0x1b6a
};

void BM_collation_element_lookup_134(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 0, cps_134 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 1, cps_134 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 3, cps_134 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 4, cps_134 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 5, cps_134 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 7, cps_134 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 8, cps_134 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 9, cps_134 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 11, cps_134 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 12, cps_134 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 14, cps_134 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 15, cps_134 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 16, cps_134 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 17, cps_134 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 19, cps_134 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 20, cps_134 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 21, cps_134 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 22, cps_134 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 23, cps_134 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 24, cps_134 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 25, cps_134 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 26, cps_134 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 27, cps_134 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 28, cps_134 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 29, cps_134 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 30, cps_134 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 31, cps_134 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 32, cps_134 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 33, cps_134 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 34, cps_134 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 35, cps_134 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 36, cps_134 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 37, cps_134 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 38, cps_134 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 39, cps_134 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 40, cps_134 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 41, cps_134 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 42, cps_134 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 43, cps_134 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 44, cps_134 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 45, cps_134 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 46, cps_134 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 47, cps_134 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 48, cps_134 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 49, cps_134 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 50, cps_134 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 51, cps_134 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 52, cps_134 + 53));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 53, cps_134 + 54));
            benchmark::DoNotOptimize(trie().longest_match(cps_134 + 54, cps_134 + 55));
    }
}
BENCHMARK(BM_collation_element_lookup_134);

uint32_t cps_135[] = {
0x1b6b, 0x1b6c, 0x1b6d, 0x1b6e, 0x1b6f, 0x1b70, 0x1b71, 0x1b72, 0x1b73, 0x1b74, 0x1b75, 0x1b76, 0x1b77, 0x1b78, 0x1b79, 0x1b7a, 0x1b7b, 0x1b7c, 0x1b80, 0x1b81, 0x1b82, 0x1b83, 0x1b84, 0x1b85, 0x1b86, 0x1b87, 0x1b88, 0x1b89, 0x1b8a, 0x1b8b, 0x1b8c, 0x1b8d, 0x1b8e, 0x1b8f, 0x1b90, 0x1b91, 0x1b92, 0x1b93, 0x1b94, 0x1b95, 0x1b96, 0x1b97, 0x1b98, 0x1b99, 0x1b9a, 0x1b9b, 0x1b9c, 0x1b9d, 0x1b9e, 0x1b9f
};

void BM_collation_element_lookup_135(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 0, cps_135 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 1, cps_135 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 2, cps_135 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 3, cps_135 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 4, cps_135 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 5, cps_135 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 6, cps_135 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 7, cps_135 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 8, cps_135 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 9, cps_135 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 10, cps_135 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 11, cps_135 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 12, cps_135 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 13, cps_135 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 14, cps_135 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 15, cps_135 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 16, cps_135 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 17, cps_135 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 18, cps_135 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 19, cps_135 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 20, cps_135 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 21, cps_135 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 22, cps_135 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 23, cps_135 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 24, cps_135 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 25, cps_135 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 26, cps_135 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 27, cps_135 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 28, cps_135 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 29, cps_135 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 30, cps_135 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 31, cps_135 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 32, cps_135 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 33, cps_135 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 34, cps_135 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 35, cps_135 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 36, cps_135 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 37, cps_135 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 38, cps_135 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 39, cps_135 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 40, cps_135 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 41, cps_135 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 42, cps_135 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 43, cps_135 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 44, cps_135 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 45, cps_135 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 46, cps_135 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 47, cps_135 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 48, cps_135 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_135 + 49, cps_135 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_135);

uint32_t cps_136[] = {
0x1ba0, 0x1ba1, 0x1ba2, 0x1ba3, 0x1ba4, 0x1ba5, 0x1ba6, 0x1ba7, 0x1ba8, 0x1ba9, 0x1baa, 0x1bab, 0x1bac, 0x1bad, 0x1bae, 0x1baf, 0x1bb0, 0x1bb1, 0x1bb2, 0x1bb3, 0x1bb4, 0x1bb5, 0x1bb6, 0x1bb7, 0x1bb8, 0x1bb9, 0x1bba, 0x1bbb, 0x1bbc, 0x1bbd, 0x1bbe, 0x1bbf, 0x1bc0, 0x1bc1, 0x1bc2, 0x1bc3, 0x1bc4, 0x1bc5, 0x1bc6, 0x1bc7, 0x1bc8, 0x1bc9, 0x1bca, 0x1bcb, 0x1bcc, 0x1bcd, 0x1bce, 0x1bcf, 0x1bd0, 0x1bd1
};

void BM_collation_element_lookup_136(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 0, cps_136 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 1, cps_136 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 2, cps_136 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 3, cps_136 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 4, cps_136 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 5, cps_136 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 6, cps_136 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 7, cps_136 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 8, cps_136 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 9, cps_136 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 10, cps_136 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 11, cps_136 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 12, cps_136 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 13, cps_136 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 14, cps_136 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 15, cps_136 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 16, cps_136 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 17, cps_136 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 18, cps_136 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 19, cps_136 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 20, cps_136 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 21, cps_136 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 22, cps_136 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 23, cps_136 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 24, cps_136 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 25, cps_136 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 26, cps_136 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 27, cps_136 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 28, cps_136 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 29, cps_136 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 30, cps_136 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 31, cps_136 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 32, cps_136 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 33, cps_136 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 34, cps_136 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 35, cps_136 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 36, cps_136 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 37, cps_136 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 38, cps_136 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 39, cps_136 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 40, cps_136 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 41, cps_136 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 42, cps_136 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 43, cps_136 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 44, cps_136 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 45, cps_136 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 46, cps_136 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 47, cps_136 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 48, cps_136 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_136 + 49, cps_136 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_136);

uint32_t cps_137[] = {
0x1bd2, 0x1bd3, 0x1bd4, 0x1bd5, 0x1bd6, 0x1bd7, 0x1bd8, 0x1bd9, 0x1bda, 0x1bdb, 0x1bdc, 0x1bdd, 0x1bde, 0x1bdf, 0x1be0, 0x1be1, 0x1be2, 0x1be3, 0x1be4, 0x1be5, 0x1be6, 0x1be7, 0x1be8, 0x1be9, 0x1bea, 0x1beb, 0x1bec, 0x1bed, 0x1bee, 0x1bef, 0x1bf0, 0x1bf1, 0x1bf2, 0x1bf3, 0x1bfc, 0x1bfd, 0x1bfe, 0x1bff, 0x1c00, 0x1c01, 0x1c02, 0x1c03, 0x1c04, 0x1c05, 0x1c06, 0x1c07, 0x1c08, 0x1c09, 0x1c0a, 0x1c0b
};

void BM_collation_element_lookup_137(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 0, cps_137 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 1, cps_137 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 2, cps_137 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 3, cps_137 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 4, cps_137 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 5, cps_137 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 6, cps_137 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 7, cps_137 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 8, cps_137 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 9, cps_137 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 10, cps_137 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 11, cps_137 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 12, cps_137 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 13, cps_137 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 14, cps_137 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 15, cps_137 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 16, cps_137 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 17, cps_137 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 18, cps_137 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 19, cps_137 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 20, cps_137 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 21, cps_137 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 22, cps_137 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 23, cps_137 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 24, cps_137 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 25, cps_137 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 26, cps_137 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 27, cps_137 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 28, cps_137 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 29, cps_137 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 30, cps_137 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 31, cps_137 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 32, cps_137 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 33, cps_137 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 34, cps_137 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 35, cps_137 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 36, cps_137 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 37, cps_137 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 38, cps_137 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 39, cps_137 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 40, cps_137 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 41, cps_137 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 42, cps_137 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 43, cps_137 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 44, cps_137 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 45, cps_137 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 46, cps_137 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 47, cps_137 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 48, cps_137 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_137 + 49, cps_137 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_137);

uint32_t cps_138[] = {
0x1c0c, 0x1c0d, 0x1c0e, 0x1c0f, 0x1c10, 0x1c11, 0x1c12, 0x1c13, 0x1c14, 0x1c15, 0x1c16, 0x1c17, 0x1c18, 0x1c19, 0x1c1a, 0x1c1b, 0x1c1c, 0x1c1d, 0x1c1e, 0x1c1f, 0x1c20, 0x1c21, 0x1c22, 0x1c23, 0x1c24, 0x1c25, 0x1c26, 0x1c27, 0x1c28, 0x1c29, 0x1c2a, 0x1c2b, 0x1c2c, 0x1c2d, 0x1c2e, 0x1c2f, 0x1c30, 0x1c31, 0x1c32, 0x1c33, 0x1c34, 0x1c35, 0x1c36, 0x1c37, 0x1c3b, 0x1c3c, 0x1c3d, 0x1c3e, 0x1c3f, 0x1c40
};

void BM_collation_element_lookup_138(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 0, cps_138 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 1, cps_138 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 2, cps_138 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 3, cps_138 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 4, cps_138 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 5, cps_138 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 6, cps_138 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 7, cps_138 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 8, cps_138 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 9, cps_138 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 10, cps_138 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 11, cps_138 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 12, cps_138 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 13, cps_138 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 14, cps_138 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 15, cps_138 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 16, cps_138 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 17, cps_138 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 18, cps_138 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 19, cps_138 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 20, cps_138 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 21, cps_138 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 22, cps_138 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 23, cps_138 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 24, cps_138 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 25, cps_138 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 26, cps_138 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 27, cps_138 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 28, cps_138 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 29, cps_138 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 30, cps_138 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 31, cps_138 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 32, cps_138 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 33, cps_138 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 34, cps_138 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 35, cps_138 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 36, cps_138 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 37, cps_138 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 38, cps_138 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 39, cps_138 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 40, cps_138 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 41, cps_138 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 42, cps_138 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 43, cps_138 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 44, cps_138 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 45, cps_138 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 46, cps_138 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 47, cps_138 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 48, cps_138 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_138 + 49, cps_138 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_138);

uint32_t cps_139[] = {
0x1c41, 0x1c42, 0x1c43, 0x1c44, 0x1c45, 0x1c46, 0x1c47, 0x1c48, 0x1c49, 0x1c4d, 0x1c4e, 0x1c4f, 0x1c50, 0x1c51, 0x1c52, 0x1c53, 0x1c54, 0x1c55, 0x1c56, 0x1c57, 0x1c58, 0x1c59, 0x1c5a, 0x1c5b, 0x1c5c, 0x1c5d, 0x1c5e, 0x1c5f, 0x1c60, 0x1c61, 0x1c62, 0x1c63, 0x1c64, 0x1c65, 0x1c66, 0x1c67, 0x1c68, 0x1c69, 0x1c6a, 0x1c6b, 0x1c6c, 0x1c6d, 0x1c6e, 0x1c6f, 0x1c70, 0x1c71, 0x1c72, 0x1c73, 0x1c74, 0x1c75
};

void BM_collation_element_lookup_139(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 0, cps_139 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 1, cps_139 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 2, cps_139 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 3, cps_139 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 4, cps_139 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 5, cps_139 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 6, cps_139 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 7, cps_139 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 8, cps_139 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 9, cps_139 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 10, cps_139 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 11, cps_139 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 12, cps_139 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 13, cps_139 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 14, cps_139 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 15, cps_139 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 16, cps_139 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 17, cps_139 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 18, cps_139 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 19, cps_139 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 20, cps_139 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 21, cps_139 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 22, cps_139 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 23, cps_139 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 24, cps_139 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 25, cps_139 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 26, cps_139 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 27, cps_139 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 28, cps_139 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 29, cps_139 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 30, cps_139 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 31, cps_139 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 32, cps_139 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 33, cps_139 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 34, cps_139 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 35, cps_139 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 36, cps_139 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 37, cps_139 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 38, cps_139 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 39, cps_139 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 40, cps_139 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 41, cps_139 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 42, cps_139 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 43, cps_139 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 44, cps_139 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 45, cps_139 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 46, cps_139 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 47, cps_139 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 48, cps_139 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_139 + 49, cps_139 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_139);

uint32_t cps_140[] = {
0x1c76, 0x1c77, 0x1c78, 0x1c79, 0x1c7a, 0x1c7b, 0x1c7c, 0x1c7d, 0x1c7e, 0x1c7f, 0x1c80, 0x1c81, 0x1c82, 0x1c83, 0x1c84, 0x1c85, 0x1c86, 0x1c87, 0x1c88, 0x1cc0, 0x1cc1, 0x1cc2, 0x1cc3, 0x1cc4, 0x1cc5, 0x1cc6, 0x1cc7, 0x1cd0, 0x1cd1, 0x1cd2, 0x1cd3, 0x1cd4, 0x1cd5, 0x1cd6, 0x1cd7, 0x1cd8, 0x1cd9, 0x1cda, 0x1cdb, 0x1cdc, 0x1cdd, 0x1cde, 0x1cdf, 0x1ce0, 0x1ce1, 0x1ce2, 0x1ce3, 0x1ce4, 0x1ce5, 0x1ce6
};

void BM_collation_element_lookup_140(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 0, cps_140 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 1, cps_140 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 2, cps_140 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 3, cps_140 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 4, cps_140 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 5, cps_140 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 6, cps_140 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 7, cps_140 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 8, cps_140 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 9, cps_140 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 10, cps_140 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 11, cps_140 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 12, cps_140 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 13, cps_140 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 14, cps_140 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 15, cps_140 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 16, cps_140 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 17, cps_140 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 18, cps_140 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 19, cps_140 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 20, cps_140 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 21, cps_140 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 22, cps_140 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 23, cps_140 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 24, cps_140 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 25, cps_140 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 26, cps_140 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 27, cps_140 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 28, cps_140 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 29, cps_140 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 30, cps_140 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 31, cps_140 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 32, cps_140 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 33, cps_140 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 34, cps_140 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 35, cps_140 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 36, cps_140 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 37, cps_140 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 38, cps_140 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 39, cps_140 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 40, cps_140 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 41, cps_140 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 42, cps_140 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 43, cps_140 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 44, cps_140 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 45, cps_140 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 46, cps_140 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 47, cps_140 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 48, cps_140 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_140 + 49, cps_140 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_140);

uint32_t cps_141[] = {
0x1ce7, 0x1ce8, 0x1ce9, 0x1cea, 0x1ceb, 0x1cec, 0x1ced, 0x1cee, 0x1cef, 0x1cf0, 0x1cf1, 0x1cf2, 0x1cf3, 0x1cf4, 0x1cf5, 0x1cf6, 0x1cf7, 0x1cf8, 0x1cf9, 0x1d00, 0x1d01, 0x1d02, 0x1d03, 0x1d04, 0x1d05, 0x1d06, 0x1d07, 0x1d08, 0x1d09, 0x1d0a, 0x1d0b, 0x1d0c, 0x1d0d, 0x1d0e, 0x1d0f, 0x1d10, 0x1d11, 0x1d12, 0x1d13, 0x1d14, 0x1d15, 0x1d16, 0x1d17, 0x1d18, 0x1d19, 0x1d1a, 0x1d1b, 0x1d1c, 0x1d1d, 0x1d1e
};

void BM_collation_element_lookup_141(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 0, cps_141 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 1, cps_141 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 2, cps_141 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 3, cps_141 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 4, cps_141 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 5, cps_141 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 6, cps_141 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 7, cps_141 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 8, cps_141 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 9, cps_141 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 10, cps_141 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 11, cps_141 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 12, cps_141 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 13, cps_141 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 14, cps_141 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 15, cps_141 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 16, cps_141 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 17, cps_141 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 18, cps_141 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 19, cps_141 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 20, cps_141 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 21, cps_141 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 22, cps_141 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 23, cps_141 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 24, cps_141 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 25, cps_141 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 26, cps_141 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 27, cps_141 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 28, cps_141 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 29, cps_141 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 30, cps_141 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 31, cps_141 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 32, cps_141 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 33, cps_141 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 34, cps_141 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 35, cps_141 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 36, cps_141 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 37, cps_141 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 38, cps_141 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 39, cps_141 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 40, cps_141 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 41, cps_141 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 42, cps_141 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 43, cps_141 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 44, cps_141 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 45, cps_141 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 46, cps_141 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 47, cps_141 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 48, cps_141 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_141 + 49, cps_141 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_141);

uint32_t cps_142[] = {
0x1d1f, 0x1d20, 0x1d21, 0x1d22, 0x1d23, 0x1d24, 0x1d25, 0x1d26, 0x1d27, 0x1d28, 0x1d29, 0x1d2a, 0x1d2b, 0x1d2c, 0x1d2d, 0x1d2e, 0x1d2f, 0x1d30, 0x1d31, 0x1d32, 0x1d33, 0x1d34, 0x1d35, 0x1d36, 0x1d37, 0x1d38, 0x1d39, 0x1d3a, 0x1d3b, 0x1d3c, 0x1d3d, 0x1d3e, 0x1d3f, 0x1d40, 0x1d41, 0x1d42, 0x1d43, 0x1d44, 0x1d45, 0x1d46, 0x1d47, 0x1d48, 0x1d49, 0x1d4a, 0x1d4b, 0x1d4c, 0x1d4d, 0x1d4e, 0x1d4f, 0x1d50
};

void BM_collation_element_lookup_142(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 0, cps_142 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 1, cps_142 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 2, cps_142 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 3, cps_142 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 4, cps_142 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 5, cps_142 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 6, cps_142 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 7, cps_142 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 8, cps_142 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 9, cps_142 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 10, cps_142 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 11, cps_142 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 12, cps_142 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 13, cps_142 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 14, cps_142 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 15, cps_142 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 16, cps_142 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 17, cps_142 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 18, cps_142 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 19, cps_142 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 20, cps_142 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 21, cps_142 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 22, cps_142 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 23, cps_142 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 24, cps_142 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 25, cps_142 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 26, cps_142 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 27, cps_142 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 28, cps_142 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 29, cps_142 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 30, cps_142 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 31, cps_142 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 32, cps_142 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 33, cps_142 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 34, cps_142 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 35, cps_142 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 36, cps_142 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 37, cps_142 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 38, cps_142 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 39, cps_142 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 40, cps_142 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 41, cps_142 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 42, cps_142 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 43, cps_142 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 44, cps_142 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 45, cps_142 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 46, cps_142 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 47, cps_142 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 48, cps_142 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_142 + 49, cps_142 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_142);

uint32_t cps_143[] = {
0x1d51, 0x1d52, 0x1d53, 0x1d54, 0x1d55, 0x1d56, 0x1d57, 0x1d58, 0x1d59, 0x1d5a, 0x1d5b, 0x1d5c, 0x1d5d, 0x1d5e, 0x1d5f, 0x1d60, 0x1d61, 0x1d62, 0x1d63, 0x1d64, 0x1d65, 0x1d66, 0x1d67, 0x1d68, 0x1d69, 0x1d6a, 0x1d6b, 0x1d6c, 0x1d6d, 0x1d6e, 0x1d6f, 0x1d70, 0x1d71, 0x1d72, 0x1d73, 0x1d74, 0x1d75, 0x1d76, 0x1d77, 0x1d78, 0x1d79, 0x1d7a, 0x1d7b, 0x1d7c, 0x1d7d, 0x1d7e, 0x1d7f, 0x1d80, 0x1d81, 0x1d82
};

void BM_collation_element_lookup_143(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 0, cps_143 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 1, cps_143 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 2, cps_143 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 3, cps_143 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 4, cps_143 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 5, cps_143 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 6, cps_143 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 7, cps_143 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 8, cps_143 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 9, cps_143 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 10, cps_143 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 11, cps_143 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 12, cps_143 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 13, cps_143 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 14, cps_143 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 15, cps_143 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 16, cps_143 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 17, cps_143 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 18, cps_143 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 19, cps_143 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 20, cps_143 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 21, cps_143 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 22, cps_143 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 23, cps_143 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 24, cps_143 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 25, cps_143 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 26, cps_143 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 27, cps_143 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 28, cps_143 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 29, cps_143 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 30, cps_143 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 31, cps_143 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 32, cps_143 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 33, cps_143 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 34, cps_143 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 35, cps_143 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 36, cps_143 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 37, cps_143 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 38, cps_143 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 39, cps_143 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 40, cps_143 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 41, cps_143 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 42, cps_143 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 43, cps_143 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 44, cps_143 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 45, cps_143 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 46, cps_143 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 47, cps_143 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 48, cps_143 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_143 + 49, cps_143 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_143);

uint32_t cps_144[] = {
0x1d83, 0x1d84, 0x1d85, 0x1d86, 0x1d87, 0x1d88, 0x1d89, 0x1d8a, 0x1d8b, 0x1d8c, 0x1d8d, 0x1d8e, 0x1d8f, 0x1d90, 0x1d91, 0x1d92, 0x1d93, 0x1d94, 0x1d95, 0x1d96, 0x1d97, 0x1d98, 0x1d99, 0x1d9a, 0x1d9b, 0x1d9c, 0x1d9d, 0x1d9e, 0x1d9f, 0x1da0, 0x1da1, 0x1da2, 0x1da3, 0x1da4, 0x1da5, 0x1da6, 0x1da7, 0x1da8, 0x1da9, 0x1daa, 0x1dab, 0x1dac, 0x1dad, 0x1dae, 0x1daf, 0x1db0, 0x1db1, 0x1db2, 0x1db3, 0x1db4
};

void BM_collation_element_lookup_144(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 0, cps_144 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 1, cps_144 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 2, cps_144 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 3, cps_144 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 4, cps_144 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 5, cps_144 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 6, cps_144 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 7, cps_144 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 8, cps_144 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 9, cps_144 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 10, cps_144 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 11, cps_144 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 12, cps_144 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 13, cps_144 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 14, cps_144 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 15, cps_144 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 16, cps_144 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 17, cps_144 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 18, cps_144 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 19, cps_144 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 20, cps_144 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 21, cps_144 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 22, cps_144 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 23, cps_144 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 24, cps_144 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 25, cps_144 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 26, cps_144 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 27, cps_144 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 28, cps_144 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 29, cps_144 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 30, cps_144 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 31, cps_144 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 32, cps_144 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 33, cps_144 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 34, cps_144 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 35, cps_144 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 36, cps_144 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 37, cps_144 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 38, cps_144 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 39, cps_144 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 40, cps_144 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 41, cps_144 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 42, cps_144 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 43, cps_144 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 44, cps_144 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 45, cps_144 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 46, cps_144 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 47, cps_144 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 48, cps_144 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_144 + 49, cps_144 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_144);

uint32_t cps_145[] = {
0x1db5, 0x1db6, 0x1db7, 0x1db8, 0x1db9, 0x1dba, 0x1dbb, 0x1dbc, 0x1dbd, 0x1dbe, 0x1dbf, 0x1dc0, 0x1dc1, 0x1dc2, 0x1dc3, 0x1dc4, 0x1dc5, 0x1dc6, 0x1dc7, 0x1dc8, 0x1dc9, 0x1dca, 0x1dcb, 0x1dcc, 0x1dcd, 0x1dce, 0x1dcf, 0x1dd0, 0x1dd1, 0x1dd2, 0x1dd3, 0x1dd4, 0x1dd5, 0x1dd6, 0x1dd7, 0x1dd8, 0x1dd9, 0x1dda, 0x1ddb, 0x1ddc, 0x1ddd, 0x1dde, 0x1ddf, 0x1de0, 0x1de1, 0x1de2, 0x1de3, 0x1de4, 0x1de5, 0x1de6
};

void BM_collation_element_lookup_145(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 0, cps_145 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 1, cps_145 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 2, cps_145 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 3, cps_145 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 4, cps_145 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 5, cps_145 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 6, cps_145 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 7, cps_145 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 8, cps_145 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 9, cps_145 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 10, cps_145 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 11, cps_145 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 12, cps_145 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 13, cps_145 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 14, cps_145 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 15, cps_145 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 16, cps_145 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 17, cps_145 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 18, cps_145 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 19, cps_145 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 20, cps_145 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 21, cps_145 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 22, cps_145 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 23, cps_145 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 24, cps_145 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 25, cps_145 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 26, cps_145 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 27, cps_145 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 28, cps_145 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 29, cps_145 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 30, cps_145 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 31, cps_145 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 32, cps_145 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 33, cps_145 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 34, cps_145 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 35, cps_145 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 36, cps_145 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 37, cps_145 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 38, cps_145 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 39, cps_145 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 40, cps_145 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 41, cps_145 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 42, cps_145 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 43, cps_145 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 44, cps_145 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 45, cps_145 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 46, cps_145 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 47, cps_145 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 48, cps_145 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_145 + 49, cps_145 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_145);

uint32_t cps_146[] = {
0x1de7, 0x1de8, 0x1de9, 0x1dea, 0x1deb, 0x1dec, 0x1ded, 0x1dee, 0x1def, 0x1df0, 0x1df1, 0x1df2, 0x1df3, 0x1df4, 0x1df5, 0x1df6, 0x1df7, 0x1df8, 0x1df9, 0x1dfb, 0x1dfc, 0x1dfd, 0x1dfe, 0x1dff, 0x1e00, 0x1e01, 0x1e02, 0x1e03, 0x1e04, 0x1e05, 0x1e06, 0x1e07, 0x1e08, 0x1e09, 0x1e0a, 0x1e0b, 0x1e0c, 0x1e0d, 0x1e0e, 0x1e0f, 0x1e10, 0x1e11, 0x1e12, 0x1e13, 0x1e14, 0x1e15, 0x1e16, 0x1e17, 0x1e18, 0x1e19
};

void BM_collation_element_lookup_146(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 0, cps_146 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 1, cps_146 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 2, cps_146 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 3, cps_146 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 4, cps_146 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 5, cps_146 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 6, cps_146 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 7, cps_146 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 8, cps_146 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 9, cps_146 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 10, cps_146 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 11, cps_146 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 12, cps_146 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 13, cps_146 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 14, cps_146 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 15, cps_146 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 16, cps_146 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 17, cps_146 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 18, cps_146 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 19, cps_146 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 20, cps_146 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 21, cps_146 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 22, cps_146 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 23, cps_146 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 24, cps_146 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 25, cps_146 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 26, cps_146 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 27, cps_146 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 28, cps_146 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 29, cps_146 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 30, cps_146 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 31, cps_146 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 32, cps_146 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 33, cps_146 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 34, cps_146 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 35, cps_146 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 36, cps_146 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 37, cps_146 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 38, cps_146 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 39, cps_146 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 40, cps_146 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 41, cps_146 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 42, cps_146 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 43, cps_146 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 44, cps_146 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 45, cps_146 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 46, cps_146 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 47, cps_146 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 48, cps_146 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_146 + 49, cps_146 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_146);

uint32_t cps_147[] = {
0x1e1a, 0x1e1b, 0x1e1c, 0x1e1d, 0x1e1e, 0x1e1f, 0x1e20, 0x1e21, 0x1e22, 0x1e23, 0x1e24, 0x1e25, 0x1e26, 0x1e27, 0x1e28, 0x1e29, 0x1e2a, 0x1e2b, 0x1e2c, 0x1e2d, 0x1e2e, 0x1e2f, 0x1e30, 0x1e31, 0x1e32, 0x1e33, 0x1e34, 0x1e35, 0x1e36, 0x1e37, 0x1e38, 0x1e39, 0x1e3a, 0x1e3b, 0x1e3c, 0x1e3d, 0x1e3e, 0x1e3f, 0x1e40, 0x1e41, 0x1e42, 0x1e43, 0x1e44, 0x1e45, 0x1e46, 0x1e47, 0x1e48, 0x1e49, 0x1e4a, 0x1e4b
};

void BM_collation_element_lookup_147(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 0, cps_147 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 1, cps_147 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 2, cps_147 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 3, cps_147 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 4, cps_147 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 5, cps_147 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 6, cps_147 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 7, cps_147 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 8, cps_147 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 9, cps_147 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 10, cps_147 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 11, cps_147 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 12, cps_147 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 13, cps_147 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 14, cps_147 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 15, cps_147 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 16, cps_147 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 17, cps_147 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 18, cps_147 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 19, cps_147 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 20, cps_147 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 21, cps_147 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 22, cps_147 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 23, cps_147 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 24, cps_147 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 25, cps_147 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 26, cps_147 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 27, cps_147 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 28, cps_147 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 29, cps_147 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 30, cps_147 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 31, cps_147 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 32, cps_147 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 33, cps_147 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 34, cps_147 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 35, cps_147 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 36, cps_147 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 37, cps_147 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 38, cps_147 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 39, cps_147 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 40, cps_147 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 41, cps_147 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 42, cps_147 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 43, cps_147 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 44, cps_147 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 45, cps_147 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 46, cps_147 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 47, cps_147 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 48, cps_147 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_147 + 49, cps_147 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_147);

uint32_t cps_148[] = {
0x1e4c, 0x1e4d, 0x1e4e, 0x1e4f, 0x1e50, 0x1e51, 0x1e52, 0x1e53, 0x1e54, 0x1e55, 0x1e56, 0x1e57, 0x1e58, 0x1e59, 0x1e5a, 0x1e5b, 0x1e5c, 0x1e5d, 0x1e5e, 0x1e5f, 0x1e60, 0x1e61, 0x1e62, 0x1e63, 0x1e64, 0x1e65, 0x1e66, 0x1e67, 0x1e68, 0x1e69, 0x1e6a, 0x1e6b, 0x1e6c, 0x1e6d, 0x1e6e, 0x1e6f, 0x1e70, 0x1e71, 0x1e72, 0x1e73, 0x1e74, 0x1e75, 0x1e76, 0x1e77, 0x1e78, 0x1e79, 0x1e7a, 0x1e7b, 0x1e7c, 0x1e7d
};

void BM_collation_element_lookup_148(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 0, cps_148 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 1, cps_148 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 2, cps_148 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 3, cps_148 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 4, cps_148 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 5, cps_148 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 6, cps_148 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 7, cps_148 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 8, cps_148 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 9, cps_148 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 10, cps_148 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 11, cps_148 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 12, cps_148 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 13, cps_148 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 14, cps_148 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 15, cps_148 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 16, cps_148 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 17, cps_148 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 18, cps_148 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 19, cps_148 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 20, cps_148 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 21, cps_148 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 22, cps_148 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 23, cps_148 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 24, cps_148 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 25, cps_148 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 26, cps_148 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 27, cps_148 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 28, cps_148 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 29, cps_148 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 30, cps_148 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 31, cps_148 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 32, cps_148 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 33, cps_148 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 34, cps_148 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 35, cps_148 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 36, cps_148 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 37, cps_148 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 38, cps_148 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 39, cps_148 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 40, cps_148 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 41, cps_148 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 42, cps_148 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 43, cps_148 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 44, cps_148 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 45, cps_148 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 46, cps_148 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 47, cps_148 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 48, cps_148 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_148 + 49, cps_148 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_148);

uint32_t cps_149[] = {
0x1e7e, 0x1e7f, 0x1e80, 0x1e81, 0x1e82, 0x1e83, 0x1e84, 0x1e85, 0x1e86, 0x1e87, 0x1e88, 0x1e89, 0x1e8a, 0x1e8b, 0x1e8c, 0x1e8d, 0x1e8e, 0x1e8f, 0x1e90, 0x1e91, 0x1e92, 0x1e93, 0x1e94, 0x1e95, 0x1e96, 0x1e97, 0x1e98, 0x1e99, 0x1e9a, 0x1e9b, 0x1e9c, 0x1e9d, 0x1e9e, 0x1e9f, 0x1ea0, 0x1ea1, 0x1ea2, 0x1ea3, 0x1ea4, 0x1ea5, 0x1ea6, 0x1ea7, 0x1ea8, 0x1ea9, 0x1eaa, 0x1eab, 0x1eac, 0x1ead, 0x1eae, 0x1eaf
};

void BM_collation_element_lookup_149(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 0, cps_149 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 1, cps_149 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 2, cps_149 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 3, cps_149 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 4, cps_149 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 5, cps_149 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 6, cps_149 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 7, cps_149 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 8, cps_149 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 9, cps_149 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 10, cps_149 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 11, cps_149 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 12, cps_149 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 13, cps_149 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 14, cps_149 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 15, cps_149 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 16, cps_149 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 17, cps_149 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 18, cps_149 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 19, cps_149 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 20, cps_149 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 21, cps_149 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 22, cps_149 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 23, cps_149 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 24, cps_149 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 25, cps_149 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 26, cps_149 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 27, cps_149 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 28, cps_149 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 29, cps_149 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 30, cps_149 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 31, cps_149 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 32, cps_149 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 33, cps_149 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 34, cps_149 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 35, cps_149 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 36, cps_149 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 37, cps_149 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 38, cps_149 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 39, cps_149 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 40, cps_149 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 41, cps_149 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 42, cps_149 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 43, cps_149 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 44, cps_149 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 45, cps_149 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 46, cps_149 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 47, cps_149 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 48, cps_149 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_149 + 49, cps_149 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_149);

uint32_t cps_150[] = {
0x1eb0, 0x1eb1, 0x1eb2, 0x1eb3, 0x1eb4, 0x1eb5, 0x1eb6, 0x1eb7, 0x1eb8, 0x1eb9, 0x1eba, 0x1ebb, 0x1ebc, 0x1ebd, 0x1ebe, 0x1ebf, 0x1ec0, 0x1ec1, 0x1ec2, 0x1ec3, 0x1ec4, 0x1ec5, 0x1ec6, 0x1ec7, 0x1ec8, 0x1ec9, 0x1eca, 0x1ecb, 0x1ecc, 0x1ecd, 0x1ece, 0x1ecf, 0x1ed0, 0x1ed1, 0x1ed2, 0x1ed3, 0x1ed4, 0x1ed5, 0x1ed6, 0x1ed7, 0x1ed8, 0x1ed9, 0x1eda, 0x1edb, 0x1edc, 0x1edd, 0x1ede, 0x1edf, 0x1ee0, 0x1ee1
};

void BM_collation_element_lookup_150(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 0, cps_150 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 1, cps_150 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 2, cps_150 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 3, cps_150 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 4, cps_150 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 5, cps_150 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 6, cps_150 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 7, cps_150 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 8, cps_150 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 9, cps_150 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 10, cps_150 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 11, cps_150 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 12, cps_150 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 13, cps_150 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 14, cps_150 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 15, cps_150 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 16, cps_150 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 17, cps_150 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 18, cps_150 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 19, cps_150 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 20, cps_150 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 21, cps_150 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 22, cps_150 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 23, cps_150 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 24, cps_150 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 25, cps_150 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 26, cps_150 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 27, cps_150 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 28, cps_150 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 29, cps_150 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 30, cps_150 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 31, cps_150 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 32, cps_150 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 33, cps_150 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 34, cps_150 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 35, cps_150 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 36, cps_150 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 37, cps_150 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 38, cps_150 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 39, cps_150 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 40, cps_150 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 41, cps_150 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 42, cps_150 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 43, cps_150 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 44, cps_150 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 45, cps_150 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 46, cps_150 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 47, cps_150 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 48, cps_150 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_150 + 49, cps_150 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_150);

uint32_t cps_151[] = {
0x1ee2, 0x1ee3, 0x1ee4, 0x1ee5, 0x1ee6, 0x1ee7, 0x1ee8, 0x1ee9, 0x1eea, 0x1eeb, 0x1eec, 0x1eed, 0x1eee, 0x1eef, 0x1ef0, 0x1ef1, 0x1ef2, 0x1ef3, 0x1ef4, 0x1ef5, 0x1ef6, 0x1ef7, 0x1ef8, 0x1ef9, 0x1efa, 0x1efb, 0x1efc, 0x1efd, 0x1efe, 0x1eff, 0x1f00, 0x1f01, 0x1f02, 0x1f03, 0x1f04, 0x1f05, 0x1f06, 0x1f07, 0x1f08, 0x1f09, 0x1f0a, 0x1f0b, 0x1f0c, 0x1f0d, 0x1f0e, 0x1f0f, 0x1f10, 0x1f11, 0x1f12, 0x1f13
};

void BM_collation_element_lookup_151(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 0, cps_151 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 1, cps_151 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 2, cps_151 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 3, cps_151 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 4, cps_151 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 5, cps_151 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 6, cps_151 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 7, cps_151 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 8, cps_151 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 9, cps_151 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 10, cps_151 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 11, cps_151 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 12, cps_151 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 13, cps_151 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 14, cps_151 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 15, cps_151 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 16, cps_151 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 17, cps_151 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 18, cps_151 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 19, cps_151 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 20, cps_151 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 21, cps_151 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 22, cps_151 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 23, cps_151 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 24, cps_151 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 25, cps_151 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 26, cps_151 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 27, cps_151 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 28, cps_151 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 29, cps_151 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 30, cps_151 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 31, cps_151 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 32, cps_151 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 33, cps_151 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 34, cps_151 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 35, cps_151 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 36, cps_151 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 37, cps_151 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 38, cps_151 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 39, cps_151 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 40, cps_151 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 41, cps_151 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 42, cps_151 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 43, cps_151 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 44, cps_151 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 45, cps_151 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 46, cps_151 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 47, cps_151 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 48, cps_151 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_151 + 49, cps_151 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_151);

uint32_t cps_152[] = {
0x1f14, 0x1f15, 0x1f18, 0x1f19, 0x1f1a, 0x1f1b, 0x1f1c, 0x1f1d, 0x1f20, 0x1f21, 0x1f22, 0x1f23, 0x1f24, 0x1f25, 0x1f26, 0x1f27, 0x1f28, 0x1f29, 0x1f2a, 0x1f2b, 0x1f2c, 0x1f2d, 0x1f2e, 0x1f2f, 0x1f30, 0x1f31, 0x1f32, 0x1f33, 0x1f34, 0x1f35, 0x1f36, 0x1f37, 0x1f38, 0x1f39, 0x1f3a, 0x1f3b, 0x1f3c, 0x1f3d, 0x1f3e, 0x1f3f, 0x1f40, 0x1f41, 0x1f42, 0x1f43, 0x1f44, 0x1f45, 0x1f48, 0x1f49, 0x1f4a, 0x1f4b
};

void BM_collation_element_lookup_152(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 0, cps_152 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 1, cps_152 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 2, cps_152 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 3, cps_152 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 4, cps_152 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 5, cps_152 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 6, cps_152 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 7, cps_152 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 8, cps_152 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 9, cps_152 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 10, cps_152 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 11, cps_152 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 12, cps_152 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 13, cps_152 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 14, cps_152 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 15, cps_152 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 16, cps_152 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 17, cps_152 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 18, cps_152 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 19, cps_152 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 20, cps_152 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 21, cps_152 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 22, cps_152 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 23, cps_152 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 24, cps_152 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 25, cps_152 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 26, cps_152 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 27, cps_152 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 28, cps_152 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 29, cps_152 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 30, cps_152 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 31, cps_152 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 32, cps_152 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 33, cps_152 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 34, cps_152 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 35, cps_152 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 36, cps_152 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 37, cps_152 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 38, cps_152 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 39, cps_152 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 40, cps_152 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 41, cps_152 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 42, cps_152 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 43, cps_152 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 44, cps_152 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 45, cps_152 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 46, cps_152 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 47, cps_152 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 48, cps_152 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_152 + 49, cps_152 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_152);

uint32_t cps_153[] = {
0x1f4c, 0x1f4d, 0x1f50, 0x1f51, 0x1f52, 0x1f53, 0x1f54, 0x1f55, 0x1f56, 0x1f57, 0x1f59, 0x1f5b, 0x1f5d, 0x1f5f, 0x1f60, 0x1f61, 0x1f62, 0x1f63, 0x1f64, 0x1f65, 0x1f66, 0x1f67, 0x1f68, 0x1f69, 0x1f6a, 0x1f6b, 0x1f6c, 0x1f6d, 0x1f6e, 0x1f6f, 0x1f70, 0x1f71, 0x1f72, 0x1f73, 0x1f74, 0x1f75, 0x1f76, 0x1f77, 0x1f78, 0x1f79, 0x1f7a, 0x1f7b, 0x1f7c, 0x1f7d, 0x1f80, 0x1f81, 0x1f82, 0x1f83, 0x1f84, 0x1f85
};

void BM_collation_element_lookup_153(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 0, cps_153 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 1, cps_153 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 2, cps_153 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 3, cps_153 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 4, cps_153 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 5, cps_153 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 6, cps_153 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 7, cps_153 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 8, cps_153 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 9, cps_153 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 10, cps_153 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 11, cps_153 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 12, cps_153 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 13, cps_153 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 14, cps_153 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 15, cps_153 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 16, cps_153 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 17, cps_153 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 18, cps_153 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 19, cps_153 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 20, cps_153 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 21, cps_153 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 22, cps_153 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 23, cps_153 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 24, cps_153 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 25, cps_153 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 26, cps_153 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 27, cps_153 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 28, cps_153 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 29, cps_153 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 30, cps_153 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 31, cps_153 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 32, cps_153 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 33, cps_153 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 34, cps_153 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 35, cps_153 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 36, cps_153 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 37, cps_153 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 38, cps_153 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 39, cps_153 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 40, cps_153 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 41, cps_153 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 42, cps_153 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 43, cps_153 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 44, cps_153 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 45, cps_153 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 46, cps_153 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 47, cps_153 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 48, cps_153 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_153 + 49, cps_153 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_153);

uint32_t cps_154[] = {
0x1f86, 0x1f87, 0x1f88, 0x1f89, 0x1f8a, 0x1f8b, 0x1f8c, 0x1f8d, 0x1f8e, 0x1f8f, 0x1f90, 0x1f91, 0x1f92, 0x1f93, 0x1f94, 0x1f95, 0x1f96, 0x1f97, 0x1f98, 0x1f99, 0x1f9a, 0x1f9b, 0x1f9c, 0x1f9d, 0x1f9e, 0x1f9f, 0x1fa0, 0x1fa1, 0x1fa2, 0x1fa3, 0x1fa4, 0x1fa5, 0x1fa6, 0x1fa7, 0x1fa8, 0x1fa9, 0x1faa, 0x1fab, 0x1fac, 0x1fad, 0x1fae, 0x1faf, 0x1fb0, 0x1fb1, 0x1fb2, 0x1fb3, 0x1fb4, 0x1fb6, 0x1fb7, 0x1fb8
};

void BM_collation_element_lookup_154(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 0, cps_154 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 1, cps_154 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 2, cps_154 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 3, cps_154 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 4, cps_154 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 5, cps_154 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 6, cps_154 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 7, cps_154 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 8, cps_154 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 9, cps_154 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 10, cps_154 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 11, cps_154 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 12, cps_154 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 13, cps_154 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 14, cps_154 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 15, cps_154 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 16, cps_154 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 17, cps_154 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 18, cps_154 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 19, cps_154 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 20, cps_154 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 21, cps_154 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 22, cps_154 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 23, cps_154 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 24, cps_154 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 25, cps_154 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 26, cps_154 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 27, cps_154 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 28, cps_154 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 29, cps_154 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 30, cps_154 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 31, cps_154 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 32, cps_154 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 33, cps_154 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 34, cps_154 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 35, cps_154 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 36, cps_154 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 37, cps_154 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 38, cps_154 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 39, cps_154 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 40, cps_154 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 41, cps_154 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 42, cps_154 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 43, cps_154 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 44, cps_154 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 45, cps_154 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 46, cps_154 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 47, cps_154 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 48, cps_154 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_154 + 49, cps_154 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_154);

uint32_t cps_155[] = {
0x1fb9, 0x1fba, 0x1fbb, 0x1fbc, 0x1fbd, 0x1fbe, 0x1fbf, 0x1fc0, 0x1fc1, 0x1fc2, 0x1fc3, 0x1fc4, 0x1fc6, 0x1fc7, 0x1fc8, 0x1fc9, 0x1fca, 0x1fcb, 0x1fcc, 0x1fcd, 0x1fce, 0x1fcf, 0x1fd0, 0x1fd1, 0x1fd2, 0x1fd3, 0x1fd6, 0x1fd7, 0x1fd8, 0x1fd9, 0x1fda, 0x1fdb, 0x1fdd, 0x1fde, 0x1fdf, 0x1fe0, 0x1fe1, 0x1fe2, 0x1fe3, 0x1fe4, 0x1fe5, 0x1fe6, 0x1fe7, 0x1fe8, 0x1fe9, 0x1fea, 0x1feb, 0x1fec, 0x1fed, 0x1fee
};

void BM_collation_element_lookup_155(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 0, cps_155 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 1, cps_155 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 2, cps_155 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 3, cps_155 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 4, cps_155 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 5, cps_155 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 6, cps_155 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 7, cps_155 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 8, cps_155 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 9, cps_155 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 10, cps_155 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 11, cps_155 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 12, cps_155 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 13, cps_155 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 14, cps_155 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 15, cps_155 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 16, cps_155 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 17, cps_155 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 18, cps_155 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 19, cps_155 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 20, cps_155 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 21, cps_155 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 22, cps_155 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 23, cps_155 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 24, cps_155 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 25, cps_155 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 26, cps_155 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 27, cps_155 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 28, cps_155 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 29, cps_155 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 30, cps_155 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 31, cps_155 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 32, cps_155 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 33, cps_155 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 34, cps_155 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 35, cps_155 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 36, cps_155 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 37, cps_155 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 38, cps_155 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 39, cps_155 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 40, cps_155 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 41, cps_155 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 42, cps_155 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 43, cps_155 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 44, cps_155 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 45, cps_155 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 46, cps_155 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 47, cps_155 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 48, cps_155 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_155 + 49, cps_155 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_155);

uint32_t cps_156[] = {
0x1fef, 0x1ff2, 0x1ff3, 0x1ff4, 0x1ff6, 0x1ff7, 0x1ff8, 0x1ff9, 0x1ffa, 0x1ffb, 0x1ffc, 0x1ffd, 0x1ffe, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200a, 0x200b, 0x200c, 0x200d, 0x200e, 0x200f, 0x2010, 0x2011, 0x2012, 0x2013, 0x2014, 0x2015, 0x2016, 0x2017, 0x2018, 0x2019, 0x201a, 0x201b, 0x201c, 0x201d, 0x201e, 0x201f, 0x2020, 0x2021, 0x2022, 0x2023, 0x2024
};

void BM_collation_element_lookup_156(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 0, cps_156 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 1, cps_156 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 2, cps_156 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 3, cps_156 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 4, cps_156 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 5, cps_156 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 6, cps_156 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 7, cps_156 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 8, cps_156 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 9, cps_156 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 10, cps_156 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 11, cps_156 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 12, cps_156 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 13, cps_156 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 14, cps_156 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 15, cps_156 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 16, cps_156 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 17, cps_156 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 18, cps_156 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 19, cps_156 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 20, cps_156 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 21, cps_156 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 22, cps_156 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 23, cps_156 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 24, cps_156 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 25, cps_156 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 26, cps_156 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 27, cps_156 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 28, cps_156 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 29, cps_156 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 30, cps_156 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 31, cps_156 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 32, cps_156 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 33, cps_156 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 34, cps_156 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 35, cps_156 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 36, cps_156 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 37, cps_156 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 38, cps_156 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 39, cps_156 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 40, cps_156 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 41, cps_156 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 42, cps_156 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 43, cps_156 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 44, cps_156 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 45, cps_156 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 46, cps_156 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 47, cps_156 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 48, cps_156 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_156 + 49, cps_156 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_156);

uint32_t cps_157[] = {
0x2025, 0x2026, 0x2027, 0x2028, 0x2029, 0x202a, 0x202b, 0x202c, 0x202d, 0x202e, 0x202f, 0x2030, 0x2031, 0x2032, 0x2033, 0x2034, 0x2035, 0x2036, 0x2037, 0x2038, 0x2039, 0x203a, 0x203b, 0x203c, 0x203d, 0x203e, 0x203f, 0x2040, 0x2041, 0x2042, 0x2043, 0x2044, 0x2045, 0x2046, 0x2047, 0x2048, 0x2049, 0x204a, 0x204b, 0x204c, 0x204d, 0x204e, 0x204f, 0x2050, 0x2051, 0x2052, 0x2053, 0x2054, 0x2055, 0x2056
};

void BM_collation_element_lookup_157(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 0, cps_157 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 1, cps_157 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 2, cps_157 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 3, cps_157 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 4, cps_157 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 5, cps_157 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 6, cps_157 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 7, cps_157 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 8, cps_157 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 9, cps_157 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 10, cps_157 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 11, cps_157 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 12, cps_157 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 13, cps_157 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 14, cps_157 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 15, cps_157 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 16, cps_157 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 17, cps_157 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 18, cps_157 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 19, cps_157 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 20, cps_157 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 21, cps_157 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 22, cps_157 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 23, cps_157 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 24, cps_157 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 25, cps_157 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 26, cps_157 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 27, cps_157 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 28, cps_157 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 29, cps_157 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 30, cps_157 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 31, cps_157 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 32, cps_157 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 33, cps_157 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 34, cps_157 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 35, cps_157 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 36, cps_157 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 37, cps_157 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 38, cps_157 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 39, cps_157 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 40, cps_157 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 41, cps_157 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 42, cps_157 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 43, cps_157 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 44, cps_157 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 45, cps_157 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 46, cps_157 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 47, cps_157 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 48, cps_157 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_157 + 49, cps_157 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_157);

uint32_t cps_158[] = {
0x2057, 0x2058, 0x2059, 0x205a, 0x205b, 0x205c, 0x205d, 0x205e, 0x205f, 0x2060, 0x2061, 0x2062, 0x2063, 0x2064, 0x2066, 0x2067, 0x2068, 0x2069, 0x206a, 0x206b, 0x206c, 0x206d, 0x206e, 0x206f, 0x2070, 0x2071, 0x2074, 0x2075, 0x2076, 0x2077, 0x2078, 0x2079, 0x207a, 0x207b, 0x207c, 0x207d, 0x207e, 0x207f, 0x2080, 0x2081, 0x2082, 0x2083, 0x2084, 0x2085, 0x2086, 0x2087, 0x2088, 0x2089, 0x208a, 0x208b
};

void BM_collation_element_lookup_158(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 0, cps_158 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 1, cps_158 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 2, cps_158 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 3, cps_158 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 4, cps_158 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 5, cps_158 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 6, cps_158 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 7, cps_158 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 8, cps_158 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 9, cps_158 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 10, cps_158 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 11, cps_158 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 12, cps_158 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 13, cps_158 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 14, cps_158 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 15, cps_158 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 16, cps_158 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 17, cps_158 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 18, cps_158 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 19, cps_158 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 20, cps_158 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 21, cps_158 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 22, cps_158 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 23, cps_158 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 24, cps_158 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 25, cps_158 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 26, cps_158 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 27, cps_158 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 28, cps_158 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 29, cps_158 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 30, cps_158 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 31, cps_158 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 32, cps_158 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 33, cps_158 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 34, cps_158 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 35, cps_158 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 36, cps_158 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 37, cps_158 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 38, cps_158 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 39, cps_158 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 40, cps_158 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 41, cps_158 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 42, cps_158 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 43, cps_158 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 44, cps_158 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 45, cps_158 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 46, cps_158 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 47, cps_158 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 48, cps_158 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_158 + 49, cps_158 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_158);

uint32_t cps_159[] = {
0x208c, 0x208d, 0x208e, 0x2090, 0x2091, 0x2092, 0x2093, 0x2094, 0x2095, 0x2096, 0x2097, 0x2098, 0x2099, 0x209a, 0x209b, 0x209c, 0x20a0, 0x20a1, 0x20a2, 0x20a3, 0x20a4, 0x20a5, 0x20a6, 0x20a7, 0x20a8, 0x20a9, 0x20aa, 0x20ab, 0x20ac, 0x20ad, 0x20ae, 0x20af, 0x20b0, 0x20b1, 0x20b2, 0x20b3, 0x20b4, 0x20b5, 0x20b6, 0x20b7, 0x20b8, 0x20b9, 0x20ba, 0x20bb, 0x20bc, 0x20bd, 0x20be, 0x20bf, 0x20d0, 0x20d1
};

void BM_collation_element_lookup_159(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 0, cps_159 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 1, cps_159 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 2, cps_159 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 3, cps_159 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 4, cps_159 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 5, cps_159 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 6, cps_159 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 7, cps_159 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 8, cps_159 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 9, cps_159 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 10, cps_159 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 11, cps_159 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 12, cps_159 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 13, cps_159 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 14, cps_159 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 15, cps_159 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 16, cps_159 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 17, cps_159 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 18, cps_159 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 19, cps_159 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 20, cps_159 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 21, cps_159 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 22, cps_159 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 23, cps_159 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 24, cps_159 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 25, cps_159 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 26, cps_159 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 27, cps_159 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 28, cps_159 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 29, cps_159 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 30, cps_159 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 31, cps_159 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 32, cps_159 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 33, cps_159 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 34, cps_159 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 35, cps_159 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 36, cps_159 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 37, cps_159 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 38, cps_159 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 39, cps_159 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 40, cps_159 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 41, cps_159 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 42, cps_159 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 43, cps_159 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 44, cps_159 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 45, cps_159 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 46, cps_159 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 47, cps_159 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 48, cps_159 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_159 + 49, cps_159 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_159);

uint32_t cps_160[] = {
0x20d2, 0x20d3, 0x20d4, 0x20d5, 0x20d6, 0x20d7, 0x20d8, 0x20d9, 0x20da, 0x20db, 0x20dc, 0x20dd, 0x20de, 0x20df, 0x20e0, 0x20e1, 0x20e2, 0x20e3, 0x20e4, 0x20e5, 0x20e6, 0x20e7, 0x20e8, 0x20e9, 0x20ea, 0x20eb, 0x20ec, 0x20ed, 0x20ee, 0x20ef, 0x20f0, 0x2100, 0x2101, 0x2102, 0x2103, 0x2104, 0x2105, 0x2106, 0x2107, 0x2108, 0x2109, 0x210a, 0x210b, 0x210c, 0x210d, 0x210e, 0x210f, 0x2110, 0x2111, 0x2112
};

void BM_collation_element_lookup_160(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 0, cps_160 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 1, cps_160 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 2, cps_160 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 3, cps_160 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 4, cps_160 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 5, cps_160 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 6, cps_160 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 7, cps_160 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 8, cps_160 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 9, cps_160 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 10, cps_160 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 11, cps_160 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 12, cps_160 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 13, cps_160 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 14, cps_160 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 15, cps_160 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 16, cps_160 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 17, cps_160 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 18, cps_160 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 19, cps_160 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 20, cps_160 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 21, cps_160 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 22, cps_160 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 23, cps_160 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 24, cps_160 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 25, cps_160 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 26, cps_160 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 27, cps_160 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 28, cps_160 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 29, cps_160 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 30, cps_160 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 31, cps_160 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 32, cps_160 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 33, cps_160 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 34, cps_160 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 35, cps_160 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 36, cps_160 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 37, cps_160 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 38, cps_160 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 39, cps_160 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 40, cps_160 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 41, cps_160 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 42, cps_160 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 43, cps_160 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 44, cps_160 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 45, cps_160 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 46, cps_160 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 47, cps_160 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 48, cps_160 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_160 + 49, cps_160 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_160);

uint32_t cps_161[] = {
0x2113, 0x2114, 0x2115, 0x2116, 0x2117, 0x2118, 0x2119, 0x211a, 0x211b, 0x211c, 0x211d, 0x211e, 0x211f, 0x2120, 0x2121, 0x2122, 0x2123, 0x2124, 0x2125, 0x2126, 0x2127, 0x2128, 0x2129, 0x212a, 0x212b, 0x212c, 0x212d, 0x212e, 0x212f, 0x2130, 0x2131, 0x2132, 0x2133, 0x2134, 0x2135, 0x2136, 0x2137, 0x2138, 0x2139, 0x213a, 0x213b, 0x213c, 0x213d, 0x213e, 0x213f, 0x2140, 0x2141, 0x2142, 0x2143, 0x2144
};

void BM_collation_element_lookup_161(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 0, cps_161 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 1, cps_161 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 2, cps_161 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 3, cps_161 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 4, cps_161 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 5, cps_161 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 6, cps_161 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 7, cps_161 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 8, cps_161 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 9, cps_161 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 10, cps_161 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 11, cps_161 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 12, cps_161 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 13, cps_161 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 14, cps_161 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 15, cps_161 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 16, cps_161 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 17, cps_161 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 18, cps_161 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 19, cps_161 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 20, cps_161 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 21, cps_161 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 22, cps_161 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 23, cps_161 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 24, cps_161 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 25, cps_161 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 26, cps_161 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 27, cps_161 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 28, cps_161 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 29, cps_161 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 30, cps_161 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 31, cps_161 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 32, cps_161 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 33, cps_161 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 34, cps_161 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 35, cps_161 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 36, cps_161 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 37, cps_161 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 38, cps_161 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 39, cps_161 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 40, cps_161 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 41, cps_161 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 42, cps_161 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 43, cps_161 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 44, cps_161 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 45, cps_161 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 46, cps_161 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 47, cps_161 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 48, cps_161 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_161 + 49, cps_161 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_161);

uint32_t cps_162[] = {
0x2145, 0x2146, 0x2147, 0x2148, 0x2149, 0x214a, 0x214b, 0x214c, 0x214d, 0x214e, 0x214f, 0x2150, 0x2151, 0x2152, 0x2153, 0x2154, 0x2155, 0x2156, 0x2157, 0x2158, 0x2159, 0x215a, 0x215b, 0x215c, 0x215d, 0x215e, 0x215f, 0x2160, 0x2161, 0x2162, 0x2163, 0x2164, 0x2165, 0x2166, 0x2167, 0x2168, 0x2169, 0x216a, 0x216b, 0x216c, 0x216d, 0x216e, 0x216f, 0x2170, 0x2171, 0x2172, 0x2173, 0x2174, 0x2175, 0x2176
};

void BM_collation_element_lookup_162(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 0, cps_162 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 1, cps_162 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 2, cps_162 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 3, cps_162 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 4, cps_162 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 5, cps_162 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 6, cps_162 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 7, cps_162 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 8, cps_162 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 9, cps_162 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 10, cps_162 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 11, cps_162 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 12, cps_162 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 13, cps_162 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 14, cps_162 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 15, cps_162 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 16, cps_162 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 17, cps_162 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 18, cps_162 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 19, cps_162 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 20, cps_162 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 21, cps_162 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 22, cps_162 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 23, cps_162 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 24, cps_162 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 25, cps_162 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 26, cps_162 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 27, cps_162 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 28, cps_162 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 29, cps_162 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 30, cps_162 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 31, cps_162 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 32, cps_162 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 33, cps_162 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 34, cps_162 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 35, cps_162 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 36, cps_162 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 37, cps_162 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 38, cps_162 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 39, cps_162 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 40, cps_162 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 41, cps_162 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 42, cps_162 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 43, cps_162 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 44, cps_162 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 45, cps_162 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 46, cps_162 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 47, cps_162 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 48, cps_162 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_162 + 49, cps_162 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_162);

uint32_t cps_163[] = {
0x2177, 0x2178, 0x2179, 0x217a, 0x217b, 0x217c, 0x217d, 0x217e, 0x217f, 0x2180, 0x2181, 0x2182, 0x2183, 0x2184, 0x2185, 0x2186, 0x2187, 0x2188, 0x2189, 0x218a, 0x218b, 0x2190, 0x2191, 0x2192, 0x2193, 0x2194, 0x2195, 0x2196, 0x2197, 0x2198, 0x2199, 0x219a, 0x219b, 0x219c, 0x219d, 0x219e, 0x219f, 0x21a0, 0x21a1, 0x21a2, 0x21a3, 0x21a4, 0x21a5, 0x21a6, 0x21a7, 0x21a8, 0x21a9, 0x21aa, 0x21ab, 0x21ac
};

void BM_collation_element_lookup_163(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 0, cps_163 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 1, cps_163 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 2, cps_163 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 3, cps_163 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 4, cps_163 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 5, cps_163 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 6, cps_163 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 7, cps_163 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 8, cps_163 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 9, cps_163 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 10, cps_163 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 11, cps_163 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 12, cps_163 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 13, cps_163 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 14, cps_163 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 15, cps_163 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 16, cps_163 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 17, cps_163 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 18, cps_163 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 19, cps_163 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 20, cps_163 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 21, cps_163 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 22, cps_163 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 23, cps_163 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 24, cps_163 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 25, cps_163 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 26, cps_163 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 27, cps_163 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 28, cps_163 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 29, cps_163 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 30, cps_163 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 31, cps_163 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 32, cps_163 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 33, cps_163 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 34, cps_163 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 35, cps_163 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 36, cps_163 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 37, cps_163 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 38, cps_163 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 39, cps_163 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 40, cps_163 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 41, cps_163 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 42, cps_163 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 43, cps_163 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 44, cps_163 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 45, cps_163 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 46, cps_163 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 47, cps_163 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 48, cps_163 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_163 + 49, cps_163 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_163);

uint32_t cps_164[] = {
0x21ad, 0x21ae, 0x21af, 0x21b0, 0x21b1, 0x21b2, 0x21b3, 0x21b4, 0x21b5, 0x21b6, 0x21b7, 0x21b8, 0x21b9, 0x21ba, 0x21bb, 0x21bc, 0x21bd, 0x21be, 0x21bf, 0x21c0, 0x21c1, 0x21c2, 0x21c3, 0x21c4, 0x21c5, 0x21c6, 0x21c7, 0x21c8, 0x21c9, 0x21ca, 0x21cb, 0x21cc, 0x21cd, 0x21ce, 0x21cf, 0x21d0, 0x21d1, 0x21d2, 0x21d3, 0x21d4, 0x21d5, 0x21d6, 0x21d7, 0x21d8, 0x21d9, 0x21da, 0x21db, 0x21dc, 0x21dd, 0x21de
};

void BM_collation_element_lookup_164(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 0, cps_164 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 1, cps_164 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 2, cps_164 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 3, cps_164 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 4, cps_164 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 5, cps_164 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 6, cps_164 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 7, cps_164 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 8, cps_164 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 9, cps_164 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 10, cps_164 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 11, cps_164 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 12, cps_164 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 13, cps_164 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 14, cps_164 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 15, cps_164 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 16, cps_164 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 17, cps_164 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 18, cps_164 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 19, cps_164 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 20, cps_164 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 21, cps_164 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 22, cps_164 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 23, cps_164 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 24, cps_164 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 25, cps_164 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 26, cps_164 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 27, cps_164 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 28, cps_164 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 29, cps_164 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 30, cps_164 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 31, cps_164 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 32, cps_164 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 33, cps_164 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 34, cps_164 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 35, cps_164 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 36, cps_164 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 37, cps_164 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 38, cps_164 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 39, cps_164 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 40, cps_164 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 41, cps_164 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 42, cps_164 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 43, cps_164 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 44, cps_164 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 45, cps_164 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 46, cps_164 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 47, cps_164 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 48, cps_164 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_164 + 49, cps_164 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_164);

uint32_t cps_165[] = {
0x21df, 0x21e0, 0x21e1, 0x21e2, 0x21e3, 0x21e4, 0x21e5, 0x21e6, 0x21e7, 0x21e8, 0x21e9, 0x21ea, 0x21eb, 0x21ec, 0x21ed, 0x21ee, 0x21ef, 0x21f0, 0x21f1, 0x21f2, 0x21f3, 0x21f4, 0x21f5, 0x21f6, 0x21f7, 0x21f8, 0x21f9, 0x21fa, 0x21fb, 0x21fc, 0x21fd, 0x21fe, 0x21ff, 0x2200, 0x2201, 0x2202, 0x2203, 0x2204, 0x2205, 0x2206, 0x2207, 0x2208, 0x2209, 0x220a, 0x220b, 0x220c, 0x220d, 0x220e, 0x220f, 0x2210
};

void BM_collation_element_lookup_165(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 0, cps_165 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 1, cps_165 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 2, cps_165 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 3, cps_165 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 4, cps_165 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 5, cps_165 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 6, cps_165 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 7, cps_165 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 8, cps_165 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 9, cps_165 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 10, cps_165 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 11, cps_165 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 12, cps_165 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 13, cps_165 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 14, cps_165 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 15, cps_165 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 16, cps_165 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 17, cps_165 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 18, cps_165 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 19, cps_165 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 20, cps_165 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 21, cps_165 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 22, cps_165 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 23, cps_165 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 24, cps_165 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 25, cps_165 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 26, cps_165 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 27, cps_165 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 28, cps_165 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 29, cps_165 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 30, cps_165 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 31, cps_165 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 32, cps_165 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 33, cps_165 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 34, cps_165 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 35, cps_165 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 36, cps_165 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 37, cps_165 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 38, cps_165 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 39, cps_165 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 40, cps_165 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 41, cps_165 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 42, cps_165 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 43, cps_165 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 44, cps_165 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 45, cps_165 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 46, cps_165 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 47, cps_165 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 48, cps_165 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_165 + 49, cps_165 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_165);

uint32_t cps_166[] = {
0x2211, 0x2212, 0x2213, 0x2214, 0x2215, 0x2216, 0x2217, 0x2218, 0x2219, 0x221a, 0x221b, 0x221c, 0x221d, 0x221e, 0x221f, 0x2220, 0x2221, 0x2222, 0x2223, 0x2224, 0x2225, 0x2226, 0x2227, 0x2228, 0x2229, 0x222a, 0x222b, 0x222c, 0x222d, 0x222e, 0x222f, 0x2230, 0x2231, 0x2232, 0x2233, 0x2234, 0x2235, 0x2236, 0x2237, 0x2238, 0x2239, 0x223a, 0x223b, 0x223c, 0x223d, 0x223e, 0x223f, 0x2240, 0x2241, 0x2242
};

void BM_collation_element_lookup_166(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 0, cps_166 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 1, cps_166 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 2, cps_166 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 3, cps_166 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 4, cps_166 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 5, cps_166 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 6, cps_166 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 7, cps_166 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 8, cps_166 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 9, cps_166 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 10, cps_166 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 11, cps_166 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 12, cps_166 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 13, cps_166 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 14, cps_166 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 15, cps_166 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 16, cps_166 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 17, cps_166 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 18, cps_166 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 19, cps_166 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 20, cps_166 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 21, cps_166 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 22, cps_166 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 23, cps_166 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 24, cps_166 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 25, cps_166 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 26, cps_166 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 27, cps_166 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 28, cps_166 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 29, cps_166 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 30, cps_166 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 31, cps_166 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 32, cps_166 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 33, cps_166 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 34, cps_166 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 35, cps_166 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 36, cps_166 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 37, cps_166 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 38, cps_166 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 39, cps_166 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 40, cps_166 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 41, cps_166 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 42, cps_166 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 43, cps_166 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 44, cps_166 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 45, cps_166 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 46, cps_166 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 47, cps_166 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 48, cps_166 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_166 + 49, cps_166 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_166);

uint32_t cps_167[] = {
0x2243, 0x2244, 0x2245, 0x2246, 0x2247, 0x2248, 0x2249, 0x224a, 0x224b, 0x224c, 0x224d, 0x224e, 0x224f, 0x2250, 0x2251, 0x2252, 0x2253, 0x2254, 0x2255, 0x2256, 0x2257, 0x2258, 0x2259, 0x225a, 0x225b, 0x225c, 0x225d, 0x225e, 0x225f, 0x2260, 0x2261, 0x2262, 0x2263, 0x2264, 0x2265, 0x2266, 0x2267, 0x2268, 0x2269, 0x226a, 0x226b, 0x226c, 0x226d, 0x226e, 0x226f, 0x2270, 0x2271, 0x2272, 0x2273, 0x2274
};

void BM_collation_element_lookup_167(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 0, cps_167 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 1, cps_167 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 2, cps_167 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 3, cps_167 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 4, cps_167 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 5, cps_167 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 6, cps_167 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 7, cps_167 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 8, cps_167 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 9, cps_167 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 10, cps_167 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 11, cps_167 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 12, cps_167 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 13, cps_167 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 14, cps_167 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 15, cps_167 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 16, cps_167 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 17, cps_167 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 18, cps_167 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 19, cps_167 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 20, cps_167 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 21, cps_167 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 22, cps_167 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 23, cps_167 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 24, cps_167 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 25, cps_167 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 26, cps_167 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 27, cps_167 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 28, cps_167 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 29, cps_167 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 30, cps_167 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 31, cps_167 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 32, cps_167 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 33, cps_167 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 34, cps_167 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 35, cps_167 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 36, cps_167 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 37, cps_167 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 38, cps_167 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 39, cps_167 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 40, cps_167 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 41, cps_167 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 42, cps_167 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 43, cps_167 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 44, cps_167 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 45, cps_167 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 46, cps_167 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 47, cps_167 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 48, cps_167 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_167 + 49, cps_167 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_167);

uint32_t cps_168[] = {
0x2275, 0x2276, 0x2277, 0x2278, 0x2279, 0x227a, 0x227b, 0x227c, 0x227d, 0x227e, 0x227f, 0x2280, 0x2281, 0x2282, 0x2283, 0x2284, 0x2285, 0x2286, 0x2287, 0x2288, 0x2289, 0x228a, 0x228b, 0x228c, 0x228d, 0x228e, 0x228f, 0x2290, 0x2291, 0x2292, 0x2293, 0x2294, 0x2295, 0x2296, 0x2297, 0x2298, 0x2299, 0x229a, 0x229b, 0x229c, 0x229d, 0x229e, 0x229f, 0x22a0, 0x22a1, 0x22a2, 0x22a3, 0x22a4, 0x22a5, 0x22a6
};

void BM_collation_element_lookup_168(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 0, cps_168 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 1, cps_168 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 2, cps_168 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 3, cps_168 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 4, cps_168 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 5, cps_168 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 6, cps_168 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 7, cps_168 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 8, cps_168 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 9, cps_168 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 10, cps_168 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 11, cps_168 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 12, cps_168 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 13, cps_168 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 14, cps_168 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 15, cps_168 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 16, cps_168 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 17, cps_168 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 18, cps_168 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 19, cps_168 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 20, cps_168 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 21, cps_168 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 22, cps_168 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 23, cps_168 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 24, cps_168 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 25, cps_168 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 26, cps_168 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 27, cps_168 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 28, cps_168 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 29, cps_168 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 30, cps_168 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 31, cps_168 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 32, cps_168 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 33, cps_168 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 34, cps_168 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 35, cps_168 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 36, cps_168 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 37, cps_168 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 38, cps_168 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 39, cps_168 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 40, cps_168 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 41, cps_168 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 42, cps_168 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 43, cps_168 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 44, cps_168 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 45, cps_168 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 46, cps_168 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 47, cps_168 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 48, cps_168 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_168 + 49, cps_168 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_168);

uint32_t cps_169[] = {
0x22a7, 0x22a8, 0x22a9, 0x22aa, 0x22ab, 0x22ac, 0x22ad, 0x22ae, 0x22af, 0x22b0, 0x22b1, 0x22b2, 0x22b3, 0x22b4, 0x22b5, 0x22b6, 0x22b7, 0x22b8, 0x22b9, 0x22ba, 0x22bb, 0x22bc, 0x22bd, 0x22be, 0x22bf, 0x22c0, 0x22c1, 0x22c2, 0x22c3, 0x22c4, 0x22c5, 0x22c6, 0x22c7, 0x22c8, 0x22c9, 0x22ca, 0x22cb, 0x22cc, 0x22cd, 0x22ce, 0x22cf, 0x22d0, 0x22d1, 0x22d2, 0x22d3, 0x22d4, 0x22d5, 0x22d6, 0x22d7, 0x22d8
};

void BM_collation_element_lookup_169(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 0, cps_169 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 1, cps_169 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 2, cps_169 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 3, cps_169 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 4, cps_169 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 5, cps_169 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 6, cps_169 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 7, cps_169 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 8, cps_169 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 9, cps_169 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 10, cps_169 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 11, cps_169 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 12, cps_169 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 13, cps_169 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 14, cps_169 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 15, cps_169 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 16, cps_169 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 17, cps_169 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 18, cps_169 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 19, cps_169 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 20, cps_169 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 21, cps_169 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 22, cps_169 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 23, cps_169 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 24, cps_169 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 25, cps_169 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 26, cps_169 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 27, cps_169 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 28, cps_169 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 29, cps_169 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 30, cps_169 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 31, cps_169 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 32, cps_169 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 33, cps_169 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 34, cps_169 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 35, cps_169 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 36, cps_169 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 37, cps_169 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 38, cps_169 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 39, cps_169 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 40, cps_169 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 41, cps_169 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 42, cps_169 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 43, cps_169 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 44, cps_169 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 45, cps_169 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 46, cps_169 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 47, cps_169 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 48, cps_169 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_169 + 49, cps_169 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_169);

uint32_t cps_170[] = {
0x22d9, 0x22da, 0x22db, 0x22dc, 0x22dd, 0x22de, 0x22df, 0x22e0, 0x22e1, 0x22e2, 0x22e3, 0x22e4, 0x22e5, 0x22e6, 0x22e7, 0x22e8, 0x22e9, 0x22ea, 0x22eb, 0x22ec, 0x22ed, 0x22ee, 0x22ef, 0x22f0, 0x22f1, 0x22f2, 0x22f3, 0x22f4, 0x22f5, 0x22f6, 0x22f7, 0x22f8, 0x22f9, 0x22fa, 0x22fb, 0x22fc, 0x22fd, 0x22fe, 0x22ff, 0x2300, 0x2301, 0x2302, 0x2303, 0x2304, 0x2305, 0x2306, 0x2307, 0x2308, 0x2309, 0x230a
};

void BM_collation_element_lookup_170(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 0, cps_170 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 1, cps_170 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 2, cps_170 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 3, cps_170 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 4, cps_170 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 5, cps_170 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 6, cps_170 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 7, cps_170 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 8, cps_170 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 9, cps_170 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 10, cps_170 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 11, cps_170 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 12, cps_170 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 13, cps_170 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 14, cps_170 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 15, cps_170 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 16, cps_170 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 17, cps_170 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 18, cps_170 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 19, cps_170 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 20, cps_170 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 21, cps_170 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 22, cps_170 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 23, cps_170 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 24, cps_170 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 25, cps_170 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 26, cps_170 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 27, cps_170 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 28, cps_170 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 29, cps_170 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 30, cps_170 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 31, cps_170 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 32, cps_170 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 33, cps_170 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 34, cps_170 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 35, cps_170 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 36, cps_170 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 37, cps_170 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 38, cps_170 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 39, cps_170 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 40, cps_170 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 41, cps_170 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 42, cps_170 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 43, cps_170 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 44, cps_170 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 45, cps_170 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 46, cps_170 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 47, cps_170 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 48, cps_170 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_170 + 49, cps_170 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_170);

uint32_t cps_171[] = {
0x230b, 0x230c, 0x230d, 0x230e, 0x230f, 0x2310, 0x2311, 0x2312, 0x2313, 0x2314, 0x2315, 0x2316, 0x2317, 0x2318, 0x2319, 0x231a, 0x231b, 0x231c, 0x231d, 0x231e, 0x231f, 0x2320, 0x2321, 0x2322, 0x2323, 0x2324, 0x2325, 0x2326, 0x2327, 0x2328, 0x2329, 0x232a, 0x232b, 0x232c, 0x232d, 0x232e, 0x232f, 0x2330, 0x2331, 0x2332, 0x2333, 0x2334, 0x2335, 0x2336, 0x2337, 0x2338, 0x2339, 0x233a, 0x233b, 0x233c
};

void BM_collation_element_lookup_171(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 0, cps_171 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 1, cps_171 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 2, cps_171 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 3, cps_171 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 4, cps_171 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 5, cps_171 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 6, cps_171 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 7, cps_171 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 8, cps_171 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 9, cps_171 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 10, cps_171 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 11, cps_171 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 12, cps_171 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 13, cps_171 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 14, cps_171 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 15, cps_171 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 16, cps_171 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 17, cps_171 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 18, cps_171 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 19, cps_171 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 20, cps_171 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 21, cps_171 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 22, cps_171 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 23, cps_171 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 24, cps_171 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 25, cps_171 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 26, cps_171 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 27, cps_171 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 28, cps_171 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 29, cps_171 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 30, cps_171 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 31, cps_171 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 32, cps_171 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 33, cps_171 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 34, cps_171 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 35, cps_171 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 36, cps_171 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 37, cps_171 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 38, cps_171 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 39, cps_171 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 40, cps_171 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 41, cps_171 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 42, cps_171 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 43, cps_171 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 44, cps_171 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 45, cps_171 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 46, cps_171 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 47, cps_171 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 48, cps_171 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_171 + 49, cps_171 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_171);

uint32_t cps_172[] = {
0x233d, 0x233e, 0x233f, 0x2340, 0x2341, 0x2342, 0x2343, 0x2344, 0x2345, 0x2346, 0x2347, 0x2348, 0x2349, 0x234a, 0x234b, 0x234c, 0x234d, 0x234e, 0x234f, 0x2350, 0x2351, 0x2352, 0x2353, 0x2354, 0x2355, 0x2356, 0x2357, 0x2358, 0x2359, 0x235a, 0x235b, 0x235c, 0x235d, 0x235e, 0x235f, 0x2360, 0x2361, 0x2362, 0x2363, 0x2364, 0x2365, 0x2366, 0x2367, 0x2368, 0x2369, 0x236a, 0x236b, 0x236c, 0x236d, 0x236e
};

void BM_collation_element_lookup_172(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 0, cps_172 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 1, cps_172 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 2, cps_172 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 3, cps_172 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 4, cps_172 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 5, cps_172 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 6, cps_172 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 7, cps_172 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 8, cps_172 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 9, cps_172 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 10, cps_172 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 11, cps_172 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 12, cps_172 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 13, cps_172 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 14, cps_172 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 15, cps_172 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 16, cps_172 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 17, cps_172 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 18, cps_172 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 19, cps_172 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 20, cps_172 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 21, cps_172 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 22, cps_172 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 23, cps_172 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 24, cps_172 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 25, cps_172 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 26, cps_172 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 27, cps_172 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 28, cps_172 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 29, cps_172 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 30, cps_172 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 31, cps_172 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 32, cps_172 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 33, cps_172 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 34, cps_172 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 35, cps_172 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 36, cps_172 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 37, cps_172 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 38, cps_172 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 39, cps_172 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 40, cps_172 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 41, cps_172 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 42, cps_172 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 43, cps_172 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 44, cps_172 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 45, cps_172 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 46, cps_172 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 47, cps_172 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 48, cps_172 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_172 + 49, cps_172 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_172);

uint32_t cps_173[] = {
0x236f, 0x2370, 0x2371, 0x2372, 0x2373, 0x2374, 0x2375, 0x2376, 0x2377, 0x2378, 0x2379, 0x237a, 0x237b, 0x237c, 0x237d, 0x237e, 0x237f, 0x2380, 0x2381, 0x2382, 0x2383, 0x2384, 0x2385, 0x2386, 0x2387, 0x2388, 0x2389, 0x238a, 0x238b, 0x238c, 0x238d, 0x238e, 0x238f, 0x2390, 0x2391, 0x2392, 0x2393, 0x2394, 0x2395, 0x2396, 0x2397, 0x2398, 0x2399, 0x239a, 0x239b, 0x239c, 0x239d, 0x239e, 0x239f, 0x23a0
};

void BM_collation_element_lookup_173(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 0, cps_173 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 1, cps_173 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 2, cps_173 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 3, cps_173 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 4, cps_173 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 5, cps_173 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 6, cps_173 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 7, cps_173 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 8, cps_173 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 9, cps_173 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 10, cps_173 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 11, cps_173 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 12, cps_173 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 13, cps_173 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 14, cps_173 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 15, cps_173 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 16, cps_173 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 17, cps_173 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 18, cps_173 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 19, cps_173 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 20, cps_173 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 21, cps_173 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 22, cps_173 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 23, cps_173 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 24, cps_173 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 25, cps_173 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 26, cps_173 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 27, cps_173 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 28, cps_173 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 29, cps_173 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 30, cps_173 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 31, cps_173 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 32, cps_173 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 33, cps_173 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 34, cps_173 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 35, cps_173 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 36, cps_173 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 37, cps_173 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 38, cps_173 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 39, cps_173 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 40, cps_173 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 41, cps_173 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 42, cps_173 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 43, cps_173 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 44, cps_173 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 45, cps_173 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 46, cps_173 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 47, cps_173 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 48, cps_173 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_173 + 49, cps_173 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_173);

uint32_t cps_174[] = {
0x23a1, 0x23a2, 0x23a3, 0x23a4, 0x23a5, 0x23a6, 0x23a7, 0x23a8, 0x23a9, 0x23aa, 0x23ab, 0x23ac, 0x23ad, 0x23ae, 0x23af, 0x23b0, 0x23b1, 0x23b2, 0x23b3, 0x23b4, 0x23b5, 0x23b6, 0x23b7, 0x23b8, 0x23b9, 0x23ba, 0x23bb, 0x23bc, 0x23bd, 0x23be, 0x23bf, 0x23c0, 0x23c1, 0x23c2, 0x23c3, 0x23c4, 0x23c5, 0x23c6, 0x23c7, 0x23c8, 0x23c9, 0x23ca, 0x23cb, 0x23cc, 0x23cd, 0x23ce, 0x23cf, 0x23d0, 0x23d1, 0x23d2
};

void BM_collation_element_lookup_174(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 0, cps_174 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 1, cps_174 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 2, cps_174 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 3, cps_174 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 4, cps_174 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 5, cps_174 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 6, cps_174 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 7, cps_174 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 8, cps_174 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 9, cps_174 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 10, cps_174 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 11, cps_174 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 12, cps_174 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 13, cps_174 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 14, cps_174 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 15, cps_174 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 16, cps_174 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 17, cps_174 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 18, cps_174 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 19, cps_174 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 20, cps_174 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 21, cps_174 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 22, cps_174 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 23, cps_174 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 24, cps_174 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 25, cps_174 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 26, cps_174 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 27, cps_174 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 28, cps_174 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 29, cps_174 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 30, cps_174 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 31, cps_174 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 32, cps_174 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 33, cps_174 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 34, cps_174 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 35, cps_174 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 36, cps_174 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 37, cps_174 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 38, cps_174 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 39, cps_174 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 40, cps_174 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 41, cps_174 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 42, cps_174 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 43, cps_174 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 44, cps_174 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 45, cps_174 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 46, cps_174 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 47, cps_174 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 48, cps_174 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_174 + 49, cps_174 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_174);

uint32_t cps_175[] = {
0x23d3, 0x23d4, 0x23d5, 0x23d6, 0x23d7, 0x23d8, 0x23d9, 0x23da, 0x23db, 0x23dc, 0x23dd, 0x23de, 0x23df, 0x23e0, 0x23e1, 0x23e2, 0x23e3, 0x23e4, 0x23e5, 0x23e6, 0x23e7, 0x23e8, 0x23e9, 0x23ea, 0x23eb, 0x23ec, 0x23ed, 0x23ee, 0x23ef, 0x23f0, 0x23f1, 0x23f2, 0x23f3, 0x23f4, 0x23f5, 0x23f6, 0x23f7, 0x23f8, 0x23f9, 0x23fa, 0x23fb, 0x23fc, 0x23fd, 0x23fe, 0x23ff, 0x2400, 0x2401, 0x2402, 0x2403, 0x2404
};

void BM_collation_element_lookup_175(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 0, cps_175 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 1, cps_175 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 2, cps_175 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 3, cps_175 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 4, cps_175 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 5, cps_175 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 6, cps_175 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 7, cps_175 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 8, cps_175 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 9, cps_175 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 10, cps_175 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 11, cps_175 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 12, cps_175 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 13, cps_175 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 14, cps_175 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 15, cps_175 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 16, cps_175 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 17, cps_175 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 18, cps_175 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 19, cps_175 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 20, cps_175 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 21, cps_175 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 22, cps_175 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 23, cps_175 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 24, cps_175 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 25, cps_175 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 26, cps_175 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 27, cps_175 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 28, cps_175 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 29, cps_175 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 30, cps_175 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 31, cps_175 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 32, cps_175 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 33, cps_175 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 34, cps_175 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 35, cps_175 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 36, cps_175 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 37, cps_175 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 38, cps_175 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 39, cps_175 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 40, cps_175 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 41, cps_175 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 42, cps_175 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 43, cps_175 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 44, cps_175 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 45, cps_175 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 46, cps_175 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 47, cps_175 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 48, cps_175 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_175 + 49, cps_175 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_175);

uint32_t cps_176[] = {
0x2405, 0x2406, 0x2407, 0x2408, 0x2409, 0x240a, 0x240b, 0x240c, 0x240d, 0x240e, 0x240f, 0x2410, 0x2411, 0x2412, 0x2413, 0x2414, 0x2415, 0x2416, 0x2417, 0x2418, 0x2419, 0x241a, 0x241b, 0x241c, 0x241d, 0x241e, 0x241f, 0x2420, 0x2421, 0x2422, 0x2423, 0x2424, 0x2425, 0x2426, 0x2440, 0x2441, 0x2442, 0x2443, 0x2444, 0x2445, 0x2446, 0x2447, 0x2448, 0x2449, 0x244a, 0x2460, 0x2461, 0x2462, 0x2463, 0x2464
};

void BM_collation_element_lookup_176(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 0, cps_176 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 1, cps_176 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 2, cps_176 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 3, cps_176 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 4, cps_176 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 5, cps_176 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 6, cps_176 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 7, cps_176 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 8, cps_176 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 9, cps_176 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 10, cps_176 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 11, cps_176 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 12, cps_176 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 13, cps_176 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 14, cps_176 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 15, cps_176 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 16, cps_176 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 17, cps_176 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 18, cps_176 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 19, cps_176 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 20, cps_176 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 21, cps_176 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 22, cps_176 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 23, cps_176 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 24, cps_176 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 25, cps_176 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 26, cps_176 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 27, cps_176 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 28, cps_176 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 29, cps_176 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 30, cps_176 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 31, cps_176 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 32, cps_176 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 33, cps_176 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 34, cps_176 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 35, cps_176 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 36, cps_176 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 37, cps_176 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 38, cps_176 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 39, cps_176 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 40, cps_176 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 41, cps_176 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 42, cps_176 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 43, cps_176 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 44, cps_176 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 45, cps_176 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 46, cps_176 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 47, cps_176 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 48, cps_176 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_176 + 49, cps_176 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_176);

uint32_t cps_177[] = {
0x2465, 0x2466, 0x2467, 0x2468, 0x2469, 0x246a, 0x246b, 0x246c, 0x246d, 0x246e, 0x246f, 0x2470, 0x2471, 0x2472, 0x2473, 0x2474, 0x2475, 0x2476, 0x2477, 0x2478, 0x2479, 0x247a, 0x247b, 0x247c, 0x247d, 0x247e, 0x247f, 0x2480, 0x2481, 0x2482, 0x2483, 0x2484, 0x2485, 0x2486, 0x2487, 0x2488, 0x2489, 0x248a, 0x248b, 0x248c, 0x248d, 0x248e, 0x248f, 0x2490, 0x2491, 0x2492, 0x2493, 0x2494, 0x2495, 0x2496
};

void BM_collation_element_lookup_177(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 0, cps_177 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 1, cps_177 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 2, cps_177 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 3, cps_177 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 4, cps_177 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 5, cps_177 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 6, cps_177 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 7, cps_177 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 8, cps_177 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 9, cps_177 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 10, cps_177 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 11, cps_177 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 12, cps_177 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 13, cps_177 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 14, cps_177 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 15, cps_177 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 16, cps_177 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 17, cps_177 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 18, cps_177 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 19, cps_177 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 20, cps_177 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 21, cps_177 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 22, cps_177 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 23, cps_177 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 24, cps_177 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 25, cps_177 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 26, cps_177 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 27, cps_177 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 28, cps_177 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 29, cps_177 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 30, cps_177 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 31, cps_177 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 32, cps_177 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 33, cps_177 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 34, cps_177 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 35, cps_177 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 36, cps_177 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 37, cps_177 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 38, cps_177 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 39, cps_177 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 40, cps_177 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 41, cps_177 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 42, cps_177 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 43, cps_177 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 44, cps_177 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 45, cps_177 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 46, cps_177 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 47, cps_177 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 48, cps_177 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_177 + 49, cps_177 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_177);

uint32_t cps_178[] = {
0x2497, 0x2498, 0x2499, 0x249a, 0x249b, 0x249c, 0x249d, 0x249e, 0x249f, 0x24a0, 0x24a1, 0x24a2, 0x24a3, 0x24a4, 0x24a5, 0x24a6, 0x24a7, 0x24a8, 0x24a9, 0x24aa, 0x24ab, 0x24ac, 0x24ad, 0x24ae, 0x24af, 0x24b0, 0x24b1, 0x24b2, 0x24b3, 0x24b4, 0x24b5, 0x24b6, 0x24b7, 0x24b8, 0x24b9, 0x24ba, 0x24bb, 0x24bc, 0x24bd, 0x24be, 0x24bf, 0x24c0, 0x24c1, 0x24c2, 0x24c3, 0x24c4, 0x24c5, 0x24c6, 0x24c7, 0x24c8
};

void BM_collation_element_lookup_178(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 0, cps_178 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 1, cps_178 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 2, cps_178 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 3, cps_178 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 4, cps_178 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 5, cps_178 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 6, cps_178 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 7, cps_178 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 8, cps_178 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 9, cps_178 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 10, cps_178 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 11, cps_178 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 12, cps_178 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 13, cps_178 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 14, cps_178 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 15, cps_178 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 16, cps_178 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 17, cps_178 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 18, cps_178 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 19, cps_178 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 20, cps_178 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 21, cps_178 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 22, cps_178 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 23, cps_178 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 24, cps_178 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 25, cps_178 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 26, cps_178 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 27, cps_178 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 28, cps_178 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 29, cps_178 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 30, cps_178 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 31, cps_178 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 32, cps_178 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 33, cps_178 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 34, cps_178 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 35, cps_178 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 36, cps_178 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 37, cps_178 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 38, cps_178 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 39, cps_178 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 40, cps_178 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 41, cps_178 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 42, cps_178 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 43, cps_178 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 44, cps_178 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 45, cps_178 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 46, cps_178 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 47, cps_178 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 48, cps_178 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_178 + 49, cps_178 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_178);

uint32_t cps_179[] = {
0x24c9, 0x24ca, 0x24cb, 0x24cc, 0x24cd, 0x24ce, 0x24cf, 0x24d0, 0x24d1, 0x24d2, 0x24d3, 0x24d4, 0x24d5, 0x24d6, 0x24d7, 0x24d8, 0x24d9, 0x24da, 0x24db, 0x24dc, 0x24dd, 0x24de, 0x24df, 0x24e0, 0x24e1, 0x24e2, 0x24e3, 0x24e4, 0x24e5, 0x24e6, 0x24e7, 0x24e8, 0x24e9, 0x24ea, 0x24eb, 0x24ec, 0x24ed, 0x24ee, 0x24ef, 0x24f0, 0x24f1, 0x24f2, 0x24f3, 0x24f4, 0x24f5, 0x24f6, 0x24f7, 0x24f8, 0x24f9, 0x24fa
};

void BM_collation_element_lookup_179(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 0, cps_179 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 1, cps_179 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 2, cps_179 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 3, cps_179 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 4, cps_179 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 5, cps_179 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 6, cps_179 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 7, cps_179 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 8, cps_179 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 9, cps_179 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 10, cps_179 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 11, cps_179 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 12, cps_179 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 13, cps_179 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 14, cps_179 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 15, cps_179 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 16, cps_179 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 17, cps_179 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 18, cps_179 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 19, cps_179 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 20, cps_179 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 21, cps_179 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 22, cps_179 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 23, cps_179 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 24, cps_179 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 25, cps_179 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 26, cps_179 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 27, cps_179 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 28, cps_179 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 29, cps_179 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 30, cps_179 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 31, cps_179 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 32, cps_179 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 33, cps_179 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 34, cps_179 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 35, cps_179 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 36, cps_179 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 37, cps_179 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 38, cps_179 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 39, cps_179 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 40, cps_179 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 41, cps_179 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 42, cps_179 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 43, cps_179 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 44, cps_179 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 45, cps_179 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 46, cps_179 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 47, cps_179 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 48, cps_179 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_179 + 49, cps_179 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_179);

uint32_t cps_180[] = {
0x24fb, 0x24fc, 0x24fd, 0x24fe, 0x24ff, 0x2500, 0x2501, 0x2502, 0x2503, 0x2504, 0x2505, 0x2506, 0x2507, 0x2508, 0x2509, 0x250a, 0x250b, 0x250c, 0x250d, 0x250e, 0x250f, 0x2510, 0x2511, 0x2512, 0x2513, 0x2514, 0x2515, 0x2516, 0x2517, 0x2518, 0x2519, 0x251a, 0x251b, 0x251c, 0x251d, 0x251e, 0x251f, 0x2520, 0x2521, 0x2522, 0x2523, 0x2524, 0x2525, 0x2526, 0x2527, 0x2528, 0x2529, 0x252a, 0x252b, 0x252c
};

void BM_collation_element_lookup_180(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 0, cps_180 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 1, cps_180 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 2, cps_180 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 3, cps_180 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 4, cps_180 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 5, cps_180 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 6, cps_180 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 7, cps_180 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 8, cps_180 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 9, cps_180 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 10, cps_180 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 11, cps_180 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 12, cps_180 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 13, cps_180 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 14, cps_180 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 15, cps_180 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 16, cps_180 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 17, cps_180 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 18, cps_180 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 19, cps_180 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 20, cps_180 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 21, cps_180 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 22, cps_180 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 23, cps_180 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 24, cps_180 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 25, cps_180 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 26, cps_180 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 27, cps_180 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 28, cps_180 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 29, cps_180 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 30, cps_180 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 31, cps_180 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 32, cps_180 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 33, cps_180 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 34, cps_180 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 35, cps_180 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 36, cps_180 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 37, cps_180 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 38, cps_180 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 39, cps_180 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 40, cps_180 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 41, cps_180 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 42, cps_180 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 43, cps_180 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 44, cps_180 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 45, cps_180 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 46, cps_180 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 47, cps_180 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 48, cps_180 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_180 + 49, cps_180 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_180);

uint32_t cps_181[] = {
0x252d, 0x252e, 0x252f, 0x2530, 0x2531, 0x2532, 0x2533, 0x2534, 0x2535, 0x2536, 0x2537, 0x2538, 0x2539, 0x253a, 0x253b, 0x253c, 0x253d, 0x253e, 0x253f, 0x2540, 0x2541, 0x2542, 0x2543, 0x2544, 0x2545, 0x2546, 0x2547, 0x2548, 0x2549, 0x254a, 0x254b, 0x254c, 0x254d, 0x254e, 0x254f, 0x2550, 0x2551, 0x2552, 0x2553, 0x2554, 0x2555, 0x2556, 0x2557, 0x2558, 0x2559, 0x255a, 0x255b, 0x255c, 0x255d, 0x255e
};

void BM_collation_element_lookup_181(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 0, cps_181 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 1, cps_181 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 2, cps_181 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 3, cps_181 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 4, cps_181 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 5, cps_181 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 6, cps_181 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 7, cps_181 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 8, cps_181 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 9, cps_181 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 10, cps_181 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 11, cps_181 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 12, cps_181 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 13, cps_181 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 14, cps_181 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 15, cps_181 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 16, cps_181 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 17, cps_181 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 18, cps_181 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 19, cps_181 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 20, cps_181 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 21, cps_181 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 22, cps_181 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 23, cps_181 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 24, cps_181 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 25, cps_181 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 26, cps_181 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 27, cps_181 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 28, cps_181 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 29, cps_181 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 30, cps_181 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 31, cps_181 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 32, cps_181 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 33, cps_181 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 34, cps_181 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 35, cps_181 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 36, cps_181 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 37, cps_181 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 38, cps_181 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 39, cps_181 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 40, cps_181 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 41, cps_181 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 42, cps_181 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 43, cps_181 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 44, cps_181 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 45, cps_181 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 46, cps_181 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 47, cps_181 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 48, cps_181 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_181 + 49, cps_181 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_181);

uint32_t cps_182[] = {
0x255f, 0x2560, 0x2561, 0x2562, 0x2563, 0x2564, 0x2565, 0x2566, 0x2567, 0x2568, 0x2569, 0x256a, 0x256b, 0x256c, 0x256d, 0x256e, 0x256f, 0x2570, 0x2571, 0x2572, 0x2573, 0x2574, 0x2575, 0x2576, 0x2577, 0x2578, 0x2579, 0x257a, 0x257b, 0x257c, 0x257d, 0x257e, 0x257f, 0x2580, 0x2581, 0x2582, 0x2583, 0x2584, 0x2585, 0x2586, 0x2587, 0x2588, 0x2589, 0x258a, 0x258b, 0x258c, 0x258d, 0x258e, 0x258f, 0x2590
};

void BM_collation_element_lookup_182(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 0, cps_182 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 1, cps_182 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 2, cps_182 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 3, cps_182 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 4, cps_182 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 5, cps_182 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 6, cps_182 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 7, cps_182 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 8, cps_182 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 9, cps_182 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 10, cps_182 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 11, cps_182 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 12, cps_182 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 13, cps_182 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 14, cps_182 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 15, cps_182 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 16, cps_182 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 17, cps_182 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 18, cps_182 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 19, cps_182 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 20, cps_182 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 21, cps_182 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 22, cps_182 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 23, cps_182 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 24, cps_182 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 25, cps_182 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 26, cps_182 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 27, cps_182 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 28, cps_182 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 29, cps_182 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 30, cps_182 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 31, cps_182 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 32, cps_182 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 33, cps_182 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 34, cps_182 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 35, cps_182 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 36, cps_182 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 37, cps_182 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 38, cps_182 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 39, cps_182 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 40, cps_182 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 41, cps_182 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 42, cps_182 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 43, cps_182 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 44, cps_182 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 45, cps_182 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 46, cps_182 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 47, cps_182 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 48, cps_182 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_182 + 49, cps_182 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_182);

uint32_t cps_183[] = {
0x2591, 0x2592, 0x2593, 0x2594, 0x2595, 0x2596, 0x2597, 0x2598, 0x2599, 0x259a, 0x259b, 0x259c, 0x259d, 0x259e, 0x259f, 0x25a0, 0x25a1, 0x25a2, 0x25a3, 0x25a4, 0x25a5, 0x25a6, 0x25a7, 0x25a8, 0x25a9, 0x25aa, 0x25ab, 0x25ac, 0x25ad, 0x25ae, 0x25af, 0x25b0, 0x25b1, 0x25b2, 0x25b3, 0x25b4, 0x25b5, 0x25b6, 0x25b7, 0x25b8, 0x25b9, 0x25ba, 0x25bb, 0x25bc, 0x25bd, 0x25be, 0x25bf, 0x25c0, 0x25c1, 0x25c2
};

void BM_collation_element_lookup_183(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 0, cps_183 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 1, cps_183 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 2, cps_183 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 3, cps_183 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 4, cps_183 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 5, cps_183 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 6, cps_183 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 7, cps_183 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 8, cps_183 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 9, cps_183 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 10, cps_183 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 11, cps_183 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 12, cps_183 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 13, cps_183 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 14, cps_183 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 15, cps_183 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 16, cps_183 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 17, cps_183 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 18, cps_183 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 19, cps_183 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 20, cps_183 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 21, cps_183 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 22, cps_183 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 23, cps_183 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 24, cps_183 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 25, cps_183 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 26, cps_183 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 27, cps_183 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 28, cps_183 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 29, cps_183 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 30, cps_183 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 31, cps_183 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 32, cps_183 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 33, cps_183 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 34, cps_183 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 35, cps_183 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 36, cps_183 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 37, cps_183 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 38, cps_183 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 39, cps_183 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 40, cps_183 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 41, cps_183 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 42, cps_183 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 43, cps_183 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 44, cps_183 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 45, cps_183 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 46, cps_183 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 47, cps_183 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 48, cps_183 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_183 + 49, cps_183 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_183);

uint32_t cps_184[] = {
0x25c3, 0x25c4, 0x25c5, 0x25c6, 0x25c7, 0x25c8, 0x25c9, 0x25ca, 0x25cb, 0x25cc, 0x25cd, 0x25ce, 0x25cf, 0x25d0, 0x25d1, 0x25d2, 0x25d3, 0x25d4, 0x25d5, 0x25d6, 0x25d7, 0x25d8, 0x25d9, 0x25da, 0x25db, 0x25dc, 0x25dd, 0x25de, 0x25df, 0x25e0, 0x25e1, 0x25e2, 0x25e3, 0x25e4, 0x25e5, 0x25e6, 0x25e7, 0x25e8, 0x25e9, 0x25ea, 0x25eb, 0x25ec, 0x25ed, 0x25ee, 0x25ef, 0x25f0, 0x25f1, 0x25f2, 0x25f3, 0x25f4
};

void BM_collation_element_lookup_184(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 0, cps_184 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 1, cps_184 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 2, cps_184 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 3, cps_184 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 4, cps_184 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 5, cps_184 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 6, cps_184 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 7, cps_184 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 8, cps_184 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 9, cps_184 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 10, cps_184 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 11, cps_184 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 12, cps_184 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 13, cps_184 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 14, cps_184 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 15, cps_184 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 16, cps_184 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 17, cps_184 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 18, cps_184 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 19, cps_184 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 20, cps_184 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 21, cps_184 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 22, cps_184 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 23, cps_184 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 24, cps_184 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 25, cps_184 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 26, cps_184 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 27, cps_184 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 28, cps_184 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 29, cps_184 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 30, cps_184 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 31, cps_184 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 32, cps_184 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 33, cps_184 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 34, cps_184 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 35, cps_184 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 36, cps_184 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 37, cps_184 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 38, cps_184 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 39, cps_184 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 40, cps_184 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 41, cps_184 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 42, cps_184 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 43, cps_184 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 44, cps_184 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 45, cps_184 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 46, cps_184 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 47, cps_184 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 48, cps_184 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_184 + 49, cps_184 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_184);

uint32_t cps_185[] = {
0x25f5, 0x25f6, 0x25f7, 0x25f8, 0x25f9, 0x25fa, 0x25fb, 0x25fc, 0x25fd, 0x25fe, 0x25ff, 0x2600, 0x2601, 0x2602, 0x2603, 0x2604, 0x2605, 0x2606, 0x2607, 0x2608, 0x2609, 0x260a, 0x260b, 0x260c, 0x260d, 0x260e, 0x260f, 0x2610, 0x2611, 0x2612, 0x2613, 0x2614, 0x2615, 0x2616, 0x2617, 0x2618, 0x2619, 0x261a, 0x261b, 0x261c, 0x261d, 0x261e, 0x261f, 0x2620, 0x2621, 0x2622, 0x2623, 0x2624, 0x2625, 0x2626
};

void BM_collation_element_lookup_185(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 0, cps_185 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 1, cps_185 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 2, cps_185 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 3, cps_185 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 4, cps_185 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 5, cps_185 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 6, cps_185 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 7, cps_185 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 8, cps_185 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 9, cps_185 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 10, cps_185 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 11, cps_185 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 12, cps_185 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 13, cps_185 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 14, cps_185 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 15, cps_185 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 16, cps_185 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 17, cps_185 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 18, cps_185 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 19, cps_185 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 20, cps_185 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 21, cps_185 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 22, cps_185 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 23, cps_185 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 24, cps_185 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 25, cps_185 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 26, cps_185 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 27, cps_185 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 28, cps_185 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 29, cps_185 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 30, cps_185 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 31, cps_185 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 32, cps_185 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 33, cps_185 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 34, cps_185 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 35, cps_185 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 36, cps_185 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 37, cps_185 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 38, cps_185 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 39, cps_185 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 40, cps_185 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 41, cps_185 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 42, cps_185 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 43, cps_185 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 44, cps_185 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 45, cps_185 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 46, cps_185 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 47, cps_185 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 48, cps_185 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_185 + 49, cps_185 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_185);

uint32_t cps_186[] = {
0x2627, 0x2628, 0x2629, 0x262a, 0x262b, 0x262c, 0x262d, 0x262e, 0x262f, 0x2630, 0x2631, 0x2632, 0x2633, 0x2634, 0x2635, 0x2636, 0x2637, 0x2638, 0x2639, 0x263a, 0x263b, 0x263c, 0x263d, 0x263e, 0x263f, 0x2640, 0x2641, 0x2642, 0x2643, 0x2644, 0x2645, 0x2646, 0x2647, 0x2648, 0x2649, 0x264a, 0x264b, 0x264c, 0x264d, 0x264e, 0x264f, 0x2650, 0x2651, 0x2652, 0x2653, 0x2654, 0x2655, 0x2656, 0x2657, 0x2658
};

void BM_collation_element_lookup_186(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 0, cps_186 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 1, cps_186 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 2, cps_186 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 3, cps_186 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 4, cps_186 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 5, cps_186 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 6, cps_186 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 7, cps_186 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 8, cps_186 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 9, cps_186 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 10, cps_186 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 11, cps_186 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 12, cps_186 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 13, cps_186 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 14, cps_186 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 15, cps_186 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 16, cps_186 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 17, cps_186 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 18, cps_186 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 19, cps_186 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 20, cps_186 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 21, cps_186 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 22, cps_186 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 23, cps_186 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 24, cps_186 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 25, cps_186 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 26, cps_186 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 27, cps_186 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 28, cps_186 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 29, cps_186 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 30, cps_186 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 31, cps_186 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 32, cps_186 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 33, cps_186 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 34, cps_186 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 35, cps_186 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 36, cps_186 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 37, cps_186 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 38, cps_186 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 39, cps_186 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 40, cps_186 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 41, cps_186 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 42, cps_186 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 43, cps_186 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 44, cps_186 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 45, cps_186 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 46, cps_186 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 47, cps_186 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 48, cps_186 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_186 + 49, cps_186 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_186);

uint32_t cps_187[] = {
0x2659, 0x265a, 0x265b, 0x265c, 0x265d, 0x265e, 0x265f, 0x2660, 0x2661, 0x2662, 0x2663, 0x2664, 0x2665, 0x2666, 0x2667, 0x2668, 0x2669, 0x266a, 0x266b, 0x266c, 0x266d, 0x266e, 0x266f, 0x2670, 0x2671, 0x2672, 0x2673, 0x2674, 0x2675, 0x2676, 0x2677, 0x2678, 0x2679, 0x267a, 0x267b, 0x267c, 0x267d, 0x267e, 0x267f, 0x2680, 0x2681, 0x2682, 0x2683, 0x2684, 0x2685, 0x2686, 0x2687, 0x2688, 0x2689, 0x268a
};

void BM_collation_element_lookup_187(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 0, cps_187 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 1, cps_187 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 2, cps_187 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 3, cps_187 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 4, cps_187 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 5, cps_187 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 6, cps_187 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 7, cps_187 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 8, cps_187 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 9, cps_187 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 10, cps_187 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 11, cps_187 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 12, cps_187 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 13, cps_187 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 14, cps_187 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 15, cps_187 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 16, cps_187 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 17, cps_187 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 18, cps_187 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 19, cps_187 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 20, cps_187 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 21, cps_187 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 22, cps_187 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 23, cps_187 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 24, cps_187 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 25, cps_187 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 26, cps_187 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 27, cps_187 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 28, cps_187 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 29, cps_187 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 30, cps_187 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 31, cps_187 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 32, cps_187 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 33, cps_187 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 34, cps_187 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 35, cps_187 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 36, cps_187 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 37, cps_187 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 38, cps_187 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 39, cps_187 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 40, cps_187 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 41, cps_187 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 42, cps_187 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 43, cps_187 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 44, cps_187 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 45, cps_187 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 46, cps_187 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 47, cps_187 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 48, cps_187 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_187 + 49, cps_187 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_187);

uint32_t cps_188[] = {
0x268b, 0x268c, 0x268d, 0x268e, 0x268f, 0x2690, 0x2691, 0x2692, 0x2693, 0x2694, 0x2695, 0x2696, 0x2697, 0x2698, 0x2699, 0x269a, 0x269b, 0x269c, 0x269d, 0x269e, 0x269f, 0x26a0, 0x26a1, 0x26a2, 0x26a3, 0x26a4, 0x26a5, 0x26a6, 0x26a7, 0x26a8, 0x26a9, 0x26aa, 0x26ab, 0x26ac, 0x26ad, 0x26ae, 0x26af, 0x26b0, 0x26b1, 0x26b2, 0x26b3, 0x26b4, 0x26b5, 0x26b6, 0x26b7, 0x26b8, 0x26b9, 0x26ba, 0x26bb, 0x26bc
};

void BM_collation_element_lookup_188(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 0, cps_188 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 1, cps_188 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 2, cps_188 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 3, cps_188 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 4, cps_188 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 5, cps_188 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 6, cps_188 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 7, cps_188 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 8, cps_188 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 9, cps_188 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 10, cps_188 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 11, cps_188 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 12, cps_188 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 13, cps_188 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 14, cps_188 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 15, cps_188 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 16, cps_188 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 17, cps_188 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 18, cps_188 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 19, cps_188 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 20, cps_188 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 21, cps_188 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 22, cps_188 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 23, cps_188 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 24, cps_188 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 25, cps_188 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 26, cps_188 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 27, cps_188 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 28, cps_188 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 29, cps_188 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 30, cps_188 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 31, cps_188 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 32, cps_188 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 33, cps_188 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 34, cps_188 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 35, cps_188 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 36, cps_188 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 37, cps_188 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 38, cps_188 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 39, cps_188 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 40, cps_188 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 41, cps_188 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 42, cps_188 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 43, cps_188 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 44, cps_188 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 45, cps_188 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 46, cps_188 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 47, cps_188 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 48, cps_188 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_188 + 49, cps_188 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_188);

uint32_t cps_189[] = {
0x26bd, 0x26be, 0x26bf, 0x26c0, 0x26c1, 0x26c2, 0x26c3, 0x26c4, 0x26c5, 0x26c6, 0x26c7, 0x26c8, 0x26c9, 0x26ca, 0x26cb, 0x26cc, 0x26cd, 0x26ce, 0x26cf, 0x26d0, 0x26d1, 0x26d2, 0x26d3, 0x26d4, 0x26d5, 0x26d6, 0x26d7, 0x26d8, 0x26d9, 0x26da, 0x26db, 0x26dc, 0x26dd, 0x26de, 0x26df, 0x26e0, 0x26e1, 0x26e2, 0x26e3, 0x26e4, 0x26e5, 0x26e6, 0x26e7, 0x26e8, 0x26e9, 0x26ea, 0x26eb, 0x26ec, 0x26ed, 0x26ee
};

void BM_collation_element_lookup_189(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 0, cps_189 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 1, cps_189 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 2, cps_189 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 3, cps_189 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 4, cps_189 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 5, cps_189 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 6, cps_189 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 7, cps_189 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 8, cps_189 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 9, cps_189 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 10, cps_189 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 11, cps_189 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 12, cps_189 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 13, cps_189 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 14, cps_189 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 15, cps_189 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 16, cps_189 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 17, cps_189 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 18, cps_189 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 19, cps_189 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 20, cps_189 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 21, cps_189 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 22, cps_189 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 23, cps_189 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 24, cps_189 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 25, cps_189 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 26, cps_189 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 27, cps_189 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 28, cps_189 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 29, cps_189 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 30, cps_189 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 31, cps_189 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 32, cps_189 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 33, cps_189 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 34, cps_189 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 35, cps_189 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 36, cps_189 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 37, cps_189 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 38, cps_189 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 39, cps_189 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 40, cps_189 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 41, cps_189 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 42, cps_189 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 43, cps_189 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 44, cps_189 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 45, cps_189 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 46, cps_189 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 47, cps_189 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 48, cps_189 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_189 + 49, cps_189 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_189);

uint32_t cps_190[] = {
0x26ef, 0x26f0, 0x26f1, 0x26f2, 0x26f3, 0x26f4, 0x26f5, 0x26f6, 0x26f7, 0x26f8, 0x26f9, 0x26fa, 0x26fb, 0x26fc, 0x26fd, 0x26fe, 0x26ff, 0x2700, 0x2701, 0x2702, 0x2703, 0x2704, 0x2705, 0x2706, 0x2707, 0x2708, 0x2709, 0x270a, 0x270b, 0x270c, 0x270d, 0x270e, 0x270f, 0x2710, 0x2711, 0x2712, 0x2713, 0x2714, 0x2715, 0x2716, 0x2717, 0x2718, 0x2719, 0x271a, 0x271b, 0x271c, 0x271d, 0x271e, 0x271f, 0x2720
};

void BM_collation_element_lookup_190(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 0, cps_190 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 1, cps_190 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 2, cps_190 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 3, cps_190 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 4, cps_190 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 5, cps_190 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 6, cps_190 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 7, cps_190 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 8, cps_190 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 9, cps_190 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 10, cps_190 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 11, cps_190 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 12, cps_190 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 13, cps_190 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 14, cps_190 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 15, cps_190 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 16, cps_190 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 17, cps_190 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 18, cps_190 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 19, cps_190 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 20, cps_190 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 21, cps_190 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 22, cps_190 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 23, cps_190 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 24, cps_190 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 25, cps_190 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 26, cps_190 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 27, cps_190 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 28, cps_190 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 29, cps_190 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 30, cps_190 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 31, cps_190 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 32, cps_190 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 33, cps_190 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 34, cps_190 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 35, cps_190 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 36, cps_190 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 37, cps_190 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 38, cps_190 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 39, cps_190 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 40, cps_190 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 41, cps_190 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 42, cps_190 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 43, cps_190 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 44, cps_190 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 45, cps_190 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 46, cps_190 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 47, cps_190 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 48, cps_190 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_190 + 49, cps_190 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_190);

uint32_t cps_191[] = {
0x2721, 0x2722, 0x2723, 0x2724, 0x2725, 0x2726, 0x2727, 0x2728, 0x2729, 0x272a, 0x272b, 0x272c, 0x272d, 0x272e, 0x272f, 0x2730, 0x2731, 0x2732, 0x2733, 0x2734, 0x2735, 0x2736, 0x2737, 0x2738, 0x2739, 0x273a, 0x273b, 0x273c, 0x273d, 0x273e, 0x273f, 0x2740, 0x2741, 0x2742, 0x2743, 0x2744, 0x2745, 0x2746, 0x2747, 0x2748, 0x2749, 0x274a, 0x274b, 0x274c, 0x274d, 0x274e, 0x274f, 0x2750, 0x2751, 0x2752
};

void BM_collation_element_lookup_191(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 0, cps_191 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 1, cps_191 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 2, cps_191 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 3, cps_191 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 4, cps_191 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 5, cps_191 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 6, cps_191 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 7, cps_191 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 8, cps_191 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 9, cps_191 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 10, cps_191 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 11, cps_191 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 12, cps_191 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 13, cps_191 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 14, cps_191 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 15, cps_191 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 16, cps_191 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 17, cps_191 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 18, cps_191 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 19, cps_191 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 20, cps_191 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 21, cps_191 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 22, cps_191 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 23, cps_191 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 24, cps_191 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 25, cps_191 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 26, cps_191 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 27, cps_191 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 28, cps_191 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 29, cps_191 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 30, cps_191 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 31, cps_191 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 32, cps_191 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 33, cps_191 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 34, cps_191 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 35, cps_191 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 36, cps_191 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 37, cps_191 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 38, cps_191 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 39, cps_191 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 40, cps_191 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 41, cps_191 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 42, cps_191 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 43, cps_191 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 44, cps_191 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 45, cps_191 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 46, cps_191 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 47, cps_191 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 48, cps_191 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_191 + 49, cps_191 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_191);

uint32_t cps_192[] = {
0x2753, 0x2754, 0x2755, 0x2756, 0x2757, 0x2758, 0x2759, 0x275a, 0x275b, 0x275c, 0x275d, 0x275e, 0x275f, 0x2760, 0x2761, 0x2762, 0x2763, 0x2764, 0x2765, 0x2766, 0x2767, 0x2768, 0x2769, 0x276a, 0x276b, 0x276c, 0x276d, 0x276e, 0x276f, 0x2770, 0x2771, 0x2772, 0x2773, 0x2774, 0x2775, 0x2776, 0x2777, 0x2778, 0x2779, 0x277a, 0x277b, 0x277c, 0x277d, 0x277e, 0x277f, 0x2780, 0x2781, 0x2782, 0x2783, 0x2784
};

void BM_collation_element_lookup_192(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 0, cps_192 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 1, cps_192 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 2, cps_192 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 3, cps_192 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 4, cps_192 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 5, cps_192 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 6, cps_192 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 7, cps_192 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 8, cps_192 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 9, cps_192 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 10, cps_192 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 11, cps_192 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 12, cps_192 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 13, cps_192 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 14, cps_192 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 15, cps_192 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 16, cps_192 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 17, cps_192 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 18, cps_192 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 19, cps_192 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 20, cps_192 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 21, cps_192 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 22, cps_192 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 23, cps_192 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 24, cps_192 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 25, cps_192 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 26, cps_192 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 27, cps_192 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 28, cps_192 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 29, cps_192 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 30, cps_192 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 31, cps_192 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 32, cps_192 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 33, cps_192 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 34, cps_192 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 35, cps_192 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 36, cps_192 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 37, cps_192 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 38, cps_192 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 39, cps_192 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 40, cps_192 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 41, cps_192 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 42, cps_192 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 43, cps_192 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 44, cps_192 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 45, cps_192 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 46, cps_192 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 47, cps_192 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 48, cps_192 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_192 + 49, cps_192 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_192);

uint32_t cps_193[] = {
0x2785, 0x2786, 0x2787, 0x2788, 0x2789, 0x278a, 0x278b, 0x278c, 0x278d, 0x278e, 0x278f, 0x2790, 0x2791, 0x2792, 0x2793, 0x2794, 0x2795, 0x2796, 0x2797, 0x2798, 0x2799, 0x279a, 0x279b, 0x279c, 0x279d, 0x279e, 0x279f, 0x27a0, 0x27a1, 0x27a2, 0x27a3, 0x27a4, 0x27a5, 0x27a6, 0x27a7, 0x27a8, 0x27a9, 0x27aa, 0x27ab, 0x27ac, 0x27ad, 0x27ae, 0x27af, 0x27b0, 0x27b1, 0x27b2, 0x27b3, 0x27b4, 0x27b5, 0x27b6
};

void BM_collation_element_lookup_193(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 0, cps_193 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 1, cps_193 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 2, cps_193 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 3, cps_193 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 4, cps_193 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 5, cps_193 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 6, cps_193 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 7, cps_193 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 8, cps_193 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 9, cps_193 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 10, cps_193 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 11, cps_193 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 12, cps_193 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 13, cps_193 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 14, cps_193 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 15, cps_193 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 16, cps_193 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 17, cps_193 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 18, cps_193 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 19, cps_193 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 20, cps_193 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 21, cps_193 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 22, cps_193 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 23, cps_193 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 24, cps_193 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 25, cps_193 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 26, cps_193 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 27, cps_193 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 28, cps_193 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 29, cps_193 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 30, cps_193 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 31, cps_193 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 32, cps_193 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 33, cps_193 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 34, cps_193 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 35, cps_193 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 36, cps_193 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 37, cps_193 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 38, cps_193 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 39, cps_193 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 40, cps_193 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 41, cps_193 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 42, cps_193 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 43, cps_193 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 44, cps_193 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 45, cps_193 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 46, cps_193 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 47, cps_193 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 48, cps_193 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_193 + 49, cps_193 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_193);

uint32_t cps_194[] = {
0x27b7, 0x27b8, 0x27b9, 0x27ba, 0x27bb, 0x27bc, 0x27bd, 0x27be, 0x27bf, 0x27c0, 0x27c1, 0x27c2, 0x27c3, 0x27c4, 0x27c5, 0x27c6, 0x27c7, 0x27c8, 0x27c9, 0x27ca, 0x27cb, 0x27cc, 0x27cd, 0x27ce, 0x27cf, 0x27d0, 0x27d1, 0x27d2, 0x27d3, 0x27d4, 0x27d5, 0x27d6, 0x27d7, 0x27d8, 0x27d9, 0x27da, 0x27db, 0x27dc, 0x27dd, 0x27de, 0x27df, 0x27e0, 0x27e1, 0x27e2, 0x27e3, 0x27e4, 0x27e5, 0x27e6, 0x27e7, 0x27e8
};

void BM_collation_element_lookup_194(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 0, cps_194 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 1, cps_194 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 2, cps_194 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 3, cps_194 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 4, cps_194 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 5, cps_194 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 6, cps_194 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 7, cps_194 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 8, cps_194 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 9, cps_194 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 10, cps_194 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 11, cps_194 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 12, cps_194 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 13, cps_194 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 14, cps_194 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 15, cps_194 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 16, cps_194 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 17, cps_194 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 18, cps_194 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 19, cps_194 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 20, cps_194 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 21, cps_194 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 22, cps_194 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 23, cps_194 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 24, cps_194 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 25, cps_194 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 26, cps_194 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 27, cps_194 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 28, cps_194 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 29, cps_194 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 30, cps_194 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 31, cps_194 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 32, cps_194 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 33, cps_194 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 34, cps_194 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 35, cps_194 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 36, cps_194 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 37, cps_194 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 38, cps_194 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 39, cps_194 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 40, cps_194 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 41, cps_194 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 42, cps_194 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 43, cps_194 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 44, cps_194 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 45, cps_194 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 46, cps_194 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 47, cps_194 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 48, cps_194 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_194 + 49, cps_194 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_194);

uint32_t cps_195[] = {
0x27e9, 0x27ea, 0x27eb, 0x27ec, 0x27ed, 0x27ee, 0x27ef, 0x27f0, 0x27f1, 0x27f2, 0x27f3, 0x27f4, 0x27f5, 0x27f6, 0x27f7, 0x27f8, 0x27f9, 0x27fa, 0x27fb, 0x27fc, 0x27fd, 0x27fe, 0x27ff, 0x2800, 0x2801, 0x2802, 0x2803, 0x2804, 0x2805, 0x2806, 0x2807, 0x2808, 0x2809, 0x280a, 0x280b, 0x280c, 0x280d, 0x280e, 0x280f, 0x2810, 0x2811, 0x2812, 0x2813, 0x2814, 0x2815, 0x2816, 0x2817, 0x2818, 0x2819, 0x281a
};

void BM_collation_element_lookup_195(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 0, cps_195 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 1, cps_195 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 2, cps_195 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 3, cps_195 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 4, cps_195 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 5, cps_195 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 6, cps_195 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 7, cps_195 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 8, cps_195 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 9, cps_195 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 10, cps_195 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 11, cps_195 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 12, cps_195 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 13, cps_195 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 14, cps_195 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 15, cps_195 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 16, cps_195 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 17, cps_195 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 18, cps_195 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 19, cps_195 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 20, cps_195 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 21, cps_195 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 22, cps_195 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 23, cps_195 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 24, cps_195 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 25, cps_195 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 26, cps_195 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 27, cps_195 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 28, cps_195 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 29, cps_195 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 30, cps_195 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 31, cps_195 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 32, cps_195 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 33, cps_195 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 34, cps_195 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 35, cps_195 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 36, cps_195 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 37, cps_195 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 38, cps_195 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 39, cps_195 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 40, cps_195 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 41, cps_195 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 42, cps_195 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 43, cps_195 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 44, cps_195 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 45, cps_195 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 46, cps_195 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 47, cps_195 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 48, cps_195 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_195 + 49, cps_195 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_195);

uint32_t cps_196[] = {
0x281b, 0x281c, 0x281d, 0x281e, 0x281f, 0x2820, 0x2821, 0x2822, 0x2823, 0x2824, 0x2825, 0x2826, 0x2827, 0x2828, 0x2829, 0x282a, 0x282b, 0x282c, 0x282d, 0x282e, 0x282f, 0x2830, 0x2831, 0x2832, 0x2833, 0x2834, 0x2835, 0x2836, 0x2837, 0x2838, 0x2839, 0x283a, 0x283b, 0x283c, 0x283d, 0x283e, 0x283f, 0x2840, 0x2841, 0x2842, 0x2843, 0x2844, 0x2845, 0x2846, 0x2847, 0x2848, 0x2849, 0x284a, 0x284b, 0x284c
};

void BM_collation_element_lookup_196(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 0, cps_196 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 1, cps_196 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 2, cps_196 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 3, cps_196 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 4, cps_196 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 5, cps_196 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 6, cps_196 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 7, cps_196 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 8, cps_196 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 9, cps_196 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 10, cps_196 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 11, cps_196 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 12, cps_196 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 13, cps_196 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 14, cps_196 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 15, cps_196 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 16, cps_196 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 17, cps_196 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 18, cps_196 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 19, cps_196 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 20, cps_196 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 21, cps_196 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 22, cps_196 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 23, cps_196 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 24, cps_196 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 25, cps_196 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 26, cps_196 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 27, cps_196 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 28, cps_196 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 29, cps_196 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 30, cps_196 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 31, cps_196 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 32, cps_196 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 33, cps_196 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 34, cps_196 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 35, cps_196 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 36, cps_196 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 37, cps_196 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 38, cps_196 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 39, cps_196 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 40, cps_196 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 41, cps_196 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 42, cps_196 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 43, cps_196 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 44, cps_196 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 45, cps_196 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 46, cps_196 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 47, cps_196 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 48, cps_196 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_196 + 49, cps_196 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_196);

uint32_t cps_197[] = {
0x284d, 0x284e, 0x284f, 0x2850, 0x2851, 0x2852, 0x2853, 0x2854, 0x2855, 0x2856, 0x2857, 0x2858, 0x2859, 0x285a, 0x285b, 0x285c, 0x285d, 0x285e, 0x285f, 0x2860, 0x2861, 0x2862, 0x2863, 0x2864, 0x2865, 0x2866, 0x2867, 0x2868, 0x2869, 0x286a, 0x286b, 0x286c, 0x286d, 0x286e, 0x286f, 0x2870, 0x2871, 0x2872, 0x2873, 0x2874, 0x2875, 0x2876, 0x2877, 0x2878, 0x2879, 0x287a, 0x287b, 0x287c, 0x287d, 0x287e
};

void BM_collation_element_lookup_197(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 0, cps_197 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 1, cps_197 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 2, cps_197 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 3, cps_197 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 4, cps_197 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 5, cps_197 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 6, cps_197 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 7, cps_197 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 8, cps_197 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 9, cps_197 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 10, cps_197 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 11, cps_197 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 12, cps_197 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 13, cps_197 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 14, cps_197 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 15, cps_197 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 16, cps_197 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 17, cps_197 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 18, cps_197 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 19, cps_197 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 20, cps_197 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 21, cps_197 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 22, cps_197 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 23, cps_197 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 24, cps_197 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 25, cps_197 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 26, cps_197 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 27, cps_197 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 28, cps_197 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 29, cps_197 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 30, cps_197 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 31, cps_197 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 32, cps_197 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 33, cps_197 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 34, cps_197 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 35, cps_197 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 36, cps_197 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 37, cps_197 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 38, cps_197 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 39, cps_197 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 40, cps_197 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 41, cps_197 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 42, cps_197 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 43, cps_197 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 44, cps_197 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 45, cps_197 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 46, cps_197 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 47, cps_197 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 48, cps_197 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_197 + 49, cps_197 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_197);

uint32_t cps_198[] = {
0x287f, 0x2880, 0x2881, 0x2882, 0x2883, 0x2884, 0x2885, 0x2886, 0x2887, 0x2888, 0x2889, 0x288a, 0x288b, 0x288c, 0x288d, 0x288e, 0x288f, 0x2890, 0x2891, 0x2892, 0x2893, 0x2894, 0x2895, 0x2896, 0x2897, 0x2898, 0x2899, 0x289a, 0x289b, 0x289c, 0x289d, 0x289e, 0x289f, 0x28a0, 0x28a1, 0x28a2, 0x28a3, 0x28a4, 0x28a5, 0x28a6, 0x28a7, 0x28a8, 0x28a9, 0x28aa, 0x28ab, 0x28ac, 0x28ad, 0x28ae, 0x28af, 0x28b0
};

void BM_collation_element_lookup_198(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 0, cps_198 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 1, cps_198 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 2, cps_198 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 3, cps_198 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 4, cps_198 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 5, cps_198 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 6, cps_198 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 7, cps_198 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 8, cps_198 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 9, cps_198 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 10, cps_198 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 11, cps_198 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 12, cps_198 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 13, cps_198 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 14, cps_198 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 15, cps_198 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 16, cps_198 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 17, cps_198 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 18, cps_198 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 19, cps_198 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 20, cps_198 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 21, cps_198 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 22, cps_198 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 23, cps_198 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 24, cps_198 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 25, cps_198 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 26, cps_198 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 27, cps_198 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 28, cps_198 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 29, cps_198 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 30, cps_198 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 31, cps_198 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 32, cps_198 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 33, cps_198 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 34, cps_198 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 35, cps_198 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 36, cps_198 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 37, cps_198 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 38, cps_198 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 39, cps_198 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 40, cps_198 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 41, cps_198 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 42, cps_198 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 43, cps_198 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 44, cps_198 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 45, cps_198 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 46, cps_198 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 47, cps_198 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 48, cps_198 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_198 + 49, cps_198 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_198);

uint32_t cps_199[] = {
0x28b1, 0x28b2, 0x28b3, 0x28b4, 0x28b5, 0x28b6, 0x28b7, 0x28b8, 0x28b9, 0x28ba, 0x28bb, 0x28bc, 0x28bd, 0x28be, 0x28bf, 0x28c0, 0x28c1, 0x28c2, 0x28c3, 0x28c4, 0x28c5, 0x28c6, 0x28c7, 0x28c8, 0x28c9, 0x28ca, 0x28cb, 0x28cc, 0x28cd, 0x28ce, 0x28cf, 0x28d0, 0x28d1, 0x28d2, 0x28d3, 0x28d4, 0x28d5, 0x28d6, 0x28d7, 0x28d8, 0x28d9, 0x28da, 0x28db, 0x28dc, 0x28dd, 0x28de, 0x28df, 0x28e0, 0x28e1, 0x28e2
};

void BM_collation_element_lookup_199(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 0, cps_199 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 1, cps_199 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 2, cps_199 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 3, cps_199 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 4, cps_199 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 5, cps_199 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 6, cps_199 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 7, cps_199 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 8, cps_199 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 9, cps_199 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 10, cps_199 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 11, cps_199 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 12, cps_199 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 13, cps_199 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 14, cps_199 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 15, cps_199 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 16, cps_199 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 17, cps_199 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 18, cps_199 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 19, cps_199 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 20, cps_199 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 21, cps_199 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 22, cps_199 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 23, cps_199 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 24, cps_199 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 25, cps_199 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 26, cps_199 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 27, cps_199 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 28, cps_199 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 29, cps_199 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 30, cps_199 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 31, cps_199 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 32, cps_199 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 33, cps_199 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 34, cps_199 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 35, cps_199 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 36, cps_199 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 37, cps_199 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 38, cps_199 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 39, cps_199 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 40, cps_199 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 41, cps_199 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 42, cps_199 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 43, cps_199 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 44, cps_199 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 45, cps_199 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 46, cps_199 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 47, cps_199 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 48, cps_199 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_199 + 49, cps_199 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_199);



BENCHMARK_MAIN()
