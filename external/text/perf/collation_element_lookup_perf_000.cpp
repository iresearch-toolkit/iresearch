// Copyright (C) 2020 T. Zachary Laine
//
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

// Warning! This file is autogenerated.
#include <boost/text/collate.hpp>
#include <boost/text/collation_table.hpp>

#include <benchmark/benchmark.h>

boost::text::detail::collation_trie_t const & trie()
{
    static auto const retval = boost::text::detail::make_default_trie();
    return retval;
}

boost::text::collation_table const & table()
{
    static auto const retval = boost::text::default_collation_table();
    return retval;
}

uint32_t cps_000[] = {
0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa, 0xb, 0xc, 0xd, 0xe, 0xf, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31
};

void BM_collation_element_lookup_000(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 0, cps_000 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 1, cps_000 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 2, cps_000 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 3, cps_000 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 4, cps_000 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 5, cps_000 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 6, cps_000 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 7, cps_000 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 8, cps_000 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 9, cps_000 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 10, cps_000 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 11, cps_000 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 12, cps_000 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 13, cps_000 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 14, cps_000 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 15, cps_000 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 16, cps_000 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 17, cps_000 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 18, cps_000 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 19, cps_000 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 20, cps_000 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 21, cps_000 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 22, cps_000 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 23, cps_000 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 24, cps_000 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 25, cps_000 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 26, cps_000 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 27, cps_000 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 28, cps_000 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 29, cps_000 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 30, cps_000 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 31, cps_000 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 32, cps_000 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 33, cps_000 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 34, cps_000 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 35, cps_000 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 36, cps_000 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 37, cps_000 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 38, cps_000 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 39, cps_000 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 40, cps_000 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 41, cps_000 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 42, cps_000 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 43, cps_000 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 44, cps_000 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 45, cps_000 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 46, cps_000 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 47, cps_000 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 48, cps_000 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_000 + 49, cps_000 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_000);

uint32_t cps_001[] = {
0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f, 0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4c, 0xb7, 0x4c, 0x387, 0x4d, 0x4e, 0x4f, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x60, 0x61
};

void BM_collation_element_lookup_001(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 0, cps_001 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 1, cps_001 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 2, cps_001 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 3, cps_001 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 4, cps_001 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 5, cps_001 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 6, cps_001 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 7, cps_001 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 8, cps_001 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 9, cps_001 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 10, cps_001 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 11, cps_001 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 12, cps_001 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 13, cps_001 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 14, cps_001 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 15, cps_001 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 16, cps_001 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 17, cps_001 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 18, cps_001 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 19, cps_001 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 20, cps_001 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 21, cps_001 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 22, cps_001 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 23, cps_001 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 24, cps_001 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 25, cps_001 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 26, cps_001 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 27, cps_001 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 29, cps_001 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 31, cps_001 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 32, cps_001 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 33, cps_001 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 34, cps_001 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 35, cps_001 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 36, cps_001 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 37, cps_001 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 38, cps_001 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 39, cps_001 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 40, cps_001 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 41, cps_001 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 42, cps_001 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 43, cps_001 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 44, cps_001 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 45, cps_001 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 46, cps_001 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 47, cps_001 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 48, cps_001 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 49, cps_001 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 50, cps_001 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_001 + 51, cps_001 + 52));
    }
}
BENCHMARK(BM_collation_element_lookup_001);

uint32_t cps_002[] = {
0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6c, 0xb7, 0x6c, 0x387, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f, 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f, 0x90, 0x91
};

void BM_collation_element_lookup_002(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 0, cps_002 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 1, cps_002 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 2, cps_002 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 3, cps_002 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 4, cps_002 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 5, cps_002 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 6, cps_002 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 7, cps_002 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 8, cps_002 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 9, cps_002 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 10, cps_002 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 11, cps_002 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 13, cps_002 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 15, cps_002 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 16, cps_002 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 17, cps_002 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 18, cps_002 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 19, cps_002 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 20, cps_002 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 21, cps_002 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 22, cps_002 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 23, cps_002 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 24, cps_002 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 25, cps_002 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 26, cps_002 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 27, cps_002 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 28, cps_002 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 29, cps_002 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 30, cps_002 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 31, cps_002 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 32, cps_002 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 33, cps_002 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 34, cps_002 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 35, cps_002 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 36, cps_002 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 37, cps_002 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 38, cps_002 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 39, cps_002 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 40, cps_002 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 41, cps_002 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 42, cps_002 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 43, cps_002 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 44, cps_002 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 45, cps_002 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 46, cps_002 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 47, cps_002 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 48, cps_002 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 49, cps_002 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 50, cps_002 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_002 + 51, cps_002 + 52));
    }
}
BENCHMARK(BM_collation_element_lookup_002);

uint32_t cps_003[] = {
0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f, 0xa0, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf, 0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf, 0xc0, 0xc1, 0xc2, 0xc3
};

void BM_collation_element_lookup_003(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 0, cps_003 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 1, cps_003 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 2, cps_003 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 3, cps_003 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 4, cps_003 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 5, cps_003 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 6, cps_003 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 7, cps_003 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 8, cps_003 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 9, cps_003 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 10, cps_003 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 11, cps_003 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 12, cps_003 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 13, cps_003 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 14, cps_003 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 15, cps_003 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 16, cps_003 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 17, cps_003 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 18, cps_003 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 19, cps_003 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 20, cps_003 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 21, cps_003 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 22, cps_003 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 23, cps_003 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 24, cps_003 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 25, cps_003 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 26, cps_003 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 27, cps_003 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 28, cps_003 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 29, cps_003 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 30, cps_003 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 31, cps_003 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 32, cps_003 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 33, cps_003 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 34, cps_003 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 35, cps_003 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 36, cps_003 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 37, cps_003 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 38, cps_003 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 39, cps_003 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 40, cps_003 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 41, cps_003 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 42, cps_003 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 43, cps_003 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 44, cps_003 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 45, cps_003 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 46, cps_003 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 47, cps_003 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 48, cps_003 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_003 + 49, cps_003 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_003);

uint32_t cps_004[] = {
0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf, 0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf, 0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef, 0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5
};

void BM_collation_element_lookup_004(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 0, cps_004 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 1, cps_004 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 2, cps_004 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 3, cps_004 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 4, cps_004 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 5, cps_004 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 6, cps_004 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 7, cps_004 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 8, cps_004 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 9, cps_004 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 10, cps_004 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 11, cps_004 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 12, cps_004 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 13, cps_004 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 14, cps_004 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 15, cps_004 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 16, cps_004 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 17, cps_004 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 18, cps_004 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 19, cps_004 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 20, cps_004 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 21, cps_004 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 22, cps_004 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 23, cps_004 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 24, cps_004 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 25, cps_004 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 26, cps_004 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 27, cps_004 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 28, cps_004 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 29, cps_004 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 30, cps_004 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 31, cps_004 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 32, cps_004 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 33, cps_004 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 34, cps_004 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 35, cps_004 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 36, cps_004 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 37, cps_004 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 38, cps_004 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 39, cps_004 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 40, cps_004 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 41, cps_004 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 42, cps_004 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 43, cps_004 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 44, cps_004 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 45, cps_004 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 46, cps_004 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 47, cps_004 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 48, cps_004 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_004 + 49, cps_004 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_004);

uint32_t cps_005[] = {
0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff, 0x100, 0x101, 0x102, 0x103, 0x104, 0x105, 0x106, 0x107, 0x108, 0x109, 0x10a, 0x10b, 0x10c, 0x10d, 0x10e, 0x10f, 0x110, 0x111, 0x112, 0x113, 0x114, 0x115, 0x116, 0x117, 0x118, 0x119, 0x11a, 0x11b, 0x11c, 0x11d, 0x11e, 0x11f, 0x120, 0x121, 0x122, 0x123, 0x124, 0x125, 0x126, 0x127
};

void BM_collation_element_lookup_005(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 0, cps_005 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 1, cps_005 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 2, cps_005 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 3, cps_005 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 4, cps_005 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 5, cps_005 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 6, cps_005 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 7, cps_005 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 8, cps_005 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 9, cps_005 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 10, cps_005 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 11, cps_005 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 12, cps_005 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 13, cps_005 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 14, cps_005 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 15, cps_005 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 16, cps_005 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 17, cps_005 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 18, cps_005 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 19, cps_005 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 20, cps_005 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 21, cps_005 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 22, cps_005 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 23, cps_005 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 24, cps_005 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 25, cps_005 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 26, cps_005 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 27, cps_005 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 28, cps_005 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 29, cps_005 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 30, cps_005 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 31, cps_005 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 32, cps_005 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 33, cps_005 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 34, cps_005 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 35, cps_005 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 36, cps_005 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 37, cps_005 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 38, cps_005 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 39, cps_005 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 40, cps_005 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 41, cps_005 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 42, cps_005 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 43, cps_005 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 44, cps_005 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 45, cps_005 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 46, cps_005 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 47, cps_005 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 48, cps_005 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_005 + 49, cps_005 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_005);

uint32_t cps_006[] = {
0x128, 0x129, 0x12a, 0x12b, 0x12c, 0x12d, 0x12e, 0x12f, 0x130, 0x131, 0x132, 0x133, 0x134, 0x135, 0x136, 0x137, 0x138, 0x139, 0x13a, 0x13b, 0x13c, 0x13d, 0x13e, 0x13f, 0x140, 0x141, 0x142, 0x143, 0x144, 0x145, 0x146, 0x147, 0x148, 0x149, 0x14a, 0x14b, 0x14c, 0x14d, 0x14e, 0x14f, 0x150, 0x151, 0x152, 0x153, 0x154, 0x155, 0x156, 0x157, 0x158, 0x159
};

void BM_collation_element_lookup_006(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 0, cps_006 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 1, cps_006 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 2, cps_006 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 3, cps_006 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 4, cps_006 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 5, cps_006 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 6, cps_006 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 7, cps_006 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 8, cps_006 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 9, cps_006 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 10, cps_006 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 11, cps_006 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 12, cps_006 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 13, cps_006 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 14, cps_006 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 15, cps_006 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 16, cps_006 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 17, cps_006 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 18, cps_006 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 19, cps_006 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 20, cps_006 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 21, cps_006 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 22, cps_006 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 23, cps_006 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 24, cps_006 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 25, cps_006 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 26, cps_006 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 27, cps_006 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 28, cps_006 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 29, cps_006 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 30, cps_006 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 31, cps_006 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 32, cps_006 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 33, cps_006 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 34, cps_006 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 35, cps_006 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 36, cps_006 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 37, cps_006 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 38, cps_006 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 39, cps_006 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 40, cps_006 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 41, cps_006 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 42, cps_006 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 43, cps_006 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 44, cps_006 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 45, cps_006 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 46, cps_006 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 47, cps_006 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 48, cps_006 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_006 + 49, cps_006 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_006);

uint32_t cps_007[] = {
0x15a, 0x15b, 0x15c, 0x15d, 0x15e, 0x15f, 0x160, 0x161, 0x162, 0x163, 0x164, 0x165, 0x166, 0x167, 0x168, 0x169, 0x16a, 0x16b, 0x16c, 0x16d, 0x16e, 0x16f, 0x170, 0x171, 0x172, 0x173, 0x174, 0x175, 0x176, 0x177, 0x178, 0x179, 0x17a, 0x17b, 0x17c, 0x17d, 0x17e, 0x17f, 0x180, 0x181, 0x182, 0x183, 0x184, 0x185, 0x186, 0x187, 0x188, 0x189, 0x18a, 0x18b
};

void BM_collation_element_lookup_007(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 0, cps_007 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 1, cps_007 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 2, cps_007 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 3, cps_007 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 4, cps_007 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 5, cps_007 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 6, cps_007 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 7, cps_007 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 8, cps_007 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 9, cps_007 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 10, cps_007 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 11, cps_007 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 12, cps_007 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 13, cps_007 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 14, cps_007 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 15, cps_007 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 16, cps_007 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 17, cps_007 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 18, cps_007 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 19, cps_007 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 20, cps_007 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 21, cps_007 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 22, cps_007 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 23, cps_007 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 24, cps_007 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 25, cps_007 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 26, cps_007 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 27, cps_007 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 28, cps_007 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 29, cps_007 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 30, cps_007 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 31, cps_007 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 32, cps_007 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 33, cps_007 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 34, cps_007 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 35, cps_007 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 36, cps_007 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 37, cps_007 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 38, cps_007 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 39, cps_007 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 40, cps_007 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 41, cps_007 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 42, cps_007 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 43, cps_007 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 44, cps_007 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 45, cps_007 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 46, cps_007 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 47, cps_007 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 48, cps_007 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_007 + 49, cps_007 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_007);

uint32_t cps_008[] = {
0x18c, 0x18d, 0x18e, 0x18f, 0x190, 0x191, 0x192, 0x193, 0x194, 0x195, 0x196, 0x197, 0x198, 0x199, 0x19a, 0x19b, 0x19c, 0x19d, 0x19e, 0x19f, 0x1a0, 0x1a1, 0x1a2, 0x1a3, 0x1a4, 0x1a5, 0x1a6, 0x1a7, 0x1a8, 0x1a9, 0x1aa, 0x1ab, 0x1ac, 0x1ad, 0x1ae, 0x1af, 0x1b0, 0x1b1, 0x1b2, 0x1b3, 0x1b4, 0x1b5, 0x1b6, 0x1b7, 0x1b8, 0x1b9, 0x1ba, 0x1bb, 0x1bc, 0x1bd
};

void BM_collation_element_lookup_008(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 0, cps_008 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 1, cps_008 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 2, cps_008 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 3, cps_008 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 4, cps_008 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 5, cps_008 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 6, cps_008 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 7, cps_008 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 8, cps_008 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 9, cps_008 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 10, cps_008 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 11, cps_008 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 12, cps_008 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 13, cps_008 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 14, cps_008 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 15, cps_008 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 16, cps_008 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 17, cps_008 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 18, cps_008 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 19, cps_008 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 20, cps_008 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 21, cps_008 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 22, cps_008 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 23, cps_008 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 24, cps_008 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 25, cps_008 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 26, cps_008 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 27, cps_008 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 28, cps_008 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 29, cps_008 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 30, cps_008 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 31, cps_008 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 32, cps_008 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 33, cps_008 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 34, cps_008 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 35, cps_008 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 36, cps_008 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 37, cps_008 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 38, cps_008 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 39, cps_008 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 40, cps_008 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 41, cps_008 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 42, cps_008 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 43, cps_008 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 44, cps_008 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 45, cps_008 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 46, cps_008 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 47, cps_008 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 48, cps_008 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_008 + 49, cps_008 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_008);

uint32_t cps_009[] = {
0x1be, 0x1bf, 0x1c0, 0x1c1, 0x1c2, 0x1c3, 0x1c4, 0x1c5, 0x1c6, 0x1c7, 0x1c8, 0x1c9, 0x1ca, 0x1cb, 0x1cc, 0x1cd, 0x1ce, 0x1cf, 0x1d0, 0x1d1, 0x1d2, 0x1d3, 0x1d4, 0x1d5, 0x1d6, 0x1d7, 0x1d8, 0x1d9, 0x1da, 0x1db, 0x1dc, 0x1dd, 0x1de, 0x1df, 0x1e0, 0x1e1, 0x1e2, 0x1e3, 0x1e4, 0x1e5, 0x1e6, 0x1e7, 0x1e8, 0x1e9, 0x1ea, 0x1eb, 0x1ec, 0x1ed, 0x1ee, 0x1ef
};

void BM_collation_element_lookup_009(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 0, cps_009 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 1, cps_009 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 2, cps_009 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 3, cps_009 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 4, cps_009 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 5, cps_009 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 6, cps_009 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 7, cps_009 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 8, cps_009 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 9, cps_009 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 10, cps_009 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 11, cps_009 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 12, cps_009 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 13, cps_009 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 14, cps_009 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 15, cps_009 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 16, cps_009 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 17, cps_009 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 18, cps_009 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 19, cps_009 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 20, cps_009 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 21, cps_009 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 22, cps_009 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 23, cps_009 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 24, cps_009 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 25, cps_009 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 26, cps_009 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 27, cps_009 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 28, cps_009 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 29, cps_009 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 30, cps_009 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 31, cps_009 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 32, cps_009 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 33, cps_009 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 34, cps_009 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 35, cps_009 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 36, cps_009 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 37, cps_009 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 38, cps_009 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 39, cps_009 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 40, cps_009 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 41, cps_009 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 42, cps_009 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 43, cps_009 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 44, cps_009 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 45, cps_009 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 46, cps_009 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 47, cps_009 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 48, cps_009 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_009 + 49, cps_009 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_009);

uint32_t cps_010[] = {
0x1f0, 0x1f1, 0x1f2, 0x1f3, 0x1f4, 0x1f5, 0x1f6, 0x1f7, 0x1f8, 0x1f9, 0x1fa, 0x1fb, 0x1fc, 0x1fd, 0x1fe, 0x1ff, 0x200, 0x201, 0x202, 0x203, 0x204, 0x205, 0x206, 0x207, 0x208, 0x209, 0x20a, 0x20b, 0x20c, 0x20d, 0x20e, 0x20f, 0x210, 0x211, 0x212, 0x213, 0x214, 0x215, 0x216, 0x217, 0x218, 0x219, 0x21a, 0x21b, 0x21c, 0x21d, 0x21e, 0x21f, 0x220, 0x221
};

void BM_collation_element_lookup_010(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 0, cps_010 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 1, cps_010 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 2, cps_010 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 3, cps_010 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 4, cps_010 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 5, cps_010 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 6, cps_010 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 7, cps_010 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 8, cps_010 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 9, cps_010 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 10, cps_010 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 11, cps_010 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 12, cps_010 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 13, cps_010 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 14, cps_010 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 15, cps_010 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 16, cps_010 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 17, cps_010 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 18, cps_010 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 19, cps_010 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 20, cps_010 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 21, cps_010 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 22, cps_010 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 23, cps_010 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 24, cps_010 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 25, cps_010 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 26, cps_010 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 27, cps_010 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 28, cps_010 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 29, cps_010 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 30, cps_010 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 31, cps_010 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 32, cps_010 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 33, cps_010 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 34, cps_010 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 35, cps_010 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 36, cps_010 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 37, cps_010 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 38, cps_010 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 39, cps_010 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 40, cps_010 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 41, cps_010 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 42, cps_010 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 43, cps_010 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 44, cps_010 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 45, cps_010 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 46, cps_010 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 47, cps_010 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 48, cps_010 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_010 + 49, cps_010 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_010);

uint32_t cps_011[] = {
0x222, 0x223, 0x224, 0x225, 0x226, 0x227, 0x228, 0x229, 0x22a, 0x22b, 0x22c, 0x22d, 0x22e, 0x22f, 0x230, 0x231, 0x232, 0x233, 0x234, 0x235, 0x236, 0x237, 0x238, 0x239, 0x23a, 0x23b, 0x23c, 0x23d, 0x23e, 0x23f, 0x240, 0x241, 0x242, 0x243, 0x244, 0x245, 0x246, 0x247, 0x248, 0x249, 0x24a, 0x24b, 0x24c, 0x24d, 0x24e, 0x24f, 0x250, 0x251, 0x252, 0x253
};

void BM_collation_element_lookup_011(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 0, cps_011 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 1, cps_011 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 2, cps_011 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 3, cps_011 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 4, cps_011 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 5, cps_011 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 6, cps_011 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 7, cps_011 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 8, cps_011 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 9, cps_011 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 10, cps_011 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 11, cps_011 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 12, cps_011 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 13, cps_011 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 14, cps_011 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 15, cps_011 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 16, cps_011 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 17, cps_011 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 18, cps_011 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 19, cps_011 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 20, cps_011 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 21, cps_011 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 22, cps_011 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 23, cps_011 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 24, cps_011 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 25, cps_011 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 26, cps_011 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 27, cps_011 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 28, cps_011 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 29, cps_011 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 30, cps_011 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 31, cps_011 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 32, cps_011 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 33, cps_011 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 34, cps_011 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 35, cps_011 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 36, cps_011 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 37, cps_011 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 38, cps_011 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 39, cps_011 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 40, cps_011 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 41, cps_011 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 42, cps_011 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 43, cps_011 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 44, cps_011 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 45, cps_011 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 46, cps_011 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 47, cps_011 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 48, cps_011 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_011 + 49, cps_011 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_011);

uint32_t cps_012[] = {
0x254, 0x255, 0x256, 0x257, 0x258, 0x259, 0x25a, 0x25b, 0x25c, 0x25d, 0x25e, 0x25f, 0x260, 0x261, 0x262, 0x263, 0x264, 0x265, 0x266, 0x267, 0x268, 0x269, 0x26a, 0x26b, 0x26c, 0x26d, 0x26e, 0x26f, 0x270, 0x271, 0x272, 0x273, 0x274, 0x275, 0x276, 0x277, 0x278, 0x279, 0x27a, 0x27b, 0x27c, 0x27d, 0x27e, 0x27f, 0x280, 0x281, 0x282, 0x283, 0x284, 0x285
};

void BM_collation_element_lookup_012(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 0, cps_012 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 1, cps_012 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 2, cps_012 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 3, cps_012 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 4, cps_012 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 5, cps_012 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 6, cps_012 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 7, cps_012 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 8, cps_012 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 9, cps_012 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 10, cps_012 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 11, cps_012 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 12, cps_012 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 13, cps_012 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 14, cps_012 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 15, cps_012 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 16, cps_012 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 17, cps_012 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 18, cps_012 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 19, cps_012 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 20, cps_012 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 21, cps_012 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 22, cps_012 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 23, cps_012 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 24, cps_012 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 25, cps_012 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 26, cps_012 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 27, cps_012 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 28, cps_012 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 29, cps_012 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 30, cps_012 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 31, cps_012 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 32, cps_012 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 33, cps_012 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 34, cps_012 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 35, cps_012 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 36, cps_012 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 37, cps_012 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 38, cps_012 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 39, cps_012 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 40, cps_012 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 41, cps_012 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 42, cps_012 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 43, cps_012 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 44, cps_012 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 45, cps_012 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 46, cps_012 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 47, cps_012 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 48, cps_012 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_012 + 49, cps_012 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_012);

uint32_t cps_013[] = {
0x286, 0x287, 0x288, 0x289, 0x28a, 0x28b, 0x28c, 0x28d, 0x28e, 0x28f, 0x290, 0x291, 0x292, 0x293, 0x294, 0x295, 0x296, 0x297, 0x298, 0x299, 0x29a, 0x29b, 0x29c, 0x29d, 0x29e, 0x29f, 0x2a0, 0x2a1, 0x2a2, 0x2a3, 0x2a4, 0x2a5, 0x2a6, 0x2a7, 0x2a8, 0x2a9, 0x2aa, 0x2ab, 0x2ac, 0x2ad, 0x2ae, 0x2af, 0x2b0, 0x2b1, 0x2b2, 0x2b3, 0x2b4, 0x2b5, 0x2b6, 0x2b7
};

void BM_collation_element_lookup_013(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 0, cps_013 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 1, cps_013 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 2, cps_013 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 3, cps_013 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 4, cps_013 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 5, cps_013 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 6, cps_013 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 7, cps_013 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 8, cps_013 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 9, cps_013 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 10, cps_013 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 11, cps_013 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 12, cps_013 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 13, cps_013 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 14, cps_013 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 15, cps_013 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 16, cps_013 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 17, cps_013 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 18, cps_013 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 19, cps_013 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 20, cps_013 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 21, cps_013 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 22, cps_013 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 23, cps_013 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 24, cps_013 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 25, cps_013 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 26, cps_013 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 27, cps_013 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 28, cps_013 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 29, cps_013 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 30, cps_013 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 31, cps_013 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 32, cps_013 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 33, cps_013 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 34, cps_013 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 35, cps_013 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 36, cps_013 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 37, cps_013 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 38, cps_013 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 39, cps_013 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 40, cps_013 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 41, cps_013 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 42, cps_013 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 43, cps_013 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 44, cps_013 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 45, cps_013 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 46, cps_013 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 47, cps_013 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 48, cps_013 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_013 + 49, cps_013 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_013);

uint32_t cps_014[] = {
0x2b8, 0x2b9, 0x2ba, 0x2bb, 0x2bc, 0x2bd, 0x2be, 0x2bf, 0x2c0, 0x2c1, 0x2c2, 0x2c3, 0x2c4, 0x2c5, 0x2c6, 0x2c7, 0x2c8, 0x2c9, 0x2ca, 0x2cb, 0x2cc, 0x2cd, 0x2ce, 0x2cf, 0x2d0, 0x2d1, 0x2d2, 0x2d3, 0x2d4, 0x2d5, 0x2d6, 0x2d7, 0x2d8, 0x2d9, 0x2da, 0x2db, 0x2dc, 0x2dd, 0x2de, 0x2df, 0x2e0, 0x2e1, 0x2e2, 0x2e3, 0x2e4, 0x2e5, 0x2e6, 0x2e7, 0x2e8, 0x2e9
};

void BM_collation_element_lookup_014(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 0, cps_014 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 1, cps_014 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 2, cps_014 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 3, cps_014 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 4, cps_014 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 5, cps_014 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 6, cps_014 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 7, cps_014 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 8, cps_014 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 9, cps_014 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 10, cps_014 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 11, cps_014 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 12, cps_014 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 13, cps_014 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 14, cps_014 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 15, cps_014 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 16, cps_014 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 17, cps_014 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 18, cps_014 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 19, cps_014 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 20, cps_014 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 21, cps_014 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 22, cps_014 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 23, cps_014 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 24, cps_014 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 25, cps_014 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 26, cps_014 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 27, cps_014 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 28, cps_014 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 29, cps_014 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 30, cps_014 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 31, cps_014 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 32, cps_014 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 33, cps_014 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 34, cps_014 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 35, cps_014 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 36, cps_014 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 37, cps_014 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 38, cps_014 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 39, cps_014 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 40, cps_014 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 41, cps_014 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 42, cps_014 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 43, cps_014 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 44, cps_014 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 45, cps_014 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 46, cps_014 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 47, cps_014 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 48, cps_014 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_014 + 49, cps_014 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_014);

uint32_t cps_015[] = {
0x2ea, 0x2eb, 0x2ec, 0x2ed, 0x2ee, 0x2ef, 0x2f0, 0x2f1, 0x2f2, 0x2f3, 0x2f4, 0x2f5, 0x2f6, 0x2f7, 0x2f8, 0x2f9, 0x2fa, 0x2fb, 0x2fc, 0x2fd, 0x2fe, 0x2ff, 0x300, 0x301, 0x302, 0x303, 0x304, 0x305, 0x306, 0x307, 0x308, 0x309, 0x30a, 0x30b, 0x30c, 0x30d, 0x30e, 0x30f, 0x310, 0x311, 0x312, 0x313, 0x314, 0x315, 0x316, 0x317, 0x318, 0x319, 0x31a, 0x31b
};

void BM_collation_element_lookup_015(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 0, cps_015 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 1, cps_015 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 2, cps_015 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 3, cps_015 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 4, cps_015 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 5, cps_015 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 6, cps_015 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 7, cps_015 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 8, cps_015 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 9, cps_015 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 10, cps_015 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 11, cps_015 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 12, cps_015 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 13, cps_015 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 14, cps_015 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 15, cps_015 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 16, cps_015 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 17, cps_015 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 18, cps_015 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 19, cps_015 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 20, cps_015 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 21, cps_015 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 22, cps_015 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 23, cps_015 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 24, cps_015 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 25, cps_015 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 26, cps_015 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 27, cps_015 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 28, cps_015 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 29, cps_015 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 30, cps_015 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 31, cps_015 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 32, cps_015 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 33, cps_015 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 34, cps_015 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 35, cps_015 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 36, cps_015 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 37, cps_015 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 38, cps_015 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 39, cps_015 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 40, cps_015 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 41, cps_015 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 42, cps_015 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 43, cps_015 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 44, cps_015 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 45, cps_015 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 46, cps_015 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 47, cps_015 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 48, cps_015 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_015 + 49, cps_015 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_015);

uint32_t cps_016[] = {
0x31c, 0x31d, 0x31e, 0x31f, 0x320, 0x321, 0x322, 0x323, 0x324, 0x325, 0x326, 0x327, 0x328, 0x329, 0x32a, 0x32b, 0x32c, 0x32d, 0x32e, 0x32f, 0x330, 0x331, 0x332, 0x333, 0x334, 0x335, 0x336, 0x337, 0x338, 0x339, 0x33a, 0x33b, 0x33c, 0x33d, 0x33e, 0x33f, 0x340, 0x341, 0x342, 0x343, 0x344, 0x345, 0x346, 0x347, 0x348, 0x349, 0x34a, 0x34b, 0x34c, 0x34d
};

void BM_collation_element_lookup_016(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 0, cps_016 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 1, cps_016 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 2, cps_016 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 3, cps_016 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 4, cps_016 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 5, cps_016 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 6, cps_016 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 7, cps_016 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 8, cps_016 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 9, cps_016 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 10, cps_016 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 11, cps_016 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 12, cps_016 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 13, cps_016 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 14, cps_016 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 15, cps_016 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 16, cps_016 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 17, cps_016 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 18, cps_016 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 19, cps_016 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 20, cps_016 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 21, cps_016 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 22, cps_016 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 23, cps_016 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 24, cps_016 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 25, cps_016 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 26, cps_016 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 27, cps_016 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 28, cps_016 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 29, cps_016 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 30, cps_016 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 31, cps_016 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 32, cps_016 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 33, cps_016 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 34, cps_016 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 35, cps_016 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 36, cps_016 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 37, cps_016 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 38, cps_016 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 39, cps_016 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 40, cps_016 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 41, cps_016 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 42, cps_016 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 43, cps_016 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 44, cps_016 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 45, cps_016 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 46, cps_016 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 47, cps_016 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 48, cps_016 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_016 + 49, cps_016 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_016);

uint32_t cps_017[] = {
0x34e, 0x34f, 0x350, 0x351, 0x352, 0x353, 0x354, 0x355, 0x356, 0x357, 0x358, 0x359, 0x35a, 0x35b, 0x35c, 0x35d, 0x35e, 0x35f, 0x360, 0x361, 0x362, 0x363, 0x364, 0x365, 0x366, 0x367, 0x368, 0x369, 0x36a, 0x36b, 0x36c, 0x36d, 0x36e, 0x36f, 0x370, 0x371, 0x372, 0x373, 0x374, 0x375, 0x376, 0x377, 0x37a, 0x37b, 0x37c, 0x37d, 0x37e, 0x37f, 0x384, 0x385
};

void BM_collation_element_lookup_017(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 0, cps_017 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 1, cps_017 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 2, cps_017 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 3, cps_017 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 4, cps_017 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 5, cps_017 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 6, cps_017 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 7, cps_017 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 8, cps_017 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 9, cps_017 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 10, cps_017 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 11, cps_017 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 12, cps_017 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 13, cps_017 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 14, cps_017 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 15, cps_017 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 16, cps_017 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 17, cps_017 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 18, cps_017 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 19, cps_017 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 20, cps_017 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 21, cps_017 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 22, cps_017 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 23, cps_017 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 24, cps_017 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 25, cps_017 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 26, cps_017 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 27, cps_017 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 28, cps_017 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 29, cps_017 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 30, cps_017 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 31, cps_017 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 32, cps_017 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 33, cps_017 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 34, cps_017 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 35, cps_017 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 36, cps_017 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 37, cps_017 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 38, cps_017 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 39, cps_017 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 40, cps_017 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 41, cps_017 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 42, cps_017 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 43, cps_017 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 44, cps_017 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 45, cps_017 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 46, cps_017 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 47, cps_017 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 48, cps_017 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_017 + 49, cps_017 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_017);

uint32_t cps_018[] = {
0x386, 0x387, 0x388, 0x389, 0x38a, 0x38c, 0x38e, 0x38f, 0x390, 0x391, 0x392, 0x393, 0x394, 0x395, 0x396, 0x397, 0x398, 0x399, 0x39a, 0x39b, 0x39c, 0x39d, 0x39e, 0x39f, 0x3a0, 0x3a1, 0x3a3, 0x3a4, 0x3a5, 0x3a6, 0x3a7, 0x3a8, 0x3a9, 0x3aa, 0x3ab, 0x3ac, 0x3ad, 0x3ae, 0x3af, 0x3b0, 0x3b1, 0x3b2, 0x3b3, 0x3b4, 0x3b5, 0x3b6, 0x3b7, 0x3b8, 0x3b9, 0x3ba
};

void BM_collation_element_lookup_018(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 0, cps_018 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 1, cps_018 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 2, cps_018 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 3, cps_018 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 4, cps_018 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 5, cps_018 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 6, cps_018 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 7, cps_018 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 8, cps_018 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 9, cps_018 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 10, cps_018 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 11, cps_018 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 12, cps_018 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 13, cps_018 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 14, cps_018 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 15, cps_018 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 16, cps_018 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 17, cps_018 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 18, cps_018 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 19, cps_018 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 20, cps_018 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 21, cps_018 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 22, cps_018 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 23, cps_018 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 24, cps_018 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 25, cps_018 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 26, cps_018 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 27, cps_018 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 28, cps_018 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 29, cps_018 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 30, cps_018 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 31, cps_018 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 32, cps_018 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 33, cps_018 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 34, cps_018 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 35, cps_018 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 36, cps_018 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 37, cps_018 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 38, cps_018 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 39, cps_018 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 40, cps_018 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 41, cps_018 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 42, cps_018 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 43, cps_018 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 44, cps_018 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 45, cps_018 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 46, cps_018 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 47, cps_018 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 48, cps_018 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_018 + 49, cps_018 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_018);

uint32_t cps_019[] = {
0x3bb, 0x3bc, 0x3bd, 0x3be, 0x3bf, 0x3c0, 0x3c1, 0x3c2, 0x3c3, 0x3c4, 0x3c5, 0x3c6, 0x3c7, 0x3c8, 0x3c9, 0x3ca, 0x3cb, 0x3cc, 0x3cd, 0x3ce, 0x3cf, 0x3d0, 0x3d1, 0x3d2, 0x3d3, 0x3d4, 0x3d5, 0x3d6, 0x3d7, 0x3d8, 0x3d9, 0x3da, 0x3db, 0x3dc, 0x3dd, 0x3de, 0x3df, 0x3e0, 0x3e1, 0x3e2, 0x3e3, 0x3e4, 0x3e5, 0x3e6, 0x3e7, 0x3e8, 0x3e9, 0x3ea, 0x3eb, 0x3ec
};

void BM_collation_element_lookup_019(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 0, cps_019 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 1, cps_019 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 2, cps_019 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 3, cps_019 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 4, cps_019 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 5, cps_019 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 6, cps_019 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 7, cps_019 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 8, cps_019 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 9, cps_019 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 10, cps_019 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 11, cps_019 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 12, cps_019 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 13, cps_019 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 14, cps_019 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 15, cps_019 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 16, cps_019 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 17, cps_019 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 18, cps_019 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 19, cps_019 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 20, cps_019 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 21, cps_019 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 22, cps_019 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 23, cps_019 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 24, cps_019 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 25, cps_019 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 26, cps_019 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 27, cps_019 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 28, cps_019 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 29, cps_019 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 30, cps_019 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 31, cps_019 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 32, cps_019 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 33, cps_019 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 34, cps_019 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 35, cps_019 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 36, cps_019 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 37, cps_019 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 38, cps_019 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 39, cps_019 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 40, cps_019 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 41, cps_019 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 42, cps_019 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 43, cps_019 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 44, cps_019 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 45, cps_019 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 46, cps_019 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 47, cps_019 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 48, cps_019 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_019 + 49, cps_019 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_019);

uint32_t cps_020[] = {
0x3ed, 0x3ee, 0x3ef, 0x3f0, 0x3f1, 0x3f2, 0x3f3, 0x3f4, 0x3f5, 0x3f6, 0x3f7, 0x3f8, 0x3f9, 0x3fa, 0x3fb, 0x3fc, 0x3fd, 0x3fe, 0x3ff, 0x400, 0x401, 0x402, 0x403, 0x404, 0x405, 0x406, 0x407, 0x408, 0x409, 0x40a, 0x40b, 0x40c, 0x40d, 0x40e, 0x40f, 0x410, 0x411, 0x412, 0x413, 0x414, 0x415, 0x416, 0x417, 0x418, 0x418, 0x306, 0x419, 0x41a, 0x41b, 0x41c, 0x41d
};

void BM_collation_element_lookup_020(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 0, cps_020 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 1, cps_020 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 2, cps_020 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 3, cps_020 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 4, cps_020 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 5, cps_020 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 6, cps_020 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 7, cps_020 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 8, cps_020 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 9, cps_020 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 10, cps_020 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 11, cps_020 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 12, cps_020 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 13, cps_020 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 14, cps_020 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 15, cps_020 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 16, cps_020 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 17, cps_020 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 18, cps_020 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 19, cps_020 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 20, cps_020 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 21, cps_020 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 22, cps_020 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 23, cps_020 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 24, cps_020 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 25, cps_020 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 26, cps_020 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 27, cps_020 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 28, cps_020 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 29, cps_020 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 30, cps_020 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 31, cps_020 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 32, cps_020 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 33, cps_020 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 34, cps_020 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 35, cps_020 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 36, cps_020 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 37, cps_020 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 38, cps_020 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 39, cps_020 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 40, cps_020 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 41, cps_020 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 42, cps_020 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 43, cps_020 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 44, cps_020 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 46, cps_020 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 47, cps_020 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 48, cps_020 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 49, cps_020 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_020 + 50, cps_020 + 51));
    }
}
BENCHMARK(BM_collation_element_lookup_020);

uint32_t cps_021[] = {
0x41e, 0x41f, 0x420, 0x421, 0x422, 0x423, 0x424, 0x425, 0x426, 0x427, 0x428, 0x429, 0x42a, 0x42b, 0x42c, 0x42d, 0x42e, 0x42f, 0x430, 0x431, 0x432, 0x433, 0x434, 0x435, 0x436, 0x437, 0x438, 0x438, 0x306, 0x439, 0x43a, 0x43b, 0x43c, 0x43d, 0x43e, 0x43f, 0x440, 0x441, 0x442, 0x443, 0x444, 0x445, 0x446, 0x447, 0x448, 0x449, 0x44a, 0x44b, 0x44c, 0x44d, 0x44e
};

void BM_collation_element_lookup_021(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 0, cps_021 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 1, cps_021 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 2, cps_021 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 3, cps_021 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 4, cps_021 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 5, cps_021 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 6, cps_021 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 7, cps_021 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 8, cps_021 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 9, cps_021 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 10, cps_021 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 11, cps_021 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 12, cps_021 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 13, cps_021 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 14, cps_021 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 15, cps_021 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 16, cps_021 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 17, cps_021 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 18, cps_021 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 19, cps_021 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 20, cps_021 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 21, cps_021 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 22, cps_021 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 23, cps_021 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 24, cps_021 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 25, cps_021 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 26, cps_021 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 27, cps_021 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 29, cps_021 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 30, cps_021 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 31, cps_021 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 32, cps_021 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 33, cps_021 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 34, cps_021 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 35, cps_021 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 36, cps_021 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 37, cps_021 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 38, cps_021 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 39, cps_021 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 40, cps_021 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 41, cps_021 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 42, cps_021 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 43, cps_021 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 44, cps_021 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 45, cps_021 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 46, cps_021 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 47, cps_021 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 48, cps_021 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 49, cps_021 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_021 + 50, cps_021 + 51));
    }
}
BENCHMARK(BM_collation_element_lookup_021);

uint32_t cps_022[] = {
0x44f, 0x450, 0x451, 0x452, 0x453, 0x454, 0x455, 0x456, 0x457, 0x458, 0x459, 0x45a, 0x45b, 0x45c, 0x45d, 0x45e, 0x45f, 0x460, 0x461, 0x462, 0x463, 0x464, 0x465, 0x466, 0x467, 0x468, 0x469, 0x46a, 0x46b, 0x46c, 0x46d, 0x46e, 0x46f, 0x470, 0x471, 0x472, 0x473, 0x474, 0x475, 0x476, 0x477, 0x478, 0x479, 0x47a, 0x47b, 0x47c, 0x47d, 0x47e, 0x47f, 0x480
};

void BM_collation_element_lookup_022(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 0, cps_022 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 1, cps_022 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 2, cps_022 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 3, cps_022 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 4, cps_022 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 5, cps_022 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 6, cps_022 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 7, cps_022 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 8, cps_022 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 9, cps_022 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 10, cps_022 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 11, cps_022 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 12, cps_022 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 13, cps_022 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 14, cps_022 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 15, cps_022 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 16, cps_022 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 17, cps_022 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 18, cps_022 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 19, cps_022 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 20, cps_022 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 21, cps_022 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 22, cps_022 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 23, cps_022 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 24, cps_022 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 25, cps_022 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 26, cps_022 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 27, cps_022 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 28, cps_022 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 29, cps_022 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 30, cps_022 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 31, cps_022 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 32, cps_022 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 33, cps_022 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 34, cps_022 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 35, cps_022 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 36, cps_022 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 37, cps_022 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 38, cps_022 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 39, cps_022 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 40, cps_022 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 41, cps_022 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 42, cps_022 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 43, cps_022 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 44, cps_022 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 45, cps_022 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 46, cps_022 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 47, cps_022 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 48, cps_022 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_022 + 49, cps_022 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_022);

uint32_t cps_023[] = {
0x481, 0x482, 0x483, 0x484, 0x485, 0x486, 0x487, 0x488, 0x489, 0x48a, 0x48b, 0x48c, 0x48d, 0x48e, 0x48f, 0x490, 0x491, 0x492, 0x493, 0x494, 0x495, 0x496, 0x497, 0x498, 0x499, 0x49a, 0x49b, 0x49c, 0x49d, 0x49e, 0x49f, 0x4a0, 0x4a1, 0x4a2, 0x4a3, 0x4a4, 0x4a5, 0x4a6, 0x4a7, 0x4a8, 0x4a9, 0x4aa, 0x4ab, 0x4ac, 0x4ad, 0x4ae, 0x4af, 0x4b0, 0x4b1, 0x4b2
};

void BM_collation_element_lookup_023(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 0, cps_023 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 1, cps_023 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 2, cps_023 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 3, cps_023 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 4, cps_023 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 5, cps_023 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 6, cps_023 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 7, cps_023 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 8, cps_023 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 9, cps_023 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 10, cps_023 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 11, cps_023 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 12, cps_023 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 13, cps_023 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 14, cps_023 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 15, cps_023 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 16, cps_023 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 17, cps_023 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 18, cps_023 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 19, cps_023 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 20, cps_023 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 21, cps_023 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 22, cps_023 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 23, cps_023 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 24, cps_023 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 25, cps_023 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 26, cps_023 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 27, cps_023 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 28, cps_023 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 29, cps_023 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 30, cps_023 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 31, cps_023 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 32, cps_023 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 33, cps_023 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 34, cps_023 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 35, cps_023 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 36, cps_023 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 37, cps_023 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 38, cps_023 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 39, cps_023 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 40, cps_023 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 41, cps_023 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 42, cps_023 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 43, cps_023 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 44, cps_023 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 45, cps_023 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 46, cps_023 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 47, cps_023 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 48, cps_023 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_023 + 49, cps_023 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_023);

uint32_t cps_024[] = {
0x4b3, 0x4b4, 0x4b5, 0x4b6, 0x4b7, 0x4b8, 0x4b9, 0x4ba, 0x4bb, 0x4bc, 0x4bd, 0x4be, 0x4bf, 0x4c0, 0x4c1, 0x4c2, 0x4c3, 0x4c4, 0x4c5, 0x4c6, 0x4c7, 0x4c8, 0x4c9, 0x4ca, 0x4cb, 0x4cc, 0x4cd, 0x4ce, 0x4cf, 0x4d0, 0x4d1, 0x4d2, 0x4d3, 0x4d4, 0x4d5, 0x4d6, 0x4d7, 0x4d8, 0x4d9, 0x4da, 0x4db, 0x4dc, 0x4dd, 0x4de, 0x4df, 0x4e0, 0x4e1, 0x4e2, 0x4e3, 0x4e4
};

void BM_collation_element_lookup_024(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 0, cps_024 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 1, cps_024 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 2, cps_024 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 3, cps_024 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 4, cps_024 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 5, cps_024 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 6, cps_024 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 7, cps_024 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 8, cps_024 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 9, cps_024 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 10, cps_024 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 11, cps_024 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 12, cps_024 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 13, cps_024 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 14, cps_024 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 15, cps_024 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 16, cps_024 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 17, cps_024 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 18, cps_024 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 19, cps_024 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 20, cps_024 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 21, cps_024 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 22, cps_024 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 23, cps_024 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 24, cps_024 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 25, cps_024 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 26, cps_024 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 27, cps_024 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 28, cps_024 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 29, cps_024 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 30, cps_024 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 31, cps_024 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 32, cps_024 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 33, cps_024 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 34, cps_024 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 35, cps_024 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 36, cps_024 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 37, cps_024 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 38, cps_024 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 39, cps_024 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 40, cps_024 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 41, cps_024 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 42, cps_024 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 43, cps_024 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 44, cps_024 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 45, cps_024 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 46, cps_024 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 47, cps_024 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 48, cps_024 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_024 + 49, cps_024 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_024);

uint32_t cps_025[] = {
0x4e5, 0x4e6, 0x4e7, 0x4e8, 0x4e9, 0x4ea, 0x4eb, 0x4ec, 0x4ed, 0x4ee, 0x4ef, 0x4f0, 0x4f1, 0x4f2, 0x4f3, 0x4f4, 0x4f5, 0x4f6, 0x4f7, 0x4f8, 0x4f9, 0x4fa, 0x4fb, 0x4fc, 0x4fd, 0x4fe, 0x4ff, 0x500, 0x501, 0x502, 0x503, 0x504, 0x505, 0x506, 0x507, 0x508, 0x509, 0x50a, 0x50b, 0x50c, 0x50d, 0x50e, 0x50f, 0x510, 0x511, 0x512, 0x513, 0x514, 0x515, 0x516
};

void BM_collation_element_lookup_025(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 0, cps_025 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 1, cps_025 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 2, cps_025 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 3, cps_025 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 4, cps_025 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 5, cps_025 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 6, cps_025 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 7, cps_025 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 8, cps_025 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 9, cps_025 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 10, cps_025 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 11, cps_025 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 12, cps_025 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 13, cps_025 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 14, cps_025 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 15, cps_025 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 16, cps_025 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 17, cps_025 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 18, cps_025 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 19, cps_025 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 20, cps_025 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 21, cps_025 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 22, cps_025 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 23, cps_025 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 24, cps_025 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 25, cps_025 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 26, cps_025 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 27, cps_025 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 28, cps_025 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 29, cps_025 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 30, cps_025 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 31, cps_025 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 32, cps_025 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 33, cps_025 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 34, cps_025 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 35, cps_025 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 36, cps_025 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 37, cps_025 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 38, cps_025 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 39, cps_025 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 40, cps_025 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 41, cps_025 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 42, cps_025 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 43, cps_025 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 44, cps_025 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 45, cps_025 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 46, cps_025 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 47, cps_025 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 48, cps_025 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_025 + 49, cps_025 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_025);

uint32_t cps_026[] = {
0x517, 0x518, 0x519, 0x51a, 0x51b, 0x51c, 0x51d, 0x51e, 0x51f, 0x520, 0x521, 0x522, 0x523, 0x524, 0x525, 0x526, 0x527, 0x528, 0x529, 0x52a, 0x52b, 0x52c, 0x52d, 0x52e, 0x52f, 0x531, 0x532, 0x533, 0x534, 0x535, 0x536, 0x537, 0x538, 0x539, 0x53a, 0x53b, 0x53c, 0x53d, 0x53e, 0x53f, 0x540, 0x541, 0x542, 0x543, 0x544, 0x545, 0x546, 0x547, 0x548, 0x549
};

void BM_collation_element_lookup_026(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 0, cps_026 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 1, cps_026 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 2, cps_026 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 3, cps_026 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 4, cps_026 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 5, cps_026 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 6, cps_026 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 7, cps_026 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 8, cps_026 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 9, cps_026 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 10, cps_026 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 11, cps_026 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 12, cps_026 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 13, cps_026 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 14, cps_026 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 15, cps_026 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 16, cps_026 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 17, cps_026 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 18, cps_026 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 19, cps_026 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 20, cps_026 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 21, cps_026 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 22, cps_026 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 23, cps_026 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 24, cps_026 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 25, cps_026 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 26, cps_026 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 27, cps_026 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 28, cps_026 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 29, cps_026 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 30, cps_026 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 31, cps_026 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 32, cps_026 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 33, cps_026 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 34, cps_026 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 35, cps_026 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 36, cps_026 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 37, cps_026 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 38, cps_026 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 39, cps_026 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 40, cps_026 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 41, cps_026 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 42, cps_026 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 43, cps_026 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 44, cps_026 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 45, cps_026 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 46, cps_026 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 47, cps_026 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 48, cps_026 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_026 + 49, cps_026 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_026);

uint32_t cps_027[] = {
0x54a, 0x54b, 0x54c, 0x54d, 0x54e, 0x54f, 0x550, 0x551, 0x552, 0x553, 0x554, 0x555, 0x556, 0x559, 0x55a, 0x55b, 0x55c, 0x55d, 0x55e, 0x55f, 0x561, 0x562, 0x563, 0x564, 0x565, 0x566, 0x567, 0x568, 0x569, 0x56a, 0x56b, 0x56c, 0x56d, 0x56e, 0x56f, 0x570, 0x571, 0x572, 0x573, 0x574, 0x575, 0x576, 0x577, 0x578, 0x579, 0x57a, 0x57b, 0x57c, 0x57d, 0x57e
};

void BM_collation_element_lookup_027(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 0, cps_027 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 1, cps_027 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 2, cps_027 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 3, cps_027 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 4, cps_027 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 5, cps_027 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 6, cps_027 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 7, cps_027 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 8, cps_027 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 9, cps_027 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 10, cps_027 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 11, cps_027 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 12, cps_027 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 13, cps_027 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 14, cps_027 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 15, cps_027 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 16, cps_027 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 17, cps_027 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 18, cps_027 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 19, cps_027 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 20, cps_027 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 21, cps_027 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 22, cps_027 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 23, cps_027 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 24, cps_027 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 25, cps_027 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 26, cps_027 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 27, cps_027 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 28, cps_027 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 29, cps_027 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 30, cps_027 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 31, cps_027 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 32, cps_027 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 33, cps_027 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 34, cps_027 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 35, cps_027 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 36, cps_027 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 37, cps_027 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 38, cps_027 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 39, cps_027 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 40, cps_027 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 41, cps_027 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 42, cps_027 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 43, cps_027 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 44, cps_027 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 45, cps_027 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 46, cps_027 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 47, cps_027 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 48, cps_027 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_027 + 49, cps_027 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_027);

uint32_t cps_028[] = {
0x57f, 0x580, 0x581, 0x582, 0x583, 0x584, 0x585, 0x586, 0x587, 0x589, 0x58a, 0x58d, 0x58e, 0x58f, 0x591, 0x592, 0x593, 0x594, 0x595, 0x596, 0x597, 0x598, 0x599, 0x59a, 0x59b, 0x59c, 0x59d, 0x59e, 0x59f, 0x5a0, 0x5a1, 0x5a2, 0x5a3, 0x5a4, 0x5a5, 0x5a6, 0x5a7, 0x5a8, 0x5a9, 0x5aa, 0x5ab, 0x5ac, 0x5ad, 0x5ae, 0x5af, 0x5b0, 0x5b1, 0x5b2, 0x5b3, 0x5b4
};

void BM_collation_element_lookup_028(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 0, cps_028 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 1, cps_028 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 2, cps_028 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 3, cps_028 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 4, cps_028 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 5, cps_028 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 6, cps_028 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 7, cps_028 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 8, cps_028 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 9, cps_028 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 10, cps_028 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 11, cps_028 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 12, cps_028 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 13, cps_028 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 14, cps_028 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 15, cps_028 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 16, cps_028 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 17, cps_028 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 18, cps_028 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 19, cps_028 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 20, cps_028 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 21, cps_028 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 22, cps_028 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 23, cps_028 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 24, cps_028 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 25, cps_028 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 26, cps_028 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 27, cps_028 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 28, cps_028 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 29, cps_028 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 30, cps_028 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 31, cps_028 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 32, cps_028 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 33, cps_028 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 34, cps_028 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 35, cps_028 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 36, cps_028 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 37, cps_028 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 38, cps_028 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 39, cps_028 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 40, cps_028 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 41, cps_028 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 42, cps_028 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 43, cps_028 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 44, cps_028 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 45, cps_028 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 46, cps_028 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 47, cps_028 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 48, cps_028 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_028 + 49, cps_028 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_028);

uint32_t cps_029[] = {
0x5b5, 0x5b6, 0x5b7, 0x5b8, 0x5b9, 0x5ba, 0x5bb, 0x5bc, 0x5bd, 0x5be, 0x5bf, 0x5c0, 0x5c1, 0x5c2, 0x5c3, 0x5c4, 0x5c5, 0x5c6, 0x5c7, 0x5d0, 0x5d1, 0x5d2, 0x5d3, 0x5d4, 0x5d5, 0x5d6, 0x5d7, 0x5d8, 0x5d9, 0x5da, 0x5db, 0x5dc, 0x5dd, 0x5de, 0x5df, 0x5e0, 0x5e1, 0x5e2, 0x5e3, 0x5e4, 0x5e5, 0x5e6, 0x5e7, 0x5e8, 0x5e9, 0x5ea, 0x5f0, 0x5f1, 0x5f2, 0x5f3
};

void BM_collation_element_lookup_029(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 0, cps_029 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 1, cps_029 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 2, cps_029 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 3, cps_029 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 4, cps_029 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 5, cps_029 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 6, cps_029 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 7, cps_029 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 8, cps_029 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 9, cps_029 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 10, cps_029 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 11, cps_029 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 12, cps_029 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 13, cps_029 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 14, cps_029 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 15, cps_029 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 16, cps_029 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 17, cps_029 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 18, cps_029 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 19, cps_029 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 20, cps_029 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 21, cps_029 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 22, cps_029 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 23, cps_029 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 24, cps_029 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 25, cps_029 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 26, cps_029 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 27, cps_029 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 28, cps_029 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 29, cps_029 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 30, cps_029 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 31, cps_029 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 32, cps_029 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 33, cps_029 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 34, cps_029 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 35, cps_029 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 36, cps_029 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 37, cps_029 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 38, cps_029 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 39, cps_029 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 40, cps_029 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 41, cps_029 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 42, cps_029 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 43, cps_029 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 44, cps_029 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 45, cps_029 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 46, cps_029 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 47, cps_029 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 48, cps_029 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_029 + 49, cps_029 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_029);

uint32_t cps_030[] = {
0x5f4, 0x600, 0x601, 0x602, 0x603, 0x604, 0x605, 0x606, 0x607, 0x608, 0x609, 0x60a, 0x60b, 0x60c, 0x60d, 0x60e, 0x60f, 0x610, 0x611, 0x612, 0x613, 0x614, 0x615, 0x616, 0x617, 0x618, 0x619, 0x61a, 0x61b, 0x61c, 0x61e, 0x61f, 0x620, 0x621, 0x622, 0x623, 0x624, 0x625, 0x626, 0x627, 0x627, 0x653, 0x627, 0x654, 0x627, 0x655, 0x628, 0x629, 0x62a, 0x62b, 0x62c, 0x62d, 0x62e
};

void BM_collation_element_lookup_030(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 0, cps_030 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 1, cps_030 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 2, cps_030 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 3, cps_030 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 4, cps_030 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 5, cps_030 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 6, cps_030 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 7, cps_030 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 8, cps_030 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 9, cps_030 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 10, cps_030 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 11, cps_030 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 12, cps_030 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 13, cps_030 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 14, cps_030 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 15, cps_030 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 16, cps_030 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 17, cps_030 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 18, cps_030 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 19, cps_030 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 20, cps_030 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 21, cps_030 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 22, cps_030 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 23, cps_030 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 24, cps_030 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 25, cps_030 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 26, cps_030 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 27, cps_030 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 28, cps_030 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 29, cps_030 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 30, cps_030 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 31, cps_030 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 32, cps_030 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 33, cps_030 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 34, cps_030 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 35, cps_030 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 36, cps_030 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 37, cps_030 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 38, cps_030 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 39, cps_030 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 40, cps_030 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 42, cps_030 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 44, cps_030 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 46, cps_030 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 47, cps_030 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 48, cps_030 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 49, cps_030 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 50, cps_030 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 51, cps_030 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_030 + 52, cps_030 + 53));
    }
}
BENCHMARK(BM_collation_element_lookup_030);

uint32_t cps_031[] = {
0x62f, 0x630, 0x631, 0x632, 0x633, 0x634, 0x635, 0x636, 0x637, 0x638, 0x639, 0x63a, 0x63b, 0x63c, 0x63d, 0x63e, 0x63f, 0x640, 0x641, 0x642, 0x643, 0x644, 0x645, 0x646, 0x647, 0x648, 0x648, 0x654, 0x649, 0x64a, 0x64a, 0x654, 0x64b, 0x64c, 0x64d, 0x64e, 0x64f, 0x650, 0x651, 0x652, 0x653, 0x654, 0x655, 0x656, 0x657, 0x658, 0x659, 0x65a, 0x65b, 0x65c, 0x65d, 0x65e
};

void BM_collation_element_lookup_031(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 0, cps_031 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 1, cps_031 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 2, cps_031 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 3, cps_031 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 4, cps_031 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 5, cps_031 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 6, cps_031 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 7, cps_031 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 8, cps_031 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 9, cps_031 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 10, cps_031 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 11, cps_031 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 12, cps_031 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 13, cps_031 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 14, cps_031 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 15, cps_031 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 16, cps_031 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 17, cps_031 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 18, cps_031 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 19, cps_031 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 20, cps_031 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 21, cps_031 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 22, cps_031 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 23, cps_031 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 24, cps_031 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 25, cps_031 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 26, cps_031 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 28, cps_031 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 29, cps_031 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 30, cps_031 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 32, cps_031 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 33, cps_031 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 34, cps_031 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 35, cps_031 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 36, cps_031 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 37, cps_031 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 38, cps_031 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 39, cps_031 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 40, cps_031 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 41, cps_031 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 42, cps_031 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 43, cps_031 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 44, cps_031 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 45, cps_031 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 46, cps_031 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 47, cps_031 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 48, cps_031 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 49, cps_031 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 50, cps_031 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_031 + 51, cps_031 + 52));
    }
}
BENCHMARK(BM_collation_element_lookup_031);

uint32_t cps_032[] = {
0x65f, 0x660, 0x661, 0x662, 0x663, 0x664, 0x665, 0x666, 0x667, 0x668, 0x669, 0x66a, 0x66b, 0x66c, 0x66d, 0x66e, 0x66f, 0x670, 0x671, 0x672, 0x673, 0x674, 0x675, 0x676, 0x677, 0x678, 0x679, 0x67a, 0x67b, 0x67c, 0x67d, 0x67e, 0x67f, 0x680, 0x681, 0x682, 0x683, 0x684, 0x685, 0x686, 0x687, 0x688, 0x689, 0x68a, 0x68b, 0x68c, 0x68d, 0x68e, 0x68f, 0x690
};

void BM_collation_element_lookup_032(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 0, cps_032 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 1, cps_032 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 2, cps_032 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 3, cps_032 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 4, cps_032 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 5, cps_032 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 6, cps_032 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 7, cps_032 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 8, cps_032 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 9, cps_032 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 10, cps_032 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 11, cps_032 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 12, cps_032 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 13, cps_032 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 14, cps_032 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 15, cps_032 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 16, cps_032 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 17, cps_032 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 18, cps_032 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 19, cps_032 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 20, cps_032 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 21, cps_032 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 22, cps_032 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 23, cps_032 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 24, cps_032 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 25, cps_032 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 26, cps_032 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 27, cps_032 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 28, cps_032 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 29, cps_032 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 30, cps_032 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 31, cps_032 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 32, cps_032 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 33, cps_032 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 34, cps_032 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 35, cps_032 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 36, cps_032 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 37, cps_032 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 38, cps_032 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 39, cps_032 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 40, cps_032 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 41, cps_032 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 42, cps_032 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 43, cps_032 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 44, cps_032 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 45, cps_032 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 46, cps_032 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 47, cps_032 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 48, cps_032 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_032 + 49, cps_032 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_032);

uint32_t cps_033[] = {
0x691, 0x692, 0x693, 0x694, 0x695, 0x696, 0x697, 0x698, 0x699, 0x69a, 0x69b, 0x69c, 0x69d, 0x69e, 0x69f, 0x6a0, 0x6a1, 0x6a2, 0x6a3, 0x6a4, 0x6a5, 0x6a6, 0x6a7, 0x6a8, 0x6a9, 0x6aa, 0x6ab, 0x6ac, 0x6ad, 0x6ae, 0x6af, 0x6b0, 0x6b1, 0x6b2, 0x6b3, 0x6b4, 0x6b5, 0x6b6, 0x6b7, 0x6b8, 0x6b9, 0x6ba, 0x6bb, 0x6bc, 0x6bd, 0x6be, 0x6bf, 0x6c0, 0x6c1, 0x6c2
};

void BM_collation_element_lookup_033(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 0, cps_033 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 1, cps_033 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 2, cps_033 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 3, cps_033 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 4, cps_033 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 5, cps_033 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 6, cps_033 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 7, cps_033 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 8, cps_033 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 9, cps_033 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 10, cps_033 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 11, cps_033 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 12, cps_033 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 13, cps_033 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 14, cps_033 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 15, cps_033 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 16, cps_033 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 17, cps_033 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 18, cps_033 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 19, cps_033 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 20, cps_033 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 21, cps_033 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 22, cps_033 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 23, cps_033 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 24, cps_033 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 25, cps_033 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 26, cps_033 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 27, cps_033 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 28, cps_033 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 29, cps_033 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 30, cps_033 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 31, cps_033 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 32, cps_033 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 33, cps_033 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 34, cps_033 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 35, cps_033 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 36, cps_033 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 37, cps_033 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 38, cps_033 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 39, cps_033 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 40, cps_033 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 41, cps_033 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 42, cps_033 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 43, cps_033 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 44, cps_033 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 45, cps_033 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 46, cps_033 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 47, cps_033 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 48, cps_033 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_033 + 49, cps_033 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_033);

uint32_t cps_034[] = {
0x6c3, 0x6c4, 0x6c5, 0x6c6, 0x6c7, 0x6c8, 0x6c9, 0x6ca, 0x6cb, 0x6cc, 0x6cd, 0x6ce, 0x6cf, 0x6d0, 0x6d1, 0x6d2, 0x6d3, 0x6d4, 0x6d5, 0x6d6, 0x6d7, 0x6d8, 0x6d9, 0x6da, 0x6db, 0x6dc, 0x6dd, 0x6de, 0x6df, 0x6e0, 0x6e1, 0x6e2, 0x6e3, 0x6e4, 0x6e5, 0x6e6, 0x6e7, 0x6e8, 0x6e9, 0x6ea, 0x6eb, 0x6ec, 0x6ed, 0x6ee, 0x6ef, 0x6f0, 0x6f1, 0x6f2, 0x6f3, 0x6f4
};

void BM_collation_element_lookup_034(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 0, cps_034 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 1, cps_034 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 2, cps_034 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 3, cps_034 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 4, cps_034 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 5, cps_034 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 6, cps_034 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 7, cps_034 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 8, cps_034 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 9, cps_034 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 10, cps_034 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 11, cps_034 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 12, cps_034 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 13, cps_034 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 14, cps_034 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 15, cps_034 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 16, cps_034 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 17, cps_034 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 18, cps_034 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 19, cps_034 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 20, cps_034 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 21, cps_034 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 22, cps_034 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 23, cps_034 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 24, cps_034 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 25, cps_034 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 26, cps_034 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 27, cps_034 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 28, cps_034 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 29, cps_034 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 30, cps_034 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 31, cps_034 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 32, cps_034 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 33, cps_034 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 34, cps_034 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 35, cps_034 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 36, cps_034 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 37, cps_034 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 38, cps_034 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 39, cps_034 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 40, cps_034 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 41, cps_034 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 42, cps_034 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 43, cps_034 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 44, cps_034 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 45, cps_034 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 46, cps_034 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 47, cps_034 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 48, cps_034 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_034 + 49, cps_034 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_034);

uint32_t cps_035[] = {
0x6f5, 0x6f6, 0x6f7, 0x6f8, 0x6f9, 0x6fa, 0x6fb, 0x6fc, 0x6fd, 0x6fe, 0x6ff, 0x700, 0x701, 0x702, 0x703, 0x704, 0x705, 0x706, 0x707, 0x708, 0x709, 0x70a, 0x70b, 0x70c, 0x70d, 0x70f, 0x710, 0x711, 0x712, 0x713, 0x714, 0x715, 0x716, 0x717, 0x718, 0x719, 0x71a, 0x71b, 0x71c, 0x71d, 0x71e, 0x71f, 0x720, 0x721, 0x722, 0x723, 0x724, 0x725, 0x726, 0x727
};

void BM_collation_element_lookup_035(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 0, cps_035 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 1, cps_035 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 2, cps_035 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 3, cps_035 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 4, cps_035 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 5, cps_035 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 6, cps_035 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 7, cps_035 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 8, cps_035 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 9, cps_035 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 10, cps_035 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 11, cps_035 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 12, cps_035 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 13, cps_035 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 14, cps_035 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 15, cps_035 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 16, cps_035 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 17, cps_035 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 18, cps_035 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 19, cps_035 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 20, cps_035 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 21, cps_035 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 22, cps_035 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 23, cps_035 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 24, cps_035 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 25, cps_035 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 26, cps_035 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 27, cps_035 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 28, cps_035 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 29, cps_035 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 30, cps_035 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 31, cps_035 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 32, cps_035 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 33, cps_035 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 34, cps_035 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 35, cps_035 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 36, cps_035 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 37, cps_035 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 38, cps_035 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 39, cps_035 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 40, cps_035 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 41, cps_035 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 42, cps_035 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 43, cps_035 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 44, cps_035 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 45, cps_035 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 46, cps_035 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 47, cps_035 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 48, cps_035 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_035 + 49, cps_035 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_035);

uint32_t cps_036[] = {
0x728, 0x729, 0x72a, 0x72b, 0x72c, 0x72d, 0x72e, 0x72f, 0x730, 0x731, 0x732, 0x733, 0x734, 0x735, 0x736, 0x737, 0x738, 0x739, 0x73a, 0x73b, 0x73c, 0x73d, 0x73e, 0x73f, 0x740, 0x741, 0x742, 0x743, 0x744, 0x745, 0x746, 0x747, 0x748, 0x749, 0x74a, 0x74d, 0x74e, 0x74f, 0x750, 0x751, 0x752, 0x753, 0x754, 0x755, 0x756, 0x757, 0x758, 0x759, 0x75a, 0x75b
};

void BM_collation_element_lookup_036(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 0, cps_036 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 1, cps_036 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 2, cps_036 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 3, cps_036 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 4, cps_036 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 5, cps_036 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 6, cps_036 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 7, cps_036 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 8, cps_036 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 9, cps_036 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 10, cps_036 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 11, cps_036 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 12, cps_036 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 13, cps_036 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 14, cps_036 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 15, cps_036 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 16, cps_036 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 17, cps_036 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 18, cps_036 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 19, cps_036 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 20, cps_036 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 21, cps_036 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 22, cps_036 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 23, cps_036 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 24, cps_036 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 25, cps_036 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 26, cps_036 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 27, cps_036 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 28, cps_036 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 29, cps_036 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 30, cps_036 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 31, cps_036 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 32, cps_036 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 33, cps_036 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 34, cps_036 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 35, cps_036 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 36, cps_036 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 37, cps_036 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 38, cps_036 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 39, cps_036 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 40, cps_036 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 41, cps_036 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 42, cps_036 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 43, cps_036 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 44, cps_036 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 45, cps_036 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 46, cps_036 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 47, cps_036 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 48, cps_036 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_036 + 49, cps_036 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_036);

uint32_t cps_037[] = {
0x75c, 0x75d, 0x75e, 0x75f, 0x760, 0x761, 0x762, 0x763, 0x764, 0x765, 0x766, 0x767, 0x768, 0x769, 0x76a, 0x76b, 0x76c, 0x76d, 0x76e, 0x76f, 0x770, 0x771, 0x772, 0x773, 0x774, 0x775, 0x776, 0x777, 0x778, 0x779, 0x77a, 0x77b, 0x77c, 0x77d, 0x77e, 0x77f, 0x780, 0x781, 0x782, 0x783, 0x784, 0x785, 0x786, 0x787, 0x788, 0x789, 0x78a, 0x78b, 0x78c, 0x78d
};

void BM_collation_element_lookup_037(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 0, cps_037 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 1, cps_037 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 2, cps_037 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 3, cps_037 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 4, cps_037 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 5, cps_037 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 6, cps_037 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 7, cps_037 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 8, cps_037 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 9, cps_037 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 10, cps_037 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 11, cps_037 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 12, cps_037 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 13, cps_037 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 14, cps_037 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 15, cps_037 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 16, cps_037 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 17, cps_037 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 18, cps_037 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 19, cps_037 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 20, cps_037 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 21, cps_037 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 22, cps_037 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 23, cps_037 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 24, cps_037 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 25, cps_037 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 26, cps_037 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 27, cps_037 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 28, cps_037 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 29, cps_037 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 30, cps_037 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 31, cps_037 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 32, cps_037 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 33, cps_037 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 34, cps_037 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 35, cps_037 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 36, cps_037 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 37, cps_037 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 38, cps_037 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 39, cps_037 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 40, cps_037 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 41, cps_037 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 42, cps_037 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 43, cps_037 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 44, cps_037 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 45, cps_037 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 46, cps_037 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 47, cps_037 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 48, cps_037 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_037 + 49, cps_037 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_037);

uint32_t cps_038[] = {
0x78e, 0x78f, 0x790, 0x791, 0x792, 0x793, 0x794, 0x795, 0x796, 0x797, 0x798, 0x799, 0x79a, 0x79b, 0x79c, 0x79d, 0x79e, 0x79f, 0x7a0, 0x7a1, 0x7a2, 0x7a3, 0x7a4, 0x7a5, 0x7a6, 0x7a7, 0x7a8, 0x7a9, 0x7aa, 0x7ab, 0x7ac, 0x7ad, 0x7ae, 0x7af, 0x7b0, 0x7b1, 0x7c0, 0x7c1, 0x7c2, 0x7c3, 0x7c4, 0x7c5, 0x7c6, 0x7c7, 0x7c8, 0x7c9, 0x7ca, 0x7cb, 0x7cc, 0x7cd
};

void BM_collation_element_lookup_038(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 0, cps_038 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 1, cps_038 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 2, cps_038 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 3, cps_038 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 4, cps_038 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 5, cps_038 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 6, cps_038 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 7, cps_038 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 8, cps_038 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 9, cps_038 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 10, cps_038 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 11, cps_038 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 12, cps_038 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 13, cps_038 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 14, cps_038 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 15, cps_038 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 16, cps_038 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 17, cps_038 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 18, cps_038 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 19, cps_038 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 20, cps_038 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 21, cps_038 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 22, cps_038 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 23, cps_038 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 24, cps_038 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 25, cps_038 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 26, cps_038 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 27, cps_038 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 28, cps_038 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 29, cps_038 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 30, cps_038 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 31, cps_038 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 32, cps_038 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 33, cps_038 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 34, cps_038 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 35, cps_038 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 36, cps_038 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 37, cps_038 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 38, cps_038 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 39, cps_038 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 40, cps_038 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 41, cps_038 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 42, cps_038 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 43, cps_038 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 44, cps_038 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 45, cps_038 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 46, cps_038 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 47, cps_038 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 48, cps_038 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_038 + 49, cps_038 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_038);

uint32_t cps_039[] = {
0x7ce, 0x7cf, 0x7d0, 0x7d1, 0x7d2, 0x7d3, 0x7d4, 0x7d5, 0x7d6, 0x7d7, 0x7d8, 0x7d9, 0x7da, 0x7db, 0x7dc, 0x7dd, 0x7de, 0x7df, 0x7e0, 0x7e1, 0x7e2, 0x7e3, 0x7e4, 0x7e5, 0x7e6, 0x7e7, 0x7e8, 0x7e9, 0x7ea, 0x7eb, 0x7ec, 0x7ed, 0x7ee, 0x7ef, 0x7f0, 0x7f1, 0x7f2, 0x7f3, 0x7f4, 0x7f5, 0x7f6, 0x7f7, 0x7f8, 0x7f9, 0x7fa, 0x800, 0x801, 0x802, 0x803, 0x804
};

void BM_collation_element_lookup_039(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 0, cps_039 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 1, cps_039 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 2, cps_039 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 3, cps_039 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 4, cps_039 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 5, cps_039 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 6, cps_039 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 7, cps_039 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 8, cps_039 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 9, cps_039 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 10, cps_039 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 11, cps_039 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 12, cps_039 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 13, cps_039 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 14, cps_039 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 15, cps_039 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 16, cps_039 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 17, cps_039 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 18, cps_039 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 19, cps_039 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 20, cps_039 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 21, cps_039 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 22, cps_039 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 23, cps_039 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 24, cps_039 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 25, cps_039 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 26, cps_039 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 27, cps_039 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 28, cps_039 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 29, cps_039 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 30, cps_039 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 31, cps_039 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 32, cps_039 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 33, cps_039 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 34, cps_039 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 35, cps_039 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 36, cps_039 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 37, cps_039 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 38, cps_039 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 39, cps_039 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 40, cps_039 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 41, cps_039 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 42, cps_039 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 43, cps_039 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 44, cps_039 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 45, cps_039 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 46, cps_039 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 47, cps_039 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 48, cps_039 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_039 + 49, cps_039 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_039);

uint32_t cps_040[] = {
0x805, 0x806, 0x807, 0x808, 0x809, 0x80a, 0x80b, 0x80c, 0x80d, 0x80e, 0x80f, 0x810, 0x811, 0x812, 0x813, 0x814, 0x815, 0x816, 0x817, 0x818, 0x819, 0x81a, 0x81b, 0x81c, 0x81d, 0x81e, 0x81f, 0x820, 0x821, 0x822, 0x823, 0x824, 0x825, 0x826, 0x827, 0x828, 0x829, 0x82a, 0x82b, 0x82c, 0x82d, 0x830, 0x831, 0x832, 0x833, 0x834, 0x835, 0x836, 0x837, 0x838
};

void BM_collation_element_lookup_040(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 0, cps_040 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 1, cps_040 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 2, cps_040 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 3, cps_040 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 4, cps_040 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 5, cps_040 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 6, cps_040 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 7, cps_040 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 8, cps_040 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 9, cps_040 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 10, cps_040 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 11, cps_040 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 12, cps_040 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 13, cps_040 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 14, cps_040 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 15, cps_040 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 16, cps_040 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 17, cps_040 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 18, cps_040 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 19, cps_040 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 20, cps_040 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 21, cps_040 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 22, cps_040 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 23, cps_040 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 24, cps_040 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 25, cps_040 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 26, cps_040 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 27, cps_040 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 28, cps_040 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 29, cps_040 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 30, cps_040 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 31, cps_040 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 32, cps_040 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 33, cps_040 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 34, cps_040 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 35, cps_040 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 36, cps_040 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 37, cps_040 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 38, cps_040 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 39, cps_040 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 40, cps_040 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 41, cps_040 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 42, cps_040 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 43, cps_040 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 44, cps_040 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 45, cps_040 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 46, cps_040 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 47, cps_040 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 48, cps_040 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_040 + 49, cps_040 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_040);

uint32_t cps_041[] = {
0x839, 0x83a, 0x83b, 0x83c, 0x83d, 0x83e, 0x840, 0x841, 0x842, 0x843, 0x844, 0x845, 0x846, 0x847, 0x848, 0x849, 0x84a, 0x84b, 0x84c, 0x84d, 0x84e, 0x84f, 0x850, 0x851, 0x852, 0x853, 0x854, 0x855, 0x856, 0x857, 0x858, 0x859, 0x85a, 0x85b, 0x85e, 0x860, 0x861, 0x862, 0x863, 0x864, 0x865, 0x866, 0x867, 0x868, 0x869, 0x86a, 0x8a0, 0x8a1, 0x8a2, 0x8a3
};

void BM_collation_element_lookup_041(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 0, cps_041 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 1, cps_041 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 2, cps_041 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 3, cps_041 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 4, cps_041 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 5, cps_041 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 6, cps_041 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 7, cps_041 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 8, cps_041 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 9, cps_041 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 10, cps_041 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 11, cps_041 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 12, cps_041 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 13, cps_041 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 14, cps_041 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 15, cps_041 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 16, cps_041 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 17, cps_041 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 18, cps_041 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 19, cps_041 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 20, cps_041 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 21, cps_041 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 22, cps_041 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 23, cps_041 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 24, cps_041 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 25, cps_041 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 26, cps_041 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 27, cps_041 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 28, cps_041 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 29, cps_041 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 30, cps_041 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 31, cps_041 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 32, cps_041 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 33, cps_041 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 34, cps_041 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 35, cps_041 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 36, cps_041 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 37, cps_041 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 38, cps_041 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 39, cps_041 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 40, cps_041 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 41, cps_041 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 42, cps_041 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 43, cps_041 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 44, cps_041 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 45, cps_041 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 46, cps_041 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 47, cps_041 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 48, cps_041 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_041 + 49, cps_041 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_041);

uint32_t cps_042[] = {
0x8a4, 0x8a5, 0x8a6, 0x8a7, 0x8a8, 0x8a9, 0x8aa, 0x8ab, 0x8ac, 0x8ad, 0x8ae, 0x8af, 0x8b0, 0x8b1, 0x8b2, 0x8b3, 0x8b4, 0x8b6, 0x8b7, 0x8b8, 0x8b9, 0x8ba, 0x8bb, 0x8bc, 0x8bd, 0x8d4, 0x8d5, 0x8d6, 0x8d7, 0x8d8, 0x8d9, 0x8da, 0x8db, 0x8dc, 0x8dd, 0x8de, 0x8df, 0x8e0, 0x8e1, 0x8e2, 0x8e3, 0x8e4, 0x8e5, 0x8e6, 0x8e7, 0x8e8, 0x8e9, 0x8ea, 0x8eb, 0x8ec
};

void BM_collation_element_lookup_042(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 0, cps_042 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 1, cps_042 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 2, cps_042 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 3, cps_042 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 4, cps_042 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 5, cps_042 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 6, cps_042 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 7, cps_042 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 8, cps_042 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 9, cps_042 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 10, cps_042 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 11, cps_042 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 12, cps_042 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 13, cps_042 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 14, cps_042 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 15, cps_042 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 16, cps_042 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 17, cps_042 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 18, cps_042 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 19, cps_042 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 20, cps_042 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 21, cps_042 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 22, cps_042 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 23, cps_042 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 24, cps_042 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 25, cps_042 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 26, cps_042 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 27, cps_042 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 28, cps_042 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 29, cps_042 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 30, cps_042 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 31, cps_042 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 32, cps_042 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 33, cps_042 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 34, cps_042 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 35, cps_042 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 36, cps_042 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 37, cps_042 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 38, cps_042 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 39, cps_042 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 40, cps_042 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 41, cps_042 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 42, cps_042 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 43, cps_042 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 44, cps_042 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 45, cps_042 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 46, cps_042 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 47, cps_042 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 48, cps_042 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_042 + 49, cps_042 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_042);

uint32_t cps_043[] = {
0x8ed, 0x8ee, 0x8ef, 0x8f0, 0x8f1, 0x8f2, 0x8f3, 0x8f4, 0x8f5, 0x8f6, 0x8f7, 0x8f8, 0x8f9, 0x8fa, 0x8fb, 0x8fc, 0x8fd, 0x8fe, 0x8ff, 0x900, 0x901, 0x902, 0x903, 0x904, 0x905, 0x906, 0x907, 0x908, 0x909, 0x90a, 0x90b, 0x90c, 0x90d, 0x90e, 0x90f, 0x910, 0x911, 0x912, 0x913, 0x914, 0x915, 0x916, 0x917, 0x918, 0x919, 0x91a, 0x91b, 0x91c, 0x91d, 0x91e
};

void BM_collation_element_lookup_043(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 0, cps_043 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 1, cps_043 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 2, cps_043 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 3, cps_043 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 4, cps_043 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 5, cps_043 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 6, cps_043 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 7, cps_043 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 8, cps_043 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 9, cps_043 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 10, cps_043 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 11, cps_043 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 12, cps_043 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 13, cps_043 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 14, cps_043 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 15, cps_043 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 16, cps_043 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 17, cps_043 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 18, cps_043 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 19, cps_043 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 20, cps_043 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 21, cps_043 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 22, cps_043 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 23, cps_043 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 24, cps_043 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 25, cps_043 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 26, cps_043 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 27, cps_043 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 28, cps_043 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 29, cps_043 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 30, cps_043 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 31, cps_043 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 32, cps_043 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 33, cps_043 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 34, cps_043 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 35, cps_043 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 36, cps_043 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 37, cps_043 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 38, cps_043 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 39, cps_043 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 40, cps_043 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 41, cps_043 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 42, cps_043 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 43, cps_043 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 44, cps_043 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 45, cps_043 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 46, cps_043 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 47, cps_043 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 48, cps_043 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_043 + 49, cps_043 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_043);

uint32_t cps_044[] = {
0x91f, 0x920, 0x921, 0x922, 0x923, 0x924, 0x925, 0x926, 0x927, 0x928, 0x929, 0x92a, 0x92b, 0x92c, 0x92d, 0x92e, 0x92f, 0x930, 0x931, 0x932, 0x933, 0x934, 0x935, 0x936, 0x937, 0x938, 0x939, 0x93a, 0x93b, 0x93c, 0x93d, 0x93e, 0x93f, 0x940, 0x941, 0x942, 0x943, 0x944, 0x945, 0x946, 0x947, 0x948, 0x949, 0x94a, 0x94b, 0x94c, 0x94d, 0x94e, 0x94f, 0x950
};

void BM_collation_element_lookup_044(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 0, cps_044 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 1, cps_044 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 2, cps_044 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 3, cps_044 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 4, cps_044 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 5, cps_044 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 6, cps_044 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 7, cps_044 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 8, cps_044 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 9, cps_044 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 10, cps_044 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 11, cps_044 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 12, cps_044 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 13, cps_044 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 14, cps_044 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 15, cps_044 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 16, cps_044 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 17, cps_044 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 18, cps_044 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 19, cps_044 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 20, cps_044 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 21, cps_044 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 22, cps_044 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 23, cps_044 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 24, cps_044 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 25, cps_044 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 26, cps_044 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 27, cps_044 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 28, cps_044 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 29, cps_044 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 30, cps_044 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 31, cps_044 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 32, cps_044 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 33, cps_044 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 34, cps_044 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 35, cps_044 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 36, cps_044 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 37, cps_044 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 38, cps_044 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 39, cps_044 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 40, cps_044 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 41, cps_044 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 42, cps_044 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 43, cps_044 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 44, cps_044 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 45, cps_044 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 46, cps_044 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 47, cps_044 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 48, cps_044 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_044 + 49, cps_044 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_044);

uint32_t cps_045[] = {
0x951, 0x952, 0x953, 0x954, 0x955, 0x956, 0x957, 0x958, 0x959, 0x95a, 0x95b, 0x95c, 0x95d, 0x95e, 0x95f, 0x960, 0x961, 0x962, 0x963, 0x964, 0x965, 0x966, 0x967, 0x968, 0x969, 0x96a, 0x96b, 0x96c, 0x96d, 0x96e, 0x96f, 0x970, 0x971, 0x972, 0x973, 0x974, 0x975, 0x976, 0x977, 0x978, 0x979, 0x97a, 0x97b, 0x97c, 0x97d, 0x97e, 0x97f, 0x980, 0x981, 0x982
};

void BM_collation_element_lookup_045(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 0, cps_045 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 1, cps_045 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 2, cps_045 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 3, cps_045 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 4, cps_045 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 5, cps_045 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 6, cps_045 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 7, cps_045 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 8, cps_045 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 9, cps_045 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 10, cps_045 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 11, cps_045 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 12, cps_045 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 13, cps_045 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 14, cps_045 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 15, cps_045 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 16, cps_045 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 17, cps_045 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 18, cps_045 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 19, cps_045 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 20, cps_045 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 21, cps_045 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 22, cps_045 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 23, cps_045 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 24, cps_045 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 25, cps_045 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 26, cps_045 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 27, cps_045 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 28, cps_045 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 29, cps_045 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 30, cps_045 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 31, cps_045 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 32, cps_045 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 33, cps_045 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 34, cps_045 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 35, cps_045 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 36, cps_045 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 37, cps_045 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 38, cps_045 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 39, cps_045 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 40, cps_045 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 41, cps_045 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 42, cps_045 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 43, cps_045 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 44, cps_045 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 45, cps_045 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 46, cps_045 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 47, cps_045 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 48, cps_045 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_045 + 49, cps_045 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_045);

uint32_t cps_046[] = {
0x983, 0x985, 0x986, 0x987, 0x988, 0x989, 0x98a, 0x98b, 0x98c, 0x98f, 0x990, 0x993, 0x994, 0x995, 0x996, 0x997, 0x998, 0x999, 0x99a, 0x99b, 0x99c, 0x99d, 0x99e, 0x99f, 0x9a0, 0x9a1, 0x9a2, 0x9a3, 0x9a4, 0x9a5, 0x9a6, 0x9a7, 0x9a8, 0x9aa, 0x9ab, 0x9ac, 0x9ad, 0x9ae, 0x9af, 0x9b0, 0x9b2, 0x9b6, 0x9b7, 0x9b8, 0x9b9, 0x9bc, 0x9bd, 0x9be, 0x9bf, 0x9c0
};

void BM_collation_element_lookup_046(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 0, cps_046 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 1, cps_046 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 2, cps_046 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 3, cps_046 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 4, cps_046 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 5, cps_046 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 6, cps_046 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 7, cps_046 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 8, cps_046 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 9, cps_046 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 10, cps_046 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 11, cps_046 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 12, cps_046 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 13, cps_046 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 14, cps_046 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 15, cps_046 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 16, cps_046 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 17, cps_046 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 18, cps_046 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 19, cps_046 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 20, cps_046 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 21, cps_046 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 22, cps_046 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 23, cps_046 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 24, cps_046 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 25, cps_046 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 26, cps_046 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 27, cps_046 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 28, cps_046 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 29, cps_046 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 30, cps_046 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 31, cps_046 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 32, cps_046 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 33, cps_046 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 34, cps_046 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 35, cps_046 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 36, cps_046 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 37, cps_046 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 38, cps_046 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 39, cps_046 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 40, cps_046 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 41, cps_046 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 42, cps_046 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 43, cps_046 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 44, cps_046 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 45, cps_046 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 46, cps_046 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 47, cps_046 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 48, cps_046 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_046 + 49, cps_046 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_046);

uint32_t cps_047[] = {
0x9c1, 0x9c2, 0x9c3, 0x9c4, 0x9c7, 0x9c7, 0x9be, 0x9c7, 0x9d7, 0x9c8, 0x9cb, 0x9cc, 0x9cd, 0x9ce, 0x9d7, 0x9dc, 0x9dd, 0x9df, 0x9e0, 0x9e1, 0x9e2, 0x9e3, 0x9e6, 0x9e7, 0x9e8, 0x9e9, 0x9ea, 0x9eb, 0x9ec, 0x9ed, 0x9ee, 0x9ef, 0x9f0, 0x9f1, 0x9f2, 0x9f3, 0x9f4, 0x9f5, 0x9f6, 0x9f7, 0x9f8, 0x9f9, 0x9fa, 0x9fb, 0x9fc, 0x9fd, 0xa01, 0xa02, 0xa03, 0xa05, 0xa06, 0xa07
};

void BM_collation_element_lookup_047(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 0, cps_047 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 1, cps_047 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 2, cps_047 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 3, cps_047 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 4, cps_047 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 5, cps_047 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 7, cps_047 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 9, cps_047 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 10, cps_047 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 11, cps_047 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 12, cps_047 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 13, cps_047 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 14, cps_047 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 15, cps_047 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 16, cps_047 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 17, cps_047 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 18, cps_047 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 19, cps_047 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 20, cps_047 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 21, cps_047 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 22, cps_047 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 23, cps_047 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 24, cps_047 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 25, cps_047 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 26, cps_047 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 27, cps_047 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 28, cps_047 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 29, cps_047 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 30, cps_047 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 31, cps_047 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 32, cps_047 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 33, cps_047 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 34, cps_047 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 35, cps_047 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 36, cps_047 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 37, cps_047 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 38, cps_047 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 39, cps_047 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 40, cps_047 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 41, cps_047 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 42, cps_047 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 43, cps_047 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 44, cps_047 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 45, cps_047 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 46, cps_047 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 47, cps_047 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 48, cps_047 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 49, cps_047 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 50, cps_047 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_047 + 51, cps_047 + 52));
    }
}
BENCHMARK(BM_collation_element_lookup_047);

uint32_t cps_048[] = {
0xa08, 0xa09, 0xa0a, 0xa0f, 0xa10, 0xa13, 0xa14, 0xa15, 0xa16, 0xa17, 0xa18, 0xa19, 0xa1a, 0xa1b, 0xa1c, 0xa1d, 0xa1e, 0xa1f, 0xa20, 0xa21, 0xa22, 0xa23, 0xa24, 0xa25, 0xa26, 0xa27, 0xa28, 0xa2a, 0xa2b, 0xa2c, 0xa2d, 0xa2e, 0xa2f, 0xa30, 0xa32, 0xa33, 0xa35, 0xa36, 0xa38, 0xa39, 0xa3c, 0xa3e, 0xa3f, 0xa40, 0xa41, 0xa42, 0xa47, 0xa48, 0xa4b, 0xa4c
};

void BM_collation_element_lookup_048(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 0, cps_048 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 1, cps_048 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 2, cps_048 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 3, cps_048 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 4, cps_048 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 5, cps_048 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 6, cps_048 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 7, cps_048 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 8, cps_048 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 9, cps_048 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 10, cps_048 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 11, cps_048 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 12, cps_048 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 13, cps_048 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 14, cps_048 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 15, cps_048 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 16, cps_048 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 17, cps_048 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 18, cps_048 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 19, cps_048 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 20, cps_048 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 21, cps_048 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 22, cps_048 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 23, cps_048 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 24, cps_048 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 25, cps_048 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 26, cps_048 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 27, cps_048 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 28, cps_048 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 29, cps_048 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 30, cps_048 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 31, cps_048 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 32, cps_048 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 33, cps_048 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 34, cps_048 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 35, cps_048 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 36, cps_048 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 37, cps_048 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 38, cps_048 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 39, cps_048 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 40, cps_048 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 41, cps_048 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 42, cps_048 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 43, cps_048 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 44, cps_048 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 45, cps_048 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 46, cps_048 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 47, cps_048 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 48, cps_048 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_048 + 49, cps_048 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_048);

uint32_t cps_049[] = {
0xa4d, 0xa51, 0xa59, 0xa5a, 0xa5b, 0xa5c, 0xa5e, 0xa66, 0xa67, 0xa68, 0xa69, 0xa6a, 0xa6b, 0xa6c, 0xa6d, 0xa6e, 0xa6f, 0xa70, 0xa71, 0xa72, 0xa73, 0xa74, 0xa75, 0xa81, 0xa82, 0xa83, 0xa85, 0xa86, 0xa87, 0xa88, 0xa89, 0xa8a, 0xa8b, 0xa8c, 0xa8d, 0xa8f, 0xa90, 0xa91, 0xa93, 0xa94, 0xa95, 0xa96, 0xa97, 0xa98, 0xa99, 0xa9a, 0xa9b, 0xa9c, 0xa9d, 0xa9e
};

void BM_collation_element_lookup_049(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 0, cps_049 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 1, cps_049 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 2, cps_049 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 3, cps_049 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 4, cps_049 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 5, cps_049 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 6, cps_049 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 7, cps_049 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 8, cps_049 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 9, cps_049 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 10, cps_049 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 11, cps_049 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 12, cps_049 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 13, cps_049 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 14, cps_049 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 15, cps_049 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 16, cps_049 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 17, cps_049 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 18, cps_049 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 19, cps_049 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 20, cps_049 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 21, cps_049 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 22, cps_049 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 23, cps_049 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 24, cps_049 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 25, cps_049 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 26, cps_049 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 27, cps_049 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 28, cps_049 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 29, cps_049 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 30, cps_049 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 31, cps_049 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 32, cps_049 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 33, cps_049 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 34, cps_049 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 35, cps_049 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 36, cps_049 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 37, cps_049 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 38, cps_049 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 39, cps_049 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 40, cps_049 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 41, cps_049 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 42, cps_049 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 43, cps_049 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 44, cps_049 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 45, cps_049 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 46, cps_049 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 47, cps_049 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 48, cps_049 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_049 + 49, cps_049 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_049);

uint32_t cps_050[] = {
0xa9f, 0xaa0, 0xaa1, 0xaa2, 0xaa3, 0xaa4, 0xaa5, 0xaa6, 0xaa7, 0xaa8, 0xaaa, 0xaab, 0xaac, 0xaad, 0xaae, 0xaaf, 0xab0, 0xab2, 0xab3, 0xab5, 0xab6, 0xab7, 0xab8, 0xab9, 0xabc, 0xabd, 0xabe, 0xabf, 0xac0, 0xac1, 0xac2, 0xac3, 0xac4, 0xac5, 0xac7, 0xac8, 0xac9, 0xacb, 0xacc, 0xacd, 0xad0, 0xae0, 0xae1, 0xae2, 0xae3, 0xae6, 0xae7, 0xae8, 0xae9, 0xaea
};

void BM_collation_element_lookup_050(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 0, cps_050 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 1, cps_050 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 2, cps_050 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 3, cps_050 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 4, cps_050 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 5, cps_050 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 6, cps_050 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 7, cps_050 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 8, cps_050 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 9, cps_050 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 10, cps_050 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 11, cps_050 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 12, cps_050 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 13, cps_050 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 14, cps_050 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 15, cps_050 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 16, cps_050 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 17, cps_050 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 18, cps_050 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 19, cps_050 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 20, cps_050 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 21, cps_050 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 22, cps_050 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 23, cps_050 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 24, cps_050 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 25, cps_050 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 26, cps_050 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 27, cps_050 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 28, cps_050 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 29, cps_050 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 30, cps_050 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 31, cps_050 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 32, cps_050 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 33, cps_050 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 34, cps_050 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 35, cps_050 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 36, cps_050 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 37, cps_050 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 38, cps_050 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 39, cps_050 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 40, cps_050 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 41, cps_050 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 42, cps_050 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 43, cps_050 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 44, cps_050 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 45, cps_050 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 46, cps_050 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 47, cps_050 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 48, cps_050 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_050 + 49, cps_050 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_050);

uint32_t cps_051[] = {
0xaeb, 0xaec, 0xaed, 0xaee, 0xaef, 0xaf0, 0xaf1, 0xaf9, 0xafa, 0xafb, 0xafc, 0xafd, 0xafe, 0xaff, 0xb01, 0xb02, 0xb03, 0xb05, 0xb06, 0xb07, 0xb08, 0xb09, 0xb0a, 0xb0b, 0xb0c, 0xb0f, 0xb10, 0xb13, 0xb14, 0xb15, 0xb16, 0xb17, 0xb18, 0xb19, 0xb1a, 0xb1b, 0xb1c, 0xb1d, 0xb1e, 0xb1f, 0xb20, 0xb21, 0xb22, 0xb23, 0xb24, 0xb25, 0xb26, 0xb27, 0xb28, 0xb2a
};

void BM_collation_element_lookup_051(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 0, cps_051 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 1, cps_051 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 2, cps_051 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 3, cps_051 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 4, cps_051 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 5, cps_051 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 6, cps_051 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 7, cps_051 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 8, cps_051 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 9, cps_051 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 10, cps_051 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 11, cps_051 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 12, cps_051 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 13, cps_051 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 14, cps_051 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 15, cps_051 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 16, cps_051 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 17, cps_051 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 18, cps_051 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 19, cps_051 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 20, cps_051 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 21, cps_051 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 22, cps_051 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 23, cps_051 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 24, cps_051 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 25, cps_051 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 26, cps_051 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 27, cps_051 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 28, cps_051 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 29, cps_051 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 30, cps_051 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 31, cps_051 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 32, cps_051 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 33, cps_051 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 34, cps_051 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 35, cps_051 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 36, cps_051 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 37, cps_051 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 38, cps_051 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 39, cps_051 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 40, cps_051 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 41, cps_051 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 42, cps_051 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 43, cps_051 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 44, cps_051 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 45, cps_051 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 46, cps_051 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 47, cps_051 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 48, cps_051 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_051 + 49, cps_051 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_051);

uint32_t cps_052[] = {
0xb2b, 0xb2c, 0xb2d, 0xb2e, 0xb2f, 0xb30, 0xb32, 0xb33, 0xb35, 0xb36, 0xb37, 0xb38, 0xb39, 0xb3c, 0xb3d, 0xb3e, 0xb3f, 0xb40, 0xb41, 0xb42, 0xb43, 0xb44, 0xb47, 0xb47, 0xb3e, 0xb47, 0xb56, 0xb47, 0xb57, 0xb48, 0xb4b, 0xb4c, 0xb4d, 0xb56, 0xb57, 0xb5c, 0xb5d, 0xb5f, 0xb60, 0xb61, 0xb62, 0xb63, 0xb66, 0xb67, 0xb68, 0xb69, 0xb6a, 0xb6b, 0xb6c, 0xb6d, 0xb6e, 0xb6f, 0xb70
};

void BM_collation_element_lookup_052(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 0, cps_052 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 1, cps_052 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 2, cps_052 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 3, cps_052 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 4, cps_052 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 5, cps_052 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 6, cps_052 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 7, cps_052 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 8, cps_052 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 9, cps_052 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 10, cps_052 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 11, cps_052 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 12, cps_052 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 13, cps_052 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 14, cps_052 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 15, cps_052 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 16, cps_052 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 17, cps_052 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 18, cps_052 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 19, cps_052 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 20, cps_052 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 21, cps_052 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 22, cps_052 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 23, cps_052 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 25, cps_052 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 27, cps_052 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 29, cps_052 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 30, cps_052 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 31, cps_052 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 32, cps_052 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 33, cps_052 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 34, cps_052 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 35, cps_052 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 36, cps_052 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 37, cps_052 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 38, cps_052 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 39, cps_052 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 40, cps_052 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 41, cps_052 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 42, cps_052 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 43, cps_052 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 44, cps_052 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 45, cps_052 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 46, cps_052 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 47, cps_052 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 48, cps_052 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 49, cps_052 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 50, cps_052 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 51, cps_052 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_052 + 52, cps_052 + 53));
    }
}
BENCHMARK(BM_collation_element_lookup_052);

uint32_t cps_053[] = {
0xb71, 0xb72, 0xb73, 0xb74, 0xb75, 0xb76, 0xb77, 0xb82, 0xb83, 0xb85, 0xb86, 0xb87, 0xb88, 0xb89, 0xb8a, 0xb8e, 0xb8f, 0xb90, 0xb92, 0xb92, 0xbd7, 0xb93, 0xb94, 0xb95, 0xb99, 0xb9a, 0xb9c, 0xb9e, 0xb9f, 0xba3, 0xba4, 0xba8, 0xba9, 0xbaa, 0xbae, 0xbaf, 0xbb0, 0xbb1, 0xbb2, 0xbb3, 0xbb4, 0xbb5, 0xbb6, 0xbb7, 0xbb8, 0xbb9, 0xbbe, 0xbbf, 0xbc0, 0xbc1, 0xbc2
};

void BM_collation_element_lookup_053(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 0, cps_053 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 1, cps_053 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 2, cps_053 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 3, cps_053 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 4, cps_053 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 5, cps_053 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 6, cps_053 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 7, cps_053 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 8, cps_053 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 9, cps_053 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 10, cps_053 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 11, cps_053 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 12, cps_053 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 13, cps_053 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 14, cps_053 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 15, cps_053 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 16, cps_053 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 17, cps_053 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 18, cps_053 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 19, cps_053 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 21, cps_053 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 22, cps_053 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 23, cps_053 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 24, cps_053 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 25, cps_053 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 26, cps_053 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 27, cps_053 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 28, cps_053 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 29, cps_053 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 30, cps_053 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 31, cps_053 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 32, cps_053 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 33, cps_053 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 34, cps_053 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 35, cps_053 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 36, cps_053 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 37, cps_053 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 38, cps_053 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 39, cps_053 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 40, cps_053 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 41, cps_053 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 42, cps_053 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 43, cps_053 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 44, cps_053 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 45, cps_053 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 46, cps_053 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 47, cps_053 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 48, cps_053 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 49, cps_053 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_053 + 50, cps_053 + 51));
    }
}
BENCHMARK(BM_collation_element_lookup_053);

uint32_t cps_054[] = {
0xbc6, 0xbc6, 0xbbe, 0xbc6, 0xbd7, 0xbc7, 0xbc7, 0xbbe, 0xbc8, 0xbca, 0xbcb, 0xbcc, 0xbcd, 0xbd0, 0xbd7, 0xbe6, 0xbe7, 0xbe8, 0xbe9, 0xbea, 0xbeb, 0xbec, 0xbed, 0xbee, 0xbef, 0xbf0, 0xbf1, 0xbf2, 0xbf3, 0xbf4, 0xbf5, 0xbf6, 0xbf7, 0xbf8, 0xbf9, 0xbfa, 0xc00, 0xc01, 0xc02, 0xc03, 0xc05, 0xc06, 0xc07, 0xc08, 0xc09, 0xc0a, 0xc0b, 0xc0c, 0xc0e, 0xc0f, 0xc10, 0xc12, 0xc13
};

void BM_collation_element_lookup_054(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 0, cps_054 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 1, cps_054 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 3, cps_054 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 5, cps_054 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 6, cps_054 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 8, cps_054 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 9, cps_054 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 10, cps_054 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 11, cps_054 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 12, cps_054 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 13, cps_054 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 14, cps_054 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 15, cps_054 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 16, cps_054 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 17, cps_054 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 18, cps_054 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 19, cps_054 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 20, cps_054 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 21, cps_054 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 22, cps_054 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 23, cps_054 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 24, cps_054 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 25, cps_054 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 26, cps_054 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 27, cps_054 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 28, cps_054 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 29, cps_054 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 30, cps_054 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 31, cps_054 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 32, cps_054 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 33, cps_054 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 34, cps_054 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 35, cps_054 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 36, cps_054 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 37, cps_054 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 38, cps_054 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 39, cps_054 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 40, cps_054 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 41, cps_054 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 42, cps_054 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 43, cps_054 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 44, cps_054 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 45, cps_054 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 46, cps_054 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 47, cps_054 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 48, cps_054 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 49, cps_054 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 50, cps_054 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 51, cps_054 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_054 + 52, cps_054 + 53));
    }
}
BENCHMARK(BM_collation_element_lookup_054);

uint32_t cps_055[] = {
0xc14, 0xc15, 0xc16, 0xc17, 0xc18, 0xc19, 0xc1a, 0xc1b, 0xc1c, 0xc1d, 0xc1e, 0xc1f, 0xc20, 0xc21, 0xc22, 0xc23, 0xc24, 0xc25, 0xc26, 0xc27, 0xc28, 0xc2a, 0xc2b, 0xc2c, 0xc2d, 0xc2e, 0xc2f, 0xc30, 0xc31, 0xc32, 0xc33, 0xc34, 0xc35, 0xc36, 0xc37, 0xc38, 0xc39, 0xc3d, 0xc3e, 0xc3f, 0xc40, 0xc41, 0xc42, 0xc43, 0xc44, 0xc46, 0xc46, 0xc56, 0xc47, 0xc48, 0xc4a
};

void BM_collation_element_lookup_055(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 0, cps_055 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 1, cps_055 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 2, cps_055 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 3, cps_055 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 4, cps_055 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 5, cps_055 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 6, cps_055 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 7, cps_055 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 8, cps_055 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 9, cps_055 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 10, cps_055 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 11, cps_055 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 12, cps_055 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 13, cps_055 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 14, cps_055 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 15, cps_055 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 16, cps_055 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 17, cps_055 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 18, cps_055 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 19, cps_055 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 20, cps_055 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 21, cps_055 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 22, cps_055 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 23, cps_055 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 24, cps_055 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 25, cps_055 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 26, cps_055 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 27, cps_055 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 28, cps_055 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 29, cps_055 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 30, cps_055 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 31, cps_055 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 32, cps_055 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 33, cps_055 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 34, cps_055 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 35, cps_055 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 36, cps_055 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 37, cps_055 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 38, cps_055 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 39, cps_055 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 40, cps_055 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 41, cps_055 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 42, cps_055 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 43, cps_055 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 44, cps_055 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 45, cps_055 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 46, cps_055 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 48, cps_055 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 49, cps_055 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_055 + 50, cps_055 + 51));
    }
}
BENCHMARK(BM_collation_element_lookup_055);

uint32_t cps_056[] = {
0xc4b, 0xc4c, 0xc4d, 0xc55, 0xc56, 0xc58, 0xc59, 0xc5a, 0xc60, 0xc61, 0xc62, 0xc63, 0xc66, 0xc67, 0xc68, 0xc69, 0xc6a, 0xc6b, 0xc6c, 0xc6d, 0xc6e, 0xc6f, 0xc78, 0xc79, 0xc7a, 0xc7b, 0xc7c, 0xc7d, 0xc7e, 0xc7f, 0xc80, 0xc81, 0xc82, 0xc83, 0xc85, 0xc86, 0xc87, 0xc88, 0xc89, 0xc8a, 0xc8b, 0xc8c, 0xc8e, 0xc8f, 0xc90, 0xc92, 0xc93, 0xc94, 0xc95, 0xc96
};

void BM_collation_element_lookup_056(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 0, cps_056 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 1, cps_056 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 2, cps_056 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 3, cps_056 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 4, cps_056 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 5, cps_056 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 6, cps_056 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 7, cps_056 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 8, cps_056 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 9, cps_056 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 10, cps_056 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 11, cps_056 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 12, cps_056 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 13, cps_056 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 14, cps_056 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 15, cps_056 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 16, cps_056 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 17, cps_056 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 18, cps_056 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 19, cps_056 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 20, cps_056 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 21, cps_056 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 22, cps_056 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 23, cps_056 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 24, cps_056 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 25, cps_056 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 26, cps_056 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 27, cps_056 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 28, cps_056 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 29, cps_056 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 30, cps_056 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 31, cps_056 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 32, cps_056 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 33, cps_056 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 34, cps_056 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 35, cps_056 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 36, cps_056 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 37, cps_056 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 38, cps_056 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 39, cps_056 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 40, cps_056 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 41, cps_056 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 42, cps_056 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 43, cps_056 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 44, cps_056 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 45, cps_056 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 46, cps_056 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 47, cps_056 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 48, cps_056 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_056 + 49, cps_056 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_056);

uint32_t cps_057[] = {
0xc97, 0xc98, 0xc99, 0xc9a, 0xc9b, 0xc9c, 0xc9d, 0xc9e, 0xc9f, 0xca0, 0xca1, 0xca2, 0xca3, 0xca4, 0xca5, 0xca6, 0xca7, 0xca8, 0xcaa, 0xcab, 0xcac, 0xcad, 0xcae, 0xcaf, 0xcb0, 0xcb1, 0xcb2, 0xcb3, 0xcb5, 0xcb6, 0xcb7, 0xcb8, 0xcb9, 0xcbc, 0xcbd, 0xcbe, 0xcbf, 0xcbf, 0xcd5, 0xcc0, 0xcc1, 0xcc2, 0xcc3, 0xcc4, 0xcc6, 0xcc6, 0xcc2, 0xcc6, 0xcc2, 0xcd5, 0xcc6, 0xcd5, 0xcc6, 0xcd6, 0xcc7, 0xcc8
};

void BM_collation_element_lookup_057(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 0, cps_057 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 1, cps_057 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 2, cps_057 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 3, cps_057 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 4, cps_057 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 5, cps_057 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 6, cps_057 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 7, cps_057 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 8, cps_057 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 9, cps_057 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 10, cps_057 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 11, cps_057 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 12, cps_057 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 13, cps_057 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 14, cps_057 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 15, cps_057 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 16, cps_057 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 17, cps_057 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 18, cps_057 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 19, cps_057 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 20, cps_057 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 21, cps_057 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 22, cps_057 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 23, cps_057 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 24, cps_057 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 25, cps_057 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 26, cps_057 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 27, cps_057 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 28, cps_057 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 29, cps_057 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 30, cps_057 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 31, cps_057 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 32, cps_057 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 33, cps_057 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 34, cps_057 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 35, cps_057 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 36, cps_057 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 37, cps_057 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 39, cps_057 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 40, cps_057 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 41, cps_057 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 42, cps_057 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 43, cps_057 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 44, cps_057 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 45, cps_057 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 47, cps_057 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 50, cps_057 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 52, cps_057 + 54));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 54, cps_057 + 55));
            benchmark::DoNotOptimize(trie().longest_match(cps_057 + 55, cps_057 + 56));
    }
}
BENCHMARK(BM_collation_element_lookup_057);

uint32_t cps_058[] = {
0xcca, 0xcca, 0xcd5, 0xccb, 0xccc, 0xccd, 0xcd5, 0xcd6, 0xcde, 0xce0, 0xce1, 0xce2, 0xce3, 0xce6, 0xce7, 0xce8, 0xce9, 0xcea, 0xceb, 0xcec, 0xced, 0xcee, 0xcef, 0xcf1, 0xcf2, 0xd00, 0xd01, 0xd02, 0xd03, 0xd05, 0xd06, 0xd07, 0xd08, 0xd09, 0xd0a, 0xd0b, 0xd0c, 0xd0e, 0xd0f, 0xd10, 0xd12, 0xd13, 0xd14, 0xd15, 0xd16, 0xd17, 0xd18, 0xd19, 0xd1a, 0xd1b, 0xd1c
};

void BM_collation_element_lookup_058(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 0, cps_058 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 1, cps_058 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 3, cps_058 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 4, cps_058 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 5, cps_058 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 6, cps_058 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 7, cps_058 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 8, cps_058 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 9, cps_058 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 10, cps_058 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 11, cps_058 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 12, cps_058 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 13, cps_058 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 14, cps_058 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 15, cps_058 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 16, cps_058 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 17, cps_058 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 18, cps_058 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 19, cps_058 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 20, cps_058 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 21, cps_058 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 22, cps_058 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 23, cps_058 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 24, cps_058 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 25, cps_058 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 26, cps_058 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 27, cps_058 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 28, cps_058 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 29, cps_058 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 30, cps_058 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 31, cps_058 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 32, cps_058 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 33, cps_058 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 34, cps_058 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 35, cps_058 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 36, cps_058 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 37, cps_058 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 38, cps_058 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 39, cps_058 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 40, cps_058 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 41, cps_058 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 42, cps_058 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 43, cps_058 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 44, cps_058 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 45, cps_058 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 46, cps_058 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 47, cps_058 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 48, cps_058 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 49, cps_058 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_058 + 50, cps_058 + 51));
    }
}
BENCHMARK(BM_collation_element_lookup_058);

uint32_t cps_059[] = {
0xd1d, 0xd1e, 0xd1f, 0xd20, 0xd21, 0xd22, 0xd23, 0xd24, 0xd25, 0xd26, 0xd27, 0xd28, 0xd29, 0xd2a, 0xd2b, 0xd2c, 0xd2d, 0xd2e, 0xd2f, 0xd30, 0xd31, 0xd32, 0xd33, 0xd34, 0xd35, 0xd36, 0xd37, 0xd38, 0xd39, 0xd3a, 0xd3b, 0xd3c, 0xd3d, 0xd3e, 0xd3f, 0xd40, 0xd41, 0xd42, 0xd43, 0xd44, 0xd46, 0xd46, 0xd3e, 0xd46, 0xd57, 0xd47, 0xd47, 0xd3e, 0xd48, 0xd4a, 0xd4b, 0xd4c, 0xd4d
};

void BM_collation_element_lookup_059(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 0, cps_059 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 1, cps_059 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 2, cps_059 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 3, cps_059 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 4, cps_059 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 5, cps_059 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 6, cps_059 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 7, cps_059 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 8, cps_059 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 9, cps_059 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 10, cps_059 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 11, cps_059 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 12, cps_059 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 13, cps_059 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 14, cps_059 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 15, cps_059 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 16, cps_059 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 17, cps_059 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 18, cps_059 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 19, cps_059 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 20, cps_059 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 21, cps_059 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 22, cps_059 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 23, cps_059 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 24, cps_059 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 25, cps_059 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 26, cps_059 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 27, cps_059 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 28, cps_059 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 29, cps_059 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 30, cps_059 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 31, cps_059 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 32, cps_059 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 33, cps_059 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 34, cps_059 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 35, cps_059 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 36, cps_059 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 37, cps_059 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 38, cps_059 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 39, cps_059 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 40, cps_059 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 41, cps_059 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 43, cps_059 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 45, cps_059 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 46, cps_059 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 48, cps_059 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 49, cps_059 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 50, cps_059 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 51, cps_059 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_059 + 52, cps_059 + 53));
    }
}
BENCHMARK(BM_collation_element_lookup_059);

uint32_t cps_060[] = {
0xd4e, 0xd4f, 0xd54, 0xd55, 0xd56, 0xd57, 0xd58, 0xd59, 0xd5a, 0xd5b, 0xd5c, 0xd5d, 0xd5e, 0xd5f, 0xd60, 0xd61, 0xd62, 0xd63, 0xd66, 0xd67, 0xd68, 0xd69, 0xd6a, 0xd6b, 0xd6c, 0xd6d, 0xd6e, 0xd6f, 0xd70, 0xd71, 0xd72, 0xd73, 0xd74, 0xd75, 0xd76, 0xd77, 0xd78, 0xd79, 0xd7a, 0xd7b, 0xd7c, 0xd7d, 0xd7e, 0xd7f, 0xd82, 0xd83, 0xd85, 0xd86, 0xd87, 0xd88
};

void BM_collation_element_lookup_060(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 0, cps_060 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 1, cps_060 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 2, cps_060 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 3, cps_060 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 4, cps_060 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 5, cps_060 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 6, cps_060 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 7, cps_060 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 8, cps_060 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 9, cps_060 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 10, cps_060 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 11, cps_060 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 12, cps_060 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 13, cps_060 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 14, cps_060 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 15, cps_060 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 16, cps_060 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 17, cps_060 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 18, cps_060 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 19, cps_060 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 20, cps_060 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 21, cps_060 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 22, cps_060 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 23, cps_060 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 24, cps_060 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 25, cps_060 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 26, cps_060 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 27, cps_060 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 28, cps_060 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 29, cps_060 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 30, cps_060 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 31, cps_060 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 32, cps_060 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 33, cps_060 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 34, cps_060 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 35, cps_060 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 36, cps_060 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 37, cps_060 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 38, cps_060 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 39, cps_060 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 40, cps_060 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 41, cps_060 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 42, cps_060 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 43, cps_060 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 44, cps_060 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 45, cps_060 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 46, cps_060 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 47, cps_060 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 48, cps_060 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_060 + 49, cps_060 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_060);

uint32_t cps_061[] = {
0xd89, 0xd8a, 0xd8b, 0xd8c, 0xd8d, 0xd8e, 0xd8f, 0xd90, 0xd91, 0xd92, 0xd93, 0xd94, 0xd95, 0xd96, 0xd9a, 0xd9b, 0xd9c, 0xd9d, 0xd9e, 0xd9f, 0xda0, 0xda1, 0xda2, 0xda3, 0xda4, 0xda5, 0xda6, 0xda7, 0xda8, 0xda9, 0xdaa, 0xdab, 0xdac, 0xdad, 0xdae, 0xdaf, 0xdb0, 0xdb1, 0xdb3, 0xdb4, 0xdb5, 0xdb6, 0xdb7, 0xdb8, 0xdb9, 0xdba, 0xdbb, 0xdbd, 0xdc0, 0xdc1
};

void BM_collation_element_lookup_061(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 0, cps_061 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 1, cps_061 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 2, cps_061 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 3, cps_061 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 4, cps_061 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 5, cps_061 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 6, cps_061 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 7, cps_061 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 8, cps_061 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 9, cps_061 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 10, cps_061 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 11, cps_061 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 12, cps_061 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 13, cps_061 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 14, cps_061 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 15, cps_061 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 16, cps_061 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 17, cps_061 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 18, cps_061 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 19, cps_061 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 20, cps_061 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 21, cps_061 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 22, cps_061 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 23, cps_061 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 24, cps_061 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 25, cps_061 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 26, cps_061 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 27, cps_061 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 28, cps_061 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 29, cps_061 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 30, cps_061 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 31, cps_061 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 32, cps_061 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 33, cps_061 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 34, cps_061 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 35, cps_061 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 36, cps_061 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 37, cps_061 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 38, cps_061 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 39, cps_061 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 40, cps_061 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 41, cps_061 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 42, cps_061 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 43, cps_061 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 44, cps_061 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 45, cps_061 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 46, cps_061 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 47, cps_061 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 48, cps_061 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_061 + 49, cps_061 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_061);

uint32_t cps_062[] = {
0xdc2, 0xdc3, 0xdc4, 0xdc5, 0xdc6, 0xdca, 0xdcf, 0xdd0, 0xdd1, 0xdd2, 0xdd3, 0xdd4, 0xdd6, 0xdd8, 0xdd9, 0xdd9, 0xdca, 0xdd9, 0xdcf, 0xdd9, 0xdcf, 0xdca, 0xdd9, 0xddf, 0xdda, 0xddb, 0xddc, 0xddc, 0xdca, 0xddd, 0xdde, 0xddf, 0xde6, 0xde7, 0xde8, 0xde9, 0xdea, 0xdeb, 0xdec, 0xded, 0xdee, 0xdef, 0xdf2, 0xdf3, 0xdf4, 0xe01, 0xe02, 0xe03, 0xe04, 0xe05, 0xe06, 0xe07, 0xe08, 0xe09, 0xe0a, 0xe0b
};

void BM_collation_element_lookup_062(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 0, cps_062 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 1, cps_062 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 2, cps_062 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 3, cps_062 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 4, cps_062 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 5, cps_062 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 6, cps_062 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 7, cps_062 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 8, cps_062 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 9, cps_062 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 10, cps_062 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 11, cps_062 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 12, cps_062 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 13, cps_062 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 14, cps_062 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 15, cps_062 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 17, cps_062 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 19, cps_062 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 22, cps_062 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 24, cps_062 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 25, cps_062 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 26, cps_062 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 27, cps_062 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 29, cps_062 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 30, cps_062 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 31, cps_062 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 32, cps_062 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 33, cps_062 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 34, cps_062 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 35, cps_062 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 36, cps_062 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 37, cps_062 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 38, cps_062 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 39, cps_062 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 40, cps_062 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 41, cps_062 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 42, cps_062 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 43, cps_062 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 44, cps_062 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 45, cps_062 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 46, cps_062 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 47, cps_062 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 48, cps_062 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 49, cps_062 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 50, cps_062 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 51, cps_062 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 52, cps_062 + 53));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 53, cps_062 + 54));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 54, cps_062 + 55));
            benchmark::DoNotOptimize(trie().longest_match(cps_062 + 55, cps_062 + 56));
    }
}
BENCHMARK(BM_collation_element_lookup_062);

uint32_t cps_063[] = {
0xe0c, 0xe0d, 0xe0e, 0xe0f, 0xe10, 0xe11, 0xe12, 0xe13, 0xe14, 0xe15, 0xe16, 0xe17, 0xe18, 0xe19, 0xe1a, 0xe1b, 0xe1c, 0xe1d, 0xe1e, 0xe1f, 0xe20, 0xe21, 0xe22, 0xe23, 0xe24, 0xe25, 0xe26, 0xe27, 0xe28, 0xe29, 0xe2a, 0xe2b, 0xe2c, 0xe2d, 0xe2e, 0xe2f, 0xe30, 0xe31, 0xe32, 0xe33, 0xe34, 0xe35, 0xe36, 0xe37, 0xe38, 0xe39, 0xe3a, 0xe3f, 0xe40, 0xe40, 0xe01
};

void BM_collation_element_lookup_063(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 0, cps_063 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 1, cps_063 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 2, cps_063 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 3, cps_063 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 4, cps_063 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 5, cps_063 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 6, cps_063 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 7, cps_063 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 8, cps_063 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 9, cps_063 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 10, cps_063 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 11, cps_063 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 12, cps_063 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 13, cps_063 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 14, cps_063 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 15, cps_063 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 16, cps_063 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 17, cps_063 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 18, cps_063 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 19, cps_063 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 20, cps_063 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 21, cps_063 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 22, cps_063 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 23, cps_063 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 24, cps_063 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 25, cps_063 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 26, cps_063 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 27, cps_063 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 28, cps_063 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 29, cps_063 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 30, cps_063 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 31, cps_063 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 32, cps_063 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 33, cps_063 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 34, cps_063 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 35, cps_063 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 36, cps_063 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 37, cps_063 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 38, cps_063 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 39, cps_063 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 40, cps_063 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 41, cps_063 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 42, cps_063 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 43, cps_063 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 44, cps_063 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 45, cps_063 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 46, cps_063 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 47, cps_063 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 48, cps_063 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_063 + 49, cps_063 + 51));
    }
}
BENCHMARK(BM_collation_element_lookup_063);

uint32_t cps_064[] = {
0xe40, 0xe02, 0xe40, 0xe03, 0xe40, 0xe04, 0xe40, 0xe05, 0xe40, 0xe06, 0xe40, 0xe07, 0xe40, 0xe08, 0xe40, 0xe09, 0xe40, 0xe0a, 0xe40, 0xe0b, 0xe40, 0xe0c, 0xe40, 0xe0d, 0xe40, 0xe0e, 0xe40, 0xe0f, 0xe40, 0xe10, 0xe40, 0xe11, 0xe40, 0xe12, 0xe40, 0xe13, 0xe40, 0xe14, 0xe40, 0xe15, 0xe40, 0xe16, 0xe40, 0xe17, 0xe40, 0xe18, 0xe40, 0xe19, 0xe40, 0xe1a, 0xe40, 0xe1b, 0xe40, 0xe1c, 0xe40, 0xe1d, 0xe40, 0xe1e, 0xe40, 0xe1f, 0xe40, 0xe20, 0xe40, 0xe21, 0xe40, 0xe22, 0xe40, 0xe23, 0xe40, 0xe24, 0xe40, 0xe25, 0xe40, 0xe26, 0xe40, 0xe27, 0xe40, 0xe28, 0xe40, 0xe29, 0xe40, 0xe2a, 0xe40, 0xe2b, 0xe40, 0xe2c, 0xe40, 0xe2d, 0xe40, 0xe2e, 0xe41, 0xe41, 0xe01, 0xe41, 0xe02, 0xe41, 0xe03, 0xe41, 0xe04
};

void BM_collation_element_lookup_064(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 0, cps_064 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 2, cps_064 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 4, cps_064 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 6, cps_064 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 8, cps_064 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 10, cps_064 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 12, cps_064 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 14, cps_064 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 16, cps_064 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 18, cps_064 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 20, cps_064 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 22, cps_064 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 24, cps_064 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 26, cps_064 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 28, cps_064 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 30, cps_064 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 32, cps_064 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 34, cps_064 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 36, cps_064 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 38, cps_064 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 40, cps_064 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 42, cps_064 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 44, cps_064 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 46, cps_064 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 48, cps_064 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 50, cps_064 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 52, cps_064 + 54));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 54, cps_064 + 56));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 56, cps_064 + 58));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 58, cps_064 + 60));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 60, cps_064 + 62));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 62, cps_064 + 64));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 64, cps_064 + 66));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 66, cps_064 + 68));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 68, cps_064 + 70));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 70, cps_064 + 72));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 72, cps_064 + 74));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 74, cps_064 + 76));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 76, cps_064 + 78));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 78, cps_064 + 80));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 80, cps_064 + 82));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 82, cps_064 + 84));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 84, cps_064 + 86));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 86, cps_064 + 88));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 88, cps_064 + 90));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 90, cps_064 + 91));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 91, cps_064 + 93));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 93, cps_064 + 95));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 95, cps_064 + 97));
            benchmark::DoNotOptimize(trie().longest_match(cps_064 + 97, cps_064 + 99));
    }
}
BENCHMARK(BM_collation_element_lookup_064);

uint32_t cps_065[] = {
0xe41, 0xe05, 0xe41, 0xe06, 0xe41, 0xe07, 0xe41, 0xe08, 0xe41, 0xe09, 0xe41, 0xe0a, 0xe41, 0xe0b, 0xe41, 0xe0c, 0xe41, 0xe0d, 0xe41, 0xe0e, 0xe41, 0xe0f, 0xe41, 0xe10, 0xe41, 0xe11, 0xe41, 0xe12, 0xe41, 0xe13, 0xe41, 0xe14, 0xe41, 0xe15, 0xe41, 0xe16, 0xe41, 0xe17, 0xe41, 0xe18, 0xe41, 0xe19, 0xe41, 0xe1a, 0xe41, 0xe1b, 0xe41, 0xe1c, 0xe41, 0xe1d, 0xe41, 0xe1e, 0xe41, 0xe1f, 0xe41, 0xe20, 0xe41, 0xe21, 0xe41, 0xe22, 0xe41, 0xe23, 0xe41, 0xe24, 0xe41, 0xe25, 0xe41, 0xe26, 0xe41, 0xe27, 0xe41, 0xe28, 0xe41, 0xe29, 0xe41, 0xe2a, 0xe41, 0xe2b, 0xe41, 0xe2c, 0xe41, 0xe2d, 0xe41, 0xe2e, 0xe42, 0xe42, 0xe01, 0xe42, 0xe02, 0xe42, 0xe03, 0xe42, 0xe04, 0xe42, 0xe05, 0xe42, 0xe06, 0xe42, 0xe07
};

void BM_collation_element_lookup_065(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 0, cps_065 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 2, cps_065 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 4, cps_065 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 6, cps_065 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 8, cps_065 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 10, cps_065 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 12, cps_065 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 14, cps_065 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 16, cps_065 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 18, cps_065 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 20, cps_065 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 22, cps_065 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 24, cps_065 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 26, cps_065 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 28, cps_065 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 30, cps_065 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 32, cps_065 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 34, cps_065 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 36, cps_065 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 38, cps_065 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 40, cps_065 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 42, cps_065 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 44, cps_065 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 46, cps_065 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 48, cps_065 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 50, cps_065 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 52, cps_065 + 54));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 54, cps_065 + 56));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 56, cps_065 + 58));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 58, cps_065 + 60));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 60, cps_065 + 62));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 62, cps_065 + 64));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 64, cps_065 + 66));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 66, cps_065 + 68));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 68, cps_065 + 70));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 70, cps_065 + 72));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 72, cps_065 + 74));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 74, cps_065 + 76));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 76, cps_065 + 78));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 78, cps_065 + 80));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 80, cps_065 + 82));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 82, cps_065 + 84));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 84, cps_065 + 85));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 85, cps_065 + 87));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 87, cps_065 + 89));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 89, cps_065 + 91));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 91, cps_065 + 93));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 93, cps_065 + 95));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 95, cps_065 + 97));
            benchmark::DoNotOptimize(trie().longest_match(cps_065 + 97, cps_065 + 99));
    }
}
BENCHMARK(BM_collation_element_lookup_065);

uint32_t cps_066[] = {
0xe42, 0xe08, 0xe42, 0xe09, 0xe42, 0xe0a, 0xe42, 0xe0b, 0xe42, 0xe0c, 0xe42, 0xe0d, 0xe42, 0xe0e, 0xe42, 0xe0f, 0xe42, 0xe10, 0xe42, 0xe11, 0xe42, 0xe12, 0xe42, 0xe13, 0xe42, 0xe14, 0xe42, 0xe15, 0xe42, 0xe16, 0xe42, 0xe17, 0xe42, 0xe18, 0xe42, 0xe19, 0xe42, 0xe1a, 0xe42, 0xe1b, 0xe42, 0xe1c, 0xe42, 0xe1d, 0xe42, 0xe1e, 0xe42, 0xe1f, 0xe42, 0xe20, 0xe42, 0xe21, 0xe42, 0xe22, 0xe42, 0xe23, 0xe42, 0xe24, 0xe42, 0xe25, 0xe42, 0xe26, 0xe42, 0xe27, 0xe42, 0xe28, 0xe42, 0xe29, 0xe42, 0xe2a, 0xe42, 0xe2b, 0xe42, 0xe2c, 0xe42, 0xe2d, 0xe42, 0xe2e, 0xe43, 0xe43, 0xe01, 0xe43, 0xe02, 0xe43, 0xe03, 0xe43, 0xe04, 0xe43, 0xe05, 0xe43, 0xe06, 0xe43, 0xe07, 0xe43, 0xe08, 0xe43, 0xe09, 0xe43, 0xe0a
};

void BM_collation_element_lookup_066(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 0, cps_066 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 2, cps_066 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 4, cps_066 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 6, cps_066 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 8, cps_066 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 10, cps_066 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 12, cps_066 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 14, cps_066 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 16, cps_066 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 18, cps_066 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 20, cps_066 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 22, cps_066 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 24, cps_066 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 26, cps_066 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 28, cps_066 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 30, cps_066 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 32, cps_066 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 34, cps_066 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 36, cps_066 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 38, cps_066 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 40, cps_066 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 42, cps_066 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 44, cps_066 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 46, cps_066 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 48, cps_066 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 50, cps_066 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 52, cps_066 + 54));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 54, cps_066 + 56));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 56, cps_066 + 58));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 58, cps_066 + 60));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 60, cps_066 + 62));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 62, cps_066 + 64));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 64, cps_066 + 66));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 66, cps_066 + 68));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 68, cps_066 + 70));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 70, cps_066 + 72));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 72, cps_066 + 74));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 74, cps_066 + 76));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 76, cps_066 + 78));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 78, cps_066 + 79));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 79, cps_066 + 81));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 81, cps_066 + 83));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 83, cps_066 + 85));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 85, cps_066 + 87));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 87, cps_066 + 89));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 89, cps_066 + 91));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 91, cps_066 + 93));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 93, cps_066 + 95));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 95, cps_066 + 97));
            benchmark::DoNotOptimize(trie().longest_match(cps_066 + 97, cps_066 + 99));
    }
}
BENCHMARK(BM_collation_element_lookup_066);

uint32_t cps_067[] = {
0xe43, 0xe0b, 0xe43, 0xe0c, 0xe43, 0xe0d, 0xe43, 0xe0e, 0xe43, 0xe0f, 0xe43, 0xe10, 0xe43, 0xe11, 0xe43, 0xe12, 0xe43, 0xe13, 0xe43, 0xe14, 0xe43, 0xe15, 0xe43, 0xe16, 0xe43, 0xe17, 0xe43, 0xe18, 0xe43, 0xe19, 0xe43, 0xe1a, 0xe43, 0xe1b, 0xe43, 0xe1c, 0xe43, 0xe1d, 0xe43, 0xe1e, 0xe43, 0xe1f, 0xe43, 0xe20, 0xe43, 0xe21, 0xe43, 0xe22, 0xe43, 0xe23, 0xe43, 0xe24, 0xe43, 0xe25, 0xe43, 0xe26, 0xe43, 0xe27, 0xe43, 0xe28, 0xe43, 0xe29, 0xe43, 0xe2a, 0xe43, 0xe2b, 0xe43, 0xe2c, 0xe43, 0xe2d, 0xe43, 0xe2e, 0xe44, 0xe44, 0xe01, 0xe44, 0xe02, 0xe44, 0xe03, 0xe44, 0xe04, 0xe44, 0xe05, 0xe44, 0xe06, 0xe44, 0xe07, 0xe44, 0xe08, 0xe44, 0xe09, 0xe44, 0xe0a, 0xe44, 0xe0b, 0xe44, 0xe0c, 0xe44, 0xe0d
};

void BM_collation_element_lookup_067(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 0, cps_067 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 2, cps_067 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 4, cps_067 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 6, cps_067 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 8, cps_067 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 10, cps_067 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 12, cps_067 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 14, cps_067 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 16, cps_067 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 18, cps_067 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 20, cps_067 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 22, cps_067 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 24, cps_067 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 26, cps_067 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 28, cps_067 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 30, cps_067 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 32, cps_067 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 34, cps_067 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 36, cps_067 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 38, cps_067 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 40, cps_067 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 42, cps_067 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 44, cps_067 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 46, cps_067 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 48, cps_067 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 50, cps_067 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 52, cps_067 + 54));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 54, cps_067 + 56));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 56, cps_067 + 58));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 58, cps_067 + 60));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 60, cps_067 + 62));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 62, cps_067 + 64));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 64, cps_067 + 66));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 66, cps_067 + 68));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 68, cps_067 + 70));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 70, cps_067 + 72));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 72, cps_067 + 73));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 73, cps_067 + 75));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 75, cps_067 + 77));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 77, cps_067 + 79));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 79, cps_067 + 81));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 81, cps_067 + 83));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 83, cps_067 + 85));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 85, cps_067 + 87));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 87, cps_067 + 89));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 89, cps_067 + 91));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 91, cps_067 + 93));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 93, cps_067 + 95));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 95, cps_067 + 97));
            benchmark::DoNotOptimize(trie().longest_match(cps_067 + 97, cps_067 + 99));
    }
}
BENCHMARK(BM_collation_element_lookup_067);

uint32_t cps_068[] = {
0xe44, 0xe0e, 0xe44, 0xe0f, 0xe44, 0xe10, 0xe44, 0xe11, 0xe44, 0xe12, 0xe44, 0xe13, 0xe44, 0xe14, 0xe44, 0xe15, 0xe44, 0xe16, 0xe44, 0xe17, 0xe44, 0xe18, 0xe44, 0xe19, 0xe44, 0xe1a, 0xe44, 0xe1b, 0xe44, 0xe1c, 0xe44, 0xe1d, 0xe44, 0xe1e, 0xe44, 0xe1f, 0xe44, 0xe20, 0xe44, 0xe21, 0xe44, 0xe22, 0xe44, 0xe23, 0xe44, 0xe24, 0xe44, 0xe25, 0xe44, 0xe26, 0xe44, 0xe27, 0xe44, 0xe28, 0xe44, 0xe29, 0xe44, 0xe2a, 0xe44, 0xe2b, 0xe44, 0xe2c, 0xe44, 0xe2d, 0xe44, 0xe2e, 0xe45, 0xe46, 0xe47, 0xe48, 0xe49, 0xe4a, 0xe4b, 0xe4c, 0xe4d, 0xe4d, 0xe32, 0xe4e, 0xe4f, 0xe50, 0xe51, 0xe52, 0xe53, 0xe54
};

void BM_collation_element_lookup_068(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 0, cps_068 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 2, cps_068 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 4, cps_068 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 6, cps_068 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 8, cps_068 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 10, cps_068 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 12, cps_068 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 14, cps_068 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 16, cps_068 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 18, cps_068 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 20, cps_068 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 22, cps_068 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 24, cps_068 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 26, cps_068 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 28, cps_068 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 30, cps_068 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 32, cps_068 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 34, cps_068 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 36, cps_068 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 38, cps_068 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 40, cps_068 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 42, cps_068 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 44, cps_068 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 46, cps_068 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 48, cps_068 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 50, cps_068 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 52, cps_068 + 54));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 54, cps_068 + 56));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 56, cps_068 + 58));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 58, cps_068 + 60));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 60, cps_068 + 62));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 62, cps_068 + 64));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 64, cps_068 + 66));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 66, cps_068 + 67));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 67, cps_068 + 68));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 68, cps_068 + 69));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 69, cps_068 + 70));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 70, cps_068 + 71));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 71, cps_068 + 72));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 72, cps_068 + 73));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 73, cps_068 + 74));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 74, cps_068 + 75));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 75, cps_068 + 77));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 77, cps_068 + 78));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 78, cps_068 + 79));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 79, cps_068 + 80));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 80, cps_068 + 81));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 81, cps_068 + 82));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 82, cps_068 + 83));
            benchmark::DoNotOptimize(trie().longest_match(cps_068 + 83, cps_068 + 84));
    }
}
BENCHMARK(BM_collation_element_lookup_068);

uint32_t cps_069[] = {
0xe55, 0xe56, 0xe57, 0xe58, 0xe59, 0xe5a, 0xe5b, 0xe81, 0xe82, 0xe84, 0xe87, 0xe88, 0xe8a, 0xe8d, 0xe94, 0xe95, 0xe96, 0xe97, 0xe99, 0xe9a, 0xe9b, 0xe9c, 0xe9d, 0xe9e, 0xe9f, 0xea1, 0xea2, 0xea3, 0xea5, 0xea7, 0xeaa, 0xeab, 0xead, 0xeae, 0xeaf, 0xeb0, 0xeb1, 0xeb2, 0xeb3, 0xeb4, 0xeb5, 0xeb6, 0xeb7, 0xeb8, 0xeb9, 0xebb, 0xebc, 0xebd, 0xec0, 0xec0, 0xe81
};

void BM_collation_element_lookup_069(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 0, cps_069 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 1, cps_069 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 2, cps_069 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 3, cps_069 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 4, cps_069 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 5, cps_069 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 6, cps_069 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 7, cps_069 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 8, cps_069 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 9, cps_069 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 10, cps_069 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 11, cps_069 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 12, cps_069 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 13, cps_069 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 14, cps_069 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 15, cps_069 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 16, cps_069 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 17, cps_069 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 18, cps_069 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 19, cps_069 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 20, cps_069 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 21, cps_069 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 22, cps_069 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 23, cps_069 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 24, cps_069 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 25, cps_069 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 26, cps_069 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 27, cps_069 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 28, cps_069 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 29, cps_069 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 30, cps_069 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 31, cps_069 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 32, cps_069 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 33, cps_069 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 34, cps_069 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 35, cps_069 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 36, cps_069 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 37, cps_069 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 38, cps_069 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 39, cps_069 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 40, cps_069 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 41, cps_069 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 42, cps_069 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 43, cps_069 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 44, cps_069 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 45, cps_069 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 46, cps_069 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 47, cps_069 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 48, cps_069 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_069 + 49, cps_069 + 51));
    }
}
BENCHMARK(BM_collation_element_lookup_069);

uint32_t cps_070[] = {
0xec0, 0xe82, 0xec0, 0xe84, 0xec0, 0xe87, 0xec0, 0xe88, 0xec0, 0xe8a, 0xec0, 0xe8d, 0xec0, 0xe94, 0xec0, 0xe95, 0xec0, 0xe96, 0xec0, 0xe97, 0xec0, 0xe99, 0xec0, 0xe9a, 0xec0, 0xe9b, 0xec0, 0xe9c, 0xec0, 0xe9d, 0xec0, 0xe9e, 0xec0, 0xe9f, 0xec0, 0xea1, 0xec0, 0xea2, 0xec0, 0xea3, 0xec0, 0xea5, 0xec0, 0xea7, 0xec0, 0xeaa, 0xec0, 0xeab, 0xec0, 0xead, 0xec0, 0xeae, 0xec0, 0xedc, 0xec0, 0xedd, 0xec0, 0xede, 0xec0, 0xedf, 0xec1, 0xec1, 0xe81, 0xec1, 0xe82, 0xec1, 0xe84, 0xec1, 0xe87, 0xec1, 0xe88, 0xec1, 0xe8a, 0xec1, 0xe8d, 0xec1, 0xe94, 0xec1, 0xe95, 0xec1, 0xe96, 0xec1, 0xe97, 0xec1, 0xe99, 0xec1, 0xe9a, 0xec1, 0xe9b, 0xec1, 0xe9c, 0xec1, 0xe9d, 0xec1, 0xe9e, 0xec1, 0xe9f, 0xec1, 0xea1
};

void BM_collation_element_lookup_070(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 0, cps_070 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 2, cps_070 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 4, cps_070 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 6, cps_070 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 8, cps_070 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 10, cps_070 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 12, cps_070 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 14, cps_070 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 16, cps_070 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 18, cps_070 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 20, cps_070 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 22, cps_070 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 24, cps_070 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 26, cps_070 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 28, cps_070 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 30, cps_070 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 32, cps_070 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 34, cps_070 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 36, cps_070 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 38, cps_070 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 40, cps_070 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 42, cps_070 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 44, cps_070 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 46, cps_070 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 48, cps_070 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 50, cps_070 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 52, cps_070 + 54));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 54, cps_070 + 56));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 56, cps_070 + 58));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 58, cps_070 + 60));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 60, cps_070 + 61));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 61, cps_070 + 63));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 63, cps_070 + 65));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 65, cps_070 + 67));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 67, cps_070 + 69));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 69, cps_070 + 71));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 71, cps_070 + 73));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 73, cps_070 + 75));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 75, cps_070 + 77));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 77, cps_070 + 79));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 79, cps_070 + 81));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 81, cps_070 + 83));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 83, cps_070 + 85));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 85, cps_070 + 87));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 87, cps_070 + 89));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 89, cps_070 + 91));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 91, cps_070 + 93));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 93, cps_070 + 95));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 95, cps_070 + 97));
            benchmark::DoNotOptimize(trie().longest_match(cps_070 + 97, cps_070 + 99));
    }
}
BENCHMARK(BM_collation_element_lookup_070);

uint32_t cps_071[] = {
0xec1, 0xea2, 0xec1, 0xea3, 0xec1, 0xea5, 0xec1, 0xea7, 0xec1, 0xeaa, 0xec1, 0xeab, 0xec1, 0xead, 0xec1, 0xeae, 0xec1, 0xedc, 0xec1, 0xedd, 0xec1, 0xede, 0xec1, 0xedf, 0xec2, 0xec2, 0xe81, 0xec2, 0xe82, 0xec2, 0xe84, 0xec2, 0xe87, 0xec2, 0xe88, 0xec2, 0xe8a, 0xec2, 0xe8d, 0xec2, 0xe94, 0xec2, 0xe95, 0xec2, 0xe96, 0xec2, 0xe97, 0xec2, 0xe99, 0xec2, 0xe9a, 0xec2, 0xe9b, 0xec2, 0xe9c, 0xec2, 0xe9d, 0xec2, 0xe9e, 0xec2, 0xe9f, 0xec2, 0xea1, 0xec2, 0xea2, 0xec2, 0xea3, 0xec2, 0xea5, 0xec2, 0xea7, 0xec2, 0xeaa, 0xec2, 0xeab, 0xec2, 0xead, 0xec2, 0xeae, 0xec2, 0xedc, 0xec2, 0xedd, 0xec2, 0xede, 0xec2, 0xedf, 0xec3, 0xec3, 0xe81, 0xec3, 0xe82, 0xec3, 0xe84, 0xec3, 0xe87, 0xec3, 0xe88
};

void BM_collation_element_lookup_071(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 0, cps_071 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 2, cps_071 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 4, cps_071 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 6, cps_071 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 8, cps_071 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 10, cps_071 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 12, cps_071 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 14, cps_071 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 16, cps_071 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 18, cps_071 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 20, cps_071 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 22, cps_071 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 24, cps_071 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 25, cps_071 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 27, cps_071 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 29, cps_071 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 31, cps_071 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 33, cps_071 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 35, cps_071 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 37, cps_071 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 39, cps_071 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 41, cps_071 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 43, cps_071 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 45, cps_071 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 47, cps_071 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 49, cps_071 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 51, cps_071 + 53));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 53, cps_071 + 55));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 55, cps_071 + 57));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 57, cps_071 + 59));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 59, cps_071 + 61));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 61, cps_071 + 63));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 63, cps_071 + 65));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 65, cps_071 + 67));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 67, cps_071 + 69));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 69, cps_071 + 71));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 71, cps_071 + 73));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 73, cps_071 + 75));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 75, cps_071 + 77));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 77, cps_071 + 79));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 79, cps_071 + 81));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 81, cps_071 + 83));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 83, cps_071 + 85));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 85, cps_071 + 87));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 87, cps_071 + 88));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 88, cps_071 + 90));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 90, cps_071 + 92));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 92, cps_071 + 94));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 94, cps_071 + 96));
            benchmark::DoNotOptimize(trie().longest_match(cps_071 + 96, cps_071 + 98));
    }
}
BENCHMARK(BM_collation_element_lookup_071);

uint32_t cps_072[] = {
0xec3, 0xe8a, 0xec3, 0xe8d, 0xec3, 0xe94, 0xec3, 0xe95, 0xec3, 0xe96, 0xec3, 0xe97, 0xec3, 0xe99, 0xec3, 0xe9a, 0xec3, 0xe9b, 0xec3, 0xe9c, 0xec3, 0xe9d, 0xec3, 0xe9e, 0xec3, 0xe9f, 0xec3, 0xea1, 0xec3, 0xea2, 0xec3, 0xea3, 0xec3, 0xea5, 0xec3, 0xea7, 0xec3, 0xeaa, 0xec3, 0xeab, 0xec3, 0xead, 0xec3, 0xeae, 0xec3, 0xedc, 0xec3, 0xedd, 0xec3, 0xede, 0xec3, 0xedf, 0xec4, 0xec4, 0xe81, 0xec4, 0xe82, 0xec4, 0xe84, 0xec4, 0xe87, 0xec4, 0xe88, 0xec4, 0xe8a, 0xec4, 0xe8d, 0xec4, 0xe94, 0xec4, 0xe95, 0xec4, 0xe96, 0xec4, 0xe97, 0xec4, 0xe99, 0xec4, 0xe9a, 0xec4, 0xe9b, 0xec4, 0xe9c, 0xec4, 0xe9d, 0xec4, 0xe9e, 0xec4, 0xe9f, 0xec4, 0xea1, 0xec4, 0xea2, 0xec4, 0xea3, 0xec4, 0xea5, 0xec4, 0xea7
};

void BM_collation_element_lookup_072(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 0, cps_072 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 2, cps_072 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 4, cps_072 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 6, cps_072 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 8, cps_072 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 10, cps_072 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 12, cps_072 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 14, cps_072 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 16, cps_072 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 18, cps_072 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 20, cps_072 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 22, cps_072 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 24, cps_072 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 26, cps_072 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 28, cps_072 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 30, cps_072 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 32, cps_072 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 34, cps_072 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 36, cps_072 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 38, cps_072 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 40, cps_072 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 42, cps_072 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 44, cps_072 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 46, cps_072 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 48, cps_072 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 50, cps_072 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 52, cps_072 + 53));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 53, cps_072 + 55));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 55, cps_072 + 57));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 57, cps_072 + 59));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 59, cps_072 + 61));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 61, cps_072 + 63));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 63, cps_072 + 65));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 65, cps_072 + 67));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 67, cps_072 + 69));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 69, cps_072 + 71));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 71, cps_072 + 73));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 73, cps_072 + 75));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 75, cps_072 + 77));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 77, cps_072 + 79));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 79, cps_072 + 81));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 81, cps_072 + 83));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 83, cps_072 + 85));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 85, cps_072 + 87));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 87, cps_072 + 89));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 89, cps_072 + 91));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 91, cps_072 + 93));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 93, cps_072 + 95));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 95, cps_072 + 97));
            benchmark::DoNotOptimize(trie().longest_match(cps_072 + 97, cps_072 + 99));
    }
}
BENCHMARK(BM_collation_element_lookup_072);

uint32_t cps_073[] = {
0xec4, 0xeaa, 0xec4, 0xeab, 0xec4, 0xead, 0xec4, 0xeae, 0xec4, 0xedc, 0xec4, 0xedd, 0xec4, 0xede, 0xec4, 0xedf, 0xec6, 0xec8, 0xec9, 0xeca, 0xecb, 0xecc, 0xecd, 0xecd, 0xeb2, 0xed0, 0xed1, 0xed2, 0xed3, 0xed4, 0xed5, 0xed6, 0xed7, 0xed8, 0xed9, 0xedc, 0xedd, 0xede, 0xedf, 0xf00, 0xf01, 0xf02, 0xf03, 0xf04, 0xf05, 0xf06, 0xf07, 0xf08, 0xf09, 0xf0a, 0xf0b, 0xf0c, 0xf0d, 0xf0e, 0xf0f, 0xf10, 0xf11, 0xf12, 0xf13
};

void BM_collation_element_lookup_073(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 0, cps_073 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 2, cps_073 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 4, cps_073 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 6, cps_073 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 8, cps_073 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 10, cps_073 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 12, cps_073 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 14, cps_073 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 16, cps_073 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 17, cps_073 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 18, cps_073 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 19, cps_073 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 20, cps_073 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 21, cps_073 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 22, cps_073 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 23, cps_073 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 25, cps_073 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 26, cps_073 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 27, cps_073 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 28, cps_073 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 29, cps_073 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 30, cps_073 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 31, cps_073 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 32, cps_073 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 33, cps_073 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 34, cps_073 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 35, cps_073 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 36, cps_073 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 37, cps_073 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 38, cps_073 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 39, cps_073 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 40, cps_073 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 41, cps_073 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 42, cps_073 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 43, cps_073 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 44, cps_073 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 45, cps_073 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 46, cps_073 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 47, cps_073 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 48, cps_073 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 49, cps_073 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 50, cps_073 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 51, cps_073 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 52, cps_073 + 53));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 53, cps_073 + 54));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 54, cps_073 + 55));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 55, cps_073 + 56));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 56, cps_073 + 57));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 57, cps_073 + 58));
            benchmark::DoNotOptimize(trie().longest_match(cps_073 + 58, cps_073 + 59));
    }
}
BENCHMARK(BM_collation_element_lookup_073);

uint32_t cps_074[] = {
0xf14, 0xf15, 0xf16, 0xf17, 0xf18, 0xf19, 0xf1a, 0xf1b, 0xf1c, 0xf1d, 0xf1e, 0xf1f, 0xf20, 0xf21, 0xf22, 0xf23, 0xf24, 0xf25, 0xf26, 0xf27, 0xf28, 0xf29, 0xf2a, 0xf2b, 0xf2c, 0xf2d, 0xf2e, 0xf2f, 0xf30, 0xf31, 0xf32, 0xf33, 0xf34, 0xf35, 0xf36, 0xf37, 0xf38, 0xf39, 0xf3a, 0xf3b, 0xf3c, 0xf3d, 0xf3e, 0xf3f, 0xf40, 0xf41, 0xf42, 0xf43, 0xf44, 0xf45
};

void BM_collation_element_lookup_074(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 0, cps_074 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 1, cps_074 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 2, cps_074 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 3, cps_074 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 4, cps_074 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 5, cps_074 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 6, cps_074 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 7, cps_074 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 8, cps_074 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 9, cps_074 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 10, cps_074 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 11, cps_074 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 12, cps_074 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 13, cps_074 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 14, cps_074 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 15, cps_074 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 16, cps_074 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 17, cps_074 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 18, cps_074 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 19, cps_074 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 20, cps_074 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 21, cps_074 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 22, cps_074 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 23, cps_074 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 24, cps_074 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 25, cps_074 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 26, cps_074 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 27, cps_074 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 28, cps_074 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 29, cps_074 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 30, cps_074 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 31, cps_074 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 32, cps_074 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 33, cps_074 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 34, cps_074 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 35, cps_074 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 36, cps_074 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 37, cps_074 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 38, cps_074 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 39, cps_074 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 40, cps_074 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 41, cps_074 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 42, cps_074 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 43, cps_074 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 44, cps_074 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 45, cps_074 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 46, cps_074 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 47, cps_074 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 48, cps_074 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_074 + 49, cps_074 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_074);

uint32_t cps_075[] = {
0xf46, 0xf47, 0xf49, 0xf4a, 0xf4b, 0xf4c, 0xf4d, 0xf4e, 0xf4f, 0xf50, 0xf51, 0xf52, 0xf53, 0xf54, 0xf55, 0xf56, 0xf57, 0xf58, 0xf59, 0xf5a, 0xf5b, 0xf5c, 0xf5d, 0xf5e, 0xf5f, 0xf60, 0xf61, 0xf62, 0xf63, 0xf64, 0xf65, 0xf66, 0xf67, 0xf68, 0xf69, 0xf6a, 0xf6b, 0xf6c, 0xf71, 0xf71, 0xf72, 0xf71, 0xf74, 0xf71, 0xf80, 0xf72, 0xf73, 0xf74, 0xf75, 0xf76, 0xf77, 0xf78, 0xf79
};

void BM_collation_element_lookup_075(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 0, cps_075 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 1, cps_075 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 2, cps_075 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 3, cps_075 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 4, cps_075 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 5, cps_075 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 6, cps_075 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 7, cps_075 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 8, cps_075 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 9, cps_075 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 10, cps_075 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 11, cps_075 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 12, cps_075 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 13, cps_075 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 14, cps_075 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 15, cps_075 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 16, cps_075 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 17, cps_075 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 18, cps_075 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 19, cps_075 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 20, cps_075 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 21, cps_075 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 22, cps_075 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 23, cps_075 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 24, cps_075 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 25, cps_075 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 26, cps_075 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 27, cps_075 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 28, cps_075 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 29, cps_075 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 30, cps_075 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 31, cps_075 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 32, cps_075 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 33, cps_075 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 34, cps_075 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 35, cps_075 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 36, cps_075 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 37, cps_075 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 38, cps_075 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 39, cps_075 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 41, cps_075 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 43, cps_075 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 45, cps_075 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 46, cps_075 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 47, cps_075 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 48, cps_075 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 49, cps_075 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 50, cps_075 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 51, cps_075 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_075 + 52, cps_075 + 53));
    }
}
BENCHMARK(BM_collation_element_lookup_075);

uint32_t cps_076[] = {
0xf7a, 0xf7b, 0xf7c, 0xf7d, 0xf7e, 0xf7f, 0xf80, 0xf81, 0xf82, 0xf83, 0xf84, 0xf85, 0xf86, 0xf87, 0xf88, 0xf89, 0xf8a, 0xf8b, 0xf8c, 0xf8d, 0xf8e, 0xf8f, 0xf90, 0xf91, 0xf92, 0xf93, 0xf94, 0xf95, 0xf96, 0xf97, 0xf99, 0xf9a, 0xf9b, 0xf9c, 0xf9d, 0xf9e, 0xf9f, 0xfa0, 0xfa1, 0xfa2, 0xfa3, 0xfa4, 0xfa5, 0xfa6, 0xfa7, 0xfa8, 0xfa9, 0xfaa, 0xfab, 0xfac
};

void BM_collation_element_lookup_076(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 0, cps_076 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 1, cps_076 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 2, cps_076 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 3, cps_076 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 4, cps_076 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 5, cps_076 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 6, cps_076 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 7, cps_076 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 8, cps_076 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 9, cps_076 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 10, cps_076 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 11, cps_076 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 12, cps_076 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 13, cps_076 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 14, cps_076 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 15, cps_076 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 16, cps_076 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 17, cps_076 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 18, cps_076 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 19, cps_076 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 20, cps_076 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 21, cps_076 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 22, cps_076 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 23, cps_076 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 24, cps_076 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 25, cps_076 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 26, cps_076 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 27, cps_076 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 28, cps_076 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 29, cps_076 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 30, cps_076 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 31, cps_076 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 32, cps_076 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 33, cps_076 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 34, cps_076 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 35, cps_076 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 36, cps_076 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 37, cps_076 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 38, cps_076 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 39, cps_076 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 40, cps_076 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 41, cps_076 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 42, cps_076 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 43, cps_076 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 44, cps_076 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 45, cps_076 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 46, cps_076 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 47, cps_076 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 48, cps_076 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_076 + 49, cps_076 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_076);

uint32_t cps_077[] = {
0xfad, 0xfae, 0xfaf, 0xfb0, 0xfb1, 0xfb2, 0xfb2, 0xf71, 0xfb2, 0xf71, 0xf72, 0xfb2, 0xf71, 0xf74, 0xfb2, 0xf71, 0xf80, 0xfb2, 0xf73, 0xfb2, 0xf75, 0xfb2, 0xf80, 0xfb2, 0xf81, 0xfb3, 0xfb3, 0xf71, 0xfb3, 0xf71, 0xf72, 0xfb3, 0xf71, 0xf74, 0xfb3, 0xf71, 0xf80, 0xfb3, 0xf73, 0xfb3, 0xf75, 0xfb3, 0xf80, 0xfb3, 0xf81, 0xfb4, 0xfb5, 0xfb6, 0xfb7, 0xfb8, 0xfb9, 0xfba, 0xfbb, 0xfbc, 0xfbe, 0xfbf, 0xfc0, 0xfc1, 0xfc2, 0xfc3, 0xfc4, 0xfc5, 0xfc6, 0xfc7, 0xfc8, 0xfc9, 0xfca, 0xfcb, 0xfcc, 0xfce, 0xfcf, 0xfd0
};

void BM_collation_element_lookup_077(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 0, cps_077 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 1, cps_077 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 2, cps_077 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 3, cps_077 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 4, cps_077 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 5, cps_077 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 6, cps_077 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 8, cps_077 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 11, cps_077 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 14, cps_077 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 17, cps_077 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 19, cps_077 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 21, cps_077 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 23, cps_077 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 25, cps_077 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 26, cps_077 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 28, cps_077 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 31, cps_077 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 34, cps_077 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 37, cps_077 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 39, cps_077 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 41, cps_077 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 43, cps_077 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 45, cps_077 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 46, cps_077 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 47, cps_077 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 48, cps_077 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 49, cps_077 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 50, cps_077 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 51, cps_077 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 52, cps_077 + 53));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 53, cps_077 + 54));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 54, cps_077 + 55));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 55, cps_077 + 56));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 56, cps_077 + 57));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 57, cps_077 + 58));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 58, cps_077 + 59));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 59, cps_077 + 60));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 60, cps_077 + 61));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 61, cps_077 + 62));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 62, cps_077 + 63));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 63, cps_077 + 64));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 64, cps_077 + 65));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 65, cps_077 + 66));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 66, cps_077 + 67));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 67, cps_077 + 68));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 68, cps_077 + 69));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 69, cps_077 + 70));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 70, cps_077 + 71));
            benchmark::DoNotOptimize(trie().longest_match(cps_077 + 71, cps_077 + 72));
    }
}
BENCHMARK(BM_collation_element_lookup_077);

uint32_t cps_078[] = {
0xfd1, 0xfd2, 0xfd3, 0xfd4, 0xfd5, 0xfd6, 0xfd7, 0xfd8, 0xfd9, 0xfda, 0x1000, 0x1001, 0x1002, 0x1003, 0x1004, 0x1005, 0x1006, 0x1007, 0x1008, 0x1009, 0x100a, 0x100b, 0x100c, 0x100d, 0x100e, 0x100f, 0x1010, 0x1011, 0x1012, 0x1013, 0x1014, 0x1015, 0x1016, 0x1017, 0x1018, 0x1019, 0x101a, 0x101b, 0x101c, 0x101d, 0x101e, 0x101f, 0x1020, 0x1021, 0x1022, 0x1023, 0x1024, 0x1025, 0x1025, 0x102e, 0x1026
};

void BM_collation_element_lookup_078(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 0, cps_078 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 1, cps_078 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 2, cps_078 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 3, cps_078 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 4, cps_078 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 5, cps_078 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 6, cps_078 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 7, cps_078 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 8, cps_078 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 9, cps_078 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 10, cps_078 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 11, cps_078 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 12, cps_078 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 13, cps_078 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 14, cps_078 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 15, cps_078 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 16, cps_078 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 17, cps_078 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 18, cps_078 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 19, cps_078 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 20, cps_078 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 21, cps_078 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 22, cps_078 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 23, cps_078 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 24, cps_078 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 25, cps_078 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 26, cps_078 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 27, cps_078 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 28, cps_078 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 29, cps_078 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 30, cps_078 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 31, cps_078 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 32, cps_078 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 33, cps_078 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 34, cps_078 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 35, cps_078 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 36, cps_078 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 37, cps_078 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 38, cps_078 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 39, cps_078 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 40, cps_078 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 41, cps_078 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 42, cps_078 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 43, cps_078 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 44, cps_078 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 45, cps_078 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 46, cps_078 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 47, cps_078 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 48, cps_078 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_078 + 50, cps_078 + 51));
    }
}
BENCHMARK(BM_collation_element_lookup_078);

uint32_t cps_079[] = {
0x1027, 0x1028, 0x1029, 0x102a, 0x102b, 0x102c, 0x102d, 0x102e, 0x102f, 0x1030, 0x1031, 0x1032, 0x1033, 0x1034, 0x1035, 0x1036, 0x1037, 0x1038, 0x1039, 0x103a, 0x103b, 0x103c, 0x103d, 0x103e, 0x103f, 0x1040, 0x1041, 0x1042, 0x1043, 0x1044, 0x1045, 0x1046, 0x1047, 0x1048, 0x1049, 0x104a, 0x104b, 0x104c, 0x104d, 0x104e, 0x104f, 0x1050, 0x1051, 0x1052, 0x1053, 0x1054, 0x1055, 0x1056, 0x1057, 0x1058
};

void BM_collation_element_lookup_079(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 0, cps_079 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 1, cps_079 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 2, cps_079 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 3, cps_079 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 4, cps_079 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 5, cps_079 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 6, cps_079 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 7, cps_079 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 8, cps_079 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 9, cps_079 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 10, cps_079 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 11, cps_079 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 12, cps_079 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 13, cps_079 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 14, cps_079 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 15, cps_079 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 16, cps_079 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 17, cps_079 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 18, cps_079 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 19, cps_079 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 20, cps_079 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 21, cps_079 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 22, cps_079 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 23, cps_079 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 24, cps_079 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 25, cps_079 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 26, cps_079 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 27, cps_079 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 28, cps_079 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 29, cps_079 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 30, cps_079 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 31, cps_079 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 32, cps_079 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 33, cps_079 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 34, cps_079 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 35, cps_079 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 36, cps_079 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 37, cps_079 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 38, cps_079 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 39, cps_079 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 40, cps_079 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 41, cps_079 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 42, cps_079 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 43, cps_079 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 44, cps_079 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 45, cps_079 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 46, cps_079 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 47, cps_079 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 48, cps_079 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_079 + 49, cps_079 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_079);

uint32_t cps_080[] = {
0x1059, 0x105a, 0x105b, 0x105c, 0x105d, 0x105e, 0x105f, 0x1060, 0x1061, 0x1062, 0x1063, 0x1064, 0x1065, 0x1066, 0x1067, 0x1068, 0x1069, 0x106a, 0x106b, 0x106c, 0x106d, 0x106e, 0x106f, 0x1070, 0x1071, 0x1072, 0x1073, 0x1074, 0x1075, 0x1076, 0x1077, 0x1078, 0x1079, 0x107a, 0x107b, 0x107c, 0x107d, 0x107e, 0x107f, 0x1080, 0x1081, 0x1082, 0x1083, 0x1084, 0x1085, 0x1086, 0x1087, 0x1088, 0x1089, 0x108a
};

void BM_collation_element_lookup_080(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 0, cps_080 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 1, cps_080 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 2, cps_080 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 3, cps_080 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 4, cps_080 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 5, cps_080 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 6, cps_080 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 7, cps_080 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 8, cps_080 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 9, cps_080 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 10, cps_080 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 11, cps_080 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 12, cps_080 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 13, cps_080 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 14, cps_080 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 15, cps_080 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 16, cps_080 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 17, cps_080 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 18, cps_080 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 19, cps_080 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 20, cps_080 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 21, cps_080 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 22, cps_080 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 23, cps_080 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 24, cps_080 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 25, cps_080 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 26, cps_080 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 27, cps_080 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 28, cps_080 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 29, cps_080 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 30, cps_080 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 31, cps_080 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 32, cps_080 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 33, cps_080 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 34, cps_080 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 35, cps_080 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 36, cps_080 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 37, cps_080 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 38, cps_080 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 39, cps_080 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 40, cps_080 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 41, cps_080 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 42, cps_080 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 43, cps_080 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 44, cps_080 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 45, cps_080 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 46, cps_080 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 47, cps_080 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 48, cps_080 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_080 + 49, cps_080 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_080);

uint32_t cps_081[] = {
0x108b, 0x108c, 0x108d, 0x108e, 0x108f, 0x1090, 0x1091, 0x1092, 0x1093, 0x1094, 0x1095, 0x1096, 0x1097, 0x1098, 0x1099, 0x109a, 0x109b, 0x109c, 0x109d, 0x109e, 0x109f, 0x10a0, 0x10a1, 0x10a2, 0x10a3, 0x10a4, 0x10a5, 0x10a6, 0x10a7, 0x10a8, 0x10a9, 0x10aa, 0x10ab, 0x10ac, 0x10ad, 0x10ae, 0x10af, 0x10b0, 0x10b1, 0x10b2, 0x10b3, 0x10b4, 0x10b5, 0x10b6, 0x10b7, 0x10b8, 0x10b9, 0x10ba, 0x10bb, 0x10bc
};

void BM_collation_element_lookup_081(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 0, cps_081 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 1, cps_081 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 2, cps_081 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 3, cps_081 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 4, cps_081 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 5, cps_081 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 6, cps_081 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 7, cps_081 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 8, cps_081 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 9, cps_081 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 10, cps_081 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 11, cps_081 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 12, cps_081 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 13, cps_081 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 14, cps_081 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 15, cps_081 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 16, cps_081 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 17, cps_081 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 18, cps_081 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 19, cps_081 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 20, cps_081 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 21, cps_081 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 22, cps_081 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 23, cps_081 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 24, cps_081 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 25, cps_081 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 26, cps_081 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 27, cps_081 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 28, cps_081 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 29, cps_081 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 30, cps_081 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 31, cps_081 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 32, cps_081 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 33, cps_081 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 34, cps_081 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 35, cps_081 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 36, cps_081 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 37, cps_081 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 38, cps_081 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 39, cps_081 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 40, cps_081 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 41, cps_081 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 42, cps_081 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 43, cps_081 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 44, cps_081 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 45, cps_081 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 46, cps_081 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 47, cps_081 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 48, cps_081 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_081 + 49, cps_081 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_081);

uint32_t cps_082[] = {
0x10bd, 0x10be, 0x10bf, 0x10c0, 0x10c1, 0x10c2, 0x10c3, 0x10c4, 0x10c5, 0x10c7, 0x10cd, 0x10d0, 0x10d1, 0x10d2, 0x10d3, 0x10d4, 0x10d5, 0x10d6, 0x10d7, 0x10d8, 0x10d9, 0x10da, 0x10db, 0x10dc, 0x10dd, 0x10de, 0x10df, 0x10e0, 0x10e1, 0x10e2, 0x10e3, 0x10e4, 0x10e5, 0x10e6, 0x10e7, 0x10e8, 0x10e9, 0x10ea, 0x10eb, 0x10ec, 0x10ed, 0x10ee, 0x10ef, 0x10f0, 0x10f1, 0x10f2, 0x10f3, 0x10f4, 0x10f5, 0x10f6
};

void BM_collation_element_lookup_082(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 0, cps_082 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 1, cps_082 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 2, cps_082 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 3, cps_082 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 4, cps_082 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 5, cps_082 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 6, cps_082 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 7, cps_082 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 8, cps_082 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 9, cps_082 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 10, cps_082 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 11, cps_082 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 12, cps_082 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 13, cps_082 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 14, cps_082 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 15, cps_082 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 16, cps_082 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 17, cps_082 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 18, cps_082 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 19, cps_082 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 20, cps_082 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 21, cps_082 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 22, cps_082 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 23, cps_082 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 24, cps_082 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 25, cps_082 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 26, cps_082 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 27, cps_082 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 28, cps_082 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 29, cps_082 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 30, cps_082 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 31, cps_082 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 32, cps_082 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 33, cps_082 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 34, cps_082 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 35, cps_082 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 36, cps_082 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 37, cps_082 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 38, cps_082 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 39, cps_082 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 40, cps_082 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 41, cps_082 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 42, cps_082 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 43, cps_082 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 44, cps_082 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 45, cps_082 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 46, cps_082 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 47, cps_082 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 48, cps_082 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_082 + 49, cps_082 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_082);

uint32_t cps_083[] = {
0x10f7, 0x10f8, 0x10f9, 0x10fa, 0x10fb, 0x10fc, 0x10fd, 0x10fe, 0x10ff, 0x1100, 0x1101, 0x1102, 0x1103, 0x1104, 0x1105, 0x1106, 0x1107, 0x1108, 0x1109, 0x110a, 0x110b, 0x110c, 0x110d, 0x110e, 0x110f, 0x1110, 0x1111, 0x1112, 0x1113, 0x1114, 0x1115, 0x1116, 0x1117, 0x1118, 0x1119, 0x111a, 0x111b, 0x111c, 0x111d, 0x111e, 0x111f, 0x1120, 0x1121, 0x1122, 0x1123, 0x1124, 0x1125, 0x1126, 0x1127, 0x1128
};

void BM_collation_element_lookup_083(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 0, cps_083 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 1, cps_083 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 2, cps_083 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 3, cps_083 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 4, cps_083 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 5, cps_083 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 6, cps_083 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 7, cps_083 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 8, cps_083 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 9, cps_083 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 10, cps_083 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 11, cps_083 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 12, cps_083 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 13, cps_083 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 14, cps_083 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 15, cps_083 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 16, cps_083 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 17, cps_083 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 18, cps_083 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 19, cps_083 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 20, cps_083 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 21, cps_083 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 22, cps_083 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 23, cps_083 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 24, cps_083 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 25, cps_083 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 26, cps_083 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 27, cps_083 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 28, cps_083 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 29, cps_083 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 30, cps_083 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 31, cps_083 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 32, cps_083 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 33, cps_083 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 34, cps_083 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 35, cps_083 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 36, cps_083 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 37, cps_083 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 38, cps_083 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 39, cps_083 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 40, cps_083 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 41, cps_083 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 42, cps_083 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 43, cps_083 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 44, cps_083 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 45, cps_083 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 46, cps_083 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 47, cps_083 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 48, cps_083 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_083 + 49, cps_083 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_083);

uint32_t cps_084[] = {
0x1129, 0x112a, 0x112b, 0x112c, 0x112d, 0x112e, 0x112f, 0x1130, 0x1131, 0x1132, 0x1133, 0x1134, 0x1135, 0x1136, 0x1137, 0x1138, 0x1139, 0x113a, 0x113b, 0x113c, 0x113d, 0x113e, 0x113f, 0x1140, 0x1141, 0x1142, 0x1143, 0x1144, 0x1145, 0x1146, 0x1147, 0x1148, 0x1149, 0x114a, 0x114b, 0x114c, 0x114d, 0x114e, 0x114f, 0x1150, 0x1151, 0x1152, 0x1153, 0x1154, 0x1155, 0x1156, 0x1157, 0x1158, 0x1159, 0x115a
};

void BM_collation_element_lookup_084(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 0, cps_084 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 1, cps_084 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 2, cps_084 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 3, cps_084 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 4, cps_084 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 5, cps_084 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 6, cps_084 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 7, cps_084 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 8, cps_084 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 9, cps_084 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 10, cps_084 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 11, cps_084 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 12, cps_084 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 13, cps_084 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 14, cps_084 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 15, cps_084 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 16, cps_084 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 17, cps_084 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 18, cps_084 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 19, cps_084 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 20, cps_084 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 21, cps_084 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 22, cps_084 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 23, cps_084 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 24, cps_084 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 25, cps_084 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 26, cps_084 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 27, cps_084 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 28, cps_084 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 29, cps_084 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 30, cps_084 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 31, cps_084 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 32, cps_084 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 33, cps_084 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 34, cps_084 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 35, cps_084 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 36, cps_084 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 37, cps_084 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 38, cps_084 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 39, cps_084 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 40, cps_084 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 41, cps_084 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 42, cps_084 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 43, cps_084 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 44, cps_084 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 45, cps_084 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 46, cps_084 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 47, cps_084 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 48, cps_084 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_084 + 49, cps_084 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_084);

uint32_t cps_085[] = {
0x115b, 0x115c, 0x115d, 0x115e, 0x115f, 0x1160, 0x1161, 0x1162, 0x1163, 0x1164, 0x1165, 0x1166, 0x1167, 0x1168, 0x1169, 0x116a, 0x116b, 0x116c, 0x116d, 0x116e, 0x116f, 0x1170, 0x1171, 0x1172, 0x1173, 0x1174, 0x1175, 0x1176, 0x1177, 0x1178, 0x1179, 0x117a, 0x117b, 0x117c, 0x117d, 0x117e, 0x117f, 0x1180, 0x1181, 0x1182, 0x1183, 0x1184, 0x1185, 0x1186, 0x1187, 0x1188, 0x1189, 0x118a, 0x118b, 0x118c
};

void BM_collation_element_lookup_085(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 0, cps_085 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 1, cps_085 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 2, cps_085 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 3, cps_085 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 4, cps_085 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 5, cps_085 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 6, cps_085 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 7, cps_085 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 8, cps_085 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 9, cps_085 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 10, cps_085 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 11, cps_085 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 12, cps_085 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 13, cps_085 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 14, cps_085 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 15, cps_085 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 16, cps_085 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 17, cps_085 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 18, cps_085 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 19, cps_085 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 20, cps_085 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 21, cps_085 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 22, cps_085 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 23, cps_085 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 24, cps_085 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 25, cps_085 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 26, cps_085 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 27, cps_085 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 28, cps_085 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 29, cps_085 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 30, cps_085 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 31, cps_085 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 32, cps_085 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 33, cps_085 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 34, cps_085 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 35, cps_085 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 36, cps_085 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 37, cps_085 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 38, cps_085 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 39, cps_085 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 40, cps_085 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 41, cps_085 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 42, cps_085 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 43, cps_085 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 44, cps_085 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 45, cps_085 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 46, cps_085 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 47, cps_085 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 48, cps_085 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_085 + 49, cps_085 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_085);

uint32_t cps_086[] = {
0x118d, 0x118e, 0x118f, 0x1190, 0x1191, 0x1192, 0x1193, 0x1194, 0x1195, 0x1196, 0x1197, 0x1198, 0x1199, 0x119a, 0x119b, 0x119c, 0x119d, 0x119e, 0x119f, 0x11a0, 0x11a1, 0x11a2, 0x11a3, 0x11a4, 0x11a5, 0x11a6, 0x11a7, 0x11a8, 0x11a9, 0x11aa, 0x11ab, 0x11ac, 0x11ad, 0x11ae, 0x11af, 0x11b0, 0x11b1, 0x11b2, 0x11b3, 0x11b4, 0x11b5, 0x11b6, 0x11b7, 0x11b8, 0x11b9, 0x11ba, 0x11bb, 0x11bc, 0x11bd, 0x11be
};

void BM_collation_element_lookup_086(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 0, cps_086 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 1, cps_086 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 2, cps_086 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 3, cps_086 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 4, cps_086 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 5, cps_086 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 6, cps_086 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 7, cps_086 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 8, cps_086 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 9, cps_086 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 10, cps_086 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 11, cps_086 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 12, cps_086 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 13, cps_086 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 14, cps_086 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 15, cps_086 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 16, cps_086 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 17, cps_086 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 18, cps_086 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 19, cps_086 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 20, cps_086 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 21, cps_086 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 22, cps_086 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 23, cps_086 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 24, cps_086 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 25, cps_086 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 26, cps_086 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 27, cps_086 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 28, cps_086 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 29, cps_086 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 30, cps_086 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 31, cps_086 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 32, cps_086 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 33, cps_086 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 34, cps_086 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 35, cps_086 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 36, cps_086 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 37, cps_086 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 38, cps_086 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 39, cps_086 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 40, cps_086 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 41, cps_086 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 42, cps_086 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 43, cps_086 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 44, cps_086 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 45, cps_086 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 46, cps_086 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 47, cps_086 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 48, cps_086 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_086 + 49, cps_086 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_086);

uint32_t cps_087[] = {
0x11bf, 0x11c0, 0x11c1, 0x11c2, 0x11c3, 0x11c4, 0x11c5, 0x11c6, 0x11c7, 0x11c8, 0x11c9, 0x11ca, 0x11cb, 0x11cc, 0x11cd, 0x11ce, 0x11cf, 0x11d0, 0x11d1, 0x11d2, 0x11d3, 0x11d4, 0x11d5, 0x11d6, 0x11d7, 0x11d8, 0x11d9, 0x11da, 0x11db, 0x11dc, 0x11dd, 0x11de, 0x11df, 0x11e0, 0x11e1, 0x11e2, 0x11e3, 0x11e4, 0x11e5, 0x11e6, 0x11e7, 0x11e8, 0x11e9, 0x11ea, 0x11eb, 0x11ec, 0x11ed, 0x11ee, 0x11ef, 0x11f0
};

void BM_collation_element_lookup_087(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 0, cps_087 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 1, cps_087 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 2, cps_087 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 3, cps_087 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 4, cps_087 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 5, cps_087 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 6, cps_087 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 7, cps_087 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 8, cps_087 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 9, cps_087 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 10, cps_087 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 11, cps_087 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 12, cps_087 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 13, cps_087 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 14, cps_087 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 15, cps_087 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 16, cps_087 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 17, cps_087 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 18, cps_087 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 19, cps_087 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 20, cps_087 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 21, cps_087 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 22, cps_087 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 23, cps_087 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 24, cps_087 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 25, cps_087 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 26, cps_087 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 27, cps_087 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 28, cps_087 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 29, cps_087 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 30, cps_087 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 31, cps_087 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 32, cps_087 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 33, cps_087 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 34, cps_087 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 35, cps_087 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 36, cps_087 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 37, cps_087 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 38, cps_087 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 39, cps_087 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 40, cps_087 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 41, cps_087 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 42, cps_087 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 43, cps_087 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 44, cps_087 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 45, cps_087 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 46, cps_087 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 47, cps_087 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 48, cps_087 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_087 + 49, cps_087 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_087);

uint32_t cps_088[] = {
0x11f1, 0x11f2, 0x11f3, 0x11f4, 0x11f5, 0x11f6, 0x11f7, 0x11f8, 0x11f9, 0x11fa, 0x11fb, 0x11fc, 0x11fd, 0x11fe, 0x11ff, 0x1200, 0x1201, 0x1202, 0x1203, 0x1204, 0x1205, 0x1206, 0x1207, 0x1208, 0x1209, 0x120a, 0x120b, 0x120c, 0x120d, 0x120e, 0x120f, 0x1210, 0x1211, 0x1212, 0x1213, 0x1214, 0x1215, 0x1216, 0x1217, 0x1218, 0x1219, 0x121a, 0x121b, 0x121c, 0x121d, 0x121e, 0x121f, 0x1220, 0x1221, 0x1222
};

void BM_collation_element_lookup_088(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 0, cps_088 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 1, cps_088 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 2, cps_088 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 3, cps_088 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 4, cps_088 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 5, cps_088 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 6, cps_088 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 7, cps_088 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 8, cps_088 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 9, cps_088 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 10, cps_088 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 11, cps_088 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 12, cps_088 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 13, cps_088 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 14, cps_088 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 15, cps_088 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 16, cps_088 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 17, cps_088 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 18, cps_088 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 19, cps_088 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 20, cps_088 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 21, cps_088 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 22, cps_088 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 23, cps_088 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 24, cps_088 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 25, cps_088 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 26, cps_088 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 27, cps_088 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 28, cps_088 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 29, cps_088 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 30, cps_088 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 31, cps_088 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 32, cps_088 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 33, cps_088 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 34, cps_088 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 35, cps_088 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 36, cps_088 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 37, cps_088 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 38, cps_088 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 39, cps_088 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 40, cps_088 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 41, cps_088 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 42, cps_088 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 43, cps_088 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 44, cps_088 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 45, cps_088 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 46, cps_088 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 47, cps_088 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 48, cps_088 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_088 + 49, cps_088 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_088);

uint32_t cps_089[] = {
0x1223, 0x1224, 0x1225, 0x1226, 0x1227, 0x1228, 0x1229, 0x122a, 0x122b, 0x122c, 0x122d, 0x122e, 0x122f, 0x1230, 0x1231, 0x1232, 0x1233, 0x1234, 0x1235, 0x1236, 0x1237, 0x1238, 0x1239, 0x123a, 0x123b, 0x123c, 0x123d, 0x123e, 0x123f, 0x1240, 0x1241, 0x1242, 0x1243, 0x1244, 0x1245, 0x1246, 0x1247, 0x1248, 0x124a, 0x124b, 0x124c, 0x124d, 0x1250, 0x1251, 0x1252, 0x1253, 0x1254, 0x1255, 0x1256, 0x1258
};

void BM_collation_element_lookup_089(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 0, cps_089 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 1, cps_089 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 2, cps_089 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 3, cps_089 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 4, cps_089 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 5, cps_089 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 6, cps_089 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 7, cps_089 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 8, cps_089 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 9, cps_089 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 10, cps_089 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 11, cps_089 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 12, cps_089 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 13, cps_089 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 14, cps_089 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 15, cps_089 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 16, cps_089 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 17, cps_089 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 18, cps_089 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 19, cps_089 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 20, cps_089 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 21, cps_089 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 22, cps_089 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 23, cps_089 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 24, cps_089 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 25, cps_089 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 26, cps_089 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 27, cps_089 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 28, cps_089 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 29, cps_089 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 30, cps_089 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 31, cps_089 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 32, cps_089 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 33, cps_089 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 34, cps_089 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 35, cps_089 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 36, cps_089 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 37, cps_089 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 38, cps_089 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 39, cps_089 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 40, cps_089 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 41, cps_089 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 42, cps_089 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 43, cps_089 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 44, cps_089 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 45, cps_089 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 46, cps_089 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 47, cps_089 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 48, cps_089 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_089 + 49, cps_089 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_089);

uint32_t cps_090[] = {
0x125a, 0x125b, 0x125c, 0x125d, 0x1260, 0x1261, 0x1262, 0x1263, 0x1264, 0x1265, 0x1266, 0x1267, 0x1268, 0x1269, 0x126a, 0x126b, 0x126c, 0x126d, 0x126e, 0x126f, 0x1270, 0x1271, 0x1272, 0x1273, 0x1274, 0x1275, 0x1276, 0x1277, 0x1278, 0x1279, 0x127a, 0x127b, 0x127c, 0x127d, 0x127e, 0x127f, 0x1280, 0x1281, 0x1282, 0x1283, 0x1284, 0x1285, 0x1286, 0x1287, 0x1288, 0x128a, 0x128b, 0x128c, 0x128d, 0x1290
};

void BM_collation_element_lookup_090(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 0, cps_090 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 1, cps_090 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 2, cps_090 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 3, cps_090 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 4, cps_090 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 5, cps_090 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 6, cps_090 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 7, cps_090 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 8, cps_090 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 9, cps_090 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 10, cps_090 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 11, cps_090 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 12, cps_090 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 13, cps_090 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 14, cps_090 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 15, cps_090 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 16, cps_090 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 17, cps_090 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 18, cps_090 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 19, cps_090 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 20, cps_090 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 21, cps_090 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 22, cps_090 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 23, cps_090 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 24, cps_090 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 25, cps_090 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 26, cps_090 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 27, cps_090 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 28, cps_090 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 29, cps_090 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 30, cps_090 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 31, cps_090 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 32, cps_090 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 33, cps_090 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 34, cps_090 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 35, cps_090 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 36, cps_090 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 37, cps_090 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 38, cps_090 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 39, cps_090 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 40, cps_090 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 41, cps_090 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 42, cps_090 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 43, cps_090 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 44, cps_090 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 45, cps_090 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 46, cps_090 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 47, cps_090 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 48, cps_090 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_090 + 49, cps_090 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_090);

uint32_t cps_091[] = {
0x1291, 0x1292, 0x1293, 0x1294, 0x1295, 0x1296, 0x1297, 0x1298, 0x1299, 0x129a, 0x129b, 0x129c, 0x129d, 0x129e, 0x129f, 0x12a0, 0x12a1, 0x12a2, 0x12a3, 0x12a4, 0x12a5, 0x12a6, 0x12a7, 0x12a8, 0x12a9, 0x12aa, 0x12ab, 0x12ac, 0x12ad, 0x12ae, 0x12af, 0x12b0, 0x12b2, 0x12b3, 0x12b4, 0x12b5, 0x12b8, 0x12b9, 0x12ba, 0x12bb, 0x12bc, 0x12bd, 0x12be, 0x12c0, 0x12c2, 0x12c3, 0x12c4, 0x12c5, 0x12c8, 0x12c9
};

void BM_collation_element_lookup_091(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 0, cps_091 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 1, cps_091 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 2, cps_091 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 3, cps_091 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 4, cps_091 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 5, cps_091 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 6, cps_091 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 7, cps_091 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 8, cps_091 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 9, cps_091 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 10, cps_091 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 11, cps_091 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 12, cps_091 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 13, cps_091 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 14, cps_091 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 15, cps_091 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 16, cps_091 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 17, cps_091 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 18, cps_091 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 19, cps_091 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 20, cps_091 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 21, cps_091 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 22, cps_091 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 23, cps_091 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 24, cps_091 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 25, cps_091 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 26, cps_091 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 27, cps_091 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 28, cps_091 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 29, cps_091 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 30, cps_091 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 31, cps_091 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 32, cps_091 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 33, cps_091 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 34, cps_091 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 35, cps_091 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 36, cps_091 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 37, cps_091 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 38, cps_091 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 39, cps_091 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 40, cps_091 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 41, cps_091 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 42, cps_091 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 43, cps_091 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 44, cps_091 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 45, cps_091 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 46, cps_091 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 47, cps_091 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 48, cps_091 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_091 + 49, cps_091 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_091);

uint32_t cps_092[] = {
0x12ca, 0x12cb, 0x12cc, 0x12cd, 0x12ce, 0x12cf, 0x12d0, 0x12d1, 0x12d2, 0x12d3, 0x12d4, 0x12d5, 0x12d6, 0x12d8, 0x12d9, 0x12da, 0x12db, 0x12dc, 0x12dd, 0x12de, 0x12df, 0x12e0, 0x12e1, 0x12e2, 0x12e3, 0x12e4, 0x12e5, 0x12e6, 0x12e7, 0x12e8, 0x12e9, 0x12ea, 0x12eb, 0x12ec, 0x12ed, 0x12ee, 0x12ef, 0x12f0, 0x12f1, 0x12f2, 0x12f3, 0x12f4, 0x12f5, 0x12f6, 0x12f7, 0x12f8, 0x12f9, 0x12fa, 0x12fb, 0x12fc
};

void BM_collation_element_lookup_092(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 0, cps_092 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 1, cps_092 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 2, cps_092 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 3, cps_092 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 4, cps_092 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 5, cps_092 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 6, cps_092 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 7, cps_092 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 8, cps_092 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 9, cps_092 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 10, cps_092 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 11, cps_092 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 12, cps_092 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 13, cps_092 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 14, cps_092 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 15, cps_092 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 16, cps_092 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 17, cps_092 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 18, cps_092 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 19, cps_092 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 20, cps_092 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 21, cps_092 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 22, cps_092 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 23, cps_092 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 24, cps_092 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 25, cps_092 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 26, cps_092 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 27, cps_092 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 28, cps_092 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 29, cps_092 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 30, cps_092 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 31, cps_092 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 32, cps_092 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 33, cps_092 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 34, cps_092 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 35, cps_092 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 36, cps_092 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 37, cps_092 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 38, cps_092 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 39, cps_092 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 40, cps_092 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 41, cps_092 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 42, cps_092 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 43, cps_092 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 44, cps_092 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 45, cps_092 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 46, cps_092 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 47, cps_092 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 48, cps_092 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_092 + 49, cps_092 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_092);

uint32_t cps_093[] = {
0x12fd, 0x12fe, 0x12ff, 0x1300, 0x1301, 0x1302, 0x1303, 0x1304, 0x1305, 0x1306, 0x1307, 0x1308, 0x1309, 0x130a, 0x130b, 0x130c, 0x130d, 0x130e, 0x130f, 0x1310, 0x1312, 0x1313, 0x1314, 0x1315, 0x1318, 0x1319, 0x131a, 0x131b, 0x131c, 0x131d, 0x131e, 0x131f, 0x1320, 0x1321, 0x1322, 0x1323, 0x1324, 0x1325, 0x1326, 0x1327, 0x1328, 0x1329, 0x132a, 0x132b, 0x132c, 0x132d, 0x132e, 0x132f, 0x1330, 0x1331
};

void BM_collation_element_lookup_093(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 0, cps_093 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 1, cps_093 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 2, cps_093 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 3, cps_093 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 4, cps_093 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 5, cps_093 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 6, cps_093 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 7, cps_093 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 8, cps_093 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 9, cps_093 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 10, cps_093 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 11, cps_093 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 12, cps_093 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 13, cps_093 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 14, cps_093 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 15, cps_093 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 16, cps_093 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 17, cps_093 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 18, cps_093 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 19, cps_093 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 20, cps_093 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 21, cps_093 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 22, cps_093 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 23, cps_093 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 24, cps_093 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 25, cps_093 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 26, cps_093 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 27, cps_093 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 28, cps_093 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 29, cps_093 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 30, cps_093 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 31, cps_093 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 32, cps_093 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 33, cps_093 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 34, cps_093 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 35, cps_093 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 36, cps_093 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 37, cps_093 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 38, cps_093 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 39, cps_093 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 40, cps_093 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 41, cps_093 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 42, cps_093 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 43, cps_093 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 44, cps_093 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 45, cps_093 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 46, cps_093 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 47, cps_093 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 48, cps_093 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_093 + 49, cps_093 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_093);

uint32_t cps_094[] = {
0x1332, 0x1333, 0x1334, 0x1335, 0x1336, 0x1337, 0x1338, 0x1339, 0x133a, 0x133b, 0x133c, 0x133d, 0x133e, 0x133f, 0x1340, 0x1341, 0x1342, 0x1343, 0x1344, 0x1345, 0x1346, 0x1347, 0x1348, 0x1349, 0x134a, 0x134b, 0x134c, 0x134d, 0x134e, 0x134f, 0x1350, 0x1351, 0x1352, 0x1353, 0x1354, 0x1355, 0x1356, 0x1357, 0x1358, 0x1359, 0x135a, 0x135d, 0x135e, 0x135f, 0x1360, 0x1361, 0x1362, 0x1363, 0x1364, 0x1365
};

void BM_collation_element_lookup_094(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 0, cps_094 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 1, cps_094 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 2, cps_094 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 3, cps_094 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 4, cps_094 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 5, cps_094 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 6, cps_094 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 7, cps_094 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 8, cps_094 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 9, cps_094 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 10, cps_094 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 11, cps_094 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 12, cps_094 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 13, cps_094 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 14, cps_094 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 15, cps_094 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 16, cps_094 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 17, cps_094 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 18, cps_094 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 19, cps_094 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 20, cps_094 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 21, cps_094 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 22, cps_094 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 23, cps_094 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 24, cps_094 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 25, cps_094 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 26, cps_094 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 27, cps_094 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 28, cps_094 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 29, cps_094 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 30, cps_094 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 31, cps_094 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 32, cps_094 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 33, cps_094 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 34, cps_094 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 35, cps_094 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 36, cps_094 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 37, cps_094 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 38, cps_094 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 39, cps_094 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 40, cps_094 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 41, cps_094 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 42, cps_094 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 43, cps_094 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 44, cps_094 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 45, cps_094 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 46, cps_094 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 47, cps_094 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 48, cps_094 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_094 + 49, cps_094 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_094);

uint32_t cps_095[] = {
0x1366, 0x1367, 0x1368, 0x1369, 0x136a, 0x136b, 0x136c, 0x136d, 0x136e, 0x136f, 0x1370, 0x1371, 0x1372, 0x1373, 0x1374, 0x1375, 0x1376, 0x1377, 0x1378, 0x1379, 0x137a, 0x137b, 0x137c, 0x1380, 0x1381, 0x1382, 0x1383, 0x1384, 0x1385, 0x1386, 0x1387, 0x1388, 0x1389, 0x138a, 0x138b, 0x138c, 0x138d, 0x138e, 0x138f, 0x1390, 0x1391, 0x1392, 0x1393, 0x1394, 0x1395, 0x1396, 0x1397, 0x1398, 0x1399, 0x13a0
};

void BM_collation_element_lookup_095(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 0, cps_095 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 1, cps_095 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 2, cps_095 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 3, cps_095 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 4, cps_095 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 5, cps_095 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 6, cps_095 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 7, cps_095 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 8, cps_095 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 9, cps_095 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 10, cps_095 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 11, cps_095 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 12, cps_095 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 13, cps_095 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 14, cps_095 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 15, cps_095 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 16, cps_095 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 17, cps_095 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 18, cps_095 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 19, cps_095 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 20, cps_095 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 21, cps_095 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 22, cps_095 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 23, cps_095 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 24, cps_095 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 25, cps_095 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 26, cps_095 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 27, cps_095 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 28, cps_095 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 29, cps_095 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 30, cps_095 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 31, cps_095 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 32, cps_095 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 33, cps_095 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 34, cps_095 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 35, cps_095 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 36, cps_095 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 37, cps_095 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 38, cps_095 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 39, cps_095 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 40, cps_095 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 41, cps_095 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 42, cps_095 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 43, cps_095 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 44, cps_095 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 45, cps_095 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 46, cps_095 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 47, cps_095 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 48, cps_095 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_095 + 49, cps_095 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_095);

uint32_t cps_096[] = {
0x13a1, 0x13a2, 0x13a3, 0x13a4, 0x13a5, 0x13a6, 0x13a7, 0x13a8, 0x13a9, 0x13aa, 0x13ab, 0x13ac, 0x13ad, 0x13ae, 0x13af, 0x13b0, 0x13b1, 0x13b2, 0x13b3, 0x13b4, 0x13b5, 0x13b6, 0x13b7, 0x13b8, 0x13b9, 0x13ba, 0x13bb, 0x13bc, 0x13bd, 0x13be, 0x13bf, 0x13c0, 0x13c1, 0x13c2, 0x13c3, 0x13c4, 0x13c5, 0x13c6, 0x13c7, 0x13c8, 0x13c9, 0x13ca, 0x13cb, 0x13cc, 0x13cd, 0x13ce, 0x13cf, 0x13d0, 0x13d1, 0x13d2
};

void BM_collation_element_lookup_096(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 0, cps_096 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 1, cps_096 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 2, cps_096 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 3, cps_096 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 4, cps_096 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 5, cps_096 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 6, cps_096 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 7, cps_096 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 8, cps_096 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 9, cps_096 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 10, cps_096 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 11, cps_096 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 12, cps_096 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 13, cps_096 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 14, cps_096 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 15, cps_096 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 16, cps_096 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 17, cps_096 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 18, cps_096 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 19, cps_096 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 20, cps_096 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 21, cps_096 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 22, cps_096 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 23, cps_096 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 24, cps_096 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 25, cps_096 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 26, cps_096 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 27, cps_096 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 28, cps_096 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 29, cps_096 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 30, cps_096 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 31, cps_096 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 32, cps_096 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 33, cps_096 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 34, cps_096 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 35, cps_096 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 36, cps_096 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 37, cps_096 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 38, cps_096 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 39, cps_096 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 40, cps_096 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 41, cps_096 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 42, cps_096 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 43, cps_096 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 44, cps_096 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 45, cps_096 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 46, cps_096 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 47, cps_096 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 48, cps_096 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_096 + 49, cps_096 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_096);

uint32_t cps_097[] = {
0x13d3, 0x13d4, 0x13d5, 0x13d6, 0x13d7, 0x13d8, 0x13d9, 0x13da, 0x13db, 0x13dc, 0x13dd, 0x13de, 0x13df, 0x13e0, 0x13e1, 0x13e2, 0x13e3, 0x13e4, 0x13e5, 0x13e6, 0x13e7, 0x13e8, 0x13e9, 0x13ea, 0x13eb, 0x13ec, 0x13ed, 0x13ee, 0x13ef, 0x13f0, 0x13f1, 0x13f2, 0x13f3, 0x13f4, 0x13f5, 0x13f8, 0x13f9, 0x13fa, 0x13fb, 0x13fc, 0x13fd, 0x1400, 0x1401, 0x1402, 0x1403, 0x1404, 0x1405, 0x1406, 0x1407, 0x1408
};

void BM_collation_element_lookup_097(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 0, cps_097 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 1, cps_097 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 2, cps_097 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 3, cps_097 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 4, cps_097 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 5, cps_097 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 6, cps_097 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 7, cps_097 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 8, cps_097 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 9, cps_097 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 10, cps_097 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 11, cps_097 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 12, cps_097 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 13, cps_097 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 14, cps_097 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 15, cps_097 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 16, cps_097 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 17, cps_097 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 18, cps_097 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 19, cps_097 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 20, cps_097 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 21, cps_097 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 22, cps_097 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 23, cps_097 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 24, cps_097 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 25, cps_097 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 26, cps_097 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 27, cps_097 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 28, cps_097 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 29, cps_097 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 30, cps_097 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 31, cps_097 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 32, cps_097 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 33, cps_097 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 34, cps_097 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 35, cps_097 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 36, cps_097 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 37, cps_097 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 38, cps_097 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 39, cps_097 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 40, cps_097 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 41, cps_097 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 42, cps_097 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 43, cps_097 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 44, cps_097 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 45, cps_097 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 46, cps_097 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 47, cps_097 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 48, cps_097 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_097 + 49, cps_097 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_097);

uint32_t cps_098[] = {
0x1409, 0x140a, 0x140b, 0x140c, 0x140d, 0x140e, 0x140f, 0x1410, 0x1411, 0x1412, 0x1413, 0x1414, 0x1415, 0x1416, 0x1417, 0x1418, 0x1419, 0x141a, 0x141b, 0x141c, 0x141d, 0x141e, 0x141f, 0x1420, 0x1421, 0x1422, 0x1423, 0x1424, 0x1425, 0x1426, 0x1427, 0x1428, 0x1429, 0x142a, 0x142b, 0x142c, 0x142d, 0x142e, 0x142f, 0x1430, 0x1431, 0x1432, 0x1433, 0x1434, 0x1435, 0x1436, 0x1437, 0x1438, 0x1439, 0x143a
};

void BM_collation_element_lookup_098(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 0, cps_098 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 1, cps_098 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 2, cps_098 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 3, cps_098 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 4, cps_098 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 5, cps_098 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 6, cps_098 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 7, cps_098 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 8, cps_098 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 9, cps_098 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 10, cps_098 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 11, cps_098 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 12, cps_098 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 13, cps_098 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 14, cps_098 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 15, cps_098 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 16, cps_098 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 17, cps_098 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 18, cps_098 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 19, cps_098 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 20, cps_098 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 21, cps_098 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 22, cps_098 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 23, cps_098 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 24, cps_098 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 25, cps_098 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 26, cps_098 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 27, cps_098 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 28, cps_098 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 29, cps_098 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 30, cps_098 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 31, cps_098 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 32, cps_098 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 33, cps_098 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 34, cps_098 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 35, cps_098 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 36, cps_098 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 37, cps_098 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 38, cps_098 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 39, cps_098 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 40, cps_098 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 41, cps_098 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 42, cps_098 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 43, cps_098 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 44, cps_098 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 45, cps_098 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 46, cps_098 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 47, cps_098 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 48, cps_098 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_098 + 49, cps_098 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_098);

uint32_t cps_099[] = {
0x143b, 0x143c, 0x143d, 0x143e, 0x143f, 0x1440, 0x1441, 0x1442, 0x1443, 0x1444, 0x1445, 0x1446, 0x1447, 0x1448, 0x1449, 0x144a, 0x144b, 0x144c, 0x144d, 0x144e, 0x144f, 0x1450, 0x1451, 0x1452, 0x1453, 0x1454, 0x1455, 0x1456, 0x1457, 0x1458, 0x1459, 0x145a, 0x145b, 0x145c, 0x145d, 0x145e, 0x145f, 0x1460, 0x1461, 0x1462, 0x1463, 0x1464, 0x1465, 0x1466, 0x1467, 0x1468, 0x1469, 0x146a, 0x146b, 0x146c
};

void BM_collation_element_lookup_099(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 0, cps_099 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 1, cps_099 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 2, cps_099 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 3, cps_099 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 4, cps_099 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 5, cps_099 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 6, cps_099 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 7, cps_099 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 8, cps_099 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 9, cps_099 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 10, cps_099 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 11, cps_099 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 12, cps_099 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 13, cps_099 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 14, cps_099 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 15, cps_099 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 16, cps_099 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 17, cps_099 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 18, cps_099 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 19, cps_099 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 20, cps_099 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 21, cps_099 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 22, cps_099 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 23, cps_099 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 24, cps_099 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 25, cps_099 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 26, cps_099 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 27, cps_099 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 28, cps_099 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 29, cps_099 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 30, cps_099 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 31, cps_099 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 32, cps_099 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 33, cps_099 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 34, cps_099 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 35, cps_099 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 36, cps_099 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 37, cps_099 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 38, cps_099 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 39, cps_099 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 40, cps_099 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 41, cps_099 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 42, cps_099 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 43, cps_099 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 44, cps_099 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 45, cps_099 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 46, cps_099 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 47, cps_099 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 48, cps_099 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_099 + 49, cps_099 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_099);



BENCHMARK_MAIN()
