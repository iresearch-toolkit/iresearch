// Copyright (C) 2020 T. Zachary Laine
//
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

// Warning! This file is autogenerated.
#include <boost/text/collate.hpp>
#include <boost/text/collation_table.hpp>

#include <benchmark/benchmark.h>

boost::text::detail::collation_trie_t const & trie()
{
    static auto const retval = boost::text::detail::make_default_trie();
    return retval;
}

boost::text::collation_table const & table()
{
    static auto const retval = boost::text::default_collation_table();
    return retval;
}

uint32_t cps_300[] = {
0xa9a8, 0xa9a9, 0xa9aa, 0xa9ab, 0xa9ac, 0xa9ad, 0xa9ae, 0xa9af, 0xa9b0, 0xa9b1, 0xa9b2, 0xa9b3, 0xa9b4, 0xa9b5, 0xa9b6, 0xa9b7, 0xa9b8, 0xa9b9, 0xa9ba, 0xa9bb, 0xa9bc, 0xa9bd, 0xa9be, 0xa9bf, 0xa9c0, 0xa9c1, 0xa9c2, 0xa9c3, 0xa9c4, 0xa9c5, 0xa9c6, 0xa9c7, 0xa9c8, 0xa9c9, 0xa9ca, 0xa9cb, 0xa9cc, 0xa9cd, 0xa9cf, 0xa9d0, 0xa9d1, 0xa9d2, 0xa9d3, 0xa9d4, 0xa9d5, 0xa9d6, 0xa9d7, 0xa9d8, 0xa9d9, 0xa9de
};

void BM_collation_element_lookup_300(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 0, cps_300 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 1, cps_300 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 2, cps_300 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 3, cps_300 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 4, cps_300 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 5, cps_300 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 6, cps_300 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 7, cps_300 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 8, cps_300 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 9, cps_300 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 10, cps_300 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 11, cps_300 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 12, cps_300 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 13, cps_300 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 14, cps_300 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 15, cps_300 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 16, cps_300 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 17, cps_300 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 18, cps_300 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 19, cps_300 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 20, cps_300 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 21, cps_300 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 22, cps_300 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 23, cps_300 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 24, cps_300 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 25, cps_300 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 26, cps_300 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 27, cps_300 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 28, cps_300 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 29, cps_300 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 30, cps_300 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 31, cps_300 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 32, cps_300 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 33, cps_300 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 34, cps_300 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 35, cps_300 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 36, cps_300 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 37, cps_300 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 38, cps_300 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 39, cps_300 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 40, cps_300 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 41, cps_300 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 42, cps_300 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 43, cps_300 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 44, cps_300 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 45, cps_300 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 46, cps_300 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 47, cps_300 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 48, cps_300 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_300 + 49, cps_300 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_300);

uint32_t cps_301[] = {
0xa9df, 0xa9e0, 0xa9e1, 0xa9e2, 0xa9e3, 0xa9e4, 0xa9e5, 0xa9e6, 0xa9e7, 0xa9e8, 0xa9e9, 0xa9ea, 0xa9eb, 0xa9ec, 0xa9ed, 0xa9ee, 0xa9ef, 0xa9f0, 0xa9f1, 0xa9f2, 0xa9f3, 0xa9f4, 0xa9f5, 0xa9f6, 0xa9f7, 0xa9f8, 0xa9f9, 0xa9fa, 0xa9fb, 0xa9fc, 0xa9fd, 0xa9fe, 0xaa00, 0xaa01, 0xaa02, 0xaa03, 0xaa04, 0xaa05, 0xaa06, 0xaa07, 0xaa08, 0xaa09, 0xaa0a, 0xaa0b, 0xaa0c, 0xaa0d, 0xaa0e, 0xaa0f, 0xaa10, 0xaa11
};

void BM_collation_element_lookup_301(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 0, cps_301 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 1, cps_301 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 2, cps_301 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 3, cps_301 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 4, cps_301 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 5, cps_301 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 6, cps_301 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 7, cps_301 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 8, cps_301 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 9, cps_301 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 10, cps_301 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 11, cps_301 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 12, cps_301 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 13, cps_301 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 14, cps_301 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 15, cps_301 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 16, cps_301 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 17, cps_301 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 18, cps_301 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 19, cps_301 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 20, cps_301 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 21, cps_301 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 22, cps_301 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 23, cps_301 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 24, cps_301 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 25, cps_301 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 26, cps_301 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 27, cps_301 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 28, cps_301 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 29, cps_301 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 30, cps_301 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 31, cps_301 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 32, cps_301 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 33, cps_301 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 34, cps_301 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 35, cps_301 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 36, cps_301 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 37, cps_301 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 38, cps_301 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 39, cps_301 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 40, cps_301 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 41, cps_301 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 42, cps_301 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 43, cps_301 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 44, cps_301 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 45, cps_301 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 46, cps_301 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 47, cps_301 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 48, cps_301 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_301 + 49, cps_301 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_301);

uint32_t cps_302[] = {
0xaa12, 0xaa13, 0xaa14, 0xaa15, 0xaa16, 0xaa17, 0xaa18, 0xaa19, 0xaa1a, 0xaa1b, 0xaa1c, 0xaa1d, 0xaa1e, 0xaa1f, 0xaa20, 0xaa21, 0xaa22, 0xaa23, 0xaa24, 0xaa25, 0xaa26, 0xaa27, 0xaa28, 0xaa29, 0xaa2a, 0xaa2b, 0xaa2c, 0xaa2d, 0xaa2e, 0xaa2f, 0xaa30, 0xaa31, 0xaa32, 0xaa33, 0xaa34, 0xaa35, 0xaa36, 0xaa40, 0xaa41, 0xaa42, 0xaa43, 0xaa44, 0xaa45, 0xaa46, 0xaa47, 0xaa48, 0xaa49, 0xaa4a, 0xaa4b, 0xaa4c
};

void BM_collation_element_lookup_302(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 0, cps_302 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 1, cps_302 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 2, cps_302 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 3, cps_302 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 4, cps_302 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 5, cps_302 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 6, cps_302 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 7, cps_302 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 8, cps_302 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 9, cps_302 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 10, cps_302 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 11, cps_302 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 12, cps_302 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 13, cps_302 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 14, cps_302 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 15, cps_302 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 16, cps_302 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 17, cps_302 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 18, cps_302 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 19, cps_302 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 20, cps_302 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 21, cps_302 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 22, cps_302 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 23, cps_302 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 24, cps_302 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 25, cps_302 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 26, cps_302 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 27, cps_302 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 28, cps_302 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 29, cps_302 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 30, cps_302 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 31, cps_302 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 32, cps_302 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 33, cps_302 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 34, cps_302 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 35, cps_302 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 36, cps_302 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 37, cps_302 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 38, cps_302 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 39, cps_302 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 40, cps_302 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 41, cps_302 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 42, cps_302 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 43, cps_302 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 44, cps_302 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 45, cps_302 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 46, cps_302 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 47, cps_302 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 48, cps_302 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_302 + 49, cps_302 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_302);

uint32_t cps_303[] = {
0xaa4d, 0xaa50, 0xaa51, 0xaa52, 0xaa53, 0xaa54, 0xaa55, 0xaa56, 0xaa57, 0xaa58, 0xaa59, 0xaa5c, 0xaa5d, 0xaa5e, 0xaa5f, 0xaa60, 0xaa61, 0xaa62, 0xaa63, 0xaa64, 0xaa65, 0xaa66, 0xaa67, 0xaa68, 0xaa69, 0xaa6a, 0xaa6b, 0xaa6c, 0xaa6d, 0xaa6e, 0xaa6f, 0xaa70, 0xaa71, 0xaa72, 0xaa73, 0xaa74, 0xaa75, 0xaa76, 0xaa77, 0xaa78, 0xaa79, 0xaa7a, 0xaa7b, 0xaa7c, 0xaa7d, 0xaa7e, 0xaa7f, 0xaa80, 0xaa81, 0xaa82
};

void BM_collation_element_lookup_303(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 0, cps_303 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 1, cps_303 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 2, cps_303 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 3, cps_303 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 4, cps_303 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 5, cps_303 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 6, cps_303 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 7, cps_303 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 8, cps_303 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 9, cps_303 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 10, cps_303 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 11, cps_303 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 12, cps_303 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 13, cps_303 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 14, cps_303 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 15, cps_303 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 16, cps_303 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 17, cps_303 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 18, cps_303 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 19, cps_303 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 20, cps_303 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 21, cps_303 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 22, cps_303 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 23, cps_303 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 24, cps_303 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 25, cps_303 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 26, cps_303 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 27, cps_303 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 28, cps_303 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 29, cps_303 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 30, cps_303 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 31, cps_303 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 32, cps_303 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 33, cps_303 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 34, cps_303 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 35, cps_303 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 36, cps_303 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 37, cps_303 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 38, cps_303 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 39, cps_303 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 40, cps_303 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 41, cps_303 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 42, cps_303 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 43, cps_303 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 44, cps_303 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 45, cps_303 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 46, cps_303 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 47, cps_303 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 48, cps_303 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_303 + 49, cps_303 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_303);

uint32_t cps_304[] = {
0xaa83, 0xaa84, 0xaa85, 0xaa86, 0xaa87, 0xaa88, 0xaa89, 0xaa8a, 0xaa8b, 0xaa8c, 0xaa8d, 0xaa8e, 0xaa8f, 0xaa90, 0xaa91, 0xaa92, 0xaa93, 0xaa94, 0xaa95, 0xaa96, 0xaa97, 0xaa98, 0xaa99, 0xaa9a, 0xaa9b, 0xaa9c, 0xaa9d, 0xaa9e, 0xaa9f, 0xaaa0, 0xaaa1, 0xaaa2, 0xaaa3, 0xaaa4, 0xaaa5, 0xaaa6, 0xaaa7, 0xaaa8, 0xaaa9, 0xaaaa, 0xaaab, 0xaaac, 0xaaad, 0xaaae, 0xaaaf, 0xaab0, 0xaab1, 0xaab2, 0xaab3, 0xaab4
};

void BM_collation_element_lookup_304(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 0, cps_304 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 1, cps_304 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 2, cps_304 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 3, cps_304 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 4, cps_304 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 5, cps_304 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 6, cps_304 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 7, cps_304 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 8, cps_304 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 9, cps_304 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 10, cps_304 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 11, cps_304 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 12, cps_304 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 13, cps_304 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 14, cps_304 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 15, cps_304 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 16, cps_304 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 17, cps_304 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 18, cps_304 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 19, cps_304 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 20, cps_304 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 21, cps_304 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 22, cps_304 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 23, cps_304 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 24, cps_304 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 25, cps_304 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 26, cps_304 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 27, cps_304 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 28, cps_304 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 29, cps_304 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 30, cps_304 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 31, cps_304 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 32, cps_304 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 33, cps_304 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 34, cps_304 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 35, cps_304 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 36, cps_304 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 37, cps_304 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 38, cps_304 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 39, cps_304 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 40, cps_304 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 41, cps_304 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 42, cps_304 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 43, cps_304 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 44, cps_304 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 45, cps_304 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 46, cps_304 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 47, cps_304 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 48, cps_304 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_304 + 49, cps_304 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_304);

uint32_t cps_305[] = {
0xaab5, 0xaab5, 0xaa80, 0xaab5, 0xaa81, 0xaab5, 0xaa82, 0xaab5, 0xaa83, 0xaab5, 0xaa84, 0xaab5, 0xaa85, 0xaab5, 0xaa86, 0xaab5, 0xaa87, 0xaab5, 0xaa88, 0xaab5, 0xaa89, 0xaab5, 0xaa8a, 0xaab5, 0xaa8b, 0xaab5, 0xaa8c, 0xaab5, 0xaa8d, 0xaab5, 0xaa8e, 0xaab5, 0xaa8f, 0xaab5, 0xaa90, 0xaab5, 0xaa91, 0xaab5, 0xaa92, 0xaab5, 0xaa93, 0xaab5, 0xaa94, 0xaab5, 0xaa95, 0xaab5, 0xaa96, 0xaab5, 0xaa97, 0xaab5, 0xaa98, 0xaab5, 0xaa99, 0xaab5, 0xaa9a, 0xaab5, 0xaa9b, 0xaab5, 0xaa9c, 0xaab5, 0xaa9d, 0xaab5, 0xaa9e, 0xaab5, 0xaa9f, 0xaab5, 0xaaa0, 0xaab5, 0xaaa1, 0xaab5, 0xaaa2, 0xaab5, 0xaaa3, 0xaab5, 0xaaa4, 0xaab5, 0xaaa5, 0xaab5, 0xaaa6, 0xaab5, 0xaaa7, 0xaab5, 0xaaa8, 0xaab5, 0xaaa9, 0xaab5, 0xaaaa, 0xaab5, 0xaaab, 0xaab5, 0xaaac, 0xaab5, 0xaaad, 0xaab5, 0xaaae, 0xaab5, 0xaaaf, 0xaab6
};

void BM_collation_element_lookup_305(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 0, cps_305 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 1, cps_305 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 3, cps_305 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 5, cps_305 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 7, cps_305 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 9, cps_305 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 11, cps_305 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 13, cps_305 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 15, cps_305 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 17, cps_305 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 19, cps_305 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 21, cps_305 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 23, cps_305 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 25, cps_305 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 27, cps_305 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 29, cps_305 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 31, cps_305 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 33, cps_305 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 35, cps_305 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 37, cps_305 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 39, cps_305 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 41, cps_305 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 43, cps_305 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 45, cps_305 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 47, cps_305 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 49, cps_305 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 51, cps_305 + 53));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 53, cps_305 + 55));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 55, cps_305 + 57));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 57, cps_305 + 59));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 59, cps_305 + 61));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 61, cps_305 + 63));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 63, cps_305 + 65));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 65, cps_305 + 67));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 67, cps_305 + 69));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 69, cps_305 + 71));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 71, cps_305 + 73));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 73, cps_305 + 75));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 75, cps_305 + 77));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 77, cps_305 + 79));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 79, cps_305 + 81));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 81, cps_305 + 83));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 83, cps_305 + 85));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 85, cps_305 + 87));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 87, cps_305 + 89));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 89, cps_305 + 91));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 91, cps_305 + 93));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 93, cps_305 + 95));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 95, cps_305 + 97));
            benchmark::DoNotOptimize(trie().longest_match(cps_305 + 97, cps_305 + 98));
    }
}
BENCHMARK(BM_collation_element_lookup_305);

uint32_t cps_306[] = {
0xaab6, 0xaa80, 0xaab6, 0xaa81, 0xaab6, 0xaa82, 0xaab6, 0xaa83, 0xaab6, 0xaa84, 0xaab6, 0xaa85, 0xaab6, 0xaa86, 0xaab6, 0xaa87, 0xaab6, 0xaa88, 0xaab6, 0xaa89, 0xaab6, 0xaa8a, 0xaab6, 0xaa8b, 0xaab6, 0xaa8c, 0xaab6, 0xaa8d, 0xaab6, 0xaa8e, 0xaab6, 0xaa8f, 0xaab6, 0xaa90, 0xaab6, 0xaa91, 0xaab6, 0xaa92, 0xaab6, 0xaa93, 0xaab6, 0xaa94, 0xaab6, 0xaa95, 0xaab6, 0xaa96, 0xaab6, 0xaa97, 0xaab6, 0xaa98, 0xaab6, 0xaa99, 0xaab6, 0xaa9a, 0xaab6, 0xaa9b, 0xaab6, 0xaa9c, 0xaab6, 0xaa9d, 0xaab6, 0xaa9e, 0xaab6, 0xaa9f, 0xaab6, 0xaaa0, 0xaab6, 0xaaa1, 0xaab6, 0xaaa2, 0xaab6, 0xaaa3, 0xaab6, 0xaaa4, 0xaab6, 0xaaa5, 0xaab6, 0xaaa6, 0xaab6, 0xaaa7, 0xaab6, 0xaaa8, 0xaab6, 0xaaa9, 0xaab6, 0xaaaa, 0xaab6, 0xaaab, 0xaab6, 0xaaac, 0xaab6, 0xaaad, 0xaab6, 0xaaae, 0xaab6, 0xaaaf, 0xaab7, 0xaab8
};

void BM_collation_element_lookup_306(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 0, cps_306 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 2, cps_306 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 4, cps_306 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 6, cps_306 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 8, cps_306 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 10, cps_306 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 12, cps_306 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 14, cps_306 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 16, cps_306 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 18, cps_306 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 20, cps_306 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 22, cps_306 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 24, cps_306 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 26, cps_306 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 28, cps_306 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 30, cps_306 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 32, cps_306 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 34, cps_306 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 36, cps_306 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 38, cps_306 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 40, cps_306 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 42, cps_306 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 44, cps_306 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 46, cps_306 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 48, cps_306 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 50, cps_306 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 52, cps_306 + 54));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 54, cps_306 + 56));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 56, cps_306 + 58));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 58, cps_306 + 60));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 60, cps_306 + 62));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 62, cps_306 + 64));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 64, cps_306 + 66));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 66, cps_306 + 68));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 68, cps_306 + 70));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 70, cps_306 + 72));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 72, cps_306 + 74));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 74, cps_306 + 76));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 76, cps_306 + 78));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 78, cps_306 + 80));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 80, cps_306 + 82));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 82, cps_306 + 84));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 84, cps_306 + 86));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 86, cps_306 + 88));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 88, cps_306 + 90));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 90, cps_306 + 92));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 92, cps_306 + 94));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 94, cps_306 + 96));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 96, cps_306 + 97));
            benchmark::DoNotOptimize(trie().longest_match(cps_306 + 97, cps_306 + 98));
    }
}
BENCHMARK(BM_collation_element_lookup_306);

uint32_t cps_307[] = {
0xaab9, 0xaab9, 0xaa80, 0xaab9, 0xaa81, 0xaab9, 0xaa82, 0xaab9, 0xaa83, 0xaab9, 0xaa84, 0xaab9, 0xaa85, 0xaab9, 0xaa86, 0xaab9, 0xaa87, 0xaab9, 0xaa88, 0xaab9, 0xaa89, 0xaab9, 0xaa8a, 0xaab9, 0xaa8b, 0xaab9, 0xaa8c, 0xaab9, 0xaa8d, 0xaab9, 0xaa8e, 0xaab9, 0xaa8f, 0xaab9, 0xaa90, 0xaab9, 0xaa91, 0xaab9, 0xaa92, 0xaab9, 0xaa93, 0xaab9, 0xaa94, 0xaab9, 0xaa95, 0xaab9, 0xaa96, 0xaab9, 0xaa97, 0xaab9, 0xaa98, 0xaab9, 0xaa99, 0xaab9, 0xaa9a, 0xaab9, 0xaa9b, 0xaab9, 0xaa9c, 0xaab9, 0xaa9d, 0xaab9, 0xaa9e, 0xaab9, 0xaa9f, 0xaab9, 0xaaa0, 0xaab9, 0xaaa1, 0xaab9, 0xaaa2, 0xaab9, 0xaaa3, 0xaab9, 0xaaa4, 0xaab9, 0xaaa5, 0xaab9, 0xaaa6, 0xaab9, 0xaaa7, 0xaab9, 0xaaa8, 0xaab9, 0xaaa9, 0xaab9, 0xaaaa, 0xaab9, 0xaaab, 0xaab9, 0xaaac, 0xaab9, 0xaaad, 0xaab9, 0xaaae, 0xaab9, 0xaaaf, 0xaaba
};

void BM_collation_element_lookup_307(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 0, cps_307 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 1, cps_307 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 3, cps_307 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 5, cps_307 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 7, cps_307 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 9, cps_307 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 11, cps_307 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 13, cps_307 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 15, cps_307 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 17, cps_307 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 19, cps_307 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 21, cps_307 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 23, cps_307 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 25, cps_307 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 27, cps_307 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 29, cps_307 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 31, cps_307 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 33, cps_307 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 35, cps_307 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 37, cps_307 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 39, cps_307 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 41, cps_307 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 43, cps_307 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 45, cps_307 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 47, cps_307 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 49, cps_307 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 51, cps_307 + 53));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 53, cps_307 + 55));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 55, cps_307 + 57));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 57, cps_307 + 59));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 59, cps_307 + 61));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 61, cps_307 + 63));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 63, cps_307 + 65));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 65, cps_307 + 67));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 67, cps_307 + 69));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 69, cps_307 + 71));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 71, cps_307 + 73));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 73, cps_307 + 75));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 75, cps_307 + 77));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 77, cps_307 + 79));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 79, cps_307 + 81));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 81, cps_307 + 83));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 83, cps_307 + 85));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 85, cps_307 + 87));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 87, cps_307 + 89));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 89, cps_307 + 91));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 91, cps_307 + 93));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 93, cps_307 + 95));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 95, cps_307 + 97));
            benchmark::DoNotOptimize(trie().longest_match(cps_307 + 97, cps_307 + 98));
    }
}
BENCHMARK(BM_collation_element_lookup_307);

uint32_t cps_308[] = {
0xaabb, 0xaabb, 0xaa80, 0xaabb, 0xaa81, 0xaabb, 0xaa82, 0xaabb, 0xaa83, 0xaabb, 0xaa84, 0xaabb, 0xaa85, 0xaabb, 0xaa86, 0xaabb, 0xaa87, 0xaabb, 0xaa88, 0xaabb, 0xaa89, 0xaabb, 0xaa8a, 0xaabb, 0xaa8b, 0xaabb, 0xaa8c, 0xaabb, 0xaa8d, 0xaabb, 0xaa8e, 0xaabb, 0xaa8f, 0xaabb, 0xaa90, 0xaabb, 0xaa91, 0xaabb, 0xaa92, 0xaabb, 0xaa93, 0xaabb, 0xaa94, 0xaabb, 0xaa95, 0xaabb, 0xaa96, 0xaabb, 0xaa97, 0xaabb, 0xaa98, 0xaabb, 0xaa99, 0xaabb, 0xaa9a, 0xaabb, 0xaa9b, 0xaabb, 0xaa9c, 0xaabb, 0xaa9d, 0xaabb, 0xaa9e, 0xaabb, 0xaa9f, 0xaabb, 0xaaa0, 0xaabb, 0xaaa1, 0xaabb, 0xaaa2, 0xaabb, 0xaaa3, 0xaabb, 0xaaa4, 0xaabb, 0xaaa5, 0xaabb, 0xaaa6, 0xaabb, 0xaaa7, 0xaabb, 0xaaa8, 0xaabb, 0xaaa9, 0xaabb, 0xaaaa, 0xaabb, 0xaaab, 0xaabb, 0xaaac, 0xaabb, 0xaaad, 0xaabb, 0xaaae, 0xaabb, 0xaaaf, 0xaabc
};

void BM_collation_element_lookup_308(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 0, cps_308 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 1, cps_308 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 3, cps_308 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 5, cps_308 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 7, cps_308 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 9, cps_308 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 11, cps_308 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 13, cps_308 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 15, cps_308 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 17, cps_308 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 19, cps_308 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 21, cps_308 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 23, cps_308 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 25, cps_308 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 27, cps_308 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 29, cps_308 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 31, cps_308 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 33, cps_308 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 35, cps_308 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 37, cps_308 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 39, cps_308 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 41, cps_308 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 43, cps_308 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 45, cps_308 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 47, cps_308 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 49, cps_308 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 51, cps_308 + 53));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 53, cps_308 + 55));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 55, cps_308 + 57));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 57, cps_308 + 59));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 59, cps_308 + 61));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 61, cps_308 + 63));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 63, cps_308 + 65));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 65, cps_308 + 67));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 67, cps_308 + 69));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 69, cps_308 + 71));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 71, cps_308 + 73));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 73, cps_308 + 75));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 75, cps_308 + 77));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 77, cps_308 + 79));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 79, cps_308 + 81));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 81, cps_308 + 83));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 83, cps_308 + 85));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 85, cps_308 + 87));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 87, cps_308 + 89));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 89, cps_308 + 91));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 91, cps_308 + 93));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 93, cps_308 + 95));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 95, cps_308 + 97));
            benchmark::DoNotOptimize(trie().longest_match(cps_308 + 97, cps_308 + 98));
    }
}
BENCHMARK(BM_collation_element_lookup_308);

uint32_t cps_309[] = {
0xaabc, 0xaa80, 0xaabc, 0xaa81, 0xaabc, 0xaa82, 0xaabc, 0xaa83, 0xaabc, 0xaa84, 0xaabc, 0xaa85, 0xaabc, 0xaa86, 0xaabc, 0xaa87, 0xaabc, 0xaa88, 0xaabc, 0xaa89, 0xaabc, 0xaa8a, 0xaabc, 0xaa8b, 0xaabc, 0xaa8c, 0xaabc, 0xaa8d, 0xaabc, 0xaa8e, 0xaabc, 0xaa8f, 0xaabc, 0xaa90, 0xaabc, 0xaa91, 0xaabc, 0xaa92, 0xaabc, 0xaa93, 0xaabc, 0xaa94, 0xaabc, 0xaa95, 0xaabc, 0xaa96, 0xaabc, 0xaa97, 0xaabc, 0xaa98, 0xaabc, 0xaa99, 0xaabc, 0xaa9a, 0xaabc, 0xaa9b, 0xaabc, 0xaa9c, 0xaabc, 0xaa9d, 0xaabc, 0xaa9e, 0xaabc, 0xaa9f, 0xaabc, 0xaaa0, 0xaabc, 0xaaa1, 0xaabc, 0xaaa2, 0xaabc, 0xaaa3, 0xaabc, 0xaaa4, 0xaabc, 0xaaa5, 0xaabc, 0xaaa6, 0xaabc, 0xaaa7, 0xaabc, 0xaaa8, 0xaabc, 0xaaa9, 0xaabc, 0xaaaa, 0xaabc, 0xaaab, 0xaabc, 0xaaac, 0xaabc, 0xaaad, 0xaabc, 0xaaae, 0xaabc, 0xaaaf, 0xaabd, 0xaabe
};

void BM_collation_element_lookup_309(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 0, cps_309 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 2, cps_309 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 4, cps_309 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 6, cps_309 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 8, cps_309 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 10, cps_309 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 12, cps_309 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 14, cps_309 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 16, cps_309 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 18, cps_309 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 20, cps_309 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 22, cps_309 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 24, cps_309 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 26, cps_309 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 28, cps_309 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 30, cps_309 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 32, cps_309 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 34, cps_309 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 36, cps_309 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 38, cps_309 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 40, cps_309 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 42, cps_309 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 44, cps_309 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 46, cps_309 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 48, cps_309 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 50, cps_309 + 52));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 52, cps_309 + 54));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 54, cps_309 + 56));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 56, cps_309 + 58));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 58, cps_309 + 60));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 60, cps_309 + 62));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 62, cps_309 + 64));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 64, cps_309 + 66));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 66, cps_309 + 68));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 68, cps_309 + 70));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 70, cps_309 + 72));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 72, cps_309 + 74));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 74, cps_309 + 76));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 76, cps_309 + 78));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 78, cps_309 + 80));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 80, cps_309 + 82));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 82, cps_309 + 84));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 84, cps_309 + 86));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 86, cps_309 + 88));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 88, cps_309 + 90));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 90, cps_309 + 92));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 92, cps_309 + 94));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 94, cps_309 + 96));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 96, cps_309 + 97));
            benchmark::DoNotOptimize(trie().longest_match(cps_309 + 97, cps_309 + 98));
    }
}
BENCHMARK(BM_collation_element_lookup_309);

uint32_t cps_310[] = {
0xaabf, 0xaac0, 0xaac1, 0xaac2, 0xaadb, 0xaadc, 0xaadd, 0xaade, 0xaadf, 0xaae0, 0xaae1, 0xaae2, 0xaae3, 0xaae4, 0xaae5, 0xaae6, 0xaae7, 0xaae8, 0xaae9, 0xaaea, 0xaaeb, 0xaaec, 0xaaed, 0xaaee, 0xaaef, 0xaaf0, 0xaaf1, 0xaaf2, 0xaaf3, 0xaaf4, 0xaaf5, 0xaaf6, 0xab01, 0xab02, 0xab03, 0xab04, 0xab05, 0xab06, 0xab09, 0xab0a, 0xab0b, 0xab0c, 0xab0d, 0xab0e, 0xab11, 0xab12, 0xab13, 0xab14, 0xab15, 0xab16
};

void BM_collation_element_lookup_310(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 0, cps_310 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 1, cps_310 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 2, cps_310 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 3, cps_310 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 4, cps_310 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 5, cps_310 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 6, cps_310 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 7, cps_310 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 8, cps_310 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 9, cps_310 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 10, cps_310 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 11, cps_310 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 12, cps_310 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 13, cps_310 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 14, cps_310 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 15, cps_310 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 16, cps_310 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 17, cps_310 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 18, cps_310 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 19, cps_310 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 20, cps_310 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 21, cps_310 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 22, cps_310 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 23, cps_310 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 24, cps_310 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 25, cps_310 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 26, cps_310 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 27, cps_310 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 28, cps_310 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 29, cps_310 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 30, cps_310 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 31, cps_310 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 32, cps_310 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 33, cps_310 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 34, cps_310 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 35, cps_310 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 36, cps_310 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 37, cps_310 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 38, cps_310 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 39, cps_310 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 40, cps_310 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 41, cps_310 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 42, cps_310 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 43, cps_310 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 44, cps_310 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 45, cps_310 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 46, cps_310 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 47, cps_310 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 48, cps_310 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_310 + 49, cps_310 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_310);

uint32_t cps_311[] = {
0xab20, 0xab21, 0xab22, 0xab23, 0xab24, 0xab25, 0xab26, 0xab28, 0xab29, 0xab2a, 0xab2b, 0xab2c, 0xab2d, 0xab2e, 0xab30, 0xab31, 0xab32, 0xab33, 0xab34, 0xab35, 0xab36, 0xab37, 0xab38, 0xab39, 0xab3a, 0xab3b, 0xab3c, 0xab3d, 0xab3e, 0xab3f, 0xab40, 0xab41, 0xab42, 0xab43, 0xab44, 0xab45, 0xab46, 0xab47, 0xab48, 0xab49, 0xab4a, 0xab4b, 0xab4c, 0xab4d, 0xab4e, 0xab4f, 0xab50, 0xab51, 0xab52, 0xab53
};

void BM_collation_element_lookup_311(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 0, cps_311 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 1, cps_311 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 2, cps_311 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 3, cps_311 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 4, cps_311 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 5, cps_311 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 6, cps_311 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 7, cps_311 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 8, cps_311 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 9, cps_311 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 10, cps_311 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 11, cps_311 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 12, cps_311 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 13, cps_311 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 14, cps_311 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 15, cps_311 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 16, cps_311 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 17, cps_311 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 18, cps_311 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 19, cps_311 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 20, cps_311 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 21, cps_311 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 22, cps_311 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 23, cps_311 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 24, cps_311 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 25, cps_311 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 26, cps_311 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 27, cps_311 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 28, cps_311 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 29, cps_311 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 30, cps_311 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 31, cps_311 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 32, cps_311 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 33, cps_311 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 34, cps_311 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 35, cps_311 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 36, cps_311 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 37, cps_311 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 38, cps_311 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 39, cps_311 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 40, cps_311 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 41, cps_311 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 42, cps_311 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 43, cps_311 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 44, cps_311 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 45, cps_311 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 46, cps_311 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 47, cps_311 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 48, cps_311 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_311 + 49, cps_311 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_311);

uint32_t cps_312[] = {
0xab54, 0xab55, 0xab56, 0xab57, 0xab58, 0xab59, 0xab5a, 0xab5b, 0xab5c, 0xab5d, 0xab5e, 0xab5f, 0xab60, 0xab61, 0xab62, 0xab63, 0xab64, 0xab65, 0xab70, 0xab71, 0xab72, 0xab73, 0xab74, 0xab75, 0xab76, 0xab77, 0xab78, 0xab79, 0xab7a, 0xab7b, 0xab7c, 0xab7d, 0xab7e, 0xab7f, 0xab80, 0xab81, 0xab82, 0xab83, 0xab84, 0xab85, 0xab86, 0xab87, 0xab88, 0xab89, 0xab8a, 0xab8b, 0xab8c, 0xab8d, 0xab8e, 0xab8f
};

void BM_collation_element_lookup_312(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 0, cps_312 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 1, cps_312 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 2, cps_312 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 3, cps_312 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 4, cps_312 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 5, cps_312 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 6, cps_312 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 7, cps_312 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 8, cps_312 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 9, cps_312 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 10, cps_312 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 11, cps_312 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 12, cps_312 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 13, cps_312 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 14, cps_312 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 15, cps_312 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 16, cps_312 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 17, cps_312 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 18, cps_312 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 19, cps_312 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 20, cps_312 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 21, cps_312 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 22, cps_312 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 23, cps_312 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 24, cps_312 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 25, cps_312 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 26, cps_312 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 27, cps_312 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 28, cps_312 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 29, cps_312 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 30, cps_312 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 31, cps_312 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 32, cps_312 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 33, cps_312 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 34, cps_312 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 35, cps_312 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 36, cps_312 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 37, cps_312 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 38, cps_312 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 39, cps_312 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 40, cps_312 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 41, cps_312 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 42, cps_312 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 43, cps_312 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 44, cps_312 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 45, cps_312 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 46, cps_312 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 47, cps_312 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 48, cps_312 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_312 + 49, cps_312 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_312);

uint32_t cps_313[] = {
0xab90, 0xab91, 0xab92, 0xab93, 0xab94, 0xab95, 0xab96, 0xab97, 0xab98, 0xab99, 0xab9a, 0xab9b, 0xab9c, 0xab9d, 0xab9e, 0xab9f, 0xaba0, 0xaba1, 0xaba2, 0xaba3, 0xaba4, 0xaba5, 0xaba6, 0xaba7, 0xaba8, 0xaba9, 0xabaa, 0xabab, 0xabac, 0xabad, 0xabae, 0xabaf, 0xabb0, 0xabb1, 0xabb2, 0xabb3, 0xabb4, 0xabb5, 0xabb6, 0xabb7, 0xabb8, 0xabb9, 0xabba, 0xabbb, 0xabbc, 0xabbd, 0xabbe, 0xabbf, 0xabc0, 0xabc1
};

void BM_collation_element_lookup_313(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 0, cps_313 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 1, cps_313 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 2, cps_313 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 3, cps_313 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 4, cps_313 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 5, cps_313 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 6, cps_313 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 7, cps_313 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 8, cps_313 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 9, cps_313 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 10, cps_313 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 11, cps_313 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 12, cps_313 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 13, cps_313 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 14, cps_313 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 15, cps_313 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 16, cps_313 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 17, cps_313 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 18, cps_313 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 19, cps_313 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 20, cps_313 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 21, cps_313 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 22, cps_313 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 23, cps_313 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 24, cps_313 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 25, cps_313 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 26, cps_313 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 27, cps_313 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 28, cps_313 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 29, cps_313 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 30, cps_313 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 31, cps_313 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 32, cps_313 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 33, cps_313 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 34, cps_313 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 35, cps_313 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 36, cps_313 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 37, cps_313 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 38, cps_313 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 39, cps_313 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 40, cps_313 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 41, cps_313 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 42, cps_313 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 43, cps_313 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 44, cps_313 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 45, cps_313 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 46, cps_313 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 47, cps_313 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 48, cps_313 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_313 + 49, cps_313 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_313);

uint32_t cps_314[] = {
0xabc2, 0xabc3, 0xabc4, 0xabc5, 0xabc6, 0xabc7, 0xabc8, 0xabc9, 0xabca, 0xabcb, 0xabcc, 0xabcd, 0xabce, 0xabcf, 0xabd0, 0xabd1, 0xabd2, 0xabd3, 0xabd4, 0xabd5, 0xabd6, 0xabd7, 0xabd8, 0xabd9, 0xabda, 0xabdb, 0xabdc, 0xabdd, 0xabde, 0xabdf, 0xabe0, 0xabe1, 0xabe2, 0xabe3, 0xabe4, 0xabe5, 0xabe6, 0xabe7, 0xabe8, 0xabe9, 0xabea, 0xabeb, 0xabec, 0xabed, 0xabf0, 0xabf1, 0xabf2, 0xabf3, 0xabf4, 0xabf5
};

void BM_collation_element_lookup_314(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 0, cps_314 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 1, cps_314 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 2, cps_314 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 3, cps_314 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 4, cps_314 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 5, cps_314 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 6, cps_314 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 7, cps_314 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 8, cps_314 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 9, cps_314 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 10, cps_314 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 11, cps_314 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 12, cps_314 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 13, cps_314 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 14, cps_314 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 15, cps_314 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 16, cps_314 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 17, cps_314 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 18, cps_314 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 19, cps_314 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 20, cps_314 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 21, cps_314 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 22, cps_314 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 23, cps_314 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 24, cps_314 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 25, cps_314 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 26, cps_314 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 27, cps_314 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 28, cps_314 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 29, cps_314 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 30, cps_314 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 31, cps_314 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 32, cps_314 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 33, cps_314 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 34, cps_314 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 35, cps_314 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 36, cps_314 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 37, cps_314 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 38, cps_314 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 39, cps_314 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 40, cps_314 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 41, cps_314 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 42, cps_314 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 43, cps_314 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 44, cps_314 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 45, cps_314 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 46, cps_314 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 47, cps_314 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 48, cps_314 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_314 + 49, cps_314 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_314);

uint32_t cps_315[] = {
0xabf6, 0xabf7, 0xabf8, 0xabf9, 0xd7b0, 0xd7b1, 0xd7b2, 0xd7b3, 0xd7b4, 0xd7b5, 0xd7b6, 0xd7b7, 0xd7b8, 0xd7b9, 0xd7ba, 0xd7bb, 0xd7bc, 0xd7bd, 0xd7be, 0xd7bf, 0xd7c0, 0xd7c1, 0xd7c2, 0xd7c3, 0xd7c4, 0xd7c5, 0xd7c6, 0xd7cb, 0xd7cc, 0xd7cd, 0xd7ce, 0xd7cf, 0xd7d0, 0xd7d1, 0xd7d2, 0xd7d3, 0xd7d4, 0xd7d5, 0xd7d6, 0xd7d7, 0xd7d8, 0xd7d9, 0xd7da, 0xd7db, 0xd7dc, 0xd7dd, 0xd7de, 0xd7df, 0xd7e0, 0xd7e1
};

void BM_collation_element_lookup_315(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 0, cps_315 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 1, cps_315 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 2, cps_315 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 3, cps_315 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 4, cps_315 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 5, cps_315 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 6, cps_315 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 7, cps_315 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 8, cps_315 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 9, cps_315 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 10, cps_315 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 11, cps_315 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 12, cps_315 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 13, cps_315 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 14, cps_315 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 15, cps_315 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 16, cps_315 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 17, cps_315 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 18, cps_315 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 19, cps_315 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 20, cps_315 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 21, cps_315 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 22, cps_315 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 23, cps_315 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 24, cps_315 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 25, cps_315 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 26, cps_315 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 27, cps_315 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 28, cps_315 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 29, cps_315 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 30, cps_315 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 31, cps_315 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 32, cps_315 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 33, cps_315 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 34, cps_315 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 35, cps_315 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 36, cps_315 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 37, cps_315 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 38, cps_315 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 39, cps_315 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 40, cps_315 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 41, cps_315 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 42, cps_315 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 43, cps_315 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 44, cps_315 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 45, cps_315 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 46, cps_315 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 47, cps_315 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 48, cps_315 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_315 + 49, cps_315 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_315);

uint32_t cps_316[] = {
0xd7e2, 0xd7e3, 0xd7e4, 0xd7e5, 0xd7e6, 0xd7e7, 0xd7e8, 0xd7e9, 0xd7ea, 0xd7eb, 0xd7ec, 0xd7ed, 0xd7ee, 0xd7ef, 0xd7f0, 0xd7f1, 0xd7f2, 0xd7f3, 0xd7f4, 0xd7f5, 0xd7f6, 0xd7f7, 0xd7f8, 0xd7f9, 0xd7fa, 0xd7fb, 0xf900, 0xf901, 0xf902, 0xf903, 0xf904, 0xf905, 0xf906, 0xf907, 0xf908, 0xf909, 0xf90a, 0xf90b, 0xf90c, 0xf90d, 0xf90e, 0xf90f, 0xf910, 0xf911, 0xf912, 0xf913, 0xf914, 0xf915, 0xf916, 0xf917
};

void BM_collation_element_lookup_316(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 0, cps_316 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 1, cps_316 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 2, cps_316 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 3, cps_316 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 4, cps_316 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 5, cps_316 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 6, cps_316 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 7, cps_316 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 8, cps_316 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 9, cps_316 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 10, cps_316 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 11, cps_316 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 12, cps_316 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 13, cps_316 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 14, cps_316 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 15, cps_316 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 16, cps_316 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 17, cps_316 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 18, cps_316 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 19, cps_316 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 20, cps_316 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 21, cps_316 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 22, cps_316 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 23, cps_316 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 24, cps_316 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 25, cps_316 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 26, cps_316 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 27, cps_316 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 28, cps_316 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 29, cps_316 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 30, cps_316 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 31, cps_316 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 32, cps_316 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 33, cps_316 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 34, cps_316 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 35, cps_316 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 36, cps_316 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 37, cps_316 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 38, cps_316 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 39, cps_316 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 40, cps_316 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 41, cps_316 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 42, cps_316 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 43, cps_316 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 44, cps_316 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 45, cps_316 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 46, cps_316 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 47, cps_316 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 48, cps_316 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_316 + 49, cps_316 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_316);

uint32_t cps_317[] = {
0xf918, 0xf919, 0xf91a, 0xf91b, 0xf91c, 0xf91d, 0xf91e, 0xf91f, 0xf920, 0xf921, 0xf922, 0xf923, 0xf924, 0xf925, 0xf926, 0xf927, 0xf928, 0xf929, 0xf92a, 0xf92b, 0xf92c, 0xf92d, 0xf92e, 0xf92f, 0xf930, 0xf931, 0xf932, 0xf933, 0xf934, 0xf935, 0xf936, 0xf937, 0xf938, 0xf939, 0xf93a, 0xf93b, 0xf93c, 0xf93d, 0xf93e, 0xf93f, 0xf940, 0xf941, 0xf942, 0xf943, 0xf944, 0xf945, 0xf946, 0xf947, 0xf948, 0xf949
};

void BM_collation_element_lookup_317(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 0, cps_317 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 1, cps_317 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 2, cps_317 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 3, cps_317 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 4, cps_317 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 5, cps_317 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 6, cps_317 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 7, cps_317 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 8, cps_317 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 9, cps_317 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 10, cps_317 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 11, cps_317 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 12, cps_317 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 13, cps_317 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 14, cps_317 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 15, cps_317 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 16, cps_317 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 17, cps_317 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 18, cps_317 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 19, cps_317 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 20, cps_317 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 21, cps_317 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 22, cps_317 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 23, cps_317 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 24, cps_317 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 25, cps_317 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 26, cps_317 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 27, cps_317 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 28, cps_317 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 29, cps_317 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 30, cps_317 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 31, cps_317 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 32, cps_317 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 33, cps_317 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 34, cps_317 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 35, cps_317 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 36, cps_317 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 37, cps_317 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 38, cps_317 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 39, cps_317 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 40, cps_317 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 41, cps_317 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 42, cps_317 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 43, cps_317 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 44, cps_317 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 45, cps_317 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 46, cps_317 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 47, cps_317 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 48, cps_317 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_317 + 49, cps_317 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_317);

uint32_t cps_318[] = {
0xf94a, 0xf94b, 0xf94c, 0xf94d, 0xf94e, 0xf94f, 0xf950, 0xf951, 0xf952, 0xf953, 0xf954, 0xf955, 0xf956, 0xf957, 0xf958, 0xf959, 0xf95a, 0xf95b, 0xf95c, 0xf95d, 0xf95e, 0xf95f, 0xf960, 0xf961, 0xf962, 0xf963, 0xf964, 0xf965, 0xf966, 0xf967, 0xf968, 0xf969, 0xf96a, 0xf96b, 0xf96c, 0xf96d, 0xf96e, 0xf96f, 0xf970, 0xf971, 0xf972, 0xf973, 0xf974, 0xf975, 0xf976, 0xf977, 0xf978, 0xf979, 0xf97a, 0xf97b
};

void BM_collation_element_lookup_318(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 0, cps_318 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 1, cps_318 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 2, cps_318 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 3, cps_318 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 4, cps_318 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 5, cps_318 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 6, cps_318 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 7, cps_318 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 8, cps_318 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 9, cps_318 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 10, cps_318 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 11, cps_318 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 12, cps_318 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 13, cps_318 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 14, cps_318 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 15, cps_318 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 16, cps_318 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 17, cps_318 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 18, cps_318 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 19, cps_318 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 20, cps_318 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 21, cps_318 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 22, cps_318 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 23, cps_318 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 24, cps_318 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 25, cps_318 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 26, cps_318 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 27, cps_318 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 28, cps_318 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 29, cps_318 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 30, cps_318 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 31, cps_318 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 32, cps_318 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 33, cps_318 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 34, cps_318 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 35, cps_318 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 36, cps_318 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 37, cps_318 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 38, cps_318 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 39, cps_318 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 40, cps_318 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 41, cps_318 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 42, cps_318 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 43, cps_318 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 44, cps_318 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 45, cps_318 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 46, cps_318 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 47, cps_318 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 48, cps_318 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_318 + 49, cps_318 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_318);

uint32_t cps_319[] = {
0xf97c, 0xf97d, 0xf97e, 0xf97f, 0xf980, 0xf981, 0xf982, 0xf983, 0xf984, 0xf985, 0xf986, 0xf987, 0xf988, 0xf989, 0xf98a, 0xf98b, 0xf98c, 0xf98d, 0xf98e, 0xf98f, 0xf990, 0xf991, 0xf992, 0xf993, 0xf994, 0xf995, 0xf996, 0xf997, 0xf998, 0xf999, 0xf99a, 0xf99b, 0xf99c, 0xf99d, 0xf99e, 0xf99f, 0xf9a0, 0xf9a1, 0xf9a2, 0xf9a3, 0xf9a4, 0xf9a5, 0xf9a6, 0xf9a7, 0xf9a8, 0xf9a9, 0xf9aa, 0xf9ab, 0xf9ac, 0xf9ad
};

void BM_collation_element_lookup_319(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 0, cps_319 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 1, cps_319 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 2, cps_319 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 3, cps_319 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 4, cps_319 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 5, cps_319 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 6, cps_319 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 7, cps_319 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 8, cps_319 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 9, cps_319 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 10, cps_319 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 11, cps_319 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 12, cps_319 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 13, cps_319 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 14, cps_319 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 15, cps_319 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 16, cps_319 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 17, cps_319 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 18, cps_319 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 19, cps_319 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 20, cps_319 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 21, cps_319 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 22, cps_319 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 23, cps_319 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 24, cps_319 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 25, cps_319 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 26, cps_319 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 27, cps_319 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 28, cps_319 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 29, cps_319 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 30, cps_319 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 31, cps_319 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 32, cps_319 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 33, cps_319 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 34, cps_319 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 35, cps_319 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 36, cps_319 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 37, cps_319 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 38, cps_319 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 39, cps_319 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 40, cps_319 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 41, cps_319 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 42, cps_319 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 43, cps_319 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 44, cps_319 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 45, cps_319 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 46, cps_319 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 47, cps_319 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 48, cps_319 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_319 + 49, cps_319 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_319);

uint32_t cps_320[] = {
0xf9ae, 0xf9af, 0xf9b0, 0xf9b1, 0xf9b2, 0xf9b3, 0xf9b4, 0xf9b5, 0xf9b6, 0xf9b7, 0xf9b8, 0xf9b9, 0xf9ba, 0xf9bb, 0xf9bc, 0xf9bd, 0xf9be, 0xf9bf, 0xf9c0, 0xf9c1, 0xf9c2, 0xf9c3, 0xf9c4, 0xf9c5, 0xf9c6, 0xf9c7, 0xf9c8, 0xf9c9, 0xf9ca, 0xf9cb, 0xf9cc, 0xf9cd, 0xf9ce, 0xf9cf, 0xf9d0, 0xf9d1, 0xf9d2, 0xf9d3, 0xf9d4, 0xf9d5, 0xf9d6, 0xf9d7, 0xf9d8, 0xf9d9, 0xf9da, 0xf9db, 0xf9dc, 0xf9dd, 0xf9de, 0xf9df
};

void BM_collation_element_lookup_320(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 0, cps_320 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 1, cps_320 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 2, cps_320 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 3, cps_320 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 4, cps_320 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 5, cps_320 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 6, cps_320 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 7, cps_320 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 8, cps_320 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 9, cps_320 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 10, cps_320 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 11, cps_320 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 12, cps_320 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 13, cps_320 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 14, cps_320 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 15, cps_320 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 16, cps_320 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 17, cps_320 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 18, cps_320 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 19, cps_320 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 20, cps_320 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 21, cps_320 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 22, cps_320 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 23, cps_320 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 24, cps_320 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 25, cps_320 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 26, cps_320 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 27, cps_320 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 28, cps_320 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 29, cps_320 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 30, cps_320 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 31, cps_320 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 32, cps_320 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 33, cps_320 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 34, cps_320 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 35, cps_320 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 36, cps_320 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 37, cps_320 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 38, cps_320 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 39, cps_320 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 40, cps_320 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 41, cps_320 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 42, cps_320 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 43, cps_320 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 44, cps_320 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 45, cps_320 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 46, cps_320 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 47, cps_320 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 48, cps_320 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_320 + 49, cps_320 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_320);

uint32_t cps_321[] = {
0xf9e0, 0xf9e1, 0xf9e2, 0xf9e3, 0xf9e4, 0xf9e5, 0xf9e6, 0xf9e7, 0xf9e8, 0xf9e9, 0xf9ea, 0xf9eb, 0xf9ec, 0xf9ed, 0xf9ee, 0xf9ef, 0xf9f0, 0xf9f1, 0xf9f2, 0xf9f3, 0xf9f4, 0xf9f5, 0xf9f6, 0xf9f7, 0xf9f8, 0xf9f9, 0xf9fa, 0xf9fb, 0xf9fc, 0xf9fd, 0xf9fe, 0xf9ff, 0xfa00, 0xfa01, 0xfa02, 0xfa03, 0xfa04, 0xfa05, 0xfa06, 0xfa07, 0xfa08, 0xfa09, 0xfa0a, 0xfa0b, 0xfa0c, 0xfa0d, 0xfa0e, 0xfa0f, 0xfa10, 0xfa11
};

void BM_collation_element_lookup_321(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 0, cps_321 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 1, cps_321 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 2, cps_321 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 3, cps_321 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 4, cps_321 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 5, cps_321 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 6, cps_321 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 7, cps_321 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 8, cps_321 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 9, cps_321 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 10, cps_321 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 11, cps_321 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 12, cps_321 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 13, cps_321 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 14, cps_321 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 15, cps_321 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 16, cps_321 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 17, cps_321 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 18, cps_321 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 19, cps_321 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 20, cps_321 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 21, cps_321 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 22, cps_321 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 23, cps_321 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 24, cps_321 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 25, cps_321 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 26, cps_321 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 27, cps_321 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 28, cps_321 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 29, cps_321 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 30, cps_321 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 31, cps_321 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 32, cps_321 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 33, cps_321 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 34, cps_321 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 35, cps_321 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 36, cps_321 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 37, cps_321 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 38, cps_321 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 39, cps_321 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 40, cps_321 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 41, cps_321 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 42, cps_321 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 43, cps_321 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 44, cps_321 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 45, cps_321 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 46, cps_321 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 47, cps_321 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 48, cps_321 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_321 + 49, cps_321 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_321);

uint32_t cps_322[] = {
0xfa12, 0xfa13, 0xfa14, 0xfa15, 0xfa16, 0xfa17, 0xfa18, 0xfa19, 0xfa1a, 0xfa1b, 0xfa1c, 0xfa1d, 0xfa1e, 0xfa1f, 0xfa20, 0xfa21, 0xfa22, 0xfa23, 0xfa24, 0xfa25, 0xfa26, 0xfa27, 0xfa28, 0xfa29, 0xfa2a, 0xfa2b, 0xfa2c, 0xfa2d, 0xfa2e, 0xfa2f, 0xfa30, 0xfa31, 0xfa32, 0xfa33, 0xfa34, 0xfa35, 0xfa36, 0xfa37, 0xfa38, 0xfa39, 0xfa3a, 0xfa3b, 0xfa3c, 0xfa3d, 0xfa3e, 0xfa3f, 0xfa40, 0xfa41, 0xfa42, 0xfa43
};

void BM_collation_element_lookup_322(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 0, cps_322 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 1, cps_322 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 2, cps_322 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 3, cps_322 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 4, cps_322 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 5, cps_322 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 6, cps_322 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 7, cps_322 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 8, cps_322 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 9, cps_322 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 10, cps_322 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 11, cps_322 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 12, cps_322 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 13, cps_322 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 14, cps_322 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 15, cps_322 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 16, cps_322 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 17, cps_322 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 18, cps_322 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 19, cps_322 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 20, cps_322 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 21, cps_322 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 22, cps_322 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 23, cps_322 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 24, cps_322 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 25, cps_322 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 26, cps_322 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 27, cps_322 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 28, cps_322 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 29, cps_322 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 30, cps_322 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 31, cps_322 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 32, cps_322 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 33, cps_322 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 34, cps_322 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 35, cps_322 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 36, cps_322 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 37, cps_322 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 38, cps_322 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 39, cps_322 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 40, cps_322 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 41, cps_322 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 42, cps_322 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 43, cps_322 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 44, cps_322 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 45, cps_322 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 46, cps_322 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 47, cps_322 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 48, cps_322 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_322 + 49, cps_322 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_322);

uint32_t cps_323[] = {
0xfa44, 0xfa45, 0xfa46, 0xfa47, 0xfa48, 0xfa49, 0xfa4a, 0xfa4b, 0xfa4c, 0xfa4d, 0xfa4e, 0xfa4f, 0xfa50, 0xfa51, 0xfa52, 0xfa53, 0xfa54, 0xfa55, 0xfa56, 0xfa57, 0xfa58, 0xfa59, 0xfa5a, 0xfa5b, 0xfa5c, 0xfa5d, 0xfa5e, 0xfa5f, 0xfa60, 0xfa61, 0xfa62, 0xfa63, 0xfa64, 0xfa65, 0xfa66, 0xfa67, 0xfa68, 0xfa69, 0xfa6a, 0xfa6b, 0xfa6c, 0xfa6d, 0xfa70, 0xfa71, 0xfa72, 0xfa73, 0xfa74, 0xfa75, 0xfa76, 0xfa77
};

void BM_collation_element_lookup_323(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 0, cps_323 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 1, cps_323 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 2, cps_323 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 3, cps_323 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 4, cps_323 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 5, cps_323 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 6, cps_323 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 7, cps_323 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 8, cps_323 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 9, cps_323 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 10, cps_323 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 11, cps_323 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 12, cps_323 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 13, cps_323 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 14, cps_323 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 15, cps_323 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 16, cps_323 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 17, cps_323 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 18, cps_323 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 19, cps_323 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 20, cps_323 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 21, cps_323 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 22, cps_323 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 23, cps_323 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 24, cps_323 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 25, cps_323 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 26, cps_323 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 27, cps_323 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 28, cps_323 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 29, cps_323 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 30, cps_323 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 31, cps_323 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 32, cps_323 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 33, cps_323 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 34, cps_323 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 35, cps_323 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 36, cps_323 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 37, cps_323 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 38, cps_323 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 39, cps_323 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 40, cps_323 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 41, cps_323 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 42, cps_323 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 43, cps_323 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 44, cps_323 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 45, cps_323 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 46, cps_323 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 47, cps_323 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 48, cps_323 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_323 + 49, cps_323 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_323);

uint32_t cps_324[] = {
0xfa78, 0xfa79, 0xfa7a, 0xfa7b, 0xfa7c, 0xfa7d, 0xfa7e, 0xfa7f, 0xfa80, 0xfa81, 0xfa82, 0xfa83, 0xfa84, 0xfa85, 0xfa86, 0xfa87, 0xfa88, 0xfa89, 0xfa8a, 0xfa8b, 0xfa8c, 0xfa8d, 0xfa8e, 0xfa8f, 0xfa90, 0xfa91, 0xfa92, 0xfa93, 0xfa94, 0xfa95, 0xfa96, 0xfa97, 0xfa98, 0xfa99, 0xfa9a, 0xfa9b, 0xfa9c, 0xfa9d, 0xfa9e, 0xfa9f, 0xfaa0, 0xfaa1, 0xfaa2, 0xfaa3, 0xfaa4, 0xfaa5, 0xfaa6, 0xfaa7, 0xfaa8, 0xfaa9
};

void BM_collation_element_lookup_324(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 0, cps_324 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 1, cps_324 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 2, cps_324 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 3, cps_324 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 4, cps_324 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 5, cps_324 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 6, cps_324 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 7, cps_324 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 8, cps_324 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 9, cps_324 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 10, cps_324 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 11, cps_324 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 12, cps_324 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 13, cps_324 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 14, cps_324 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 15, cps_324 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 16, cps_324 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 17, cps_324 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 18, cps_324 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 19, cps_324 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 20, cps_324 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 21, cps_324 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 22, cps_324 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 23, cps_324 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 24, cps_324 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 25, cps_324 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 26, cps_324 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 27, cps_324 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 28, cps_324 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 29, cps_324 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 30, cps_324 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 31, cps_324 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 32, cps_324 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 33, cps_324 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 34, cps_324 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 35, cps_324 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 36, cps_324 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 37, cps_324 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 38, cps_324 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 39, cps_324 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 40, cps_324 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 41, cps_324 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 42, cps_324 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 43, cps_324 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 44, cps_324 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 45, cps_324 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 46, cps_324 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 47, cps_324 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 48, cps_324 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_324 + 49, cps_324 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_324);

uint32_t cps_325[] = {
0xfaaa, 0xfaab, 0xfaac, 0xfaad, 0xfaae, 0xfaaf, 0xfab0, 0xfab1, 0xfab2, 0xfab3, 0xfab4, 0xfab5, 0xfab6, 0xfab7, 0xfab8, 0xfab9, 0xfaba, 0xfabb, 0xfabc, 0xfabd, 0xfabe, 0xfabf, 0xfac0, 0xfac1, 0xfac2, 0xfac3, 0xfac4, 0xfac5, 0xfac6, 0xfac7, 0xfac8, 0xfac9, 0xfaca, 0xfacb, 0xfacc, 0xfacd, 0xface, 0xfacf, 0xfad0, 0xfad1, 0xfad2, 0xfad3, 0xfad4, 0xfad5, 0xfad6, 0xfad7, 0xfad8, 0xfad9, 0xfb00, 0xfb01
};

void BM_collation_element_lookup_325(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 0, cps_325 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 1, cps_325 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 2, cps_325 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 3, cps_325 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 4, cps_325 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 5, cps_325 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 6, cps_325 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 7, cps_325 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 8, cps_325 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 9, cps_325 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 10, cps_325 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 11, cps_325 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 12, cps_325 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 13, cps_325 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 14, cps_325 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 15, cps_325 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 16, cps_325 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 17, cps_325 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 18, cps_325 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 19, cps_325 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 20, cps_325 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 21, cps_325 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 22, cps_325 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 23, cps_325 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 24, cps_325 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 25, cps_325 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 26, cps_325 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 27, cps_325 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 28, cps_325 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 29, cps_325 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 30, cps_325 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 31, cps_325 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 32, cps_325 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 33, cps_325 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 34, cps_325 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 35, cps_325 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 36, cps_325 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 37, cps_325 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 38, cps_325 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 39, cps_325 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 40, cps_325 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 41, cps_325 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 42, cps_325 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 43, cps_325 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 44, cps_325 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 45, cps_325 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 46, cps_325 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 47, cps_325 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 48, cps_325 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_325 + 49, cps_325 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_325);

uint32_t cps_326[] = {
0xfb02, 0xfb03, 0xfb04, 0xfb05, 0xfb06, 0xfb13, 0xfb14, 0xfb15, 0xfb16, 0xfb17, 0xfb1d, 0xfb1e, 0xfb1f, 0xfb20, 0xfb21, 0xfb22, 0xfb23, 0xfb24, 0xfb25, 0xfb26, 0xfb27, 0xfb28, 0xfb29, 0xfb2a, 0xfb2b, 0xfb2c, 0xfb2d, 0xfb2e, 0xfb2f, 0xfb30, 0xfb31, 0xfb32, 0xfb33, 0xfb34, 0xfb35, 0xfb36, 0xfb38, 0xfb39, 0xfb3a, 0xfb3b, 0xfb3c, 0xfb3e, 0xfb40, 0xfb41, 0xfb43, 0xfb44, 0xfb46, 0xfb47, 0xfb48, 0xfb49
};

void BM_collation_element_lookup_326(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 0, cps_326 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 1, cps_326 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 2, cps_326 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 3, cps_326 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 4, cps_326 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 5, cps_326 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 6, cps_326 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 7, cps_326 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 8, cps_326 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 9, cps_326 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 10, cps_326 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 11, cps_326 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 12, cps_326 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 13, cps_326 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 14, cps_326 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 15, cps_326 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 16, cps_326 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 17, cps_326 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 18, cps_326 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 19, cps_326 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 20, cps_326 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 21, cps_326 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 22, cps_326 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 23, cps_326 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 24, cps_326 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 25, cps_326 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 26, cps_326 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 27, cps_326 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 28, cps_326 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 29, cps_326 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 30, cps_326 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 31, cps_326 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 32, cps_326 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 33, cps_326 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 34, cps_326 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 35, cps_326 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 36, cps_326 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 37, cps_326 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 38, cps_326 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 39, cps_326 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 40, cps_326 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 41, cps_326 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 42, cps_326 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 43, cps_326 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 44, cps_326 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 45, cps_326 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 46, cps_326 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 47, cps_326 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 48, cps_326 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_326 + 49, cps_326 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_326);

uint32_t cps_327[] = {
0xfb4a, 0xfb4b, 0xfb4c, 0xfb4d, 0xfb4e, 0xfb4f, 0xfb50, 0xfb51, 0xfb52, 0xfb53, 0xfb54, 0xfb55, 0xfb56, 0xfb57, 0xfb58, 0xfb59, 0xfb5a, 0xfb5b, 0xfb5c, 0xfb5d, 0xfb5e, 0xfb5f, 0xfb60, 0xfb61, 0xfb62, 0xfb63, 0xfb64, 0xfb65, 0xfb66, 0xfb67, 0xfb68, 0xfb69, 0xfb6a, 0xfb6b, 0xfb6c, 0xfb6d, 0xfb6e, 0xfb6f, 0xfb70, 0xfb71, 0xfb72, 0xfb73, 0xfb74, 0xfb75, 0xfb76, 0xfb77, 0xfb78, 0xfb79, 0xfb7a, 0xfb7b
};

void BM_collation_element_lookup_327(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 0, cps_327 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 1, cps_327 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 2, cps_327 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 3, cps_327 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 4, cps_327 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 5, cps_327 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 6, cps_327 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 7, cps_327 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 8, cps_327 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 9, cps_327 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 10, cps_327 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 11, cps_327 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 12, cps_327 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 13, cps_327 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 14, cps_327 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 15, cps_327 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 16, cps_327 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 17, cps_327 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 18, cps_327 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 19, cps_327 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 20, cps_327 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 21, cps_327 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 22, cps_327 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 23, cps_327 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 24, cps_327 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 25, cps_327 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 26, cps_327 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 27, cps_327 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 28, cps_327 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 29, cps_327 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 30, cps_327 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 31, cps_327 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 32, cps_327 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 33, cps_327 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 34, cps_327 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 35, cps_327 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 36, cps_327 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 37, cps_327 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 38, cps_327 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 39, cps_327 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 40, cps_327 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 41, cps_327 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 42, cps_327 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 43, cps_327 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 44, cps_327 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 45, cps_327 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 46, cps_327 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 47, cps_327 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 48, cps_327 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_327 + 49, cps_327 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_327);

uint32_t cps_328[] = {
0xfb7c, 0xfb7d, 0xfb7e, 0xfb7f, 0xfb80, 0xfb81, 0xfb82, 0xfb83, 0xfb84, 0xfb85, 0xfb86, 0xfb87, 0xfb88, 0xfb89, 0xfb8a, 0xfb8b, 0xfb8c, 0xfb8d, 0xfb8e, 0xfb8f, 0xfb90, 0xfb91, 0xfb92, 0xfb93, 0xfb94, 0xfb95, 0xfb96, 0xfb97, 0xfb98, 0xfb99, 0xfb9a, 0xfb9b, 0xfb9c, 0xfb9d, 0xfb9e, 0xfb9f, 0xfba0, 0xfba1, 0xfba2, 0xfba3, 0xfba4, 0xfba5, 0xfba6, 0xfba7, 0xfba8, 0xfba9, 0xfbaa, 0xfbab, 0xfbac, 0xfbad
};

void BM_collation_element_lookup_328(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 0, cps_328 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 1, cps_328 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 2, cps_328 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 3, cps_328 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 4, cps_328 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 5, cps_328 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 6, cps_328 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 7, cps_328 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 8, cps_328 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 9, cps_328 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 10, cps_328 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 11, cps_328 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 12, cps_328 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 13, cps_328 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 14, cps_328 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 15, cps_328 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 16, cps_328 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 17, cps_328 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 18, cps_328 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 19, cps_328 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 20, cps_328 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 21, cps_328 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 22, cps_328 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 23, cps_328 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 24, cps_328 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 25, cps_328 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 26, cps_328 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 27, cps_328 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 28, cps_328 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 29, cps_328 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 30, cps_328 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 31, cps_328 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 32, cps_328 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 33, cps_328 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 34, cps_328 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 35, cps_328 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 36, cps_328 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 37, cps_328 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 38, cps_328 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 39, cps_328 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 40, cps_328 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 41, cps_328 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 42, cps_328 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 43, cps_328 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 44, cps_328 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 45, cps_328 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 46, cps_328 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 47, cps_328 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 48, cps_328 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_328 + 49, cps_328 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_328);

uint32_t cps_329[] = {
0xfbae, 0xfbaf, 0xfbb0, 0xfbb1, 0xfbb2, 0xfbb3, 0xfbb4, 0xfbb5, 0xfbb6, 0xfbb7, 0xfbb8, 0xfbb9, 0xfbba, 0xfbbb, 0xfbbc, 0xfbbd, 0xfbbe, 0xfbbf, 0xfbc0, 0xfbc1, 0xfbd3, 0xfbd4, 0xfbd5, 0xfbd6, 0xfbd7, 0xfbd8, 0xfbd9, 0xfbda, 0xfbdb, 0xfbdc, 0xfbdd, 0xfbde, 0xfbdf, 0xfbe0, 0xfbe1, 0xfbe2, 0xfbe3, 0xfbe4, 0xfbe5, 0xfbe6, 0xfbe7, 0xfbe8, 0xfbe9, 0xfbea, 0xfbeb, 0xfbec, 0xfbed, 0xfbee, 0xfbef, 0xfbf0
};

void BM_collation_element_lookup_329(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 0, cps_329 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 1, cps_329 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 2, cps_329 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 3, cps_329 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 4, cps_329 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 5, cps_329 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 6, cps_329 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 7, cps_329 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 8, cps_329 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 9, cps_329 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 10, cps_329 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 11, cps_329 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 12, cps_329 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 13, cps_329 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 14, cps_329 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 15, cps_329 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 16, cps_329 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 17, cps_329 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 18, cps_329 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 19, cps_329 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 20, cps_329 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 21, cps_329 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 22, cps_329 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 23, cps_329 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 24, cps_329 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 25, cps_329 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 26, cps_329 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 27, cps_329 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 28, cps_329 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 29, cps_329 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 30, cps_329 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 31, cps_329 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 32, cps_329 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 33, cps_329 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 34, cps_329 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 35, cps_329 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 36, cps_329 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 37, cps_329 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 38, cps_329 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 39, cps_329 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 40, cps_329 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 41, cps_329 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 42, cps_329 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 43, cps_329 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 44, cps_329 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 45, cps_329 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 46, cps_329 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 47, cps_329 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 48, cps_329 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_329 + 49, cps_329 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_329);

uint32_t cps_330[] = {
0xfbf1, 0xfbf2, 0xfbf3, 0xfbf4, 0xfbf5, 0xfbf6, 0xfbf7, 0xfbf8, 0xfbf9, 0xfbfa, 0xfbfb, 0xfbfc, 0xfbfd, 0xfbfe, 0xfbff, 0xfc00, 0xfc01, 0xfc02, 0xfc03, 0xfc04, 0xfc05, 0xfc06, 0xfc07, 0xfc08, 0xfc09, 0xfc0a, 0xfc0b, 0xfc0c, 0xfc0d, 0xfc0e, 0xfc0f, 0xfc10, 0xfc11, 0xfc12, 0xfc13, 0xfc14, 0xfc15, 0xfc16, 0xfc17, 0xfc18, 0xfc19, 0xfc1a, 0xfc1b, 0xfc1c, 0xfc1d, 0xfc1e, 0xfc1f, 0xfc20, 0xfc21, 0xfc22
};

void BM_collation_element_lookup_330(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 0, cps_330 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 1, cps_330 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 2, cps_330 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 3, cps_330 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 4, cps_330 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 5, cps_330 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 6, cps_330 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 7, cps_330 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 8, cps_330 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 9, cps_330 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 10, cps_330 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 11, cps_330 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 12, cps_330 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 13, cps_330 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 14, cps_330 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 15, cps_330 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 16, cps_330 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 17, cps_330 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 18, cps_330 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 19, cps_330 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 20, cps_330 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 21, cps_330 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 22, cps_330 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 23, cps_330 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 24, cps_330 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 25, cps_330 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 26, cps_330 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 27, cps_330 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 28, cps_330 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 29, cps_330 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 30, cps_330 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 31, cps_330 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 32, cps_330 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 33, cps_330 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 34, cps_330 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 35, cps_330 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 36, cps_330 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 37, cps_330 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 38, cps_330 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 39, cps_330 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 40, cps_330 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 41, cps_330 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 42, cps_330 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 43, cps_330 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 44, cps_330 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 45, cps_330 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 46, cps_330 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 47, cps_330 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 48, cps_330 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_330 + 49, cps_330 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_330);

uint32_t cps_331[] = {
0xfc23, 0xfc24, 0xfc25, 0xfc26, 0xfc27, 0xfc28, 0xfc29, 0xfc2a, 0xfc2b, 0xfc2c, 0xfc2d, 0xfc2e, 0xfc2f, 0xfc30, 0xfc31, 0xfc32, 0xfc33, 0xfc34, 0xfc35, 0xfc36, 0xfc37, 0xfc38, 0xfc39, 0xfc3a, 0xfc3b, 0xfc3c, 0xfc3d, 0xfc3e, 0xfc3f, 0xfc40, 0xfc41, 0xfc42, 0xfc43, 0xfc44, 0xfc45, 0xfc46, 0xfc47, 0xfc48, 0xfc49, 0xfc4a, 0xfc4b, 0xfc4c, 0xfc4d, 0xfc4e, 0xfc4f, 0xfc50, 0xfc51, 0xfc52, 0xfc53, 0xfc54
};

void BM_collation_element_lookup_331(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 0, cps_331 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 1, cps_331 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 2, cps_331 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 3, cps_331 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 4, cps_331 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 5, cps_331 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 6, cps_331 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 7, cps_331 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 8, cps_331 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 9, cps_331 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 10, cps_331 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 11, cps_331 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 12, cps_331 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 13, cps_331 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 14, cps_331 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 15, cps_331 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 16, cps_331 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 17, cps_331 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 18, cps_331 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 19, cps_331 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 20, cps_331 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 21, cps_331 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 22, cps_331 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 23, cps_331 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 24, cps_331 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 25, cps_331 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 26, cps_331 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 27, cps_331 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 28, cps_331 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 29, cps_331 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 30, cps_331 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 31, cps_331 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 32, cps_331 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 33, cps_331 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 34, cps_331 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 35, cps_331 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 36, cps_331 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 37, cps_331 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 38, cps_331 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 39, cps_331 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 40, cps_331 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 41, cps_331 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 42, cps_331 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 43, cps_331 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 44, cps_331 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 45, cps_331 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 46, cps_331 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 47, cps_331 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 48, cps_331 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_331 + 49, cps_331 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_331);

uint32_t cps_332[] = {
0xfc55, 0xfc56, 0xfc57, 0xfc58, 0xfc59, 0xfc5a, 0xfc5b, 0xfc5c, 0xfc5d, 0xfc5e, 0xfc5f, 0xfc60, 0xfc61, 0xfc62, 0xfc63, 0xfc64, 0xfc65, 0xfc66, 0xfc67, 0xfc68, 0xfc69, 0xfc6a, 0xfc6b, 0xfc6c, 0xfc6d, 0xfc6e, 0xfc6f, 0xfc70, 0xfc71, 0xfc72, 0xfc73, 0xfc74, 0xfc75, 0xfc76, 0xfc77, 0xfc78, 0xfc79, 0xfc7a, 0xfc7b, 0xfc7c, 0xfc7d, 0xfc7e, 0xfc7f, 0xfc80, 0xfc81, 0xfc82, 0xfc83, 0xfc84, 0xfc85, 0xfc86
};

void BM_collation_element_lookup_332(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 0, cps_332 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 1, cps_332 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 2, cps_332 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 3, cps_332 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 4, cps_332 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 5, cps_332 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 6, cps_332 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 7, cps_332 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 8, cps_332 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 9, cps_332 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 10, cps_332 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 11, cps_332 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 12, cps_332 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 13, cps_332 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 14, cps_332 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 15, cps_332 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 16, cps_332 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 17, cps_332 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 18, cps_332 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 19, cps_332 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 20, cps_332 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 21, cps_332 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 22, cps_332 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 23, cps_332 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 24, cps_332 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 25, cps_332 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 26, cps_332 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 27, cps_332 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 28, cps_332 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 29, cps_332 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 30, cps_332 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 31, cps_332 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 32, cps_332 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 33, cps_332 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 34, cps_332 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 35, cps_332 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 36, cps_332 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 37, cps_332 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 38, cps_332 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 39, cps_332 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 40, cps_332 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 41, cps_332 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 42, cps_332 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 43, cps_332 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 44, cps_332 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 45, cps_332 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 46, cps_332 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 47, cps_332 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 48, cps_332 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_332 + 49, cps_332 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_332);

uint32_t cps_333[] = {
0xfc87, 0xfc88, 0xfc89, 0xfc8a, 0xfc8b, 0xfc8c, 0xfc8d, 0xfc8e, 0xfc8f, 0xfc90, 0xfc91, 0xfc92, 0xfc93, 0xfc94, 0xfc95, 0xfc96, 0xfc97, 0xfc98, 0xfc99, 0xfc9a, 0xfc9b, 0xfc9c, 0xfc9d, 0xfc9e, 0xfc9f, 0xfca0, 0xfca1, 0xfca2, 0xfca3, 0xfca4, 0xfca5, 0xfca6, 0xfca7, 0xfca8, 0xfca9, 0xfcaa, 0xfcab, 0xfcac, 0xfcad, 0xfcae, 0xfcaf, 0xfcb0, 0xfcb1, 0xfcb2, 0xfcb3, 0xfcb4, 0xfcb5, 0xfcb6, 0xfcb7, 0xfcb8
};

void BM_collation_element_lookup_333(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 0, cps_333 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 1, cps_333 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 2, cps_333 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 3, cps_333 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 4, cps_333 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 5, cps_333 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 6, cps_333 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 7, cps_333 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 8, cps_333 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 9, cps_333 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 10, cps_333 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 11, cps_333 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 12, cps_333 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 13, cps_333 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 14, cps_333 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 15, cps_333 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 16, cps_333 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 17, cps_333 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 18, cps_333 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 19, cps_333 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 20, cps_333 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 21, cps_333 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 22, cps_333 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 23, cps_333 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 24, cps_333 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 25, cps_333 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 26, cps_333 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 27, cps_333 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 28, cps_333 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 29, cps_333 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 30, cps_333 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 31, cps_333 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 32, cps_333 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 33, cps_333 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 34, cps_333 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 35, cps_333 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 36, cps_333 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 37, cps_333 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 38, cps_333 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 39, cps_333 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 40, cps_333 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 41, cps_333 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 42, cps_333 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 43, cps_333 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 44, cps_333 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 45, cps_333 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 46, cps_333 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 47, cps_333 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 48, cps_333 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_333 + 49, cps_333 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_333);

uint32_t cps_334[] = {
0xfcb9, 0xfcba, 0xfcbb, 0xfcbc, 0xfcbd, 0xfcbe, 0xfcbf, 0xfcc0, 0xfcc1, 0xfcc2, 0xfcc3, 0xfcc4, 0xfcc5, 0xfcc6, 0xfcc7, 0xfcc8, 0xfcc9, 0xfcca, 0xfccb, 0xfccc, 0xfccd, 0xfcce, 0xfccf, 0xfcd0, 0xfcd1, 0xfcd2, 0xfcd3, 0xfcd4, 0xfcd5, 0xfcd6, 0xfcd7, 0xfcd8, 0xfcd9, 0xfcda, 0xfcdb, 0xfcdc, 0xfcdd, 0xfcde, 0xfcdf, 0xfce0, 0xfce1, 0xfce2, 0xfce3, 0xfce4, 0xfce5, 0xfce6, 0xfce7, 0xfce8, 0xfce9, 0xfcea
};

void BM_collation_element_lookup_334(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 0, cps_334 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 1, cps_334 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 2, cps_334 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 3, cps_334 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 4, cps_334 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 5, cps_334 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 6, cps_334 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 7, cps_334 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 8, cps_334 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 9, cps_334 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 10, cps_334 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 11, cps_334 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 12, cps_334 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 13, cps_334 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 14, cps_334 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 15, cps_334 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 16, cps_334 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 17, cps_334 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 18, cps_334 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 19, cps_334 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 20, cps_334 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 21, cps_334 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 22, cps_334 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 23, cps_334 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 24, cps_334 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 25, cps_334 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 26, cps_334 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 27, cps_334 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 28, cps_334 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 29, cps_334 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 30, cps_334 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 31, cps_334 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 32, cps_334 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 33, cps_334 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 34, cps_334 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 35, cps_334 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 36, cps_334 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 37, cps_334 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 38, cps_334 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 39, cps_334 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 40, cps_334 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 41, cps_334 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 42, cps_334 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 43, cps_334 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 44, cps_334 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 45, cps_334 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 46, cps_334 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 47, cps_334 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 48, cps_334 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_334 + 49, cps_334 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_334);

uint32_t cps_335[] = {
0xfceb, 0xfcec, 0xfced, 0xfcee, 0xfcef, 0xfcf0, 0xfcf1, 0xfcf2, 0xfcf3, 0xfcf4, 0xfcf5, 0xfcf6, 0xfcf7, 0xfcf8, 0xfcf9, 0xfcfa, 0xfcfb, 0xfcfc, 0xfcfd, 0xfcfe, 0xfcff, 0xfd00, 0xfd01, 0xfd02, 0xfd03, 0xfd04, 0xfd05, 0xfd06, 0xfd07, 0xfd08, 0xfd09, 0xfd0a, 0xfd0b, 0xfd0c, 0xfd0d, 0xfd0e, 0xfd0f, 0xfd10, 0xfd11, 0xfd12, 0xfd13, 0xfd14, 0xfd15, 0xfd16, 0xfd17, 0xfd18, 0xfd19, 0xfd1a, 0xfd1b, 0xfd1c
};

void BM_collation_element_lookup_335(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 0, cps_335 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 1, cps_335 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 2, cps_335 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 3, cps_335 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 4, cps_335 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 5, cps_335 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 6, cps_335 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 7, cps_335 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 8, cps_335 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 9, cps_335 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 10, cps_335 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 11, cps_335 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 12, cps_335 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 13, cps_335 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 14, cps_335 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 15, cps_335 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 16, cps_335 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 17, cps_335 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 18, cps_335 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 19, cps_335 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 20, cps_335 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 21, cps_335 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 22, cps_335 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 23, cps_335 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 24, cps_335 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 25, cps_335 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 26, cps_335 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 27, cps_335 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 28, cps_335 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 29, cps_335 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 30, cps_335 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 31, cps_335 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 32, cps_335 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 33, cps_335 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 34, cps_335 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 35, cps_335 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 36, cps_335 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 37, cps_335 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 38, cps_335 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 39, cps_335 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 40, cps_335 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 41, cps_335 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 42, cps_335 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 43, cps_335 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 44, cps_335 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 45, cps_335 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 46, cps_335 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 47, cps_335 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 48, cps_335 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_335 + 49, cps_335 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_335);

uint32_t cps_336[] = {
0xfd1d, 0xfd1e, 0xfd1f, 0xfd20, 0xfd21, 0xfd22, 0xfd23, 0xfd24, 0xfd25, 0xfd26, 0xfd27, 0xfd28, 0xfd29, 0xfd2a, 0xfd2b, 0xfd2c, 0xfd2d, 0xfd2e, 0xfd2f, 0xfd30, 0xfd31, 0xfd32, 0xfd33, 0xfd34, 0xfd35, 0xfd36, 0xfd37, 0xfd38, 0xfd39, 0xfd3a, 0xfd3b, 0xfd3c, 0xfd3d, 0xfd3e, 0xfd3f, 0xfd50, 0xfd51, 0xfd52, 0xfd53, 0xfd54, 0xfd55, 0xfd56, 0xfd57, 0xfd58, 0xfd59, 0xfd5a, 0xfd5b, 0xfd5c, 0xfd5d, 0xfd5e
};

void BM_collation_element_lookup_336(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 0, cps_336 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 1, cps_336 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 2, cps_336 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 3, cps_336 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 4, cps_336 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 5, cps_336 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 6, cps_336 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 7, cps_336 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 8, cps_336 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 9, cps_336 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 10, cps_336 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 11, cps_336 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 12, cps_336 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 13, cps_336 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 14, cps_336 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 15, cps_336 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 16, cps_336 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 17, cps_336 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 18, cps_336 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 19, cps_336 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 20, cps_336 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 21, cps_336 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 22, cps_336 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 23, cps_336 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 24, cps_336 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 25, cps_336 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 26, cps_336 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 27, cps_336 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 28, cps_336 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 29, cps_336 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 30, cps_336 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 31, cps_336 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 32, cps_336 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 33, cps_336 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 34, cps_336 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 35, cps_336 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 36, cps_336 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 37, cps_336 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 38, cps_336 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 39, cps_336 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 40, cps_336 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 41, cps_336 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 42, cps_336 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 43, cps_336 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 44, cps_336 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 45, cps_336 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 46, cps_336 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 47, cps_336 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 48, cps_336 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_336 + 49, cps_336 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_336);

uint32_t cps_337[] = {
0xfd5f, 0xfd60, 0xfd61, 0xfd62, 0xfd63, 0xfd64, 0xfd65, 0xfd66, 0xfd67, 0xfd68, 0xfd69, 0xfd6a, 0xfd6b, 0xfd6c, 0xfd6d, 0xfd6e, 0xfd6f, 0xfd70, 0xfd71, 0xfd72, 0xfd73, 0xfd74, 0xfd75, 0xfd76, 0xfd77, 0xfd78, 0xfd79, 0xfd7a, 0xfd7b, 0xfd7c, 0xfd7d, 0xfd7e, 0xfd7f, 0xfd80, 0xfd81, 0xfd82, 0xfd83, 0xfd84, 0xfd85, 0xfd86, 0xfd87, 0xfd88, 0xfd89, 0xfd8a, 0xfd8b, 0xfd8c, 0xfd8d, 0xfd8e, 0xfd8f, 0xfd92
};

void BM_collation_element_lookup_337(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 0, cps_337 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 1, cps_337 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 2, cps_337 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 3, cps_337 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 4, cps_337 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 5, cps_337 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 6, cps_337 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 7, cps_337 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 8, cps_337 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 9, cps_337 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 10, cps_337 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 11, cps_337 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 12, cps_337 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 13, cps_337 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 14, cps_337 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 15, cps_337 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 16, cps_337 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 17, cps_337 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 18, cps_337 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 19, cps_337 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 20, cps_337 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 21, cps_337 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 22, cps_337 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 23, cps_337 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 24, cps_337 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 25, cps_337 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 26, cps_337 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 27, cps_337 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 28, cps_337 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 29, cps_337 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 30, cps_337 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 31, cps_337 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 32, cps_337 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 33, cps_337 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 34, cps_337 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 35, cps_337 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 36, cps_337 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 37, cps_337 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 38, cps_337 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 39, cps_337 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 40, cps_337 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 41, cps_337 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 42, cps_337 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 43, cps_337 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 44, cps_337 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 45, cps_337 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 46, cps_337 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 47, cps_337 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 48, cps_337 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_337 + 49, cps_337 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_337);

uint32_t cps_338[] = {
0xfd93, 0xfd94, 0xfd95, 0xfd96, 0xfd97, 0xfd98, 0xfd99, 0xfd9a, 0xfd9b, 0xfd9c, 0xfd9d, 0xfd9e, 0xfd9f, 0xfda0, 0xfda1, 0xfda2, 0xfda3, 0xfda4, 0xfda5, 0xfda6, 0xfda7, 0xfda8, 0xfda9, 0xfdaa, 0xfdab, 0xfdac, 0xfdad, 0xfdae, 0xfdaf, 0xfdb0, 0xfdb1, 0xfdb2, 0xfdb3, 0xfdb4, 0xfdb5, 0xfdb6, 0xfdb7, 0xfdb8, 0xfdb9, 0xfdba, 0xfdbb, 0xfdbc, 0xfdbd, 0xfdbe, 0xfdbf, 0xfdc0, 0xfdc1, 0xfdc2, 0xfdc3, 0xfdc4
};

void BM_collation_element_lookup_338(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 0, cps_338 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 1, cps_338 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 2, cps_338 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 3, cps_338 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 4, cps_338 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 5, cps_338 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 6, cps_338 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 7, cps_338 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 8, cps_338 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 9, cps_338 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 10, cps_338 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 11, cps_338 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 12, cps_338 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 13, cps_338 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 14, cps_338 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 15, cps_338 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 16, cps_338 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 17, cps_338 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 18, cps_338 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 19, cps_338 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 20, cps_338 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 21, cps_338 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 22, cps_338 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 23, cps_338 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 24, cps_338 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 25, cps_338 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 26, cps_338 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 27, cps_338 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 28, cps_338 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 29, cps_338 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 30, cps_338 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 31, cps_338 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 32, cps_338 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 33, cps_338 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 34, cps_338 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 35, cps_338 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 36, cps_338 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 37, cps_338 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 38, cps_338 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 39, cps_338 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 40, cps_338 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 41, cps_338 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 42, cps_338 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 43, cps_338 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 44, cps_338 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 45, cps_338 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 46, cps_338 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 47, cps_338 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 48, cps_338 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_338 + 49, cps_338 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_338);

uint32_t cps_339[] = {
0xfdc5, 0xfdc6, 0xfdc7, 0xfdf0, 0xfdf1, 0xfdf2, 0xfdf3, 0xfdf4, 0xfdf5, 0xfdf6, 0xfdf7, 0xfdf8, 0xfdf9, 0xfdfa, 0xfdfb, 0xfdfc, 0xfdfd, 0xfe00, 0xfe01, 0xfe02, 0xfe03, 0xfe04, 0xfe05, 0xfe06, 0xfe07, 0xfe08, 0xfe09, 0xfe0a, 0xfe0b, 0xfe0c, 0xfe0d, 0xfe0e, 0xfe0f, 0xfe10, 0xfe11, 0xfe12, 0xfe13, 0xfe14, 0xfe15, 0xfe16, 0xfe17, 0xfe18, 0xfe19, 0xfe20, 0xfe21, 0xfe22, 0xfe23, 0xfe24, 0xfe25, 0xfe26
};

void BM_collation_element_lookup_339(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 0, cps_339 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 1, cps_339 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 2, cps_339 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 3, cps_339 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 4, cps_339 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 5, cps_339 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 6, cps_339 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 7, cps_339 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 8, cps_339 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 9, cps_339 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 10, cps_339 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 11, cps_339 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 12, cps_339 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 13, cps_339 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 14, cps_339 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 15, cps_339 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 16, cps_339 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 17, cps_339 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 18, cps_339 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 19, cps_339 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 20, cps_339 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 21, cps_339 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 22, cps_339 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 23, cps_339 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 24, cps_339 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 25, cps_339 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 26, cps_339 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 27, cps_339 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 28, cps_339 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 29, cps_339 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 30, cps_339 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 31, cps_339 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 32, cps_339 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 33, cps_339 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 34, cps_339 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 35, cps_339 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 36, cps_339 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 37, cps_339 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 38, cps_339 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 39, cps_339 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 40, cps_339 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 41, cps_339 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 42, cps_339 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 43, cps_339 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 44, cps_339 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 45, cps_339 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 46, cps_339 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 47, cps_339 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 48, cps_339 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_339 + 49, cps_339 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_339);

uint32_t cps_340[] = {
0xfe27, 0xfe28, 0xfe29, 0xfe2a, 0xfe2b, 0xfe2c, 0xfe2d, 0xfe2e, 0xfe2f, 0xfe30, 0xfe31, 0xfe32, 0xfe33, 0xfe34, 0xfe35, 0xfe36, 0xfe37, 0xfe38, 0xfe39, 0xfe3a, 0xfe3b, 0xfe3c, 0xfe3d, 0xfe3e, 0xfe3f, 0xfe40, 0xfe41, 0xfe42, 0xfe43, 0xfe44, 0xfe45, 0xfe46, 0xfe47, 0xfe48, 0xfe49, 0xfe4a, 0xfe4b, 0xfe4c, 0xfe4d, 0xfe4e, 0xfe4f, 0xfe50, 0xfe51, 0xfe52, 0xfe54, 0xfe55, 0xfe56, 0xfe57, 0xfe58, 0xfe59
};

void BM_collation_element_lookup_340(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 0, cps_340 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 1, cps_340 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 2, cps_340 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 3, cps_340 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 4, cps_340 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 5, cps_340 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 6, cps_340 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 7, cps_340 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 8, cps_340 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 9, cps_340 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 10, cps_340 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 11, cps_340 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 12, cps_340 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 13, cps_340 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 14, cps_340 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 15, cps_340 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 16, cps_340 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 17, cps_340 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 18, cps_340 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 19, cps_340 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 20, cps_340 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 21, cps_340 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 22, cps_340 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 23, cps_340 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 24, cps_340 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 25, cps_340 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 26, cps_340 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 27, cps_340 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 28, cps_340 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 29, cps_340 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 30, cps_340 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 31, cps_340 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 32, cps_340 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 33, cps_340 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 34, cps_340 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 35, cps_340 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 36, cps_340 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 37, cps_340 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 38, cps_340 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 39, cps_340 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 40, cps_340 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 41, cps_340 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 42, cps_340 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 43, cps_340 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 44, cps_340 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 45, cps_340 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 46, cps_340 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 47, cps_340 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 48, cps_340 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_340 + 49, cps_340 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_340);

uint32_t cps_341[] = {
0xfe5a, 0xfe5b, 0xfe5c, 0xfe5d, 0xfe5e, 0xfe5f, 0xfe60, 0xfe61, 0xfe62, 0xfe63, 0xfe64, 0xfe65, 0xfe66, 0xfe68, 0xfe69, 0xfe6a, 0xfe6b, 0xfe70, 0xfe71, 0xfe72, 0xfe73, 0xfe74, 0xfe76, 0xfe77, 0xfe78, 0xfe79, 0xfe7a, 0xfe7b, 0xfe7c, 0xfe7d, 0xfe7e, 0xfe7f, 0xfe80, 0xfe81, 0xfe82, 0xfe83, 0xfe84, 0xfe85, 0xfe86, 0xfe87, 0xfe88, 0xfe89, 0xfe8a, 0xfe8b, 0xfe8c, 0xfe8d, 0xfe8e, 0xfe8f, 0xfe90, 0xfe91
};

void BM_collation_element_lookup_341(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 0, cps_341 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 1, cps_341 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 2, cps_341 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 3, cps_341 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 4, cps_341 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 5, cps_341 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 6, cps_341 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 7, cps_341 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 8, cps_341 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 9, cps_341 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 10, cps_341 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 11, cps_341 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 12, cps_341 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 13, cps_341 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 14, cps_341 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 15, cps_341 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 16, cps_341 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 17, cps_341 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 18, cps_341 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 19, cps_341 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 20, cps_341 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 21, cps_341 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 22, cps_341 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 23, cps_341 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 24, cps_341 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 25, cps_341 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 26, cps_341 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 27, cps_341 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 28, cps_341 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 29, cps_341 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 30, cps_341 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 31, cps_341 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 32, cps_341 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 33, cps_341 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 34, cps_341 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 35, cps_341 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 36, cps_341 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 37, cps_341 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 38, cps_341 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 39, cps_341 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 40, cps_341 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 41, cps_341 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 42, cps_341 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 43, cps_341 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 44, cps_341 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 45, cps_341 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 46, cps_341 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 47, cps_341 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 48, cps_341 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_341 + 49, cps_341 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_341);

uint32_t cps_342[] = {
0xfe92, 0xfe93, 0xfe94, 0xfe95, 0xfe96, 0xfe97, 0xfe98, 0xfe99, 0xfe9a, 0xfe9b, 0xfe9c, 0xfe9d, 0xfe9e, 0xfe9f, 0xfea0, 0xfea1, 0xfea2, 0xfea3, 0xfea4, 0xfea5, 0xfea6, 0xfea7, 0xfea8, 0xfea9, 0xfeaa, 0xfeab, 0xfeac, 0xfead, 0xfeae, 0xfeaf, 0xfeb0, 0xfeb1, 0xfeb2, 0xfeb3, 0xfeb4, 0xfeb5, 0xfeb6, 0xfeb7, 0xfeb8, 0xfeb9, 0xfeba, 0xfebb, 0xfebc, 0xfebd, 0xfebe, 0xfebf, 0xfec0, 0xfec1, 0xfec2, 0xfec3
};

void BM_collation_element_lookup_342(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 0, cps_342 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 1, cps_342 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 2, cps_342 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 3, cps_342 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 4, cps_342 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 5, cps_342 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 6, cps_342 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 7, cps_342 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 8, cps_342 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 9, cps_342 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 10, cps_342 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 11, cps_342 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 12, cps_342 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 13, cps_342 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 14, cps_342 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 15, cps_342 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 16, cps_342 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 17, cps_342 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 18, cps_342 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 19, cps_342 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 20, cps_342 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 21, cps_342 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 22, cps_342 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 23, cps_342 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 24, cps_342 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 25, cps_342 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 26, cps_342 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 27, cps_342 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 28, cps_342 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 29, cps_342 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 30, cps_342 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 31, cps_342 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 32, cps_342 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 33, cps_342 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 34, cps_342 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 35, cps_342 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 36, cps_342 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 37, cps_342 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 38, cps_342 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 39, cps_342 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 40, cps_342 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 41, cps_342 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 42, cps_342 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 43, cps_342 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 44, cps_342 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 45, cps_342 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 46, cps_342 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 47, cps_342 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 48, cps_342 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_342 + 49, cps_342 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_342);

uint32_t cps_343[] = {
0xfec4, 0xfec5, 0xfec6, 0xfec7, 0xfec8, 0xfec9, 0xfeca, 0xfecb, 0xfecc, 0xfecd, 0xfece, 0xfecf, 0xfed0, 0xfed1, 0xfed2, 0xfed3, 0xfed4, 0xfed5, 0xfed6, 0xfed7, 0xfed8, 0xfed9, 0xfeda, 0xfedb, 0xfedc, 0xfedd, 0xfede, 0xfedf, 0xfee0, 0xfee1, 0xfee2, 0xfee3, 0xfee4, 0xfee5, 0xfee6, 0xfee7, 0xfee8, 0xfee9, 0xfeea, 0xfeeb, 0xfeec, 0xfeed, 0xfeee, 0xfeef, 0xfef0, 0xfef1, 0xfef2, 0xfef3, 0xfef4, 0xfef5
};

void BM_collation_element_lookup_343(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 0, cps_343 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 1, cps_343 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 2, cps_343 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 3, cps_343 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 4, cps_343 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 5, cps_343 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 6, cps_343 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 7, cps_343 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 8, cps_343 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 9, cps_343 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 10, cps_343 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 11, cps_343 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 12, cps_343 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 13, cps_343 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 14, cps_343 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 15, cps_343 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 16, cps_343 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 17, cps_343 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 18, cps_343 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 19, cps_343 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 20, cps_343 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 21, cps_343 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 22, cps_343 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 23, cps_343 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 24, cps_343 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 25, cps_343 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 26, cps_343 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 27, cps_343 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 28, cps_343 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 29, cps_343 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 30, cps_343 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 31, cps_343 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 32, cps_343 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 33, cps_343 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 34, cps_343 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 35, cps_343 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 36, cps_343 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 37, cps_343 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 38, cps_343 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 39, cps_343 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 40, cps_343 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 41, cps_343 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 42, cps_343 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 43, cps_343 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 44, cps_343 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 45, cps_343 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 46, cps_343 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 47, cps_343 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 48, cps_343 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_343 + 49, cps_343 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_343);

uint32_t cps_344[] = {
0xfef6, 0xfef7, 0xfef8, 0xfef9, 0xfefa, 0xfefb, 0xfefc, 0xfeff, 0xff01, 0xff02, 0xff03, 0xff04, 0xff05, 0xff06, 0xff07, 0xff08, 0xff09, 0xff0a, 0xff0b, 0xff0c, 0xff0d, 0xff0e, 0xff0f, 0xff10, 0xff11, 0xff12, 0xff13, 0xff14, 0xff15, 0xff16, 0xff17, 0xff18, 0xff19, 0xff1a, 0xff1b, 0xff1c, 0xff1d, 0xff1e, 0xff1f, 0xff20, 0xff21, 0xff22, 0xff23, 0xff24, 0xff25, 0xff26, 0xff27, 0xff28, 0xff29, 0xff2a
};

void BM_collation_element_lookup_344(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 0, cps_344 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 1, cps_344 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 2, cps_344 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 3, cps_344 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 4, cps_344 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 5, cps_344 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 6, cps_344 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 7, cps_344 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 8, cps_344 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 9, cps_344 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 10, cps_344 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 11, cps_344 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 12, cps_344 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 13, cps_344 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 14, cps_344 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 15, cps_344 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 16, cps_344 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 17, cps_344 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 18, cps_344 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 19, cps_344 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 20, cps_344 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 21, cps_344 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 22, cps_344 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 23, cps_344 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 24, cps_344 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 25, cps_344 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 26, cps_344 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 27, cps_344 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 28, cps_344 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 29, cps_344 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 30, cps_344 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 31, cps_344 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 32, cps_344 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 33, cps_344 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 34, cps_344 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 35, cps_344 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 36, cps_344 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 37, cps_344 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 38, cps_344 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 39, cps_344 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 40, cps_344 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 41, cps_344 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 42, cps_344 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 43, cps_344 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 44, cps_344 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 45, cps_344 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 46, cps_344 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 47, cps_344 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 48, cps_344 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_344 + 49, cps_344 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_344);

uint32_t cps_345[] = {
0xff2b, 0xff2c, 0xff2d, 0xff2e, 0xff2f, 0xff30, 0xff31, 0xff32, 0xff33, 0xff34, 0xff35, 0xff36, 0xff37, 0xff38, 0xff39, 0xff3a, 0xff3b, 0xff3c, 0xff3d, 0xff3e, 0xff3f, 0xff40, 0xff41, 0xff42, 0xff43, 0xff44, 0xff45, 0xff46, 0xff47, 0xff48, 0xff49, 0xff4a, 0xff4b, 0xff4c, 0xff4d, 0xff4e, 0xff4f, 0xff50, 0xff51, 0xff52, 0xff53, 0xff54, 0xff55, 0xff56, 0xff57, 0xff58, 0xff59, 0xff5a, 0xff5b, 0xff5c
};

void BM_collation_element_lookup_345(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 0, cps_345 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 1, cps_345 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 2, cps_345 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 3, cps_345 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 4, cps_345 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 5, cps_345 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 6, cps_345 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 7, cps_345 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 8, cps_345 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 9, cps_345 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 10, cps_345 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 11, cps_345 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 12, cps_345 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 13, cps_345 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 14, cps_345 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 15, cps_345 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 16, cps_345 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 17, cps_345 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 18, cps_345 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 19, cps_345 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 20, cps_345 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 21, cps_345 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 22, cps_345 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 23, cps_345 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 24, cps_345 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 25, cps_345 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 26, cps_345 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 27, cps_345 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 28, cps_345 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 29, cps_345 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 30, cps_345 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 31, cps_345 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 32, cps_345 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 33, cps_345 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 34, cps_345 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 35, cps_345 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 36, cps_345 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 37, cps_345 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 38, cps_345 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 39, cps_345 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 40, cps_345 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 41, cps_345 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 42, cps_345 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 43, cps_345 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 44, cps_345 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 45, cps_345 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 46, cps_345 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 47, cps_345 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 48, cps_345 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_345 + 49, cps_345 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_345);

uint32_t cps_346[] = {
0xff5d, 0xff5e, 0xff5f, 0xff60, 0xff61, 0xff62, 0xff63, 0xff64, 0xff65, 0xff66, 0xff67, 0xff68, 0xff69, 0xff6a, 0xff6b, 0xff6c, 0xff6d, 0xff6e, 0xff6f, 0xff70, 0xff71, 0xff72, 0xff73, 0xff74, 0xff75, 0xff76, 0xff77, 0xff78, 0xff79, 0xff7a, 0xff7b, 0xff7c, 0xff7d, 0xff7e, 0xff7f, 0xff80, 0xff81, 0xff82, 0xff83, 0xff84, 0xff85, 0xff86, 0xff87, 0xff88, 0xff89, 0xff8a, 0xff8b, 0xff8c, 0xff8d, 0xff8e
};

void BM_collation_element_lookup_346(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 0, cps_346 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 1, cps_346 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 2, cps_346 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 3, cps_346 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 4, cps_346 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 5, cps_346 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 6, cps_346 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 7, cps_346 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 8, cps_346 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 9, cps_346 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 10, cps_346 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 11, cps_346 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 12, cps_346 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 13, cps_346 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 14, cps_346 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 15, cps_346 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 16, cps_346 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 17, cps_346 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 18, cps_346 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 19, cps_346 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 20, cps_346 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 21, cps_346 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 22, cps_346 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 23, cps_346 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 24, cps_346 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 25, cps_346 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 26, cps_346 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 27, cps_346 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 28, cps_346 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 29, cps_346 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 30, cps_346 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 31, cps_346 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 32, cps_346 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 33, cps_346 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 34, cps_346 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 35, cps_346 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 36, cps_346 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 37, cps_346 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 38, cps_346 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 39, cps_346 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 40, cps_346 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 41, cps_346 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 42, cps_346 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 43, cps_346 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 44, cps_346 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 45, cps_346 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 46, cps_346 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 47, cps_346 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 48, cps_346 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_346 + 49, cps_346 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_346);

uint32_t cps_347[] = {
0xff8f, 0xff90, 0xff91, 0xff92, 0xff93, 0xff94, 0xff95, 0xff96, 0xff97, 0xff98, 0xff99, 0xff9a, 0xff9b, 0xff9c, 0xff9d, 0xff9e, 0xff9f, 0xffa0, 0xffa1, 0xffa2, 0xffa3, 0xffa4, 0xffa5, 0xffa6, 0xffa7, 0xffa8, 0xffa9, 0xffaa, 0xffab, 0xffac, 0xffad, 0xffae, 0xffaf, 0xffb0, 0xffb1, 0xffb2, 0xffb3, 0xffb4, 0xffb5, 0xffb6, 0xffb7, 0xffb8, 0xffb9, 0xffba, 0xffbb, 0xffbc, 0xffbd, 0xffbe, 0xffc2, 0xffc3
};

void BM_collation_element_lookup_347(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 0, cps_347 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 1, cps_347 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 2, cps_347 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 3, cps_347 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 4, cps_347 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 5, cps_347 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 6, cps_347 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 7, cps_347 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 8, cps_347 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 9, cps_347 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 10, cps_347 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 11, cps_347 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 12, cps_347 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 13, cps_347 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 14, cps_347 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 15, cps_347 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 16, cps_347 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 17, cps_347 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 18, cps_347 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 19, cps_347 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 20, cps_347 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 21, cps_347 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 22, cps_347 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 23, cps_347 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 24, cps_347 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 25, cps_347 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 26, cps_347 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 27, cps_347 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 28, cps_347 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 29, cps_347 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 30, cps_347 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 31, cps_347 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 32, cps_347 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 33, cps_347 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 34, cps_347 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 35, cps_347 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 36, cps_347 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 37, cps_347 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 38, cps_347 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 39, cps_347 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 40, cps_347 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 41, cps_347 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 42, cps_347 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 43, cps_347 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 44, cps_347 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 45, cps_347 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 46, cps_347 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 47, cps_347 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 48, cps_347 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_347 + 49, cps_347 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_347);

uint32_t cps_348[] = {
0xffc4, 0xffc5, 0xffc6, 0xffc7, 0xffca, 0xffcb, 0xffcc, 0xffcd, 0xffce, 0xffcf, 0xffd2, 0xffd3, 0xffd4, 0xffd5, 0xffd6, 0xffd7, 0xffda, 0xffdb, 0xffdc, 0xffe0, 0xffe1, 0xffe2, 0xffe3, 0xffe4, 0xffe5, 0xffe6, 0xffe8, 0xffe9, 0xffea, 0xffeb, 0xffec, 0xffed, 0xffee, 0xfff9, 0xfffa, 0xfffb, 0xfffc, 0xfffd, 0xfffe, 0xffff, 0x10000, 0x10001, 0x10002, 0x10003, 0x10004, 0x10005, 0x10006, 0x10007, 0x10008, 0x10009
};

void BM_collation_element_lookup_348(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 0, cps_348 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 1, cps_348 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 2, cps_348 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 3, cps_348 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 4, cps_348 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 5, cps_348 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 6, cps_348 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 7, cps_348 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 8, cps_348 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 9, cps_348 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 10, cps_348 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 11, cps_348 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 12, cps_348 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 13, cps_348 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 14, cps_348 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 15, cps_348 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 16, cps_348 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 17, cps_348 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 18, cps_348 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 19, cps_348 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 20, cps_348 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 21, cps_348 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 22, cps_348 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 23, cps_348 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 24, cps_348 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 25, cps_348 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 26, cps_348 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 27, cps_348 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 28, cps_348 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 29, cps_348 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 30, cps_348 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 31, cps_348 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 32, cps_348 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 33, cps_348 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 34, cps_348 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 35, cps_348 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 36, cps_348 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 37, cps_348 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 38, cps_348 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 39, cps_348 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 40, cps_348 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 41, cps_348 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 42, cps_348 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 43, cps_348 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 44, cps_348 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 45, cps_348 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 46, cps_348 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 47, cps_348 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 48, cps_348 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_348 + 49, cps_348 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_348);

uint32_t cps_349[] = {
0x1000a, 0x1000b, 0x1000d, 0x1000e, 0x1000f, 0x10010, 0x10011, 0x10012, 0x10013, 0x10014, 0x10015, 0x10016, 0x10017, 0x10018, 0x10019, 0x1001a, 0x1001b, 0x1001c, 0x1001d, 0x1001e, 0x1001f, 0x10020, 0x10021, 0x10022, 0x10023, 0x10024, 0x10025, 0x10026, 0x10028, 0x10029, 0x1002a, 0x1002b, 0x1002c, 0x1002d, 0x1002e, 0x1002f, 0x10030, 0x10031, 0x10032, 0x10033, 0x10034, 0x10035, 0x10036, 0x10037, 0x10038, 0x10039, 0x1003a, 0x1003c, 0x1003d, 0x1003f
};

void BM_collation_element_lookup_349(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 0, cps_349 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 1, cps_349 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 2, cps_349 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 3, cps_349 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 4, cps_349 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 5, cps_349 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 6, cps_349 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 7, cps_349 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 8, cps_349 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 9, cps_349 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 10, cps_349 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 11, cps_349 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 12, cps_349 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 13, cps_349 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 14, cps_349 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 15, cps_349 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 16, cps_349 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 17, cps_349 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 18, cps_349 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 19, cps_349 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 20, cps_349 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 21, cps_349 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 22, cps_349 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 23, cps_349 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 24, cps_349 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 25, cps_349 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 26, cps_349 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 27, cps_349 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 28, cps_349 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 29, cps_349 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 30, cps_349 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 31, cps_349 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 32, cps_349 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 33, cps_349 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 34, cps_349 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 35, cps_349 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 36, cps_349 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 37, cps_349 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 38, cps_349 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 39, cps_349 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 40, cps_349 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 41, cps_349 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 42, cps_349 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 43, cps_349 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 44, cps_349 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 45, cps_349 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 46, cps_349 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 47, cps_349 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 48, cps_349 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_349 + 49, cps_349 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_349);

uint32_t cps_350[] = {
0x10040, 0x10041, 0x10042, 0x10043, 0x10044, 0x10045, 0x10046, 0x10047, 0x10048, 0x10049, 0x1004a, 0x1004b, 0x1004c, 0x1004d, 0x10050, 0x10051, 0x10052, 0x10053, 0x10054, 0x10055, 0x10056, 0x10057, 0x10058, 0x10059, 0x1005a, 0x1005b, 0x1005c, 0x1005d, 0x10080, 0x10081, 0x10082, 0x10083, 0x10084, 0x10085, 0x10086, 0x10087, 0x10088, 0x10089, 0x1008a, 0x1008b, 0x1008c, 0x1008d, 0x1008e, 0x1008f, 0x10090, 0x10091, 0x10092, 0x10093, 0x10094, 0x10095
};

void BM_collation_element_lookup_350(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 0, cps_350 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 1, cps_350 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 2, cps_350 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 3, cps_350 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 4, cps_350 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 5, cps_350 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 6, cps_350 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 7, cps_350 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 8, cps_350 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 9, cps_350 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 10, cps_350 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 11, cps_350 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 12, cps_350 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 13, cps_350 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 14, cps_350 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 15, cps_350 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 16, cps_350 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 17, cps_350 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 18, cps_350 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 19, cps_350 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 20, cps_350 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 21, cps_350 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 22, cps_350 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 23, cps_350 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 24, cps_350 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 25, cps_350 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 26, cps_350 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 27, cps_350 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 28, cps_350 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 29, cps_350 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 30, cps_350 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 31, cps_350 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 32, cps_350 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 33, cps_350 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 34, cps_350 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 35, cps_350 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 36, cps_350 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 37, cps_350 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 38, cps_350 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 39, cps_350 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 40, cps_350 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 41, cps_350 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 42, cps_350 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 43, cps_350 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 44, cps_350 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 45, cps_350 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 46, cps_350 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 47, cps_350 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 48, cps_350 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_350 + 49, cps_350 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_350);

uint32_t cps_351[] = {
0x10096, 0x10097, 0x10098, 0x10099, 0x1009a, 0x1009b, 0x1009c, 0x1009d, 0x1009e, 0x1009f, 0x100a0, 0x100a1, 0x100a2, 0x100a3, 0x100a4, 0x100a5, 0x100a6, 0x100a7, 0x100a8, 0x100a9, 0x100aa, 0x100ab, 0x100ac, 0x100ad, 0x100ae, 0x100af, 0x100b0, 0x100b1, 0x100b2, 0x100b3, 0x100b4, 0x100b5, 0x100b6, 0x100b7, 0x100b8, 0x100b9, 0x100ba, 0x100bb, 0x100bc, 0x100bd, 0x100be, 0x100bf, 0x100c0, 0x100c1, 0x100c2, 0x100c3, 0x100c4, 0x100c5, 0x100c6, 0x100c7
};

void BM_collation_element_lookup_351(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 0, cps_351 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 1, cps_351 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 2, cps_351 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 3, cps_351 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 4, cps_351 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 5, cps_351 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 6, cps_351 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 7, cps_351 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 8, cps_351 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 9, cps_351 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 10, cps_351 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 11, cps_351 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 12, cps_351 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 13, cps_351 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 14, cps_351 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 15, cps_351 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 16, cps_351 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 17, cps_351 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 18, cps_351 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 19, cps_351 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 20, cps_351 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 21, cps_351 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 22, cps_351 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 23, cps_351 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 24, cps_351 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 25, cps_351 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 26, cps_351 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 27, cps_351 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 28, cps_351 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 29, cps_351 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 30, cps_351 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 31, cps_351 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 32, cps_351 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 33, cps_351 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 34, cps_351 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 35, cps_351 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 36, cps_351 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 37, cps_351 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 38, cps_351 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 39, cps_351 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 40, cps_351 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 41, cps_351 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 42, cps_351 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 43, cps_351 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 44, cps_351 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 45, cps_351 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 46, cps_351 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 47, cps_351 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 48, cps_351 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_351 + 49, cps_351 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_351);

uint32_t cps_352[] = {
0x100c8, 0x100c9, 0x100ca, 0x100cb, 0x100cc, 0x100cd, 0x100ce, 0x100cf, 0x100d0, 0x100d1, 0x100d2, 0x100d3, 0x100d4, 0x100d5, 0x100d6, 0x100d7, 0x100d8, 0x100d9, 0x100da, 0x100db, 0x100dc, 0x100dd, 0x100de, 0x100df, 0x100e0, 0x100e1, 0x100e2, 0x100e3, 0x100e4, 0x100e5, 0x100e6, 0x100e7, 0x100e8, 0x100e9, 0x100ea, 0x100eb, 0x100ec, 0x100ed, 0x100ee, 0x100ef, 0x100f0, 0x100f1, 0x100f2, 0x100f3, 0x100f4, 0x100f5, 0x100f6, 0x100f7, 0x100f8, 0x100f9
};

void BM_collation_element_lookup_352(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 0, cps_352 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 1, cps_352 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 2, cps_352 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 3, cps_352 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 4, cps_352 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 5, cps_352 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 6, cps_352 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 7, cps_352 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 8, cps_352 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 9, cps_352 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 10, cps_352 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 11, cps_352 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 12, cps_352 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 13, cps_352 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 14, cps_352 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 15, cps_352 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 16, cps_352 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 17, cps_352 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 18, cps_352 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 19, cps_352 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 20, cps_352 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 21, cps_352 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 22, cps_352 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 23, cps_352 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 24, cps_352 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 25, cps_352 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 26, cps_352 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 27, cps_352 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 28, cps_352 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 29, cps_352 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 30, cps_352 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 31, cps_352 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 32, cps_352 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 33, cps_352 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 34, cps_352 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 35, cps_352 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 36, cps_352 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 37, cps_352 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 38, cps_352 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 39, cps_352 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 40, cps_352 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 41, cps_352 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 42, cps_352 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 43, cps_352 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 44, cps_352 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 45, cps_352 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 46, cps_352 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 47, cps_352 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 48, cps_352 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_352 + 49, cps_352 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_352);

uint32_t cps_353[] = {
0x100fa, 0x10100, 0x10101, 0x10102, 0x10107, 0x10108, 0x10109, 0x1010a, 0x1010b, 0x1010c, 0x1010d, 0x1010e, 0x1010f, 0x10110, 0x10111, 0x10112, 0x10113, 0x10114, 0x10115, 0x10116, 0x10117, 0x10118, 0x10119, 0x1011a, 0x1011b, 0x1011c, 0x1011d, 0x1011e, 0x1011f, 0x10120, 0x10121, 0x10122, 0x10123, 0x10124, 0x10125, 0x10126, 0x10127, 0x10128, 0x10129, 0x1012a, 0x1012b, 0x1012c, 0x1012d, 0x1012e, 0x1012f, 0x10130, 0x10131, 0x10132, 0x10133, 0x10137
};

void BM_collation_element_lookup_353(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 0, cps_353 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 1, cps_353 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 2, cps_353 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 3, cps_353 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 4, cps_353 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 5, cps_353 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 6, cps_353 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 7, cps_353 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 8, cps_353 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 9, cps_353 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 10, cps_353 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 11, cps_353 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 12, cps_353 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 13, cps_353 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 14, cps_353 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 15, cps_353 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 16, cps_353 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 17, cps_353 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 18, cps_353 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 19, cps_353 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 20, cps_353 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 21, cps_353 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 22, cps_353 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 23, cps_353 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 24, cps_353 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 25, cps_353 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 26, cps_353 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 27, cps_353 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 28, cps_353 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 29, cps_353 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 30, cps_353 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 31, cps_353 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 32, cps_353 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 33, cps_353 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 34, cps_353 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 35, cps_353 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 36, cps_353 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 37, cps_353 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 38, cps_353 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 39, cps_353 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 40, cps_353 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 41, cps_353 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 42, cps_353 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 43, cps_353 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 44, cps_353 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 45, cps_353 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 46, cps_353 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 47, cps_353 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 48, cps_353 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_353 + 49, cps_353 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_353);

uint32_t cps_354[] = {
0x10138, 0x10139, 0x1013a, 0x1013b, 0x1013c, 0x1013d, 0x1013e, 0x1013f, 0x10140, 0x10141, 0x10142, 0x10143, 0x10144, 0x10145, 0x10146, 0x10147, 0x10148, 0x10149, 0x1014a, 0x1014b, 0x1014c, 0x1014d, 0x1014e, 0x1014f, 0x10150, 0x10151, 0x10152, 0x10153, 0x10154, 0x10155, 0x10156, 0x10157, 0x10158, 0x10159, 0x1015a, 0x1015b, 0x1015c, 0x1015d, 0x1015e, 0x1015f, 0x10160, 0x10161, 0x10162, 0x10163, 0x10164, 0x10165, 0x10166, 0x10167, 0x10168, 0x10169
};

void BM_collation_element_lookup_354(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 0, cps_354 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 1, cps_354 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 2, cps_354 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 3, cps_354 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 4, cps_354 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 5, cps_354 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 6, cps_354 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 7, cps_354 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 8, cps_354 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 9, cps_354 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 10, cps_354 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 11, cps_354 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 12, cps_354 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 13, cps_354 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 14, cps_354 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 15, cps_354 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 16, cps_354 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 17, cps_354 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 18, cps_354 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 19, cps_354 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 20, cps_354 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 21, cps_354 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 22, cps_354 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 23, cps_354 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 24, cps_354 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 25, cps_354 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 26, cps_354 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 27, cps_354 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 28, cps_354 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 29, cps_354 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 30, cps_354 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 31, cps_354 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 32, cps_354 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 33, cps_354 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 34, cps_354 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 35, cps_354 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 36, cps_354 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 37, cps_354 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 38, cps_354 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 39, cps_354 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 40, cps_354 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 41, cps_354 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 42, cps_354 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 43, cps_354 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 44, cps_354 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 45, cps_354 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 46, cps_354 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 47, cps_354 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 48, cps_354 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_354 + 49, cps_354 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_354);

uint32_t cps_355[] = {
0x1016a, 0x1016b, 0x1016c, 0x1016d, 0x1016e, 0x1016f, 0x10170, 0x10171, 0x10172, 0x10173, 0x10174, 0x10175, 0x10176, 0x10177, 0x10178, 0x10179, 0x1017a, 0x1017b, 0x1017c, 0x1017d, 0x1017e, 0x1017f, 0x10180, 0x10181, 0x10182, 0x10183, 0x10184, 0x10185, 0x10186, 0x10187, 0x10188, 0x10189, 0x1018a, 0x1018b, 0x1018c, 0x1018d, 0x1018e, 0x10190, 0x10191, 0x10192, 0x10193, 0x10194, 0x10195, 0x10196, 0x10197, 0x10198, 0x10199, 0x1019a, 0x1019b, 0x101a0
};

void BM_collation_element_lookup_355(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 0, cps_355 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 1, cps_355 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 2, cps_355 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 3, cps_355 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 4, cps_355 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 5, cps_355 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 6, cps_355 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 7, cps_355 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 8, cps_355 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 9, cps_355 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 10, cps_355 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 11, cps_355 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 12, cps_355 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 13, cps_355 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 14, cps_355 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 15, cps_355 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 16, cps_355 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 17, cps_355 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 18, cps_355 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 19, cps_355 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 20, cps_355 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 21, cps_355 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 22, cps_355 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 23, cps_355 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 24, cps_355 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 25, cps_355 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 26, cps_355 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 27, cps_355 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 28, cps_355 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 29, cps_355 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 30, cps_355 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 31, cps_355 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 32, cps_355 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 33, cps_355 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 34, cps_355 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 35, cps_355 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 36, cps_355 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 37, cps_355 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 38, cps_355 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 39, cps_355 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 40, cps_355 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 41, cps_355 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 42, cps_355 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 43, cps_355 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 44, cps_355 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 45, cps_355 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 46, cps_355 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 47, cps_355 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 48, cps_355 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_355 + 49, cps_355 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_355);

uint32_t cps_356[] = {
0x101d0, 0x101d1, 0x101d2, 0x101d3, 0x101d4, 0x101d5, 0x101d6, 0x101d7, 0x101d8, 0x101d9, 0x101da, 0x101db, 0x101dc, 0x101dd, 0x101de, 0x101df, 0x101e0, 0x101e1, 0x101e2, 0x101e3, 0x101e4, 0x101e5, 0x101e6, 0x101e7, 0x101e8, 0x101e9, 0x101ea, 0x101eb, 0x101ec, 0x101ed, 0x101ee, 0x101ef, 0x101f0, 0x101f1, 0x101f2, 0x101f3, 0x101f4, 0x101f5, 0x101f6, 0x101f7, 0x101f8, 0x101f9, 0x101fa, 0x101fb, 0x101fc, 0x101fd, 0x10280, 0x10281, 0x10282, 0x10283
};

void BM_collation_element_lookup_356(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 0, cps_356 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 1, cps_356 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 2, cps_356 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 3, cps_356 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 4, cps_356 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 5, cps_356 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 6, cps_356 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 7, cps_356 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 8, cps_356 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 9, cps_356 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 10, cps_356 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 11, cps_356 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 12, cps_356 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 13, cps_356 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 14, cps_356 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 15, cps_356 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 16, cps_356 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 17, cps_356 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 18, cps_356 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 19, cps_356 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 20, cps_356 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 21, cps_356 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 22, cps_356 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 23, cps_356 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 24, cps_356 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 25, cps_356 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 26, cps_356 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 27, cps_356 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 28, cps_356 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 29, cps_356 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 30, cps_356 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 31, cps_356 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 32, cps_356 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 33, cps_356 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 34, cps_356 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 35, cps_356 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 36, cps_356 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 37, cps_356 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 38, cps_356 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 39, cps_356 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 40, cps_356 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 41, cps_356 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 42, cps_356 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 43, cps_356 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 44, cps_356 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 45, cps_356 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 46, cps_356 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 47, cps_356 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 48, cps_356 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_356 + 49, cps_356 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_356);

uint32_t cps_357[] = {
0x10284, 0x10285, 0x10286, 0x10287, 0x10288, 0x10289, 0x1028a, 0x1028b, 0x1028c, 0x1028d, 0x1028e, 0x1028f, 0x10290, 0x10291, 0x10292, 0x10293, 0x10294, 0x10295, 0x10296, 0x10297, 0x10298, 0x10299, 0x1029a, 0x1029b, 0x1029c, 0x102a0, 0x102a1, 0x102a2, 0x102a3, 0x102a4, 0x102a5, 0x102a6, 0x102a7, 0x102a8, 0x102a9, 0x102aa, 0x102ab, 0x102ac, 0x102ad, 0x102ae, 0x102af, 0x102b0, 0x102b1, 0x102b2, 0x102b3, 0x102b4, 0x102b5, 0x102b6, 0x102b7, 0x102b8
};

void BM_collation_element_lookup_357(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 0, cps_357 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 1, cps_357 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 2, cps_357 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 3, cps_357 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 4, cps_357 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 5, cps_357 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 6, cps_357 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 7, cps_357 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 8, cps_357 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 9, cps_357 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 10, cps_357 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 11, cps_357 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 12, cps_357 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 13, cps_357 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 14, cps_357 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 15, cps_357 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 16, cps_357 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 17, cps_357 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 18, cps_357 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 19, cps_357 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 20, cps_357 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 21, cps_357 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 22, cps_357 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 23, cps_357 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 24, cps_357 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 25, cps_357 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 26, cps_357 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 27, cps_357 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 28, cps_357 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 29, cps_357 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 30, cps_357 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 31, cps_357 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 32, cps_357 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 33, cps_357 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 34, cps_357 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 35, cps_357 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 36, cps_357 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 37, cps_357 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 38, cps_357 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 39, cps_357 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 40, cps_357 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 41, cps_357 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 42, cps_357 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 43, cps_357 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 44, cps_357 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 45, cps_357 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 46, cps_357 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 47, cps_357 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 48, cps_357 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_357 + 49, cps_357 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_357);

uint32_t cps_358[] = {
0x102b9, 0x102ba, 0x102bb, 0x102bc, 0x102bd, 0x102be, 0x102bf, 0x102c0, 0x102c1, 0x102c2, 0x102c3, 0x102c4, 0x102c5, 0x102c6, 0x102c7, 0x102c8, 0x102c9, 0x102ca, 0x102cb, 0x102cc, 0x102cd, 0x102ce, 0x102cf, 0x102d0, 0x102e0, 0x102e1, 0x102e2, 0x102e3, 0x102e4, 0x102e5, 0x102e6, 0x102e7, 0x102e8, 0x102e9, 0x102ea, 0x102eb, 0x102ec, 0x102ed, 0x102ee, 0x102ef, 0x102f0, 0x102f1, 0x102f2, 0x102f3, 0x102f4, 0x102f5, 0x102f6, 0x102f7, 0x102f8, 0x102f9
};

void BM_collation_element_lookup_358(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 0, cps_358 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 1, cps_358 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 2, cps_358 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 3, cps_358 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 4, cps_358 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 5, cps_358 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 6, cps_358 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 7, cps_358 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 8, cps_358 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 9, cps_358 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 10, cps_358 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 11, cps_358 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 12, cps_358 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 13, cps_358 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 14, cps_358 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 15, cps_358 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 16, cps_358 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 17, cps_358 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 18, cps_358 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 19, cps_358 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 20, cps_358 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 21, cps_358 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 22, cps_358 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 23, cps_358 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 24, cps_358 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 25, cps_358 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 26, cps_358 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 27, cps_358 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 28, cps_358 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 29, cps_358 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 30, cps_358 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 31, cps_358 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 32, cps_358 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 33, cps_358 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 34, cps_358 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 35, cps_358 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 36, cps_358 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 37, cps_358 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 38, cps_358 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 39, cps_358 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 40, cps_358 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 41, cps_358 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 42, cps_358 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 43, cps_358 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 44, cps_358 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 45, cps_358 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 46, cps_358 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 47, cps_358 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 48, cps_358 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_358 + 49, cps_358 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_358);

uint32_t cps_359[] = {
0x102fa, 0x102fb, 0x10300, 0x10301, 0x10302, 0x10303, 0x10304, 0x10305, 0x10306, 0x10307, 0x10308, 0x10309, 0x1030a, 0x1030b, 0x1030c, 0x1030d, 0x1030e, 0x1030f, 0x10310, 0x10311, 0x10312, 0x10313, 0x10314, 0x10315, 0x10316, 0x10317, 0x10318, 0x10319, 0x1031a, 0x1031b, 0x1031c, 0x1031d, 0x1031e, 0x1031f, 0x10320, 0x10321, 0x10322, 0x10323, 0x1032d, 0x1032e, 0x1032f, 0x10330, 0x10331, 0x10332, 0x10333, 0x10334, 0x10335, 0x10336, 0x10337, 0x10338
};

void BM_collation_element_lookup_359(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 0, cps_359 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 1, cps_359 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 2, cps_359 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 3, cps_359 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 4, cps_359 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 5, cps_359 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 6, cps_359 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 7, cps_359 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 8, cps_359 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 9, cps_359 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 10, cps_359 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 11, cps_359 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 12, cps_359 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 13, cps_359 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 14, cps_359 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 15, cps_359 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 16, cps_359 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 17, cps_359 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 18, cps_359 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 19, cps_359 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 20, cps_359 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 21, cps_359 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 22, cps_359 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 23, cps_359 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 24, cps_359 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 25, cps_359 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 26, cps_359 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 27, cps_359 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 28, cps_359 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 29, cps_359 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 30, cps_359 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 31, cps_359 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 32, cps_359 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 33, cps_359 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 34, cps_359 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 35, cps_359 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 36, cps_359 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 37, cps_359 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 38, cps_359 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 39, cps_359 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 40, cps_359 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 41, cps_359 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 42, cps_359 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 43, cps_359 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 44, cps_359 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 45, cps_359 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 46, cps_359 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 47, cps_359 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 48, cps_359 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_359 + 49, cps_359 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_359);

uint32_t cps_360[] = {
0x10339, 0x1033a, 0x1033b, 0x1033c, 0x1033d, 0x1033e, 0x1033f, 0x10340, 0x10341, 0x10342, 0x10343, 0x10344, 0x10345, 0x10346, 0x10347, 0x10348, 0x10349, 0x1034a, 0x10350, 0x10351, 0x10352, 0x10353, 0x10354, 0x10355, 0x10356, 0x10357, 0x10358, 0x10359, 0x1035a, 0x1035b, 0x1035c, 0x1035d, 0x1035e, 0x1035f, 0x10360, 0x10361, 0x10362, 0x10363, 0x10364, 0x10365, 0x10366, 0x10367, 0x10368, 0x10369, 0x1036a, 0x1036b, 0x1036c, 0x1036d, 0x1036e, 0x1036f
};

void BM_collation_element_lookup_360(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 0, cps_360 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 1, cps_360 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 2, cps_360 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 3, cps_360 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 4, cps_360 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 5, cps_360 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 6, cps_360 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 7, cps_360 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 8, cps_360 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 9, cps_360 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 10, cps_360 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 11, cps_360 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 12, cps_360 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 13, cps_360 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 14, cps_360 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 15, cps_360 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 16, cps_360 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 17, cps_360 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 18, cps_360 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 19, cps_360 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 20, cps_360 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 21, cps_360 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 22, cps_360 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 23, cps_360 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 24, cps_360 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 25, cps_360 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 26, cps_360 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 27, cps_360 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 28, cps_360 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 29, cps_360 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 30, cps_360 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 31, cps_360 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 32, cps_360 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 33, cps_360 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 34, cps_360 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 35, cps_360 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 36, cps_360 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 37, cps_360 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 38, cps_360 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 39, cps_360 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 40, cps_360 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 41, cps_360 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 42, cps_360 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 43, cps_360 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 44, cps_360 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 45, cps_360 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 46, cps_360 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 47, cps_360 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 48, cps_360 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_360 + 49, cps_360 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_360);

uint32_t cps_361[] = {
0x10370, 0x10371, 0x10372, 0x10373, 0x10374, 0x10375, 0x10376, 0x10377, 0x10378, 0x10379, 0x1037a, 0x10380, 0x10381, 0x10382, 0x10383, 0x10384, 0x10385, 0x10386, 0x10387, 0x10388, 0x10389, 0x1038a, 0x1038b, 0x1038c, 0x1038d, 0x1038e, 0x1038f, 0x10390, 0x10391, 0x10392, 0x10393, 0x10394, 0x10395, 0x10396, 0x10397, 0x10398, 0x10399, 0x1039a, 0x1039b, 0x1039c, 0x1039d, 0x1039f, 0x103a0, 0x103a1, 0x103a2, 0x103a3, 0x103a4, 0x103a5, 0x103a6, 0x103a7
};

void BM_collation_element_lookup_361(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 0, cps_361 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 1, cps_361 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 2, cps_361 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 3, cps_361 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 4, cps_361 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 5, cps_361 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 6, cps_361 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 7, cps_361 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 8, cps_361 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 9, cps_361 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 10, cps_361 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 11, cps_361 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 12, cps_361 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 13, cps_361 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 14, cps_361 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 15, cps_361 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 16, cps_361 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 17, cps_361 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 18, cps_361 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 19, cps_361 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 20, cps_361 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 21, cps_361 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 22, cps_361 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 23, cps_361 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 24, cps_361 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 25, cps_361 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 26, cps_361 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 27, cps_361 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 28, cps_361 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 29, cps_361 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 30, cps_361 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 31, cps_361 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 32, cps_361 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 33, cps_361 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 34, cps_361 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 35, cps_361 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 36, cps_361 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 37, cps_361 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 38, cps_361 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 39, cps_361 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 40, cps_361 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 41, cps_361 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 42, cps_361 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 43, cps_361 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 44, cps_361 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 45, cps_361 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 46, cps_361 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 47, cps_361 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 48, cps_361 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_361 + 49, cps_361 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_361);

uint32_t cps_362[] = {
0x103a8, 0x103a9, 0x103aa, 0x103ab, 0x103ac, 0x103ad, 0x103ae, 0x103af, 0x103b0, 0x103b1, 0x103b2, 0x103b3, 0x103b4, 0x103b5, 0x103b6, 0x103b7, 0x103b8, 0x103b9, 0x103ba, 0x103bb, 0x103bc, 0x103bd, 0x103be, 0x103bf, 0x103c0, 0x103c1, 0x103c2, 0x103c3, 0x103c8, 0x103c9, 0x103ca, 0x103cb, 0x103cc, 0x103cd, 0x103ce, 0x103cf, 0x103d0, 0x103d1, 0x103d2, 0x103d3, 0x103d4, 0x103d5, 0x10400, 0x10401, 0x10402, 0x10403, 0x10404, 0x10405, 0x10406, 0x10407
};

void BM_collation_element_lookup_362(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 0, cps_362 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 1, cps_362 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 2, cps_362 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 3, cps_362 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 4, cps_362 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 5, cps_362 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 6, cps_362 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 7, cps_362 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 8, cps_362 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 9, cps_362 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 10, cps_362 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 11, cps_362 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 12, cps_362 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 13, cps_362 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 14, cps_362 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 15, cps_362 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 16, cps_362 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 17, cps_362 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 18, cps_362 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 19, cps_362 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 20, cps_362 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 21, cps_362 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 22, cps_362 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 23, cps_362 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 24, cps_362 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 25, cps_362 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 26, cps_362 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 27, cps_362 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 28, cps_362 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 29, cps_362 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 30, cps_362 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 31, cps_362 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 32, cps_362 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 33, cps_362 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 34, cps_362 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 35, cps_362 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 36, cps_362 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 37, cps_362 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 38, cps_362 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 39, cps_362 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 40, cps_362 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 41, cps_362 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 42, cps_362 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 43, cps_362 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 44, cps_362 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 45, cps_362 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 46, cps_362 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 47, cps_362 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 48, cps_362 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_362 + 49, cps_362 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_362);

uint32_t cps_363[] = {
0x10408, 0x10409, 0x1040a, 0x1040b, 0x1040c, 0x1040d, 0x1040e, 0x1040f, 0x10410, 0x10411, 0x10412, 0x10413, 0x10414, 0x10415, 0x10416, 0x10417, 0x10418, 0x10419, 0x1041a, 0x1041b, 0x1041c, 0x1041d, 0x1041e, 0x1041f, 0x10420, 0x10421, 0x10422, 0x10423, 0x10424, 0x10425, 0x10426, 0x10427, 0x10428, 0x10429, 0x1042a, 0x1042b, 0x1042c, 0x1042d, 0x1042e, 0x1042f, 0x10430, 0x10431, 0x10432, 0x10433, 0x10434, 0x10435, 0x10436, 0x10437, 0x10438, 0x10439
};

void BM_collation_element_lookup_363(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 0, cps_363 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 1, cps_363 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 2, cps_363 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 3, cps_363 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 4, cps_363 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 5, cps_363 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 6, cps_363 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 7, cps_363 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 8, cps_363 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 9, cps_363 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 10, cps_363 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 11, cps_363 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 12, cps_363 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 13, cps_363 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 14, cps_363 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 15, cps_363 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 16, cps_363 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 17, cps_363 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 18, cps_363 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 19, cps_363 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 20, cps_363 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 21, cps_363 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 22, cps_363 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 23, cps_363 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 24, cps_363 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 25, cps_363 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 26, cps_363 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 27, cps_363 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 28, cps_363 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 29, cps_363 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 30, cps_363 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 31, cps_363 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 32, cps_363 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 33, cps_363 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 34, cps_363 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 35, cps_363 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 36, cps_363 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 37, cps_363 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 38, cps_363 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 39, cps_363 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 40, cps_363 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 41, cps_363 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 42, cps_363 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 43, cps_363 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 44, cps_363 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 45, cps_363 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 46, cps_363 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 47, cps_363 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 48, cps_363 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_363 + 49, cps_363 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_363);

uint32_t cps_364[] = {
0x1043a, 0x1043b, 0x1043c, 0x1043d, 0x1043e, 0x1043f, 0x10440, 0x10441, 0x10442, 0x10443, 0x10444, 0x10445, 0x10446, 0x10447, 0x10448, 0x10449, 0x1044a, 0x1044b, 0x1044c, 0x1044d, 0x1044e, 0x1044f, 0x10450, 0x10451, 0x10452, 0x10453, 0x10454, 0x10455, 0x10456, 0x10457, 0x10458, 0x10459, 0x1045a, 0x1045b, 0x1045c, 0x1045d, 0x1045e, 0x1045f, 0x10460, 0x10461, 0x10462, 0x10463, 0x10464, 0x10465, 0x10466, 0x10467, 0x10468, 0x10469, 0x1046a, 0x1046b
};

void BM_collation_element_lookup_364(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 0, cps_364 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 1, cps_364 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 2, cps_364 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 3, cps_364 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 4, cps_364 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 5, cps_364 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 6, cps_364 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 7, cps_364 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 8, cps_364 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 9, cps_364 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 10, cps_364 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 11, cps_364 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 12, cps_364 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 13, cps_364 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 14, cps_364 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 15, cps_364 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 16, cps_364 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 17, cps_364 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 18, cps_364 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 19, cps_364 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 20, cps_364 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 21, cps_364 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 22, cps_364 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 23, cps_364 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 24, cps_364 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 25, cps_364 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 26, cps_364 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 27, cps_364 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 28, cps_364 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 29, cps_364 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 30, cps_364 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 31, cps_364 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 32, cps_364 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 33, cps_364 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 34, cps_364 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 35, cps_364 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 36, cps_364 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 37, cps_364 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 38, cps_364 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 39, cps_364 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 40, cps_364 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 41, cps_364 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 42, cps_364 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 43, cps_364 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 44, cps_364 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 45, cps_364 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 46, cps_364 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 47, cps_364 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 48, cps_364 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_364 + 49, cps_364 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_364);

uint32_t cps_365[] = {
0x1046c, 0x1046d, 0x1046e, 0x1046f, 0x10470, 0x10471, 0x10472, 0x10473, 0x10474, 0x10475, 0x10476, 0x10477, 0x10478, 0x10479, 0x1047a, 0x1047b, 0x1047c, 0x1047d, 0x1047e, 0x1047f, 0x10480, 0x10481, 0x10482, 0x10483, 0x10484, 0x10485, 0x10486, 0x10487, 0x10488, 0x10489, 0x1048a, 0x1048b, 0x1048c, 0x1048d, 0x1048e, 0x1048f, 0x10490, 0x10491, 0x10492, 0x10493, 0x10494, 0x10495, 0x10496, 0x10497, 0x10498, 0x10499, 0x1049a, 0x1049b, 0x1049c, 0x1049d
};

void BM_collation_element_lookup_365(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 0, cps_365 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 1, cps_365 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 2, cps_365 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 3, cps_365 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 4, cps_365 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 5, cps_365 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 6, cps_365 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 7, cps_365 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 8, cps_365 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 9, cps_365 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 10, cps_365 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 11, cps_365 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 12, cps_365 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 13, cps_365 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 14, cps_365 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 15, cps_365 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 16, cps_365 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 17, cps_365 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 18, cps_365 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 19, cps_365 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 20, cps_365 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 21, cps_365 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 22, cps_365 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 23, cps_365 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 24, cps_365 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 25, cps_365 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 26, cps_365 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 27, cps_365 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 28, cps_365 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 29, cps_365 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 30, cps_365 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 31, cps_365 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 32, cps_365 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 33, cps_365 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 34, cps_365 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 35, cps_365 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 36, cps_365 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 37, cps_365 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 38, cps_365 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 39, cps_365 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 40, cps_365 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 41, cps_365 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 42, cps_365 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 43, cps_365 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 44, cps_365 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 45, cps_365 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 46, cps_365 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 47, cps_365 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 48, cps_365 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_365 + 49, cps_365 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_365);

uint32_t cps_366[] = {
0x104a0, 0x104a1, 0x104a2, 0x104a3, 0x104a4, 0x104a5, 0x104a6, 0x104a7, 0x104a8, 0x104a9, 0x104b0, 0x104b1, 0x104b2, 0x104b3, 0x104b4, 0x104b5, 0x104b6, 0x104b7, 0x104b8, 0x104b9, 0x104ba, 0x104bb, 0x104bc, 0x104bd, 0x104be, 0x104bf, 0x104c0, 0x104c1, 0x104c2, 0x104c3, 0x104c4, 0x104c5, 0x104c6, 0x104c7, 0x104c8, 0x104c9, 0x104ca, 0x104cb, 0x104cc, 0x104cd, 0x104ce, 0x104cf, 0x104d0, 0x104d1, 0x104d2, 0x104d3, 0x104d8, 0x104d9, 0x104da, 0x104db
};

void BM_collation_element_lookup_366(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 0, cps_366 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 1, cps_366 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 2, cps_366 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 3, cps_366 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 4, cps_366 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 5, cps_366 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 6, cps_366 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 7, cps_366 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 8, cps_366 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 9, cps_366 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 10, cps_366 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 11, cps_366 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 12, cps_366 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 13, cps_366 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 14, cps_366 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 15, cps_366 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 16, cps_366 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 17, cps_366 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 18, cps_366 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 19, cps_366 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 20, cps_366 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 21, cps_366 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 22, cps_366 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 23, cps_366 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 24, cps_366 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 25, cps_366 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 26, cps_366 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 27, cps_366 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 28, cps_366 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 29, cps_366 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 30, cps_366 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 31, cps_366 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 32, cps_366 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 33, cps_366 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 34, cps_366 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 35, cps_366 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 36, cps_366 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 37, cps_366 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 38, cps_366 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 39, cps_366 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 40, cps_366 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 41, cps_366 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 42, cps_366 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 43, cps_366 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 44, cps_366 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 45, cps_366 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 46, cps_366 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 47, cps_366 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 48, cps_366 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_366 + 49, cps_366 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_366);

uint32_t cps_367[] = {
0x104dc, 0x104dd, 0x104de, 0x104df, 0x104e0, 0x104e1, 0x104e2, 0x104e3, 0x104e4, 0x104e5, 0x104e6, 0x104e7, 0x104e8, 0x104e9, 0x104ea, 0x104eb, 0x104ec, 0x104ed, 0x104ee, 0x104ef, 0x104f0, 0x104f1, 0x104f2, 0x104f3, 0x104f4, 0x104f5, 0x104f6, 0x104f7, 0x104f8, 0x104f9, 0x104fa, 0x104fb, 0x10500, 0x10501, 0x10502, 0x10503, 0x10504, 0x10505, 0x10506, 0x10507, 0x10508, 0x10509, 0x1050a, 0x1050b, 0x1050c, 0x1050d, 0x1050e, 0x1050f, 0x10510, 0x10511
};

void BM_collation_element_lookup_367(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 0, cps_367 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 1, cps_367 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 2, cps_367 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 3, cps_367 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 4, cps_367 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 5, cps_367 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 6, cps_367 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 7, cps_367 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 8, cps_367 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 9, cps_367 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 10, cps_367 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 11, cps_367 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 12, cps_367 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 13, cps_367 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 14, cps_367 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 15, cps_367 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 16, cps_367 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 17, cps_367 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 18, cps_367 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 19, cps_367 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 20, cps_367 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 21, cps_367 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 22, cps_367 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 23, cps_367 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 24, cps_367 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 25, cps_367 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 26, cps_367 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 27, cps_367 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 28, cps_367 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 29, cps_367 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 30, cps_367 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 31, cps_367 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 32, cps_367 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 33, cps_367 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 34, cps_367 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 35, cps_367 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 36, cps_367 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 37, cps_367 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 38, cps_367 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 39, cps_367 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 40, cps_367 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 41, cps_367 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 42, cps_367 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 43, cps_367 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 44, cps_367 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 45, cps_367 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 46, cps_367 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 47, cps_367 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 48, cps_367 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_367 + 49, cps_367 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_367);

uint32_t cps_368[] = {
0x10512, 0x10513, 0x10514, 0x10515, 0x10516, 0x10517, 0x10518, 0x10519, 0x1051a, 0x1051b, 0x1051c, 0x1051d, 0x1051e, 0x1051f, 0x10520, 0x10521, 0x10522, 0x10523, 0x10524, 0x10525, 0x10526, 0x10527, 0x10530, 0x10531, 0x10532, 0x10533, 0x10534, 0x10535, 0x10536, 0x10537, 0x10538, 0x10539, 0x1053a, 0x1053b, 0x1053c, 0x1053d, 0x1053e, 0x1053f, 0x10540, 0x10541, 0x10542, 0x10543, 0x10544, 0x10545, 0x10546, 0x10547, 0x10548, 0x10549, 0x1054a, 0x1054b
};

void BM_collation_element_lookup_368(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 0, cps_368 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 1, cps_368 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 2, cps_368 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 3, cps_368 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 4, cps_368 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 5, cps_368 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 6, cps_368 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 7, cps_368 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 8, cps_368 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 9, cps_368 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 10, cps_368 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 11, cps_368 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 12, cps_368 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 13, cps_368 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 14, cps_368 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 15, cps_368 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 16, cps_368 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 17, cps_368 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 18, cps_368 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 19, cps_368 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 20, cps_368 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 21, cps_368 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 22, cps_368 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 23, cps_368 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 24, cps_368 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 25, cps_368 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 26, cps_368 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 27, cps_368 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 28, cps_368 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 29, cps_368 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 30, cps_368 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 31, cps_368 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 32, cps_368 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 33, cps_368 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 34, cps_368 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 35, cps_368 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 36, cps_368 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 37, cps_368 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 38, cps_368 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 39, cps_368 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 40, cps_368 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 41, cps_368 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 42, cps_368 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 43, cps_368 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 44, cps_368 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 45, cps_368 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 46, cps_368 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 47, cps_368 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 48, cps_368 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_368 + 49, cps_368 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_368);

uint32_t cps_369[] = {
0x1054c, 0x1054d, 0x1054e, 0x1054f, 0x10550, 0x10551, 0x10552, 0x10553, 0x10554, 0x10555, 0x10556, 0x10557, 0x10558, 0x10559, 0x1055a, 0x1055b, 0x1055c, 0x1055d, 0x1055e, 0x1055f, 0x10560, 0x10561, 0x10562, 0x10563, 0x1056f, 0x10600, 0x10601, 0x10602, 0x10603, 0x10604, 0x10605, 0x10606, 0x10607, 0x10608, 0x10609, 0x1060a, 0x1060b, 0x1060c, 0x1060d, 0x1060e, 0x1060f, 0x10610, 0x10611, 0x10612, 0x10613, 0x10614, 0x10615, 0x10616, 0x10617, 0x10618
};

void BM_collation_element_lookup_369(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 0, cps_369 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 1, cps_369 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 2, cps_369 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 3, cps_369 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 4, cps_369 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 5, cps_369 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 6, cps_369 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 7, cps_369 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 8, cps_369 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 9, cps_369 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 10, cps_369 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 11, cps_369 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 12, cps_369 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 13, cps_369 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 14, cps_369 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 15, cps_369 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 16, cps_369 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 17, cps_369 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 18, cps_369 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 19, cps_369 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 20, cps_369 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 21, cps_369 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 22, cps_369 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 23, cps_369 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 24, cps_369 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 25, cps_369 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 26, cps_369 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 27, cps_369 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 28, cps_369 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 29, cps_369 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 30, cps_369 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 31, cps_369 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 32, cps_369 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 33, cps_369 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 34, cps_369 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 35, cps_369 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 36, cps_369 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 37, cps_369 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 38, cps_369 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 39, cps_369 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 40, cps_369 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 41, cps_369 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 42, cps_369 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 43, cps_369 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 44, cps_369 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 45, cps_369 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 46, cps_369 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 47, cps_369 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 48, cps_369 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_369 + 49, cps_369 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_369);

uint32_t cps_370[] = {
0x10619, 0x1061a, 0x1061b, 0x1061c, 0x1061d, 0x1061e, 0x1061f, 0x10620, 0x10621, 0x10622, 0x10623, 0x10624, 0x10625, 0x10626, 0x10627, 0x10628, 0x10629, 0x1062a, 0x1062b, 0x1062c, 0x1062d, 0x1062e, 0x1062f, 0x10630, 0x10631, 0x10632, 0x10633, 0x10634, 0x10635, 0x10636, 0x10637, 0x10638, 0x10639, 0x1063a, 0x1063b, 0x1063c, 0x1063d, 0x1063e, 0x1063f, 0x10640, 0x10641, 0x10642, 0x10643, 0x10644, 0x10645, 0x10646, 0x10647, 0x10648, 0x10649, 0x1064a
};

void BM_collation_element_lookup_370(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 0, cps_370 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 1, cps_370 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 2, cps_370 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 3, cps_370 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 4, cps_370 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 5, cps_370 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 6, cps_370 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 7, cps_370 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 8, cps_370 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 9, cps_370 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 10, cps_370 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 11, cps_370 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 12, cps_370 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 13, cps_370 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 14, cps_370 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 15, cps_370 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 16, cps_370 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 17, cps_370 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 18, cps_370 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 19, cps_370 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 20, cps_370 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 21, cps_370 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 22, cps_370 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 23, cps_370 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 24, cps_370 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 25, cps_370 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 26, cps_370 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 27, cps_370 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 28, cps_370 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 29, cps_370 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 30, cps_370 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 31, cps_370 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 32, cps_370 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 33, cps_370 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 34, cps_370 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 35, cps_370 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 36, cps_370 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 37, cps_370 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 38, cps_370 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 39, cps_370 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 40, cps_370 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 41, cps_370 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 42, cps_370 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 43, cps_370 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 44, cps_370 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 45, cps_370 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 46, cps_370 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 47, cps_370 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 48, cps_370 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_370 + 49, cps_370 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_370);

uint32_t cps_371[] = {
0x1064b, 0x1064c, 0x1064d, 0x1064e, 0x1064f, 0x10650, 0x10651, 0x10652, 0x10653, 0x10654, 0x10655, 0x10656, 0x10657, 0x10658, 0x10659, 0x1065a, 0x1065b, 0x1065c, 0x1065d, 0x1065e, 0x1065f, 0x10660, 0x10661, 0x10662, 0x10663, 0x10664, 0x10665, 0x10666, 0x10667, 0x10668, 0x10669, 0x1066a, 0x1066b, 0x1066c, 0x1066d, 0x1066e, 0x1066f, 0x10670, 0x10671, 0x10672, 0x10673, 0x10674, 0x10675, 0x10676, 0x10677, 0x10678, 0x10679, 0x1067a, 0x1067b, 0x1067c
};

void BM_collation_element_lookup_371(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 0, cps_371 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 1, cps_371 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 2, cps_371 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 3, cps_371 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 4, cps_371 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 5, cps_371 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 6, cps_371 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 7, cps_371 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 8, cps_371 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 9, cps_371 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 10, cps_371 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 11, cps_371 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 12, cps_371 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 13, cps_371 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 14, cps_371 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 15, cps_371 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 16, cps_371 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 17, cps_371 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 18, cps_371 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 19, cps_371 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 20, cps_371 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 21, cps_371 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 22, cps_371 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 23, cps_371 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 24, cps_371 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 25, cps_371 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 26, cps_371 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 27, cps_371 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 28, cps_371 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 29, cps_371 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 30, cps_371 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 31, cps_371 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 32, cps_371 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 33, cps_371 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 34, cps_371 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 35, cps_371 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 36, cps_371 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 37, cps_371 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 38, cps_371 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 39, cps_371 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 40, cps_371 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 41, cps_371 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 42, cps_371 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 43, cps_371 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 44, cps_371 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 45, cps_371 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 46, cps_371 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 47, cps_371 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 48, cps_371 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_371 + 49, cps_371 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_371);

uint32_t cps_372[] = {
0x1067d, 0x1067e, 0x1067f, 0x10680, 0x10681, 0x10682, 0x10683, 0x10684, 0x10685, 0x10686, 0x10687, 0x10688, 0x10689, 0x1068a, 0x1068b, 0x1068c, 0x1068d, 0x1068e, 0x1068f, 0x10690, 0x10691, 0x10692, 0x10693, 0x10694, 0x10695, 0x10696, 0x10697, 0x10698, 0x10699, 0x1069a, 0x1069b, 0x1069c, 0x1069d, 0x1069e, 0x1069f, 0x106a0, 0x106a1, 0x106a2, 0x106a3, 0x106a4, 0x106a5, 0x106a6, 0x106a7, 0x106a8, 0x106a9, 0x106aa, 0x106ab, 0x106ac, 0x106ad, 0x106ae
};

void BM_collation_element_lookup_372(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 0, cps_372 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 1, cps_372 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 2, cps_372 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 3, cps_372 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 4, cps_372 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 5, cps_372 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 6, cps_372 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 7, cps_372 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 8, cps_372 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 9, cps_372 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 10, cps_372 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 11, cps_372 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 12, cps_372 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 13, cps_372 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 14, cps_372 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 15, cps_372 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 16, cps_372 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 17, cps_372 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 18, cps_372 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 19, cps_372 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 20, cps_372 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 21, cps_372 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 22, cps_372 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 23, cps_372 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 24, cps_372 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 25, cps_372 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 26, cps_372 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 27, cps_372 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 28, cps_372 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 29, cps_372 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 30, cps_372 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 31, cps_372 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 32, cps_372 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 33, cps_372 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 34, cps_372 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 35, cps_372 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 36, cps_372 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 37, cps_372 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 38, cps_372 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 39, cps_372 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 40, cps_372 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 41, cps_372 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 42, cps_372 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 43, cps_372 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 44, cps_372 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 45, cps_372 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 46, cps_372 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 47, cps_372 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 48, cps_372 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_372 + 49, cps_372 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_372);

uint32_t cps_373[] = {
0x106af, 0x106b0, 0x106b1, 0x106b2, 0x106b3, 0x106b4, 0x106b5, 0x106b6, 0x106b7, 0x106b8, 0x106b9, 0x106ba, 0x106bb, 0x106bc, 0x106bd, 0x106be, 0x106bf, 0x106c0, 0x106c1, 0x106c2, 0x106c3, 0x106c4, 0x106c5, 0x106c6, 0x106c7, 0x106c8, 0x106c9, 0x106ca, 0x106cb, 0x106cc, 0x106cd, 0x106ce, 0x106cf, 0x106d0, 0x106d1, 0x106d2, 0x106d3, 0x106d4, 0x106d5, 0x106d6, 0x106d7, 0x106d8, 0x106d9, 0x106da, 0x106db, 0x106dc, 0x106dd, 0x106de, 0x106df, 0x106e0
};

void BM_collation_element_lookup_373(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 0, cps_373 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 1, cps_373 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 2, cps_373 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 3, cps_373 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 4, cps_373 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 5, cps_373 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 6, cps_373 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 7, cps_373 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 8, cps_373 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 9, cps_373 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 10, cps_373 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 11, cps_373 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 12, cps_373 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 13, cps_373 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 14, cps_373 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 15, cps_373 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 16, cps_373 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 17, cps_373 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 18, cps_373 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 19, cps_373 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 20, cps_373 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 21, cps_373 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 22, cps_373 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 23, cps_373 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 24, cps_373 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 25, cps_373 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 26, cps_373 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 27, cps_373 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 28, cps_373 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 29, cps_373 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 30, cps_373 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 31, cps_373 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 32, cps_373 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 33, cps_373 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 34, cps_373 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 35, cps_373 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 36, cps_373 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 37, cps_373 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 38, cps_373 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 39, cps_373 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 40, cps_373 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 41, cps_373 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 42, cps_373 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 43, cps_373 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 44, cps_373 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 45, cps_373 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 46, cps_373 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 47, cps_373 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 48, cps_373 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_373 + 49, cps_373 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_373);

uint32_t cps_374[] = {
0x106e1, 0x106e2, 0x106e3, 0x106e4, 0x106e5, 0x106e6, 0x106e7, 0x106e8, 0x106e9, 0x106ea, 0x106eb, 0x106ec, 0x106ed, 0x106ee, 0x106ef, 0x106f0, 0x106f1, 0x106f2, 0x106f3, 0x106f4, 0x106f5, 0x106f6, 0x106f7, 0x106f8, 0x106f9, 0x106fa, 0x106fb, 0x106fc, 0x106fd, 0x106fe, 0x106ff, 0x10700, 0x10701, 0x10702, 0x10703, 0x10704, 0x10705, 0x10706, 0x10707, 0x10708, 0x10709, 0x1070a, 0x1070b, 0x1070c, 0x1070d, 0x1070e, 0x1070f, 0x10710, 0x10711, 0x10712
};

void BM_collation_element_lookup_374(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 0, cps_374 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 1, cps_374 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 2, cps_374 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 3, cps_374 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 4, cps_374 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 5, cps_374 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 6, cps_374 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 7, cps_374 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 8, cps_374 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 9, cps_374 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 10, cps_374 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 11, cps_374 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 12, cps_374 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 13, cps_374 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 14, cps_374 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 15, cps_374 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 16, cps_374 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 17, cps_374 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 18, cps_374 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 19, cps_374 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 20, cps_374 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 21, cps_374 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 22, cps_374 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 23, cps_374 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 24, cps_374 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 25, cps_374 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 26, cps_374 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 27, cps_374 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 28, cps_374 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 29, cps_374 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 30, cps_374 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 31, cps_374 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 32, cps_374 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 33, cps_374 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 34, cps_374 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 35, cps_374 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 36, cps_374 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 37, cps_374 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 38, cps_374 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 39, cps_374 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 40, cps_374 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 41, cps_374 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 42, cps_374 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 43, cps_374 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 44, cps_374 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 45, cps_374 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 46, cps_374 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 47, cps_374 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 48, cps_374 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_374 + 49, cps_374 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_374);

uint32_t cps_375[] = {
0x10713, 0x10714, 0x10715, 0x10716, 0x10717, 0x10718, 0x10719, 0x1071a, 0x1071b, 0x1071c, 0x1071d, 0x1071e, 0x1071f, 0x10720, 0x10721, 0x10722, 0x10723, 0x10724, 0x10725, 0x10726, 0x10727, 0x10728, 0x10729, 0x1072a, 0x1072b, 0x1072c, 0x1072d, 0x1072e, 0x1072f, 0x10730, 0x10731, 0x10732, 0x10733, 0x10734, 0x10735, 0x10736, 0x10740, 0x10741, 0x10742, 0x10743, 0x10744, 0x10745, 0x10746, 0x10747, 0x10748, 0x10749, 0x1074a, 0x1074b, 0x1074c, 0x1074d
};

void BM_collation_element_lookup_375(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 0, cps_375 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 1, cps_375 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 2, cps_375 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 3, cps_375 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 4, cps_375 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 5, cps_375 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 6, cps_375 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 7, cps_375 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 8, cps_375 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 9, cps_375 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 10, cps_375 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 11, cps_375 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 12, cps_375 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 13, cps_375 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 14, cps_375 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 15, cps_375 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 16, cps_375 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 17, cps_375 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 18, cps_375 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 19, cps_375 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 20, cps_375 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 21, cps_375 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 22, cps_375 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 23, cps_375 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 24, cps_375 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 25, cps_375 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 26, cps_375 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 27, cps_375 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 28, cps_375 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 29, cps_375 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 30, cps_375 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 31, cps_375 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 32, cps_375 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 33, cps_375 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 34, cps_375 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 35, cps_375 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 36, cps_375 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 37, cps_375 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 38, cps_375 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 39, cps_375 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 40, cps_375 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 41, cps_375 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 42, cps_375 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 43, cps_375 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 44, cps_375 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 45, cps_375 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 46, cps_375 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 47, cps_375 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 48, cps_375 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_375 + 49, cps_375 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_375);

uint32_t cps_376[] = {
0x1074e, 0x1074f, 0x10750, 0x10751, 0x10752, 0x10753, 0x10754, 0x10755, 0x10760, 0x10761, 0x10762, 0x10763, 0x10764, 0x10765, 0x10766, 0x10767, 0x10800, 0x10801, 0x10802, 0x10803, 0x10804, 0x10805, 0x10808, 0x1080a, 0x1080b, 0x1080c, 0x1080d, 0x1080e, 0x1080f, 0x10810, 0x10811, 0x10812, 0x10813, 0x10814, 0x10815, 0x10816, 0x10817, 0x10818, 0x10819, 0x1081a, 0x1081b, 0x1081c, 0x1081d, 0x1081e, 0x1081f, 0x10820, 0x10821, 0x10822, 0x10823, 0x10824
};

void BM_collation_element_lookup_376(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 0, cps_376 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 1, cps_376 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 2, cps_376 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 3, cps_376 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 4, cps_376 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 5, cps_376 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 6, cps_376 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 7, cps_376 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 8, cps_376 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 9, cps_376 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 10, cps_376 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 11, cps_376 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 12, cps_376 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 13, cps_376 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 14, cps_376 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 15, cps_376 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 16, cps_376 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 17, cps_376 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 18, cps_376 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 19, cps_376 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 20, cps_376 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 21, cps_376 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 22, cps_376 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 23, cps_376 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 24, cps_376 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 25, cps_376 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 26, cps_376 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 27, cps_376 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 28, cps_376 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 29, cps_376 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 30, cps_376 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 31, cps_376 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 32, cps_376 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 33, cps_376 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 34, cps_376 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 35, cps_376 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 36, cps_376 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 37, cps_376 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 38, cps_376 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 39, cps_376 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 40, cps_376 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 41, cps_376 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 42, cps_376 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 43, cps_376 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 44, cps_376 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 45, cps_376 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 46, cps_376 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 47, cps_376 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 48, cps_376 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_376 + 49, cps_376 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_376);

uint32_t cps_377[] = {
0x10825, 0x10826, 0x10827, 0x10828, 0x10829, 0x1082a, 0x1082b, 0x1082c, 0x1082d, 0x1082e, 0x1082f, 0x10830, 0x10831, 0x10832, 0x10833, 0x10834, 0x10835, 0x10837, 0x10838, 0x1083c, 0x1083f, 0x10840, 0x10841, 0x10842, 0x10843, 0x10844, 0x10845, 0x10846, 0x10847, 0x10848, 0x10849, 0x1084a, 0x1084b, 0x1084c, 0x1084d, 0x1084e, 0x1084f, 0x10850, 0x10851, 0x10852, 0x10853, 0x10854, 0x10855, 0x10857, 0x10858, 0x10859, 0x1085a, 0x1085b, 0x1085c, 0x1085d
};

void BM_collation_element_lookup_377(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 0, cps_377 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 1, cps_377 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 2, cps_377 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 3, cps_377 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 4, cps_377 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 5, cps_377 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 6, cps_377 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 7, cps_377 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 8, cps_377 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 9, cps_377 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 10, cps_377 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 11, cps_377 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 12, cps_377 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 13, cps_377 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 14, cps_377 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 15, cps_377 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 16, cps_377 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 17, cps_377 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 18, cps_377 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 19, cps_377 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 20, cps_377 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 21, cps_377 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 22, cps_377 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 23, cps_377 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 24, cps_377 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 25, cps_377 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 26, cps_377 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 27, cps_377 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 28, cps_377 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 29, cps_377 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 30, cps_377 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 31, cps_377 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 32, cps_377 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 33, cps_377 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 34, cps_377 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 35, cps_377 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 36, cps_377 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 37, cps_377 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 38, cps_377 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 39, cps_377 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 40, cps_377 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 41, cps_377 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 42, cps_377 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 43, cps_377 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 44, cps_377 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 45, cps_377 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 46, cps_377 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 47, cps_377 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 48, cps_377 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_377 + 49, cps_377 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_377);

uint32_t cps_378[] = {
0x1085e, 0x1085f, 0x10860, 0x10861, 0x10862, 0x10863, 0x10864, 0x10865, 0x10866, 0x10867, 0x10868, 0x10869, 0x1086a, 0x1086b, 0x1086c, 0x1086d, 0x1086e, 0x1086f, 0x10870, 0x10871, 0x10872, 0x10873, 0x10874, 0x10875, 0x10876, 0x10877, 0x10878, 0x10879, 0x1087a, 0x1087b, 0x1087c, 0x1087d, 0x1087e, 0x1087f, 0x10880, 0x10881, 0x10882, 0x10883, 0x10884, 0x10885, 0x10886, 0x10887, 0x10888, 0x10889, 0x1088a, 0x1088b, 0x1088c, 0x1088d, 0x1088e, 0x1088f
};

void BM_collation_element_lookup_378(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 0, cps_378 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 1, cps_378 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 2, cps_378 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 3, cps_378 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 4, cps_378 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 5, cps_378 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 6, cps_378 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 7, cps_378 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 8, cps_378 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 9, cps_378 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 10, cps_378 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 11, cps_378 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 12, cps_378 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 13, cps_378 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 14, cps_378 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 15, cps_378 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 16, cps_378 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 17, cps_378 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 18, cps_378 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 19, cps_378 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 20, cps_378 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 21, cps_378 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 22, cps_378 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 23, cps_378 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 24, cps_378 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 25, cps_378 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 26, cps_378 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 27, cps_378 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 28, cps_378 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 29, cps_378 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 30, cps_378 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 31, cps_378 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 32, cps_378 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 33, cps_378 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 34, cps_378 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 35, cps_378 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 36, cps_378 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 37, cps_378 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 38, cps_378 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 39, cps_378 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 40, cps_378 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 41, cps_378 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 42, cps_378 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 43, cps_378 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 44, cps_378 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 45, cps_378 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 46, cps_378 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 47, cps_378 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 48, cps_378 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_378 + 49, cps_378 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_378);

uint32_t cps_379[] = {
0x10890, 0x10891, 0x10892, 0x10893, 0x10894, 0x10895, 0x10896, 0x10897, 0x10898, 0x10899, 0x1089a, 0x1089b, 0x1089c, 0x1089d, 0x1089e, 0x108a7, 0x108a8, 0x108a9, 0x108aa, 0x108ab, 0x108ac, 0x108ad, 0x108ae, 0x108af, 0x108e0, 0x108e1, 0x108e2, 0x108e3, 0x108e4, 0x108e5, 0x108e6, 0x108e7, 0x108e8, 0x108e9, 0x108ea, 0x108eb, 0x108ec, 0x108ed, 0x108ee, 0x108ef, 0x108f0, 0x108f1, 0x108f2, 0x108f4, 0x108f5, 0x108fb, 0x108fc, 0x108fd, 0x108fe, 0x108ff
};

void BM_collation_element_lookup_379(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 0, cps_379 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 1, cps_379 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 2, cps_379 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 3, cps_379 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 4, cps_379 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 5, cps_379 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 6, cps_379 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 7, cps_379 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 8, cps_379 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 9, cps_379 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 10, cps_379 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 11, cps_379 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 12, cps_379 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 13, cps_379 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 14, cps_379 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 15, cps_379 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 16, cps_379 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 17, cps_379 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 18, cps_379 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 19, cps_379 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 20, cps_379 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 21, cps_379 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 22, cps_379 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 23, cps_379 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 24, cps_379 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 25, cps_379 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 26, cps_379 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 27, cps_379 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 28, cps_379 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 29, cps_379 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 30, cps_379 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 31, cps_379 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 32, cps_379 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 33, cps_379 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 34, cps_379 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 35, cps_379 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 36, cps_379 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 37, cps_379 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 38, cps_379 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 39, cps_379 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 40, cps_379 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 41, cps_379 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 42, cps_379 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 43, cps_379 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 44, cps_379 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 45, cps_379 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 46, cps_379 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 47, cps_379 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 48, cps_379 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_379 + 49, cps_379 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_379);

uint32_t cps_380[] = {
0x10900, 0x10901, 0x10902, 0x10903, 0x10904, 0x10905, 0x10906, 0x10907, 0x10908, 0x10909, 0x1090a, 0x1090b, 0x1090c, 0x1090d, 0x1090e, 0x1090f, 0x10910, 0x10911, 0x10912, 0x10913, 0x10914, 0x10915, 0x10916, 0x10917, 0x10918, 0x10919, 0x1091a, 0x1091b, 0x1091f, 0x10920, 0x10921, 0x10922, 0x10923, 0x10924, 0x10925, 0x10926, 0x10927, 0x10928, 0x10929, 0x1092a, 0x1092b, 0x1092c, 0x1092d, 0x1092e, 0x1092f, 0x10930, 0x10931, 0x10932, 0x10933, 0x10934
};

void BM_collation_element_lookup_380(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 0, cps_380 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 1, cps_380 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 2, cps_380 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 3, cps_380 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 4, cps_380 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 5, cps_380 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 6, cps_380 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 7, cps_380 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 8, cps_380 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 9, cps_380 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 10, cps_380 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 11, cps_380 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 12, cps_380 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 13, cps_380 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 14, cps_380 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 15, cps_380 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 16, cps_380 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 17, cps_380 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 18, cps_380 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 19, cps_380 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 20, cps_380 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 21, cps_380 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 22, cps_380 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 23, cps_380 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 24, cps_380 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 25, cps_380 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 26, cps_380 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 27, cps_380 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 28, cps_380 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 29, cps_380 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 30, cps_380 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 31, cps_380 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 32, cps_380 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 33, cps_380 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 34, cps_380 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 35, cps_380 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 36, cps_380 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 37, cps_380 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 38, cps_380 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 39, cps_380 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 40, cps_380 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 41, cps_380 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 42, cps_380 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 43, cps_380 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 44, cps_380 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 45, cps_380 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 46, cps_380 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 47, cps_380 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 48, cps_380 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_380 + 49, cps_380 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_380);

uint32_t cps_381[] = {
0x10935, 0x10936, 0x10937, 0x10938, 0x10939, 0x1093f, 0x10980, 0x10981, 0x10982, 0x10983, 0x10984, 0x10985, 0x10986, 0x10987, 0x10988, 0x10989, 0x1098a, 0x1098b, 0x1098c, 0x1098d, 0x1098e, 0x1098f, 0x10990, 0x10991, 0x10992, 0x10993, 0x10994, 0x10995, 0x10996, 0x10997, 0x10998, 0x10999, 0x1099a, 0x1099b, 0x1099c, 0x1099d, 0x1099e, 0x1099f, 0x109a0, 0x109a1, 0x109a2, 0x109a3, 0x109a4, 0x109a5, 0x109a6, 0x109a7, 0x109a8, 0x109a9, 0x109aa, 0x109ab
};

void BM_collation_element_lookup_381(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 0, cps_381 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 1, cps_381 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 2, cps_381 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 3, cps_381 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 4, cps_381 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 5, cps_381 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 6, cps_381 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 7, cps_381 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 8, cps_381 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 9, cps_381 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 10, cps_381 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 11, cps_381 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 12, cps_381 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 13, cps_381 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 14, cps_381 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 15, cps_381 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 16, cps_381 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 17, cps_381 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 18, cps_381 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 19, cps_381 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 20, cps_381 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 21, cps_381 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 22, cps_381 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 23, cps_381 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 24, cps_381 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 25, cps_381 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 26, cps_381 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 27, cps_381 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 28, cps_381 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 29, cps_381 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 30, cps_381 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 31, cps_381 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 32, cps_381 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 33, cps_381 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 34, cps_381 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 35, cps_381 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 36, cps_381 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 37, cps_381 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 38, cps_381 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 39, cps_381 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 40, cps_381 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 41, cps_381 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 42, cps_381 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 43, cps_381 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 44, cps_381 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 45, cps_381 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 46, cps_381 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 47, cps_381 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 48, cps_381 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_381 + 49, cps_381 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_381);

uint32_t cps_382[] = {
0x109ac, 0x109ad, 0x109ae, 0x109af, 0x109b0, 0x109b1, 0x109b2, 0x109b3, 0x109b4, 0x109b5, 0x109b6, 0x109b7, 0x109bc, 0x109bd, 0x109be, 0x109bf, 0x109c0, 0x109c1, 0x109c2, 0x109c3, 0x109c4, 0x109c5, 0x109c6, 0x109c7, 0x109c8, 0x109c9, 0x109ca, 0x109cb, 0x109cc, 0x109cd, 0x109ce, 0x109cf, 0x109d2, 0x109d3, 0x109d4, 0x109d5, 0x109d6, 0x109d7, 0x109d8, 0x109d9, 0x109da, 0x109db, 0x109dc, 0x109dd, 0x109de, 0x109df, 0x109e0, 0x109e1, 0x109e2, 0x109e3
};

void BM_collation_element_lookup_382(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 0, cps_382 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 1, cps_382 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 2, cps_382 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 3, cps_382 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 4, cps_382 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 5, cps_382 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 6, cps_382 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 7, cps_382 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 8, cps_382 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 9, cps_382 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 10, cps_382 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 11, cps_382 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 12, cps_382 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 13, cps_382 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 14, cps_382 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 15, cps_382 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 16, cps_382 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 17, cps_382 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 18, cps_382 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 19, cps_382 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 20, cps_382 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 21, cps_382 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 22, cps_382 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 23, cps_382 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 24, cps_382 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 25, cps_382 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 26, cps_382 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 27, cps_382 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 28, cps_382 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 29, cps_382 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 30, cps_382 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 31, cps_382 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 32, cps_382 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 33, cps_382 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 34, cps_382 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 35, cps_382 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 36, cps_382 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 37, cps_382 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 38, cps_382 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 39, cps_382 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 40, cps_382 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 41, cps_382 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 42, cps_382 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 43, cps_382 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 44, cps_382 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 45, cps_382 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 46, cps_382 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 47, cps_382 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 48, cps_382 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_382 + 49, cps_382 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_382);

uint32_t cps_383[] = {
0x109e4, 0x109e5, 0x109e6, 0x109e7, 0x109e8, 0x109e9, 0x109ea, 0x109eb, 0x109ec, 0x109ed, 0x109ee, 0x109ef, 0x109f0, 0x109f1, 0x109f2, 0x109f3, 0x109f4, 0x109f5, 0x109f6, 0x109f7, 0x109f8, 0x109f9, 0x109fa, 0x109fb, 0x109fc, 0x109fd, 0x109fe, 0x109ff, 0x10a00, 0x10a01, 0x10a02, 0x10a03, 0x10a05, 0x10a06, 0x10a0c, 0x10a0d, 0x10a0e, 0x10a0f, 0x10a10, 0x10a11, 0x10a12, 0x10a13, 0x10a15, 0x10a16, 0x10a17, 0x10a19, 0x10a1a, 0x10a1b, 0x10a1c, 0x10a1d
};

void BM_collation_element_lookup_383(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 0, cps_383 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 1, cps_383 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 2, cps_383 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 3, cps_383 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 4, cps_383 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 5, cps_383 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 6, cps_383 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 7, cps_383 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 8, cps_383 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 9, cps_383 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 10, cps_383 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 11, cps_383 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 12, cps_383 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 13, cps_383 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 14, cps_383 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 15, cps_383 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 16, cps_383 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 17, cps_383 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 18, cps_383 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 19, cps_383 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 20, cps_383 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 21, cps_383 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 22, cps_383 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 23, cps_383 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 24, cps_383 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 25, cps_383 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 26, cps_383 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 27, cps_383 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 28, cps_383 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 29, cps_383 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 30, cps_383 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 31, cps_383 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 32, cps_383 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 33, cps_383 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 34, cps_383 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 35, cps_383 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 36, cps_383 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 37, cps_383 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 38, cps_383 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 39, cps_383 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 40, cps_383 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 41, cps_383 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 42, cps_383 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 43, cps_383 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 44, cps_383 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 45, cps_383 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 46, cps_383 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 47, cps_383 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 48, cps_383 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_383 + 49, cps_383 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_383);

uint32_t cps_384[] = {
0x10a1e, 0x10a1f, 0x10a20, 0x10a21, 0x10a22, 0x10a23, 0x10a24, 0x10a25, 0x10a26, 0x10a27, 0x10a28, 0x10a29, 0x10a2a, 0x10a2b, 0x10a2c, 0x10a2d, 0x10a2e, 0x10a2f, 0x10a30, 0x10a31, 0x10a32, 0x10a33, 0x10a38, 0x10a39, 0x10a3a, 0x10a3f, 0x10a40, 0x10a41, 0x10a42, 0x10a43, 0x10a44, 0x10a45, 0x10a46, 0x10a47, 0x10a50, 0x10a51, 0x10a52, 0x10a53, 0x10a54, 0x10a55, 0x10a56, 0x10a57, 0x10a58, 0x10a60, 0x10a61, 0x10a62, 0x10a63, 0x10a64, 0x10a65, 0x10a66
};

void BM_collation_element_lookup_384(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 0, cps_384 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 1, cps_384 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 2, cps_384 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 3, cps_384 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 4, cps_384 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 5, cps_384 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 6, cps_384 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 7, cps_384 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 8, cps_384 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 9, cps_384 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 10, cps_384 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 11, cps_384 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 12, cps_384 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 13, cps_384 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 14, cps_384 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 15, cps_384 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 16, cps_384 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 17, cps_384 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 18, cps_384 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 19, cps_384 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 20, cps_384 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 21, cps_384 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 22, cps_384 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 23, cps_384 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 24, cps_384 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 25, cps_384 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 26, cps_384 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 27, cps_384 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 28, cps_384 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 29, cps_384 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 30, cps_384 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 31, cps_384 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 32, cps_384 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 33, cps_384 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 34, cps_384 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 35, cps_384 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 36, cps_384 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 37, cps_384 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 38, cps_384 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 39, cps_384 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 40, cps_384 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 41, cps_384 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 42, cps_384 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 43, cps_384 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 44, cps_384 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 45, cps_384 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 46, cps_384 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 47, cps_384 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 48, cps_384 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_384 + 49, cps_384 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_384);

uint32_t cps_385[] = {
0x10a67, 0x10a68, 0x10a69, 0x10a6a, 0x10a6b, 0x10a6c, 0x10a6d, 0x10a6e, 0x10a6f, 0x10a70, 0x10a71, 0x10a72, 0x10a73, 0x10a74, 0x10a75, 0x10a76, 0x10a77, 0x10a78, 0x10a79, 0x10a7a, 0x10a7b, 0x10a7c, 0x10a7d, 0x10a7e, 0x10a7f, 0x10a80, 0x10a81, 0x10a82, 0x10a83, 0x10a84, 0x10a85, 0x10a86, 0x10a87, 0x10a88, 0x10a89, 0x10a8a, 0x10a8b, 0x10a8c, 0x10a8d, 0x10a8e, 0x10a8f, 0x10a90, 0x10a91, 0x10a92, 0x10a93, 0x10a94, 0x10a95, 0x10a96, 0x10a97, 0x10a98
};

void BM_collation_element_lookup_385(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 0, cps_385 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 1, cps_385 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 2, cps_385 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 3, cps_385 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 4, cps_385 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 5, cps_385 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 6, cps_385 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 7, cps_385 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 8, cps_385 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 9, cps_385 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 10, cps_385 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 11, cps_385 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 12, cps_385 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 13, cps_385 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 14, cps_385 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 15, cps_385 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 16, cps_385 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 17, cps_385 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 18, cps_385 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 19, cps_385 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 20, cps_385 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 21, cps_385 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 22, cps_385 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 23, cps_385 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 24, cps_385 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 25, cps_385 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 26, cps_385 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 27, cps_385 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 28, cps_385 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 29, cps_385 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 30, cps_385 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 31, cps_385 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 32, cps_385 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 33, cps_385 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 34, cps_385 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 35, cps_385 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 36, cps_385 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 37, cps_385 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 38, cps_385 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 39, cps_385 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 40, cps_385 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 41, cps_385 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 42, cps_385 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 43, cps_385 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 44, cps_385 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 45, cps_385 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 46, cps_385 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 47, cps_385 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 48, cps_385 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_385 + 49, cps_385 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_385);

uint32_t cps_386[] = {
0x10a99, 0x10a9a, 0x10a9b, 0x10a9c, 0x10a9d, 0x10a9e, 0x10a9f, 0x10ac0, 0x10ac1, 0x10ac2, 0x10ac3, 0x10ac4, 0x10ac5, 0x10ac6, 0x10ac7, 0x10ac8, 0x10ac9, 0x10aca, 0x10acb, 0x10acc, 0x10acd, 0x10ace, 0x10acf, 0x10ad0, 0x10ad1, 0x10ad2, 0x10ad3, 0x10ad4, 0x10ad5, 0x10ad6, 0x10ad7, 0x10ad8, 0x10ad9, 0x10ada, 0x10adb, 0x10adc, 0x10add, 0x10ade, 0x10adf, 0x10ae0, 0x10ae1, 0x10ae2, 0x10ae3, 0x10ae4, 0x10ae5, 0x10ae6, 0x10aeb, 0x10aec, 0x10aed, 0x10aee
};

void BM_collation_element_lookup_386(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 0, cps_386 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 1, cps_386 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 2, cps_386 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 3, cps_386 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 4, cps_386 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 5, cps_386 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 6, cps_386 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 7, cps_386 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 8, cps_386 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 9, cps_386 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 10, cps_386 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 11, cps_386 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 12, cps_386 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 13, cps_386 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 14, cps_386 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 15, cps_386 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 16, cps_386 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 17, cps_386 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 18, cps_386 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 19, cps_386 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 20, cps_386 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 21, cps_386 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 22, cps_386 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 23, cps_386 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 24, cps_386 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 25, cps_386 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 26, cps_386 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 27, cps_386 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 28, cps_386 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 29, cps_386 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 30, cps_386 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 31, cps_386 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 32, cps_386 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 33, cps_386 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 34, cps_386 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 35, cps_386 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 36, cps_386 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 37, cps_386 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 38, cps_386 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 39, cps_386 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 40, cps_386 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 41, cps_386 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 42, cps_386 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 43, cps_386 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 44, cps_386 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 45, cps_386 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 46, cps_386 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 47, cps_386 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 48, cps_386 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_386 + 49, cps_386 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_386);

uint32_t cps_387[] = {
0x10aef, 0x10af0, 0x10af1, 0x10af2, 0x10af3, 0x10af4, 0x10af5, 0x10af6, 0x10b00, 0x10b01, 0x10b02, 0x10b03, 0x10b04, 0x10b05, 0x10b06, 0x10b07, 0x10b08, 0x10b09, 0x10b0a, 0x10b0b, 0x10b0c, 0x10b0d, 0x10b0e, 0x10b0f, 0x10b10, 0x10b11, 0x10b12, 0x10b13, 0x10b14, 0x10b15, 0x10b16, 0x10b17, 0x10b18, 0x10b19, 0x10b1a, 0x10b1b, 0x10b1c, 0x10b1d, 0x10b1e, 0x10b1f, 0x10b20, 0x10b21, 0x10b22, 0x10b23, 0x10b24, 0x10b25, 0x10b26, 0x10b27, 0x10b28, 0x10b29
};

void BM_collation_element_lookup_387(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 0, cps_387 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 1, cps_387 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 2, cps_387 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 3, cps_387 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 4, cps_387 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 5, cps_387 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 6, cps_387 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 7, cps_387 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 8, cps_387 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 9, cps_387 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 10, cps_387 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 11, cps_387 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 12, cps_387 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 13, cps_387 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 14, cps_387 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 15, cps_387 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 16, cps_387 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 17, cps_387 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 18, cps_387 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 19, cps_387 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 20, cps_387 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 21, cps_387 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 22, cps_387 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 23, cps_387 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 24, cps_387 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 25, cps_387 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 26, cps_387 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 27, cps_387 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 28, cps_387 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 29, cps_387 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 30, cps_387 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 31, cps_387 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 32, cps_387 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 33, cps_387 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 34, cps_387 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 35, cps_387 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 36, cps_387 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 37, cps_387 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 38, cps_387 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 39, cps_387 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 40, cps_387 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 41, cps_387 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 42, cps_387 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 43, cps_387 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 44, cps_387 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 45, cps_387 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 46, cps_387 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 47, cps_387 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 48, cps_387 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_387 + 49, cps_387 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_387);

uint32_t cps_388[] = {
0x10b2a, 0x10b2b, 0x10b2c, 0x10b2d, 0x10b2e, 0x10b2f, 0x10b30, 0x10b31, 0x10b32, 0x10b33, 0x10b34, 0x10b35, 0x10b39, 0x10b3a, 0x10b3b, 0x10b3c, 0x10b3d, 0x10b3e, 0x10b3f, 0x10b40, 0x10b41, 0x10b42, 0x10b43, 0x10b44, 0x10b45, 0x10b46, 0x10b47, 0x10b48, 0x10b49, 0x10b4a, 0x10b4b, 0x10b4c, 0x10b4d, 0x10b4e, 0x10b4f, 0x10b50, 0x10b51, 0x10b52, 0x10b53, 0x10b54, 0x10b55, 0x10b58, 0x10b59, 0x10b5a, 0x10b5b, 0x10b5c, 0x10b5d, 0x10b5e, 0x10b5f, 0x10b60
};

void BM_collation_element_lookup_388(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 0, cps_388 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 1, cps_388 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 2, cps_388 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 3, cps_388 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 4, cps_388 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 5, cps_388 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 6, cps_388 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 7, cps_388 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 8, cps_388 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 9, cps_388 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 10, cps_388 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 11, cps_388 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 12, cps_388 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 13, cps_388 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 14, cps_388 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 15, cps_388 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 16, cps_388 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 17, cps_388 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 18, cps_388 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 19, cps_388 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 20, cps_388 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 21, cps_388 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 22, cps_388 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 23, cps_388 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 24, cps_388 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 25, cps_388 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 26, cps_388 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 27, cps_388 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 28, cps_388 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 29, cps_388 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 30, cps_388 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 31, cps_388 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 32, cps_388 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 33, cps_388 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 34, cps_388 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 35, cps_388 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 36, cps_388 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 37, cps_388 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 38, cps_388 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 39, cps_388 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 40, cps_388 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 41, cps_388 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 42, cps_388 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 43, cps_388 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 44, cps_388 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 45, cps_388 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 46, cps_388 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 47, cps_388 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 48, cps_388 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_388 + 49, cps_388 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_388);

uint32_t cps_389[] = {
0x10b61, 0x10b62, 0x10b63, 0x10b64, 0x10b65, 0x10b66, 0x10b67, 0x10b68, 0x10b69, 0x10b6a, 0x10b6b, 0x10b6c, 0x10b6d, 0x10b6e, 0x10b6f, 0x10b70, 0x10b71, 0x10b72, 0x10b78, 0x10b79, 0x10b7a, 0x10b7b, 0x10b7c, 0x10b7d, 0x10b7e, 0x10b7f, 0x10b80, 0x10b81, 0x10b82, 0x10b83, 0x10b84, 0x10b85, 0x10b86, 0x10b87, 0x10b88, 0x10b89, 0x10b8a, 0x10b8b, 0x10b8c, 0x10b8d, 0x10b8e, 0x10b8f, 0x10b90, 0x10b91, 0x10b99, 0x10b9a, 0x10b9b, 0x10b9c, 0x10ba9, 0x10baa
};

void BM_collation_element_lookup_389(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 0, cps_389 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 1, cps_389 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 2, cps_389 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 3, cps_389 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 4, cps_389 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 5, cps_389 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 6, cps_389 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 7, cps_389 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 8, cps_389 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 9, cps_389 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 10, cps_389 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 11, cps_389 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 12, cps_389 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 13, cps_389 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 14, cps_389 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 15, cps_389 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 16, cps_389 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 17, cps_389 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 18, cps_389 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 19, cps_389 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 20, cps_389 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 21, cps_389 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 22, cps_389 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 23, cps_389 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 24, cps_389 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 25, cps_389 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 26, cps_389 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 27, cps_389 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 28, cps_389 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 29, cps_389 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 30, cps_389 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 31, cps_389 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 32, cps_389 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 33, cps_389 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 34, cps_389 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 35, cps_389 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 36, cps_389 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 37, cps_389 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 38, cps_389 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 39, cps_389 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 40, cps_389 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 41, cps_389 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 42, cps_389 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 43, cps_389 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 44, cps_389 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 45, cps_389 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 46, cps_389 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 47, cps_389 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 48, cps_389 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_389 + 49, cps_389 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_389);

uint32_t cps_390[] = {
0x10bab, 0x10bac, 0x10bad, 0x10bae, 0x10baf, 0x10c00, 0x10c01, 0x10c02, 0x10c03, 0x10c04, 0x10c05, 0x10c06, 0x10c07, 0x10c08, 0x10c09, 0x10c0a, 0x10c0b, 0x10c0c, 0x10c0d, 0x10c0e, 0x10c0f, 0x10c10, 0x10c11, 0x10c12, 0x10c13, 0x10c14, 0x10c15, 0x10c16, 0x10c17, 0x10c18, 0x10c19, 0x10c1a, 0x10c1b, 0x10c1c, 0x10c1d, 0x10c1e, 0x10c1f, 0x10c20, 0x10c21, 0x10c22, 0x10c23, 0x10c24, 0x10c25, 0x10c26, 0x10c27, 0x10c28, 0x10c29, 0x10c2a, 0x10c2b, 0x10c2c
};

void BM_collation_element_lookup_390(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 0, cps_390 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 1, cps_390 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 2, cps_390 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 3, cps_390 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 4, cps_390 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 5, cps_390 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 6, cps_390 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 7, cps_390 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 8, cps_390 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 9, cps_390 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 10, cps_390 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 11, cps_390 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 12, cps_390 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 13, cps_390 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 14, cps_390 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 15, cps_390 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 16, cps_390 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 17, cps_390 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 18, cps_390 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 19, cps_390 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 20, cps_390 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 21, cps_390 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 22, cps_390 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 23, cps_390 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 24, cps_390 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 25, cps_390 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 26, cps_390 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 27, cps_390 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 28, cps_390 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 29, cps_390 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 30, cps_390 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 31, cps_390 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 32, cps_390 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 33, cps_390 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 34, cps_390 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 35, cps_390 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 36, cps_390 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 37, cps_390 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 38, cps_390 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 39, cps_390 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 40, cps_390 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 41, cps_390 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 42, cps_390 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 43, cps_390 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 44, cps_390 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 45, cps_390 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 46, cps_390 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 47, cps_390 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 48, cps_390 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_390 + 49, cps_390 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_390);

uint32_t cps_391[] = {
0x10c2d, 0x10c2e, 0x10c2f, 0x10c30, 0x10c31, 0x10c32, 0x10c33, 0x10c34, 0x10c35, 0x10c36, 0x10c37, 0x10c38, 0x10c39, 0x10c3a, 0x10c3b, 0x10c3c, 0x10c3d, 0x10c3e, 0x10c3f, 0x10c40, 0x10c41, 0x10c42, 0x10c43, 0x10c44, 0x10c45, 0x10c46, 0x10c47, 0x10c48, 0x10c80, 0x10c81, 0x10c82, 0x10c83, 0x10c84, 0x10c85, 0x10c86, 0x10c87, 0x10c88, 0x10c89, 0x10c8a, 0x10c8b, 0x10c8c, 0x10c8d, 0x10c8e, 0x10c8f, 0x10c90, 0x10c91, 0x10c92, 0x10c93, 0x10c94, 0x10c95
};

void BM_collation_element_lookup_391(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 0, cps_391 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 1, cps_391 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 2, cps_391 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 3, cps_391 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 4, cps_391 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 5, cps_391 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 6, cps_391 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 7, cps_391 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 8, cps_391 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 9, cps_391 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 10, cps_391 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 11, cps_391 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 12, cps_391 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 13, cps_391 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 14, cps_391 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 15, cps_391 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 16, cps_391 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 17, cps_391 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 18, cps_391 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 19, cps_391 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 20, cps_391 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 21, cps_391 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 22, cps_391 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 23, cps_391 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 24, cps_391 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 25, cps_391 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 26, cps_391 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 27, cps_391 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 28, cps_391 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 29, cps_391 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 30, cps_391 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 31, cps_391 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 32, cps_391 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 33, cps_391 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 34, cps_391 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 35, cps_391 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 36, cps_391 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 37, cps_391 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 38, cps_391 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 39, cps_391 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 40, cps_391 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 41, cps_391 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 42, cps_391 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 43, cps_391 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 44, cps_391 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 45, cps_391 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 46, cps_391 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 47, cps_391 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 48, cps_391 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_391 + 49, cps_391 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_391);

uint32_t cps_392[] = {
0x10c96, 0x10c97, 0x10c98, 0x10c99, 0x10c9a, 0x10c9b, 0x10c9c, 0x10c9d, 0x10c9e, 0x10c9f, 0x10ca0, 0x10ca1, 0x10ca2, 0x10ca3, 0x10ca4, 0x10ca5, 0x10ca6, 0x10ca7, 0x10ca8, 0x10ca9, 0x10caa, 0x10cab, 0x10cac, 0x10cad, 0x10cae, 0x10caf, 0x10cb0, 0x10cb1, 0x10cb2, 0x10cc0, 0x10cc1, 0x10cc2, 0x10cc3, 0x10cc4, 0x10cc5, 0x10cc6, 0x10cc7, 0x10cc8, 0x10cc9, 0x10cca, 0x10ccb, 0x10ccc, 0x10ccd, 0x10cce, 0x10ccf, 0x10cd0, 0x10cd1, 0x10cd2, 0x10cd3, 0x10cd4
};

void BM_collation_element_lookup_392(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 0, cps_392 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 1, cps_392 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 2, cps_392 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 3, cps_392 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 4, cps_392 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 5, cps_392 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 6, cps_392 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 7, cps_392 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 8, cps_392 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 9, cps_392 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 10, cps_392 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 11, cps_392 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 12, cps_392 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 13, cps_392 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 14, cps_392 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 15, cps_392 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 16, cps_392 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 17, cps_392 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 18, cps_392 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 19, cps_392 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 20, cps_392 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 21, cps_392 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 22, cps_392 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 23, cps_392 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 24, cps_392 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 25, cps_392 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 26, cps_392 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 27, cps_392 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 28, cps_392 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 29, cps_392 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 30, cps_392 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 31, cps_392 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 32, cps_392 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 33, cps_392 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 34, cps_392 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 35, cps_392 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 36, cps_392 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 37, cps_392 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 38, cps_392 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 39, cps_392 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 40, cps_392 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 41, cps_392 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 42, cps_392 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 43, cps_392 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 44, cps_392 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 45, cps_392 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 46, cps_392 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 47, cps_392 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 48, cps_392 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_392 + 49, cps_392 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_392);

uint32_t cps_393[] = {
0x10cd5, 0x10cd6, 0x10cd7, 0x10cd8, 0x10cd9, 0x10cda, 0x10cdb, 0x10cdc, 0x10cdd, 0x10cde, 0x10cdf, 0x10ce0, 0x10ce1, 0x10ce2, 0x10ce3, 0x10ce4, 0x10ce5, 0x10ce6, 0x10ce7, 0x10ce8, 0x10ce9, 0x10cea, 0x10ceb, 0x10cec, 0x10ced, 0x10cee, 0x10cef, 0x10cf0, 0x10cf1, 0x10cf2, 0x10cfa, 0x10cfb, 0x10cfc, 0x10cfd, 0x10cfe, 0x10cff, 0x10e60, 0x10e61, 0x10e62, 0x10e63, 0x10e64, 0x10e65, 0x10e66, 0x10e67, 0x10e68, 0x10e69, 0x10e6a, 0x10e6b, 0x10e6c, 0x10e6d
};

void BM_collation_element_lookup_393(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 0, cps_393 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 1, cps_393 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 2, cps_393 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 3, cps_393 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 4, cps_393 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 5, cps_393 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 6, cps_393 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 7, cps_393 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 8, cps_393 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 9, cps_393 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 10, cps_393 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 11, cps_393 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 12, cps_393 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 13, cps_393 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 14, cps_393 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 15, cps_393 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 16, cps_393 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 17, cps_393 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 18, cps_393 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 19, cps_393 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 20, cps_393 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 21, cps_393 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 22, cps_393 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 23, cps_393 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 24, cps_393 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 25, cps_393 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 26, cps_393 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 27, cps_393 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 28, cps_393 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 29, cps_393 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 30, cps_393 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 31, cps_393 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 32, cps_393 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 33, cps_393 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 34, cps_393 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 35, cps_393 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 36, cps_393 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 37, cps_393 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 38, cps_393 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 39, cps_393 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 40, cps_393 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 41, cps_393 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 42, cps_393 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 43, cps_393 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 44, cps_393 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 45, cps_393 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 46, cps_393 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 47, cps_393 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 48, cps_393 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_393 + 49, cps_393 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_393);

uint32_t cps_394[] = {
0x10e6e, 0x10e6f, 0x10e70, 0x10e71, 0x10e72, 0x10e73, 0x10e74, 0x10e75, 0x10e76, 0x10e77, 0x10e78, 0x10e79, 0x10e7a, 0x10e7b, 0x10e7c, 0x10e7d, 0x10e7e, 0x11000, 0x11001, 0x11002, 0x11003, 0x11004, 0x11005, 0x11006, 0x11007, 0x11008, 0x11009, 0x1100a, 0x1100b, 0x1100c, 0x1100d, 0x1100e, 0x1100f, 0x11010, 0x11011, 0x11012, 0x11013, 0x11014, 0x11015, 0x11016, 0x11017, 0x11018, 0x11019, 0x1101a, 0x1101b, 0x1101c, 0x1101d, 0x1101e, 0x1101f, 0x11020
};

void BM_collation_element_lookup_394(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 0, cps_394 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 1, cps_394 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 2, cps_394 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 3, cps_394 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 4, cps_394 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 5, cps_394 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 6, cps_394 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 7, cps_394 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 8, cps_394 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 9, cps_394 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 10, cps_394 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 11, cps_394 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 12, cps_394 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 13, cps_394 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 14, cps_394 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 15, cps_394 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 16, cps_394 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 17, cps_394 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 18, cps_394 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 19, cps_394 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 20, cps_394 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 21, cps_394 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 22, cps_394 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 23, cps_394 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 24, cps_394 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 25, cps_394 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 26, cps_394 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 27, cps_394 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 28, cps_394 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 29, cps_394 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 30, cps_394 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 31, cps_394 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 32, cps_394 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 33, cps_394 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 34, cps_394 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 35, cps_394 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 36, cps_394 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 37, cps_394 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 38, cps_394 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 39, cps_394 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 40, cps_394 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 41, cps_394 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 42, cps_394 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 43, cps_394 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 44, cps_394 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 45, cps_394 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 46, cps_394 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 47, cps_394 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 48, cps_394 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_394 + 49, cps_394 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_394);

uint32_t cps_395[] = {
0x11021, 0x11022, 0x11023, 0x11024, 0x11025, 0x11026, 0x11027, 0x11028, 0x11029, 0x1102a, 0x1102b, 0x1102c, 0x1102d, 0x1102e, 0x1102f, 0x11030, 0x11031, 0x11032, 0x11033, 0x11034, 0x11035, 0x11036, 0x11037, 0x11038, 0x11039, 0x1103a, 0x1103b, 0x1103c, 0x1103d, 0x1103e, 0x1103f, 0x11040, 0x11041, 0x11042, 0x11043, 0x11044, 0x11045, 0x11046, 0x11047, 0x11048, 0x11049, 0x1104a, 0x1104b, 0x1104c, 0x1104d, 0x11052, 0x11053, 0x11054, 0x11055, 0x11056
};

void BM_collation_element_lookup_395(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 0, cps_395 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 1, cps_395 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 2, cps_395 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 3, cps_395 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 4, cps_395 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 5, cps_395 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 6, cps_395 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 7, cps_395 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 8, cps_395 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 9, cps_395 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 10, cps_395 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 11, cps_395 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 12, cps_395 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 13, cps_395 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 14, cps_395 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 15, cps_395 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 16, cps_395 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 17, cps_395 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 18, cps_395 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 19, cps_395 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 20, cps_395 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 21, cps_395 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 22, cps_395 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 23, cps_395 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 24, cps_395 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 25, cps_395 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 26, cps_395 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 27, cps_395 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 28, cps_395 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 29, cps_395 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 30, cps_395 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 31, cps_395 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 32, cps_395 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 33, cps_395 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 34, cps_395 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 35, cps_395 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 36, cps_395 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 37, cps_395 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 38, cps_395 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 39, cps_395 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 40, cps_395 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 41, cps_395 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 42, cps_395 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 43, cps_395 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 44, cps_395 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 45, cps_395 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 46, cps_395 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 47, cps_395 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 48, cps_395 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_395 + 49, cps_395 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_395);

uint32_t cps_396[] = {
0x11057, 0x11058, 0x11059, 0x1105a, 0x1105b, 0x1105c, 0x1105d, 0x1105e, 0x1105f, 0x11060, 0x11061, 0x11062, 0x11063, 0x11064, 0x11065, 0x11066, 0x11067, 0x11068, 0x11069, 0x1106a, 0x1106b, 0x1106c, 0x1106d, 0x1106e, 0x1106f, 0x1107f, 0x11080, 0x11081, 0x11082, 0x11083, 0x11084, 0x11085, 0x11086, 0x11087, 0x11088, 0x11089, 0x1108a, 0x1108b, 0x1108c, 0x1108d, 0x1108e, 0x1108f, 0x11090, 0x11091, 0x11092, 0x11093, 0x11094, 0x11095, 0x11096, 0x11097
};

void BM_collation_element_lookup_396(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 0, cps_396 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 1, cps_396 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 2, cps_396 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 3, cps_396 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 4, cps_396 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 5, cps_396 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 6, cps_396 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 7, cps_396 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 8, cps_396 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 9, cps_396 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 10, cps_396 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 11, cps_396 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 12, cps_396 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 13, cps_396 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 14, cps_396 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 15, cps_396 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 16, cps_396 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 17, cps_396 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 18, cps_396 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 19, cps_396 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 20, cps_396 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 21, cps_396 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 22, cps_396 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 23, cps_396 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 24, cps_396 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 25, cps_396 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 26, cps_396 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 27, cps_396 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 28, cps_396 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 29, cps_396 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 30, cps_396 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 31, cps_396 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 32, cps_396 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 33, cps_396 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 34, cps_396 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 35, cps_396 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 36, cps_396 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 37, cps_396 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 38, cps_396 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 39, cps_396 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 40, cps_396 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 41, cps_396 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 42, cps_396 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 43, cps_396 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 44, cps_396 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 45, cps_396 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 46, cps_396 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 47, cps_396 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 48, cps_396 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_396 + 49, cps_396 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_396);

uint32_t cps_397[] = {
0x11098, 0x11099, 0x1109a, 0x1109b, 0x1109c, 0x1109d, 0x1109e, 0x1109f, 0x110a0, 0x110a1, 0x110a2, 0x110a3, 0x110a4, 0x110a5, 0x110a6, 0x110a7, 0x110a8, 0x110a9, 0x110aa, 0x110ab, 0x110ac, 0x110ad, 0x110ae, 0x110af, 0x110b0, 0x110b1, 0x110b2, 0x110b3, 0x110b4, 0x110b5, 0x110b6, 0x110b7, 0x110b8, 0x110b9, 0x110ba, 0x110bb, 0x110bc, 0x110bd, 0x110be, 0x110bf, 0x110c0, 0x110c1, 0x110d0, 0x110d1, 0x110d2, 0x110d3, 0x110d4, 0x110d5, 0x110d6, 0x110d7
};

void BM_collation_element_lookup_397(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 0, cps_397 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 1, cps_397 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 2, cps_397 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 3, cps_397 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 4, cps_397 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 5, cps_397 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 6, cps_397 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 7, cps_397 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 8, cps_397 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 9, cps_397 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 10, cps_397 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 11, cps_397 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 12, cps_397 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 13, cps_397 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 14, cps_397 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 15, cps_397 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 16, cps_397 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 17, cps_397 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 18, cps_397 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 19, cps_397 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 20, cps_397 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 21, cps_397 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 22, cps_397 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 23, cps_397 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 24, cps_397 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 25, cps_397 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 26, cps_397 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 27, cps_397 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 28, cps_397 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 29, cps_397 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 30, cps_397 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 31, cps_397 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 32, cps_397 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 33, cps_397 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 34, cps_397 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 35, cps_397 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 36, cps_397 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 37, cps_397 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 38, cps_397 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 39, cps_397 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 40, cps_397 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 41, cps_397 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 42, cps_397 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 43, cps_397 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 44, cps_397 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 45, cps_397 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 46, cps_397 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 47, cps_397 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 48, cps_397 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_397 + 49, cps_397 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_397);

uint32_t cps_398[] = {
0x110d8, 0x110d9, 0x110da, 0x110db, 0x110dc, 0x110dd, 0x110de, 0x110df, 0x110e0, 0x110e1, 0x110e2, 0x110e3, 0x110e4, 0x110e5, 0x110e6, 0x110e7, 0x110e8, 0x110f0, 0x110f1, 0x110f2, 0x110f3, 0x110f4, 0x110f5, 0x110f6, 0x110f7, 0x110f8, 0x110f9, 0x11100, 0x11101, 0x11102, 0x11103, 0x11104, 0x11105, 0x11106, 0x11107, 0x11108, 0x11109, 0x1110a, 0x1110b, 0x1110c, 0x1110d, 0x1110e, 0x1110f, 0x11110, 0x11111, 0x11112, 0x11113, 0x11114, 0x11115, 0x11116
};

void BM_collation_element_lookup_398(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 0, cps_398 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 1, cps_398 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 2, cps_398 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 3, cps_398 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 4, cps_398 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 5, cps_398 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 6, cps_398 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 7, cps_398 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 8, cps_398 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 9, cps_398 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 10, cps_398 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 11, cps_398 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 12, cps_398 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 13, cps_398 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 14, cps_398 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 15, cps_398 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 16, cps_398 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 17, cps_398 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 18, cps_398 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 19, cps_398 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 20, cps_398 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 21, cps_398 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 22, cps_398 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 23, cps_398 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 24, cps_398 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 25, cps_398 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 26, cps_398 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 27, cps_398 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 28, cps_398 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 29, cps_398 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 30, cps_398 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 31, cps_398 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 32, cps_398 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 33, cps_398 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 34, cps_398 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 35, cps_398 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 36, cps_398 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 37, cps_398 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 38, cps_398 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 39, cps_398 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 40, cps_398 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 41, cps_398 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 42, cps_398 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 43, cps_398 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 44, cps_398 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 45, cps_398 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 46, cps_398 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 47, cps_398 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 48, cps_398 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_398 + 49, cps_398 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_398);

uint32_t cps_399[] = {
0x11117, 0x11118, 0x11119, 0x1111a, 0x1111b, 0x1111c, 0x1111d, 0x1111e, 0x1111f, 0x11120, 0x11121, 0x11122, 0x11123, 0x11124, 0x11125, 0x11126, 0x11127, 0x11128, 0x11129, 0x1112a, 0x1112b, 0x1112c, 0x1112d, 0x1112e, 0x1112f, 0x11130, 0x11131, 0x11131, 0x11127, 0x11132, 0x11132, 0x11127, 0x11133, 0x11134, 0x11136, 0x11137, 0x11138, 0x11139, 0x1113a, 0x1113b, 0x1113c, 0x1113d, 0x1113e, 0x1113f, 0x11140, 0x11141, 0x11142, 0x11143, 0x11150, 0x11151, 0x11152, 0x11153
};

void BM_collation_element_lookup_399(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 0, cps_399 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 1, cps_399 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 2, cps_399 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 3, cps_399 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 4, cps_399 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 5, cps_399 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 6, cps_399 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 7, cps_399 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 8, cps_399 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 9, cps_399 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 10, cps_399 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 11, cps_399 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 12, cps_399 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 13, cps_399 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 14, cps_399 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 15, cps_399 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 16, cps_399 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 17, cps_399 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 18, cps_399 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 19, cps_399 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 20, cps_399 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 21, cps_399 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 22, cps_399 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 23, cps_399 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 24, cps_399 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 25, cps_399 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 26, cps_399 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 27, cps_399 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 29, cps_399 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 30, cps_399 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 32, cps_399 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 33, cps_399 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 34, cps_399 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 35, cps_399 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 36, cps_399 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 37, cps_399 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 38, cps_399 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 39, cps_399 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 40, cps_399 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 41, cps_399 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 42, cps_399 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 43, cps_399 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 44, cps_399 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 45, cps_399 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 46, cps_399 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 47, cps_399 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 48, cps_399 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 49, cps_399 + 50));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 50, cps_399 + 51));
            benchmark::DoNotOptimize(trie().longest_match(cps_399 + 51, cps_399 + 52));
    }
}
BENCHMARK(BM_collation_element_lookup_399);



BENCHMARK_MAIN()
