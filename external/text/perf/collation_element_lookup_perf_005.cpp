// Copyright (C) 2020 T. Zachary Laine
//
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

// Warning! This file is autogenerated.
#include <boost/text/collate.hpp>
#include <boost/text/collation_table.hpp>

#include <benchmark/benchmark.h>

boost::text::detail::collation_trie_t const & trie()
{
    static auto const retval = boost::text::detail::make_default_trie();
    return retval;
}

boost::text::collation_table const & table()
{
    static auto const retval = boost::text::default_collation_table();
    return retval;
}

uint32_t cps_500[] = {
0x16b28, 0x16b29, 0x16b2a, 0x16b2b, 0x16b2c, 0x16b2d, 0x16b2e, 0x16b2f, 0x16b30, 0x16b31, 0x16b32, 0x16b33, 0x16b34, 0x16b35, 0x16b36, 0x16b37, 0x16b38, 0x16b39, 0x16b3a, 0x16b3b, 0x16b3c, 0x16b3d, 0x16b3e, 0x16b3f, 0x16b40, 0x16b41, 0x16b42, 0x16b43, 0x16b44, 0x16b45, 0x16b50, 0x16b51, 0x16b52, 0x16b53, 0x16b54, 0x16b55, 0x16b56, 0x16b57, 0x16b58, 0x16b59, 0x16b5b, 0x16b5c, 0x16b5d, 0x16b5e, 0x16b5f, 0x16b60, 0x16b61, 0x16b63, 0x16b64, 0x16b65
};

void BM_collation_element_lookup_500(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 0, cps_500 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 1, cps_500 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 2, cps_500 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 3, cps_500 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 4, cps_500 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 5, cps_500 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 6, cps_500 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 7, cps_500 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 8, cps_500 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 9, cps_500 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 10, cps_500 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 11, cps_500 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 12, cps_500 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 13, cps_500 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 14, cps_500 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 15, cps_500 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 16, cps_500 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 17, cps_500 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 18, cps_500 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 19, cps_500 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 20, cps_500 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 21, cps_500 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 22, cps_500 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 23, cps_500 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 24, cps_500 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 25, cps_500 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 26, cps_500 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 27, cps_500 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 28, cps_500 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 29, cps_500 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 30, cps_500 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 31, cps_500 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 32, cps_500 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 33, cps_500 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 34, cps_500 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 35, cps_500 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 36, cps_500 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 37, cps_500 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 38, cps_500 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 39, cps_500 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 40, cps_500 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 41, cps_500 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 42, cps_500 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 43, cps_500 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 44, cps_500 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 45, cps_500 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 46, cps_500 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 47, cps_500 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 48, cps_500 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_500 + 49, cps_500 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_500);

uint32_t cps_501[] = {
0x16b66, 0x16b67, 0x16b68, 0x16b69, 0x16b6a, 0x16b6b, 0x16b6c, 0x16b6d, 0x16b6e, 0x16b6f, 0x16b70, 0x16b71, 0x16b72, 0x16b73, 0x16b74, 0x16b75, 0x16b76, 0x16b77, 0x16b7d, 0x16b7e, 0x16b7f, 0x16b80, 0x16b81, 0x16b82, 0x16b83, 0x16b84, 0x16b85, 0x16b86, 0x16b87, 0x16b88, 0x16b89, 0x16b8a, 0x16b8b, 0x16b8c, 0x16b8d, 0x16b8e, 0x16b8f, 0x16f00, 0x16f01, 0x16f02, 0x16f03, 0x16f04, 0x16f05, 0x16f06, 0x16f07, 0x16f08, 0x16f09, 0x16f0a, 0x16f0b, 0x16f0c
};

void BM_collation_element_lookup_501(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 0, cps_501 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 1, cps_501 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 2, cps_501 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 3, cps_501 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 4, cps_501 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 5, cps_501 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 6, cps_501 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 7, cps_501 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 8, cps_501 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 9, cps_501 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 10, cps_501 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 11, cps_501 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 12, cps_501 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 13, cps_501 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 14, cps_501 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 15, cps_501 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 16, cps_501 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 17, cps_501 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 18, cps_501 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 19, cps_501 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 20, cps_501 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 21, cps_501 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 22, cps_501 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 23, cps_501 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 24, cps_501 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 25, cps_501 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 26, cps_501 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 27, cps_501 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 28, cps_501 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 29, cps_501 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 30, cps_501 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 31, cps_501 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 32, cps_501 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 33, cps_501 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 34, cps_501 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 35, cps_501 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 36, cps_501 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 37, cps_501 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 38, cps_501 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 39, cps_501 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 40, cps_501 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 41, cps_501 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 42, cps_501 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 43, cps_501 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 44, cps_501 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 45, cps_501 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 46, cps_501 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 47, cps_501 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 48, cps_501 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_501 + 49, cps_501 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_501);

uint32_t cps_502[] = {
0x16f0d, 0x16f0e, 0x16f0f, 0x16f10, 0x16f11, 0x16f12, 0x16f13, 0x16f14, 0x16f15, 0x16f16, 0x16f17, 0x16f18, 0x16f19, 0x16f1a, 0x16f1b, 0x16f1c, 0x16f1d, 0x16f1e, 0x16f1f, 0x16f20, 0x16f21, 0x16f22, 0x16f23, 0x16f24, 0x16f25, 0x16f26, 0x16f27, 0x16f28, 0x16f29, 0x16f2a, 0x16f2b, 0x16f2c, 0x16f2d, 0x16f2e, 0x16f2f, 0x16f30, 0x16f31, 0x16f32, 0x16f33, 0x16f34, 0x16f35, 0x16f36, 0x16f37, 0x16f38, 0x16f39, 0x16f3a, 0x16f3b, 0x16f3c, 0x16f3d, 0x16f3e
};

void BM_collation_element_lookup_502(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 0, cps_502 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 1, cps_502 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 2, cps_502 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 3, cps_502 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 4, cps_502 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 5, cps_502 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 6, cps_502 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 7, cps_502 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 8, cps_502 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 9, cps_502 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 10, cps_502 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 11, cps_502 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 12, cps_502 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 13, cps_502 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 14, cps_502 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 15, cps_502 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 16, cps_502 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 17, cps_502 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 18, cps_502 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 19, cps_502 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 20, cps_502 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 21, cps_502 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 22, cps_502 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 23, cps_502 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 24, cps_502 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 25, cps_502 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 26, cps_502 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 27, cps_502 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 28, cps_502 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 29, cps_502 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 30, cps_502 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 31, cps_502 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 32, cps_502 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 33, cps_502 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 34, cps_502 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 35, cps_502 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 36, cps_502 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 37, cps_502 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 38, cps_502 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 39, cps_502 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 40, cps_502 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 41, cps_502 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 42, cps_502 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 43, cps_502 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 44, cps_502 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 45, cps_502 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 46, cps_502 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 47, cps_502 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 48, cps_502 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_502 + 49, cps_502 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_502);

uint32_t cps_503[] = {
0x16f3f, 0x16f40, 0x16f41, 0x16f42, 0x16f43, 0x16f44, 0x16f50, 0x16f51, 0x16f52, 0x16f53, 0x16f54, 0x16f55, 0x16f56, 0x16f57, 0x16f58, 0x16f59, 0x16f5a, 0x16f5b, 0x16f5c, 0x16f5d, 0x16f5e, 0x16f5f, 0x16f60, 0x16f61, 0x16f62, 0x16f63, 0x16f64, 0x16f65, 0x16f66, 0x16f67, 0x16f68, 0x16f69, 0x16f6a, 0x16f6b, 0x16f6c, 0x16f6d, 0x16f6e, 0x16f6f, 0x16f70, 0x16f71, 0x16f72, 0x16f73, 0x16f74, 0x16f75, 0x16f76, 0x16f77, 0x16f78, 0x16f79, 0x16f7a, 0x16f7b
};

void BM_collation_element_lookup_503(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 0, cps_503 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 1, cps_503 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 2, cps_503 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 3, cps_503 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 4, cps_503 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 5, cps_503 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 6, cps_503 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 7, cps_503 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 8, cps_503 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 9, cps_503 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 10, cps_503 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 11, cps_503 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 12, cps_503 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 13, cps_503 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 14, cps_503 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 15, cps_503 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 16, cps_503 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 17, cps_503 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 18, cps_503 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 19, cps_503 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 20, cps_503 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 21, cps_503 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 22, cps_503 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 23, cps_503 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 24, cps_503 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 25, cps_503 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 26, cps_503 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 27, cps_503 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 28, cps_503 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 29, cps_503 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 30, cps_503 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 31, cps_503 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 32, cps_503 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 33, cps_503 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 34, cps_503 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 35, cps_503 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 36, cps_503 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 37, cps_503 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 38, cps_503 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 39, cps_503 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 40, cps_503 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 41, cps_503 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 42, cps_503 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 43, cps_503 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 44, cps_503 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 45, cps_503 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 46, cps_503 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 47, cps_503 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 48, cps_503 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_503 + 49, cps_503 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_503);

uint32_t cps_504[] = {
0x16f7c, 0x16f7d, 0x16f7e, 0x16f8f, 0x16f90, 0x16f91, 0x16f92, 0x16f93, 0x16f94, 0x16f95, 0x16f96, 0x16f97, 0x16f98, 0x16f99, 0x16f9a, 0x16f9b, 0x16f9c, 0x16f9d, 0x16f9e, 0x16f9f, 0x16fe0, 0x16fe1, 0x17000, 0x17001, 0x17002, 0x17003, 0x17004, 0x17005, 0x17006, 0x17007, 0x17008, 0x17009, 0x1700a, 0x1700b, 0x1700c, 0x1700d, 0x1700e, 0x1700f, 0x17010, 0x17011, 0x17012, 0x17013, 0x17014, 0x17015, 0x17016, 0x17017, 0x17018, 0x17019, 0x1701a, 0x1701b
};

void BM_collation_element_lookup_504(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 0, cps_504 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 1, cps_504 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 2, cps_504 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 3, cps_504 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 4, cps_504 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 5, cps_504 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 6, cps_504 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 7, cps_504 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 8, cps_504 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 9, cps_504 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 10, cps_504 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 11, cps_504 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 12, cps_504 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 13, cps_504 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 14, cps_504 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 15, cps_504 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 16, cps_504 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 17, cps_504 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 18, cps_504 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 19, cps_504 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 20, cps_504 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 21, cps_504 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 22, cps_504 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 23, cps_504 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 24, cps_504 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 25, cps_504 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 26, cps_504 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 27, cps_504 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 28, cps_504 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 29, cps_504 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 30, cps_504 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 31, cps_504 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 32, cps_504 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 33, cps_504 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 34, cps_504 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 35, cps_504 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 36, cps_504 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 37, cps_504 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 38, cps_504 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 39, cps_504 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 40, cps_504 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 41, cps_504 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 42, cps_504 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 43, cps_504 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 44, cps_504 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 45, cps_504 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 46, cps_504 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 47, cps_504 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 48, cps_504 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_504 + 49, cps_504 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_504);

uint32_t cps_505[] = {
0x1701c, 0x1701d, 0x1701e, 0x1701f, 0x17020, 0x17021, 0x17022, 0x17023, 0x17024, 0x17025, 0x17026, 0x17027, 0x17028, 0x17029, 0x1702a, 0x1702b, 0x1702c, 0x1702d, 0x1702e, 0x1702f, 0x17030, 0x17031, 0x17032, 0x17033, 0x17034, 0x17035, 0x17036, 0x17037, 0x17038, 0x17039, 0x1703a, 0x1703b, 0x1703c, 0x1703d, 0x1703e, 0x1703f, 0x17040, 0x17041, 0x17042, 0x17043, 0x17044, 0x17045, 0x17046, 0x17047, 0x17048, 0x17049, 0x1704a, 0x1704b, 0x1704c, 0x1704d
};

void BM_collation_element_lookup_505(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 0, cps_505 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 1, cps_505 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 2, cps_505 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 3, cps_505 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 4, cps_505 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 5, cps_505 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 6, cps_505 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 7, cps_505 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 8, cps_505 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 9, cps_505 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 10, cps_505 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 11, cps_505 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 12, cps_505 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 13, cps_505 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 14, cps_505 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 15, cps_505 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 16, cps_505 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 17, cps_505 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 18, cps_505 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 19, cps_505 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 20, cps_505 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 21, cps_505 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 22, cps_505 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 23, cps_505 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 24, cps_505 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 25, cps_505 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 26, cps_505 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 27, cps_505 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 28, cps_505 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 29, cps_505 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 30, cps_505 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 31, cps_505 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 32, cps_505 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 33, cps_505 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 34, cps_505 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 35, cps_505 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 36, cps_505 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 37, cps_505 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 38, cps_505 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 39, cps_505 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 40, cps_505 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 41, cps_505 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 42, cps_505 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 43, cps_505 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 44, cps_505 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 45, cps_505 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 46, cps_505 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 47, cps_505 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 48, cps_505 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_505 + 49, cps_505 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_505);

uint32_t cps_506[] = {
0x1704e, 0x1704f, 0x17050, 0x17051, 0x17052, 0x17053, 0x17054, 0x17055, 0x17056, 0x17057, 0x17058, 0x17059, 0x1705a, 0x1705b, 0x1705c, 0x1705d, 0x1705e, 0x1705f, 0x17060, 0x17061, 0x17062, 0x17063, 0x17064, 0x17065, 0x17066, 0x17067, 0x17068, 0x17069, 0x1706a, 0x1706b, 0x1706c, 0x1706d, 0x1706e, 0x1706f, 0x17070, 0x17071, 0x17072, 0x17073, 0x17074, 0x17075, 0x17076, 0x17077, 0x17078, 0x17079, 0x1707a, 0x1707b, 0x1707c, 0x1707d, 0x1707e, 0x1707f
};

void BM_collation_element_lookup_506(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 0, cps_506 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 1, cps_506 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 2, cps_506 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 3, cps_506 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 4, cps_506 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 5, cps_506 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 6, cps_506 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 7, cps_506 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 8, cps_506 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 9, cps_506 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 10, cps_506 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 11, cps_506 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 12, cps_506 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 13, cps_506 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 14, cps_506 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 15, cps_506 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 16, cps_506 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 17, cps_506 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 18, cps_506 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 19, cps_506 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 20, cps_506 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 21, cps_506 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 22, cps_506 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 23, cps_506 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 24, cps_506 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 25, cps_506 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 26, cps_506 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 27, cps_506 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 28, cps_506 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 29, cps_506 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 30, cps_506 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 31, cps_506 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 32, cps_506 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 33, cps_506 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 34, cps_506 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 35, cps_506 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 36, cps_506 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 37, cps_506 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 38, cps_506 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 39, cps_506 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 40, cps_506 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 41, cps_506 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 42, cps_506 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 43, cps_506 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 44, cps_506 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 45, cps_506 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 46, cps_506 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 47, cps_506 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 48, cps_506 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_506 + 49, cps_506 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_506);

uint32_t cps_507[] = {
0x17080, 0x17081, 0x17082, 0x17083, 0x17084, 0x17085, 0x17086, 0x17087, 0x17088, 0x17089, 0x1708a, 0x1708b, 0x1708c, 0x1708d, 0x1708e, 0x1708f, 0x17090, 0x17091, 0x17092, 0x17093, 0x17094, 0x17095, 0x17096, 0x17097, 0x17098, 0x17099, 0x1709a, 0x1709b, 0x1709c, 0x1709d, 0x1709e, 0x1709f, 0x170a0, 0x170a1, 0x170a2, 0x170a3, 0x170a4, 0x170a5, 0x170a6, 0x170a7, 0x170a8, 0x170a9, 0x170aa, 0x170ab, 0x170ac, 0x170ad, 0x170ae, 0x170af, 0x170b0, 0x170b1
};

void BM_collation_element_lookup_507(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 0, cps_507 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 1, cps_507 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 2, cps_507 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 3, cps_507 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 4, cps_507 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 5, cps_507 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 6, cps_507 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 7, cps_507 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 8, cps_507 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 9, cps_507 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 10, cps_507 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 11, cps_507 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 12, cps_507 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 13, cps_507 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 14, cps_507 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 15, cps_507 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 16, cps_507 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 17, cps_507 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 18, cps_507 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 19, cps_507 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 20, cps_507 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 21, cps_507 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 22, cps_507 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 23, cps_507 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 24, cps_507 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 25, cps_507 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 26, cps_507 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 27, cps_507 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 28, cps_507 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 29, cps_507 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 30, cps_507 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 31, cps_507 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 32, cps_507 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 33, cps_507 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 34, cps_507 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 35, cps_507 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 36, cps_507 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 37, cps_507 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 38, cps_507 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 39, cps_507 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 40, cps_507 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 41, cps_507 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 42, cps_507 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 43, cps_507 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 44, cps_507 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 45, cps_507 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 46, cps_507 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 47, cps_507 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 48, cps_507 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_507 + 49, cps_507 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_507);

uint32_t cps_508[] = {
0x170b2, 0x170b3, 0x170b4, 0x170b5, 0x170b6, 0x170b7, 0x170b8, 0x170b9, 0x170ba, 0x170bb, 0x170bc, 0x170bd, 0x170be, 0x170bf, 0x170c0, 0x170c1, 0x170c2, 0x170c3, 0x170c4, 0x170c5, 0x170c6, 0x170c7, 0x170c8, 0x170c9, 0x170ca, 0x170cb, 0x170cc, 0x170cd, 0x170ce, 0x170cf, 0x170d0, 0x170d1, 0x170d2, 0x170d3, 0x170d4, 0x170d5, 0x170d6, 0x170d7, 0x170d8, 0x170d9, 0x170da, 0x170db, 0x170dc, 0x170dd, 0x170de, 0x170df, 0x170e0, 0x170e1, 0x170e2, 0x170e3
};

void BM_collation_element_lookup_508(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 0, cps_508 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 1, cps_508 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 2, cps_508 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 3, cps_508 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 4, cps_508 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 5, cps_508 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 6, cps_508 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 7, cps_508 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 8, cps_508 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 9, cps_508 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 10, cps_508 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 11, cps_508 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 12, cps_508 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 13, cps_508 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 14, cps_508 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 15, cps_508 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 16, cps_508 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 17, cps_508 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 18, cps_508 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 19, cps_508 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 20, cps_508 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 21, cps_508 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 22, cps_508 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 23, cps_508 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 24, cps_508 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 25, cps_508 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 26, cps_508 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 27, cps_508 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 28, cps_508 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 29, cps_508 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 30, cps_508 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 31, cps_508 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 32, cps_508 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 33, cps_508 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 34, cps_508 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 35, cps_508 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 36, cps_508 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 37, cps_508 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 38, cps_508 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 39, cps_508 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 40, cps_508 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 41, cps_508 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 42, cps_508 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 43, cps_508 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 44, cps_508 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 45, cps_508 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 46, cps_508 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 47, cps_508 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 48, cps_508 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_508 + 49, cps_508 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_508);

uint32_t cps_509[] = {
0x170e4, 0x170e5, 0x170e6, 0x170e7, 0x170e8, 0x170e9, 0x170ea, 0x170eb, 0x170ec, 0x170ed, 0x170ee, 0x170ef, 0x170f0, 0x170f1, 0x170f2, 0x170f3, 0x170f4, 0x170f5, 0x170f6, 0x170f7, 0x170f8, 0x170f9, 0x170fa, 0x170fb, 0x170fc, 0x170fd, 0x170fe, 0x170ff, 0x17100, 0x17101, 0x17102, 0x17103, 0x17104, 0x17105, 0x17106, 0x17107, 0x17108, 0x17109, 0x1710a, 0x1710b, 0x1710c, 0x1710d, 0x1710e, 0x1710f, 0x17110, 0x17111, 0x17112, 0x17113, 0x17114, 0x17115
};

void BM_collation_element_lookup_509(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 0, cps_509 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 1, cps_509 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 2, cps_509 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 3, cps_509 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 4, cps_509 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 5, cps_509 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 6, cps_509 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 7, cps_509 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 8, cps_509 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 9, cps_509 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 10, cps_509 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 11, cps_509 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 12, cps_509 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 13, cps_509 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 14, cps_509 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 15, cps_509 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 16, cps_509 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 17, cps_509 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 18, cps_509 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 19, cps_509 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 20, cps_509 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 21, cps_509 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 22, cps_509 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 23, cps_509 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 24, cps_509 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 25, cps_509 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 26, cps_509 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 27, cps_509 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 28, cps_509 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 29, cps_509 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 30, cps_509 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 31, cps_509 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 32, cps_509 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 33, cps_509 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 34, cps_509 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 35, cps_509 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 36, cps_509 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 37, cps_509 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 38, cps_509 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 39, cps_509 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 40, cps_509 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 41, cps_509 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 42, cps_509 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 43, cps_509 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 44, cps_509 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 45, cps_509 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 46, cps_509 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 47, cps_509 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 48, cps_509 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_509 + 49, cps_509 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_509);

uint32_t cps_510[] = {
0x17116, 0x17117, 0x17118, 0x17119, 0x1711a, 0x1711b, 0x1711c, 0x1711d, 0x1711e, 0x1711f, 0x17120, 0x17121, 0x17122, 0x17123, 0x17124, 0x17125, 0x17126, 0x17127, 0x17128, 0x17129, 0x1712a, 0x1712b, 0x1712c, 0x1712d, 0x1712e, 0x1712f, 0x17130, 0x17131, 0x17132, 0x17133, 0x17134, 0x17135, 0x17136, 0x17137, 0x17138, 0x17139, 0x1713a, 0x1713b, 0x1713c, 0x1713d, 0x1713e, 0x1713f, 0x17140, 0x17141, 0x17142, 0x17143, 0x17144, 0x17145, 0x17146, 0x17147
};

void BM_collation_element_lookup_510(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 0, cps_510 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 1, cps_510 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 2, cps_510 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 3, cps_510 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 4, cps_510 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 5, cps_510 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 6, cps_510 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 7, cps_510 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 8, cps_510 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 9, cps_510 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 10, cps_510 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 11, cps_510 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 12, cps_510 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 13, cps_510 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 14, cps_510 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 15, cps_510 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 16, cps_510 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 17, cps_510 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 18, cps_510 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 19, cps_510 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 20, cps_510 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 21, cps_510 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 22, cps_510 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 23, cps_510 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 24, cps_510 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 25, cps_510 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 26, cps_510 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 27, cps_510 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 28, cps_510 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 29, cps_510 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 30, cps_510 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 31, cps_510 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 32, cps_510 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 33, cps_510 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 34, cps_510 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 35, cps_510 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 36, cps_510 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 37, cps_510 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 38, cps_510 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 39, cps_510 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 40, cps_510 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 41, cps_510 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 42, cps_510 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 43, cps_510 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 44, cps_510 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 45, cps_510 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 46, cps_510 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 47, cps_510 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 48, cps_510 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_510 + 49, cps_510 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_510);

uint32_t cps_511[] = {
0x17148, 0x17149, 0x1714a, 0x1714b, 0x1714c, 0x1714d, 0x1714e, 0x1714f, 0x17150, 0x17151, 0x17152, 0x17153, 0x17154, 0x17155, 0x17156, 0x17157, 0x17158, 0x17159, 0x1715a, 0x1715b, 0x1715c, 0x1715d, 0x1715e, 0x1715f, 0x17160, 0x17161, 0x17162, 0x17163, 0x17164, 0x17165, 0x17166, 0x17167, 0x17168, 0x17169, 0x1716a, 0x1716b, 0x1716c, 0x1716d, 0x1716e, 0x1716f, 0x17170, 0x17171, 0x17172, 0x17173, 0x17174, 0x17175, 0x17176, 0x17177, 0x17178, 0x17179
};

void BM_collation_element_lookup_511(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 0, cps_511 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 1, cps_511 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 2, cps_511 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 3, cps_511 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 4, cps_511 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 5, cps_511 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 6, cps_511 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 7, cps_511 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 8, cps_511 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 9, cps_511 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 10, cps_511 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 11, cps_511 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 12, cps_511 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 13, cps_511 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 14, cps_511 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 15, cps_511 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 16, cps_511 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 17, cps_511 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 18, cps_511 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 19, cps_511 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 20, cps_511 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 21, cps_511 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 22, cps_511 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 23, cps_511 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 24, cps_511 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 25, cps_511 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 26, cps_511 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 27, cps_511 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 28, cps_511 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 29, cps_511 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 30, cps_511 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 31, cps_511 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 32, cps_511 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 33, cps_511 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 34, cps_511 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 35, cps_511 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 36, cps_511 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 37, cps_511 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 38, cps_511 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 39, cps_511 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 40, cps_511 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 41, cps_511 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 42, cps_511 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 43, cps_511 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 44, cps_511 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 45, cps_511 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 46, cps_511 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 47, cps_511 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 48, cps_511 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_511 + 49, cps_511 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_511);

uint32_t cps_512[] = {
0x1717a, 0x1717b, 0x1717c, 0x1717d, 0x1717e, 0x1717f, 0x17180, 0x17181, 0x17182, 0x17183, 0x17184, 0x17185, 0x17186, 0x17187, 0x17188, 0x17189, 0x1718a, 0x1718b, 0x1718c, 0x1718d, 0x1718e, 0x1718f, 0x17190, 0x17191, 0x17192, 0x17193, 0x17194, 0x17195, 0x17196, 0x17197, 0x17198, 0x17199, 0x1719a, 0x1719b, 0x1719c, 0x1719d, 0x1719e, 0x1719f, 0x171a0, 0x171a1, 0x171a2, 0x171a3, 0x171a4, 0x171a5, 0x171a6, 0x171a7, 0x171a8, 0x171a9, 0x171aa, 0x171ab
};

void BM_collation_element_lookup_512(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 0, cps_512 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 1, cps_512 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 2, cps_512 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 3, cps_512 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 4, cps_512 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 5, cps_512 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 6, cps_512 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 7, cps_512 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 8, cps_512 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 9, cps_512 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 10, cps_512 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 11, cps_512 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 12, cps_512 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 13, cps_512 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 14, cps_512 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 15, cps_512 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 16, cps_512 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 17, cps_512 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 18, cps_512 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 19, cps_512 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 20, cps_512 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 21, cps_512 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 22, cps_512 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 23, cps_512 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 24, cps_512 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 25, cps_512 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 26, cps_512 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 27, cps_512 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 28, cps_512 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 29, cps_512 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 30, cps_512 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 31, cps_512 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 32, cps_512 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 33, cps_512 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 34, cps_512 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 35, cps_512 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 36, cps_512 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 37, cps_512 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 38, cps_512 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 39, cps_512 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 40, cps_512 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 41, cps_512 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 42, cps_512 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 43, cps_512 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 44, cps_512 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 45, cps_512 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 46, cps_512 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 47, cps_512 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 48, cps_512 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_512 + 49, cps_512 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_512);

uint32_t cps_513[] = {
0x171ac, 0x171ad, 0x171ae, 0x171af, 0x171b0, 0x171b1, 0x171b2, 0x171b3, 0x171b4, 0x171b5, 0x171b6, 0x171b7, 0x171b8, 0x171b9, 0x171ba, 0x171bb, 0x171bc, 0x171bd, 0x171be, 0x171bf, 0x171c0, 0x171c1, 0x171c2, 0x171c3, 0x171c4, 0x171c5, 0x171c6, 0x171c7, 0x171c8, 0x171c9, 0x171ca, 0x171cb, 0x171cc, 0x171cd, 0x171ce, 0x171cf, 0x171d0, 0x171d1, 0x171d2, 0x171d3, 0x171d4, 0x171d5, 0x171d6, 0x171d7, 0x171d8, 0x171d9, 0x171da, 0x171db, 0x171dc, 0x171dd
};

void BM_collation_element_lookup_513(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 0, cps_513 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 1, cps_513 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 2, cps_513 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 3, cps_513 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 4, cps_513 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 5, cps_513 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 6, cps_513 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 7, cps_513 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 8, cps_513 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 9, cps_513 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 10, cps_513 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 11, cps_513 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 12, cps_513 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 13, cps_513 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 14, cps_513 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 15, cps_513 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 16, cps_513 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 17, cps_513 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 18, cps_513 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 19, cps_513 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 20, cps_513 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 21, cps_513 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 22, cps_513 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 23, cps_513 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 24, cps_513 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 25, cps_513 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 26, cps_513 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 27, cps_513 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 28, cps_513 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 29, cps_513 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 30, cps_513 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 31, cps_513 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 32, cps_513 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 33, cps_513 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 34, cps_513 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 35, cps_513 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 36, cps_513 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 37, cps_513 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 38, cps_513 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 39, cps_513 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 40, cps_513 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 41, cps_513 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 42, cps_513 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 43, cps_513 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 44, cps_513 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 45, cps_513 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 46, cps_513 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 47, cps_513 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 48, cps_513 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_513 + 49, cps_513 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_513);

uint32_t cps_514[] = {
0x171de, 0x171df, 0x171e0, 0x171e1, 0x171e2, 0x171e3, 0x171e4, 0x171e5, 0x171e6, 0x171e7, 0x171e8, 0x171e9, 0x171ea, 0x171eb, 0x171ec, 0x171ed, 0x171ee, 0x171ef, 0x171f0, 0x171f1, 0x171f2, 0x171f3, 0x171f4, 0x171f5, 0x171f6, 0x171f7, 0x171f8, 0x171f9, 0x171fa, 0x171fb, 0x171fc, 0x171fd, 0x171fe, 0x171ff, 0x17200, 0x17201, 0x17202, 0x17203, 0x17204, 0x17205, 0x17206, 0x17207, 0x17208, 0x17209, 0x1720a, 0x1720b, 0x1720c, 0x1720d, 0x1720e, 0x1720f
};

void BM_collation_element_lookup_514(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 0, cps_514 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 1, cps_514 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 2, cps_514 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 3, cps_514 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 4, cps_514 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 5, cps_514 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 6, cps_514 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 7, cps_514 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 8, cps_514 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 9, cps_514 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 10, cps_514 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 11, cps_514 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 12, cps_514 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 13, cps_514 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 14, cps_514 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 15, cps_514 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 16, cps_514 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 17, cps_514 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 18, cps_514 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 19, cps_514 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 20, cps_514 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 21, cps_514 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 22, cps_514 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 23, cps_514 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 24, cps_514 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 25, cps_514 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 26, cps_514 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 27, cps_514 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 28, cps_514 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 29, cps_514 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 30, cps_514 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 31, cps_514 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 32, cps_514 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 33, cps_514 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 34, cps_514 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 35, cps_514 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 36, cps_514 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 37, cps_514 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 38, cps_514 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 39, cps_514 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 40, cps_514 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 41, cps_514 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 42, cps_514 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 43, cps_514 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 44, cps_514 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 45, cps_514 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 46, cps_514 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 47, cps_514 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 48, cps_514 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_514 + 49, cps_514 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_514);

uint32_t cps_515[] = {
0x17210, 0x17211, 0x17212, 0x17213, 0x17214, 0x17215, 0x17216, 0x17217, 0x17218, 0x17219, 0x1721a, 0x1721b, 0x1721c, 0x1721d, 0x1721e, 0x1721f, 0x17220, 0x17221, 0x17222, 0x17223, 0x17224, 0x17225, 0x17226, 0x17227, 0x17228, 0x17229, 0x1722a, 0x1722b, 0x1722c, 0x1722d, 0x1722e, 0x1722f, 0x17230, 0x17231, 0x17232, 0x17233, 0x17234, 0x17235, 0x17236, 0x17237, 0x17238, 0x17239, 0x1723a, 0x1723b, 0x1723c, 0x1723d, 0x1723e, 0x1723f, 0x17240, 0x17241
};

void BM_collation_element_lookup_515(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 0, cps_515 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 1, cps_515 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 2, cps_515 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 3, cps_515 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 4, cps_515 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 5, cps_515 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 6, cps_515 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 7, cps_515 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 8, cps_515 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 9, cps_515 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 10, cps_515 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 11, cps_515 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 12, cps_515 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 13, cps_515 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 14, cps_515 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 15, cps_515 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 16, cps_515 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 17, cps_515 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 18, cps_515 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 19, cps_515 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 20, cps_515 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 21, cps_515 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 22, cps_515 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 23, cps_515 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 24, cps_515 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 25, cps_515 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 26, cps_515 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 27, cps_515 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 28, cps_515 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 29, cps_515 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 30, cps_515 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 31, cps_515 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 32, cps_515 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 33, cps_515 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 34, cps_515 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 35, cps_515 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 36, cps_515 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 37, cps_515 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 38, cps_515 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 39, cps_515 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 40, cps_515 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 41, cps_515 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 42, cps_515 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 43, cps_515 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 44, cps_515 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 45, cps_515 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 46, cps_515 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 47, cps_515 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 48, cps_515 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_515 + 49, cps_515 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_515);

uint32_t cps_516[] = {
0x17242, 0x17243, 0x17244, 0x17245, 0x17246, 0x17247, 0x17248, 0x17249, 0x1724a, 0x1724b, 0x1724c, 0x1724d, 0x1724e, 0x1724f, 0x17250, 0x17251, 0x17252, 0x17253, 0x17254, 0x17255, 0x17256, 0x17257, 0x17258, 0x17259, 0x1725a, 0x1725b, 0x1725c, 0x1725d, 0x1725e, 0x1725f, 0x17260, 0x17261, 0x17262, 0x17263, 0x17264, 0x17265, 0x17266, 0x17267, 0x17268, 0x17269, 0x1726a, 0x1726b, 0x1726c, 0x1726d, 0x1726e, 0x1726f, 0x17270, 0x17271, 0x17272, 0x17273
};

void BM_collation_element_lookup_516(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 0, cps_516 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 1, cps_516 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 2, cps_516 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 3, cps_516 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 4, cps_516 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 5, cps_516 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 6, cps_516 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 7, cps_516 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 8, cps_516 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 9, cps_516 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 10, cps_516 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 11, cps_516 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 12, cps_516 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 13, cps_516 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 14, cps_516 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 15, cps_516 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 16, cps_516 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 17, cps_516 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 18, cps_516 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 19, cps_516 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 20, cps_516 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 21, cps_516 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 22, cps_516 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 23, cps_516 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 24, cps_516 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 25, cps_516 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 26, cps_516 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 27, cps_516 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 28, cps_516 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 29, cps_516 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 30, cps_516 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 31, cps_516 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 32, cps_516 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 33, cps_516 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 34, cps_516 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 35, cps_516 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 36, cps_516 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 37, cps_516 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 38, cps_516 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 39, cps_516 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 40, cps_516 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 41, cps_516 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 42, cps_516 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 43, cps_516 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 44, cps_516 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 45, cps_516 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 46, cps_516 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 47, cps_516 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 48, cps_516 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_516 + 49, cps_516 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_516);

uint32_t cps_517[] = {
0x17274, 0x17275, 0x17276, 0x17277, 0x17278, 0x17279, 0x1727a, 0x1727b, 0x1727c, 0x1727d, 0x1727e, 0x1727f, 0x17280, 0x17281, 0x17282, 0x17283, 0x17284, 0x17285, 0x17286, 0x17287, 0x17288, 0x17289, 0x1728a, 0x1728b, 0x1728c, 0x1728d, 0x1728e, 0x1728f, 0x17290, 0x17291, 0x17292, 0x17293, 0x17294, 0x17295, 0x17296, 0x17297, 0x17298, 0x17299, 0x1729a, 0x1729b, 0x1729c, 0x1729d, 0x1729e, 0x1729f, 0x172a0, 0x172a1, 0x172a2, 0x172a3, 0x172a4, 0x172a5
};

void BM_collation_element_lookup_517(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 0, cps_517 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 1, cps_517 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 2, cps_517 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 3, cps_517 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 4, cps_517 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 5, cps_517 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 6, cps_517 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 7, cps_517 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 8, cps_517 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 9, cps_517 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 10, cps_517 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 11, cps_517 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 12, cps_517 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 13, cps_517 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 14, cps_517 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 15, cps_517 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 16, cps_517 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 17, cps_517 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 18, cps_517 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 19, cps_517 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 20, cps_517 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 21, cps_517 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 22, cps_517 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 23, cps_517 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 24, cps_517 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 25, cps_517 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 26, cps_517 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 27, cps_517 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 28, cps_517 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 29, cps_517 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 30, cps_517 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 31, cps_517 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 32, cps_517 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 33, cps_517 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 34, cps_517 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 35, cps_517 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 36, cps_517 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 37, cps_517 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 38, cps_517 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 39, cps_517 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 40, cps_517 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 41, cps_517 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 42, cps_517 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 43, cps_517 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 44, cps_517 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 45, cps_517 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 46, cps_517 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 47, cps_517 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 48, cps_517 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_517 + 49, cps_517 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_517);

uint32_t cps_518[] = {
0x172a6, 0x172a7, 0x172a8, 0x172a9, 0x172aa, 0x172ab, 0x172ac, 0x172ad, 0x172ae, 0x172af, 0x172b0, 0x172b1, 0x172b2, 0x172b3, 0x172b4, 0x172b5, 0x172b6, 0x172b7, 0x172b8, 0x172b9, 0x172ba, 0x172bb, 0x172bc, 0x172bd, 0x172be, 0x172bf, 0x172c0, 0x172c1, 0x172c2, 0x172c3, 0x172c4, 0x172c5, 0x172c6, 0x172c7, 0x172c8, 0x172c9, 0x172ca, 0x172cb, 0x172cc, 0x172cd, 0x172ce, 0x172cf, 0x172d0, 0x172d1, 0x172d2, 0x172d3, 0x172d4, 0x172d5, 0x172d6, 0x172d7
};

void BM_collation_element_lookup_518(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 0, cps_518 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 1, cps_518 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 2, cps_518 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 3, cps_518 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 4, cps_518 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 5, cps_518 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 6, cps_518 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 7, cps_518 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 8, cps_518 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 9, cps_518 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 10, cps_518 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 11, cps_518 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 12, cps_518 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 13, cps_518 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 14, cps_518 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 15, cps_518 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 16, cps_518 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 17, cps_518 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 18, cps_518 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 19, cps_518 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 20, cps_518 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 21, cps_518 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 22, cps_518 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 23, cps_518 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 24, cps_518 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 25, cps_518 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 26, cps_518 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 27, cps_518 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 28, cps_518 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 29, cps_518 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 30, cps_518 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 31, cps_518 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 32, cps_518 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 33, cps_518 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 34, cps_518 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 35, cps_518 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 36, cps_518 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 37, cps_518 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 38, cps_518 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 39, cps_518 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 40, cps_518 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 41, cps_518 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 42, cps_518 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 43, cps_518 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 44, cps_518 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 45, cps_518 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 46, cps_518 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 47, cps_518 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 48, cps_518 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_518 + 49, cps_518 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_518);

uint32_t cps_519[] = {
0x172d8, 0x172d9, 0x172da, 0x172db, 0x172dc, 0x172dd, 0x172de, 0x172df, 0x172e0, 0x172e1, 0x172e2, 0x172e3, 0x172e4, 0x172e5, 0x172e6, 0x172e7, 0x172e8, 0x172e9, 0x172ea, 0x172eb, 0x172ec, 0x172ed, 0x172ee, 0x172ef, 0x172f0, 0x172f1, 0x172f2, 0x172f3, 0x172f4, 0x172f5, 0x172f6, 0x172f7, 0x172f8, 0x172f9, 0x172fa, 0x172fb, 0x172fc, 0x172fd, 0x172fe, 0x172ff, 0x17300, 0x17301, 0x17302, 0x17303, 0x17304, 0x17305, 0x17306, 0x17307, 0x17308, 0x17309
};

void BM_collation_element_lookup_519(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 0, cps_519 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 1, cps_519 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 2, cps_519 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 3, cps_519 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 4, cps_519 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 5, cps_519 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 6, cps_519 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 7, cps_519 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 8, cps_519 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 9, cps_519 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 10, cps_519 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 11, cps_519 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 12, cps_519 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 13, cps_519 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 14, cps_519 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 15, cps_519 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 16, cps_519 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 17, cps_519 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 18, cps_519 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 19, cps_519 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 20, cps_519 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 21, cps_519 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 22, cps_519 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 23, cps_519 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 24, cps_519 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 25, cps_519 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 26, cps_519 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 27, cps_519 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 28, cps_519 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 29, cps_519 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 30, cps_519 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 31, cps_519 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 32, cps_519 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 33, cps_519 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 34, cps_519 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 35, cps_519 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 36, cps_519 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 37, cps_519 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 38, cps_519 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 39, cps_519 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 40, cps_519 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 41, cps_519 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 42, cps_519 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 43, cps_519 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 44, cps_519 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 45, cps_519 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 46, cps_519 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 47, cps_519 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 48, cps_519 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_519 + 49, cps_519 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_519);

uint32_t cps_520[] = {
0x1730a, 0x1730b, 0x1730c, 0x1730d, 0x1730e, 0x1730f, 0x17310, 0x17311, 0x17312, 0x17313, 0x17314, 0x17315, 0x17316, 0x17317, 0x17318, 0x17319, 0x1731a, 0x1731b, 0x1731c, 0x1731d, 0x1731e, 0x1731f, 0x17320, 0x17321, 0x17322, 0x17323, 0x17324, 0x17325, 0x17326, 0x17327, 0x17328, 0x17329, 0x1732a, 0x1732b, 0x1732c, 0x1732d, 0x1732e, 0x1732f, 0x17330, 0x17331, 0x17332, 0x17333, 0x17334, 0x17335, 0x17336, 0x17337, 0x17338, 0x17339, 0x1733a, 0x1733b
};

void BM_collation_element_lookup_520(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 0, cps_520 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 1, cps_520 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 2, cps_520 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 3, cps_520 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 4, cps_520 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 5, cps_520 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 6, cps_520 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 7, cps_520 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 8, cps_520 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 9, cps_520 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 10, cps_520 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 11, cps_520 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 12, cps_520 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 13, cps_520 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 14, cps_520 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 15, cps_520 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 16, cps_520 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 17, cps_520 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 18, cps_520 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 19, cps_520 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 20, cps_520 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 21, cps_520 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 22, cps_520 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 23, cps_520 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 24, cps_520 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 25, cps_520 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 26, cps_520 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 27, cps_520 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 28, cps_520 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 29, cps_520 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 30, cps_520 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 31, cps_520 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 32, cps_520 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 33, cps_520 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 34, cps_520 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 35, cps_520 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 36, cps_520 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 37, cps_520 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 38, cps_520 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 39, cps_520 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 40, cps_520 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 41, cps_520 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 42, cps_520 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 43, cps_520 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 44, cps_520 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 45, cps_520 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 46, cps_520 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 47, cps_520 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 48, cps_520 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_520 + 49, cps_520 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_520);

uint32_t cps_521[] = {
0x1733c, 0x1733d, 0x1733e, 0x1733f, 0x17340, 0x17341, 0x17342, 0x17343, 0x17344, 0x17345, 0x17346, 0x17347, 0x17348, 0x17349, 0x1734a, 0x1734b, 0x1734c, 0x1734d, 0x1734e, 0x1734f, 0x17350, 0x17351, 0x17352, 0x17353, 0x17354, 0x17355, 0x17356, 0x17357, 0x17358, 0x17359, 0x1735a, 0x1735b, 0x1735c, 0x1735d, 0x1735e, 0x1735f, 0x17360, 0x17361, 0x17362, 0x17363, 0x17364, 0x17365, 0x17366, 0x17367, 0x17368, 0x17369, 0x1736a, 0x1736b, 0x1736c, 0x1736d
};

void BM_collation_element_lookup_521(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 0, cps_521 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 1, cps_521 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 2, cps_521 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 3, cps_521 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 4, cps_521 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 5, cps_521 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 6, cps_521 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 7, cps_521 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 8, cps_521 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 9, cps_521 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 10, cps_521 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 11, cps_521 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 12, cps_521 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 13, cps_521 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 14, cps_521 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 15, cps_521 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 16, cps_521 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 17, cps_521 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 18, cps_521 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 19, cps_521 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 20, cps_521 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 21, cps_521 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 22, cps_521 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 23, cps_521 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 24, cps_521 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 25, cps_521 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 26, cps_521 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 27, cps_521 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 28, cps_521 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 29, cps_521 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 30, cps_521 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 31, cps_521 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 32, cps_521 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 33, cps_521 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 34, cps_521 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 35, cps_521 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 36, cps_521 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 37, cps_521 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 38, cps_521 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 39, cps_521 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 40, cps_521 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 41, cps_521 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 42, cps_521 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 43, cps_521 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 44, cps_521 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 45, cps_521 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 46, cps_521 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 47, cps_521 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 48, cps_521 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_521 + 49, cps_521 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_521);

uint32_t cps_522[] = {
0x1736e, 0x1736f, 0x17370, 0x17371, 0x17372, 0x17373, 0x17374, 0x17375, 0x17376, 0x17377, 0x17378, 0x17379, 0x1737a, 0x1737b, 0x1737c, 0x1737d, 0x1737e, 0x1737f, 0x17380, 0x17381, 0x17382, 0x17383, 0x17384, 0x17385, 0x17386, 0x17387, 0x17388, 0x17389, 0x1738a, 0x1738b, 0x1738c, 0x1738d, 0x1738e, 0x1738f, 0x17390, 0x17391, 0x17392, 0x17393, 0x17394, 0x17395, 0x17396, 0x17397, 0x17398, 0x17399, 0x1739a, 0x1739b, 0x1739c, 0x1739d, 0x1739e, 0x1739f
};

void BM_collation_element_lookup_522(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 0, cps_522 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 1, cps_522 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 2, cps_522 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 3, cps_522 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 4, cps_522 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 5, cps_522 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 6, cps_522 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 7, cps_522 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 8, cps_522 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 9, cps_522 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 10, cps_522 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 11, cps_522 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 12, cps_522 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 13, cps_522 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 14, cps_522 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 15, cps_522 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 16, cps_522 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 17, cps_522 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 18, cps_522 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 19, cps_522 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 20, cps_522 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 21, cps_522 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 22, cps_522 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 23, cps_522 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 24, cps_522 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 25, cps_522 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 26, cps_522 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 27, cps_522 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 28, cps_522 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 29, cps_522 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 30, cps_522 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 31, cps_522 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 32, cps_522 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 33, cps_522 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 34, cps_522 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 35, cps_522 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 36, cps_522 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 37, cps_522 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 38, cps_522 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 39, cps_522 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 40, cps_522 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 41, cps_522 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 42, cps_522 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 43, cps_522 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 44, cps_522 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 45, cps_522 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 46, cps_522 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 47, cps_522 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 48, cps_522 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_522 + 49, cps_522 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_522);

uint32_t cps_523[] = {
0x173a0, 0x173a1, 0x173a2, 0x173a3, 0x173a4, 0x173a5, 0x173a6, 0x173a7, 0x173a8, 0x173a9, 0x173aa, 0x173ab, 0x173ac, 0x173ad, 0x173ae, 0x173af, 0x173b0, 0x173b1, 0x173b2, 0x173b3, 0x173b4, 0x173b5, 0x173b6, 0x173b7, 0x173b8, 0x173b9, 0x173ba, 0x173bb, 0x173bc, 0x173bd, 0x173be, 0x173bf, 0x173c0, 0x173c1, 0x173c2, 0x173c3, 0x173c4, 0x173c5, 0x173c6, 0x173c7, 0x173c8, 0x173c9, 0x173ca, 0x173cb, 0x173cc, 0x173cd, 0x173ce, 0x173cf, 0x173d0, 0x173d1
};

void BM_collation_element_lookup_523(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 0, cps_523 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 1, cps_523 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 2, cps_523 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 3, cps_523 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 4, cps_523 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 5, cps_523 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 6, cps_523 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 7, cps_523 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 8, cps_523 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 9, cps_523 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 10, cps_523 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 11, cps_523 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 12, cps_523 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 13, cps_523 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 14, cps_523 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 15, cps_523 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 16, cps_523 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 17, cps_523 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 18, cps_523 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 19, cps_523 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 20, cps_523 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 21, cps_523 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 22, cps_523 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 23, cps_523 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 24, cps_523 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 25, cps_523 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 26, cps_523 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 27, cps_523 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 28, cps_523 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 29, cps_523 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 30, cps_523 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 31, cps_523 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 32, cps_523 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 33, cps_523 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 34, cps_523 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 35, cps_523 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 36, cps_523 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 37, cps_523 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 38, cps_523 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 39, cps_523 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 40, cps_523 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 41, cps_523 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 42, cps_523 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 43, cps_523 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 44, cps_523 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 45, cps_523 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 46, cps_523 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 47, cps_523 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 48, cps_523 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_523 + 49, cps_523 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_523);

uint32_t cps_524[] = {
0x173d2, 0x173d3, 0x173d4, 0x173d5, 0x173d6, 0x173d7, 0x173d8, 0x173d9, 0x173da, 0x173db, 0x173dc, 0x173dd, 0x173de, 0x173df, 0x173e0, 0x173e1, 0x173e2, 0x173e3, 0x173e4, 0x173e5, 0x173e6, 0x173e7, 0x173e8, 0x173e9, 0x173ea, 0x173eb, 0x173ec, 0x173ed, 0x173ee, 0x173ef, 0x173f0, 0x173f1, 0x173f2, 0x173f3, 0x173f4, 0x173f5, 0x173f6, 0x173f7, 0x173f8, 0x173f9, 0x173fa, 0x173fb, 0x173fc, 0x173fd, 0x173fe, 0x173ff, 0x17400, 0x17401, 0x17402, 0x17403
};

void BM_collation_element_lookup_524(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 0, cps_524 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 1, cps_524 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 2, cps_524 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 3, cps_524 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 4, cps_524 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 5, cps_524 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 6, cps_524 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 7, cps_524 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 8, cps_524 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 9, cps_524 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 10, cps_524 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 11, cps_524 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 12, cps_524 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 13, cps_524 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 14, cps_524 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 15, cps_524 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 16, cps_524 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 17, cps_524 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 18, cps_524 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 19, cps_524 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 20, cps_524 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 21, cps_524 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 22, cps_524 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 23, cps_524 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 24, cps_524 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 25, cps_524 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 26, cps_524 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 27, cps_524 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 28, cps_524 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 29, cps_524 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 30, cps_524 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 31, cps_524 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 32, cps_524 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 33, cps_524 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 34, cps_524 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 35, cps_524 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 36, cps_524 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 37, cps_524 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 38, cps_524 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 39, cps_524 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 40, cps_524 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 41, cps_524 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 42, cps_524 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 43, cps_524 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 44, cps_524 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 45, cps_524 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 46, cps_524 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 47, cps_524 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 48, cps_524 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_524 + 49, cps_524 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_524);

uint32_t cps_525[] = {
0x17404, 0x17405, 0x17406, 0x17407, 0x17408, 0x17409, 0x1740a, 0x1740b, 0x1740c, 0x1740d, 0x1740e, 0x1740f, 0x17410, 0x17411, 0x17412, 0x17413, 0x17414, 0x17415, 0x17416, 0x17417, 0x17418, 0x17419, 0x1741a, 0x1741b, 0x1741c, 0x1741d, 0x1741e, 0x1741f, 0x17420, 0x17421, 0x17422, 0x17423, 0x17424, 0x17425, 0x17426, 0x17427, 0x17428, 0x17429, 0x1742a, 0x1742b, 0x1742c, 0x1742d, 0x1742e, 0x1742f, 0x17430, 0x17431, 0x17432, 0x17433, 0x17434, 0x17435
};

void BM_collation_element_lookup_525(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 0, cps_525 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 1, cps_525 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 2, cps_525 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 3, cps_525 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 4, cps_525 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 5, cps_525 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 6, cps_525 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 7, cps_525 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 8, cps_525 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 9, cps_525 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 10, cps_525 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 11, cps_525 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 12, cps_525 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 13, cps_525 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 14, cps_525 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 15, cps_525 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 16, cps_525 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 17, cps_525 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 18, cps_525 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 19, cps_525 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 20, cps_525 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 21, cps_525 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 22, cps_525 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 23, cps_525 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 24, cps_525 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 25, cps_525 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 26, cps_525 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 27, cps_525 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 28, cps_525 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 29, cps_525 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 30, cps_525 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 31, cps_525 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 32, cps_525 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 33, cps_525 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 34, cps_525 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 35, cps_525 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 36, cps_525 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 37, cps_525 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 38, cps_525 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 39, cps_525 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 40, cps_525 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 41, cps_525 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 42, cps_525 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 43, cps_525 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 44, cps_525 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 45, cps_525 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 46, cps_525 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 47, cps_525 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 48, cps_525 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_525 + 49, cps_525 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_525);

uint32_t cps_526[] = {
0x17436, 0x17437, 0x17438, 0x17439, 0x1743a, 0x1743b, 0x1743c, 0x1743d, 0x1743e, 0x1743f, 0x17440, 0x17441, 0x17442, 0x17443, 0x17444, 0x17445, 0x17446, 0x17447, 0x17448, 0x17449, 0x1744a, 0x1744b, 0x1744c, 0x1744d, 0x1744e, 0x1744f, 0x17450, 0x17451, 0x17452, 0x17453, 0x17454, 0x17455, 0x17456, 0x17457, 0x17458, 0x17459, 0x1745a, 0x1745b, 0x1745c, 0x1745d, 0x1745e, 0x1745f, 0x17460, 0x17461, 0x17462, 0x17463, 0x17464, 0x17465, 0x17466, 0x17467
};

void BM_collation_element_lookup_526(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 0, cps_526 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 1, cps_526 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 2, cps_526 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 3, cps_526 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 4, cps_526 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 5, cps_526 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 6, cps_526 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 7, cps_526 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 8, cps_526 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 9, cps_526 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 10, cps_526 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 11, cps_526 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 12, cps_526 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 13, cps_526 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 14, cps_526 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 15, cps_526 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 16, cps_526 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 17, cps_526 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 18, cps_526 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 19, cps_526 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 20, cps_526 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 21, cps_526 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 22, cps_526 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 23, cps_526 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 24, cps_526 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 25, cps_526 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 26, cps_526 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 27, cps_526 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 28, cps_526 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 29, cps_526 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 30, cps_526 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 31, cps_526 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 32, cps_526 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 33, cps_526 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 34, cps_526 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 35, cps_526 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 36, cps_526 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 37, cps_526 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 38, cps_526 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 39, cps_526 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 40, cps_526 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 41, cps_526 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 42, cps_526 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 43, cps_526 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 44, cps_526 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 45, cps_526 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 46, cps_526 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 47, cps_526 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 48, cps_526 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_526 + 49, cps_526 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_526);

uint32_t cps_527[] = {
0x17468, 0x17469, 0x1746a, 0x1746b, 0x1746c, 0x1746d, 0x1746e, 0x1746f, 0x17470, 0x17471, 0x17472, 0x17473, 0x17474, 0x17475, 0x17476, 0x17477, 0x17478, 0x17479, 0x1747a, 0x1747b, 0x1747c, 0x1747d, 0x1747e, 0x1747f, 0x17480, 0x17481, 0x17482, 0x17483, 0x17484, 0x17485, 0x17486, 0x17487, 0x17488, 0x17489, 0x1748a, 0x1748b, 0x1748c, 0x1748d, 0x1748e, 0x1748f, 0x17490, 0x17491, 0x17492, 0x17493, 0x17494, 0x17495, 0x17496, 0x17497, 0x17498, 0x17499
};

void BM_collation_element_lookup_527(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 0, cps_527 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 1, cps_527 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 2, cps_527 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 3, cps_527 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 4, cps_527 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 5, cps_527 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 6, cps_527 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 7, cps_527 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 8, cps_527 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 9, cps_527 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 10, cps_527 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 11, cps_527 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 12, cps_527 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 13, cps_527 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 14, cps_527 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 15, cps_527 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 16, cps_527 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 17, cps_527 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 18, cps_527 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 19, cps_527 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 20, cps_527 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 21, cps_527 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 22, cps_527 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 23, cps_527 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 24, cps_527 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 25, cps_527 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 26, cps_527 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 27, cps_527 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 28, cps_527 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 29, cps_527 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 30, cps_527 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 31, cps_527 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 32, cps_527 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 33, cps_527 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 34, cps_527 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 35, cps_527 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 36, cps_527 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 37, cps_527 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 38, cps_527 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 39, cps_527 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 40, cps_527 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 41, cps_527 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 42, cps_527 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 43, cps_527 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 44, cps_527 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 45, cps_527 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 46, cps_527 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 47, cps_527 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 48, cps_527 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_527 + 49, cps_527 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_527);

uint32_t cps_528[] = {
0x1749a, 0x1749b, 0x1749c, 0x1749d, 0x1749e, 0x1749f, 0x174a0, 0x174a1, 0x174a2, 0x174a3, 0x174a4, 0x174a5, 0x174a6, 0x174a7, 0x174a8, 0x174a9, 0x174aa, 0x174ab, 0x174ac, 0x174ad, 0x174ae, 0x174af, 0x174b0, 0x174b1, 0x174b2, 0x174b3, 0x174b4, 0x174b5, 0x174b6, 0x174b7, 0x174b8, 0x174b9, 0x174ba, 0x174bb, 0x174bc, 0x174bd, 0x174be, 0x174bf, 0x174c0, 0x174c1, 0x174c2, 0x174c3, 0x174c4, 0x174c5, 0x174c6, 0x174c7, 0x174c8, 0x174c9, 0x174ca, 0x174cb
};

void BM_collation_element_lookup_528(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 0, cps_528 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 1, cps_528 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 2, cps_528 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 3, cps_528 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 4, cps_528 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 5, cps_528 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 6, cps_528 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 7, cps_528 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 8, cps_528 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 9, cps_528 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 10, cps_528 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 11, cps_528 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 12, cps_528 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 13, cps_528 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 14, cps_528 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 15, cps_528 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 16, cps_528 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 17, cps_528 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 18, cps_528 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 19, cps_528 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 20, cps_528 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 21, cps_528 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 22, cps_528 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 23, cps_528 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 24, cps_528 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 25, cps_528 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 26, cps_528 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 27, cps_528 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 28, cps_528 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 29, cps_528 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 30, cps_528 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 31, cps_528 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 32, cps_528 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 33, cps_528 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 34, cps_528 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 35, cps_528 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 36, cps_528 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 37, cps_528 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 38, cps_528 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 39, cps_528 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 40, cps_528 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 41, cps_528 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 42, cps_528 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 43, cps_528 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 44, cps_528 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 45, cps_528 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 46, cps_528 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 47, cps_528 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 48, cps_528 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_528 + 49, cps_528 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_528);

uint32_t cps_529[] = {
0x174cc, 0x174cd, 0x174ce, 0x174cf, 0x174d0, 0x174d1, 0x174d2, 0x174d3, 0x174d4, 0x174d5, 0x174d6, 0x174d7, 0x174d8, 0x174d9, 0x174da, 0x174db, 0x174dc, 0x174dd, 0x174de, 0x174df, 0x174e0, 0x174e1, 0x174e2, 0x174e3, 0x174e4, 0x174e5, 0x174e6, 0x174e7, 0x174e8, 0x174e9, 0x174ea, 0x174eb, 0x174ec, 0x174ed, 0x174ee, 0x174ef, 0x174f0, 0x174f1, 0x174f2, 0x174f3, 0x174f4, 0x174f5, 0x174f6, 0x174f7, 0x174f8, 0x174f9, 0x174fa, 0x174fb, 0x174fc, 0x174fd
};

void BM_collation_element_lookup_529(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 0, cps_529 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 1, cps_529 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 2, cps_529 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 3, cps_529 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 4, cps_529 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 5, cps_529 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 6, cps_529 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 7, cps_529 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 8, cps_529 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 9, cps_529 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 10, cps_529 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 11, cps_529 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 12, cps_529 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 13, cps_529 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 14, cps_529 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 15, cps_529 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 16, cps_529 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 17, cps_529 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 18, cps_529 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 19, cps_529 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 20, cps_529 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 21, cps_529 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 22, cps_529 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 23, cps_529 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 24, cps_529 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 25, cps_529 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 26, cps_529 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 27, cps_529 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 28, cps_529 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 29, cps_529 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 30, cps_529 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 31, cps_529 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 32, cps_529 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 33, cps_529 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 34, cps_529 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 35, cps_529 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 36, cps_529 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 37, cps_529 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 38, cps_529 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 39, cps_529 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 40, cps_529 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 41, cps_529 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 42, cps_529 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 43, cps_529 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 44, cps_529 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 45, cps_529 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 46, cps_529 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 47, cps_529 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 48, cps_529 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_529 + 49, cps_529 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_529);

uint32_t cps_530[] = {
0x174fe, 0x174ff, 0x17500, 0x17501, 0x17502, 0x17503, 0x17504, 0x17505, 0x17506, 0x17507, 0x17508, 0x17509, 0x1750a, 0x1750b, 0x1750c, 0x1750d, 0x1750e, 0x1750f, 0x17510, 0x17511, 0x17512, 0x17513, 0x17514, 0x17515, 0x17516, 0x17517, 0x17518, 0x17519, 0x1751a, 0x1751b, 0x1751c, 0x1751d, 0x1751e, 0x1751f, 0x17520, 0x17521, 0x17522, 0x17523, 0x17524, 0x17525, 0x17526, 0x17527, 0x17528, 0x17529, 0x1752a, 0x1752b, 0x1752c, 0x1752d, 0x1752e, 0x1752f
};

void BM_collation_element_lookup_530(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 0, cps_530 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 1, cps_530 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 2, cps_530 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 3, cps_530 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 4, cps_530 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 5, cps_530 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 6, cps_530 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 7, cps_530 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 8, cps_530 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 9, cps_530 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 10, cps_530 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 11, cps_530 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 12, cps_530 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 13, cps_530 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 14, cps_530 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 15, cps_530 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 16, cps_530 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 17, cps_530 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 18, cps_530 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 19, cps_530 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 20, cps_530 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 21, cps_530 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 22, cps_530 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 23, cps_530 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 24, cps_530 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 25, cps_530 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 26, cps_530 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 27, cps_530 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 28, cps_530 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 29, cps_530 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 30, cps_530 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 31, cps_530 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 32, cps_530 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 33, cps_530 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 34, cps_530 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 35, cps_530 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 36, cps_530 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 37, cps_530 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 38, cps_530 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 39, cps_530 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 40, cps_530 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 41, cps_530 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 42, cps_530 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 43, cps_530 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 44, cps_530 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 45, cps_530 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 46, cps_530 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 47, cps_530 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 48, cps_530 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_530 + 49, cps_530 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_530);

uint32_t cps_531[] = {
0x17530, 0x17531, 0x17532, 0x17533, 0x17534, 0x17535, 0x17536, 0x17537, 0x17538, 0x17539, 0x1753a, 0x1753b, 0x1753c, 0x1753d, 0x1753e, 0x1753f, 0x17540, 0x17541, 0x17542, 0x17543, 0x17544, 0x17545, 0x17546, 0x17547, 0x17548, 0x17549, 0x1754a, 0x1754b, 0x1754c, 0x1754d, 0x1754e, 0x1754f, 0x17550, 0x17551, 0x17552, 0x17553, 0x17554, 0x17555, 0x17556, 0x17557, 0x17558, 0x17559, 0x1755a, 0x1755b, 0x1755c, 0x1755d, 0x1755e, 0x1755f, 0x17560, 0x17561
};

void BM_collation_element_lookup_531(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 0, cps_531 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 1, cps_531 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 2, cps_531 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 3, cps_531 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 4, cps_531 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 5, cps_531 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 6, cps_531 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 7, cps_531 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 8, cps_531 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 9, cps_531 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 10, cps_531 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 11, cps_531 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 12, cps_531 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 13, cps_531 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 14, cps_531 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 15, cps_531 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 16, cps_531 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 17, cps_531 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 18, cps_531 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 19, cps_531 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 20, cps_531 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 21, cps_531 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 22, cps_531 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 23, cps_531 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 24, cps_531 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 25, cps_531 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 26, cps_531 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 27, cps_531 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 28, cps_531 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 29, cps_531 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 30, cps_531 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 31, cps_531 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 32, cps_531 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 33, cps_531 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 34, cps_531 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 35, cps_531 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 36, cps_531 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 37, cps_531 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 38, cps_531 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 39, cps_531 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 40, cps_531 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 41, cps_531 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 42, cps_531 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 43, cps_531 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 44, cps_531 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 45, cps_531 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 46, cps_531 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 47, cps_531 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 48, cps_531 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_531 + 49, cps_531 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_531);

uint32_t cps_532[] = {
0x17562, 0x17563, 0x17564, 0x17565, 0x17566, 0x17567, 0x17568, 0x17569, 0x1756a, 0x1756b, 0x1756c, 0x1756d, 0x1756e, 0x1756f, 0x17570, 0x17571, 0x17572, 0x17573, 0x17574, 0x17575, 0x17576, 0x17577, 0x17578, 0x17579, 0x1757a, 0x1757b, 0x1757c, 0x1757d, 0x1757e, 0x1757f, 0x17580, 0x17581, 0x17582, 0x17583, 0x17584, 0x17585, 0x17586, 0x17587, 0x17588, 0x17589, 0x1758a, 0x1758b, 0x1758c, 0x1758d, 0x1758e, 0x1758f, 0x17590, 0x17591, 0x17592, 0x17593
};

void BM_collation_element_lookup_532(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 0, cps_532 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 1, cps_532 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 2, cps_532 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 3, cps_532 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 4, cps_532 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 5, cps_532 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 6, cps_532 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 7, cps_532 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 8, cps_532 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 9, cps_532 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 10, cps_532 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 11, cps_532 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 12, cps_532 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 13, cps_532 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 14, cps_532 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 15, cps_532 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 16, cps_532 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 17, cps_532 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 18, cps_532 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 19, cps_532 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 20, cps_532 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 21, cps_532 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 22, cps_532 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 23, cps_532 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 24, cps_532 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 25, cps_532 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 26, cps_532 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 27, cps_532 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 28, cps_532 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 29, cps_532 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 30, cps_532 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 31, cps_532 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 32, cps_532 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 33, cps_532 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 34, cps_532 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 35, cps_532 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 36, cps_532 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 37, cps_532 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 38, cps_532 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 39, cps_532 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 40, cps_532 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 41, cps_532 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 42, cps_532 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 43, cps_532 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 44, cps_532 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 45, cps_532 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 46, cps_532 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 47, cps_532 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 48, cps_532 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_532 + 49, cps_532 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_532);

uint32_t cps_533[] = {
0x17594, 0x17595, 0x17596, 0x17597, 0x17598, 0x17599, 0x1759a, 0x1759b, 0x1759c, 0x1759d, 0x1759e, 0x1759f, 0x175a0, 0x175a1, 0x175a2, 0x175a3, 0x175a4, 0x175a5, 0x175a6, 0x175a7, 0x175a8, 0x175a9, 0x175aa, 0x175ab, 0x175ac, 0x175ad, 0x175ae, 0x175af, 0x175b0, 0x175b1, 0x175b2, 0x175b3, 0x175b4, 0x175b5, 0x175b6, 0x175b7, 0x175b8, 0x175b9, 0x175ba, 0x175bb, 0x175bc, 0x175bd, 0x175be, 0x175bf, 0x175c0, 0x175c1, 0x175c2, 0x175c3, 0x175c4, 0x175c5
};

void BM_collation_element_lookup_533(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 0, cps_533 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 1, cps_533 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 2, cps_533 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 3, cps_533 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 4, cps_533 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 5, cps_533 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 6, cps_533 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 7, cps_533 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 8, cps_533 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 9, cps_533 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 10, cps_533 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 11, cps_533 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 12, cps_533 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 13, cps_533 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 14, cps_533 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 15, cps_533 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 16, cps_533 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 17, cps_533 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 18, cps_533 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 19, cps_533 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 20, cps_533 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 21, cps_533 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 22, cps_533 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 23, cps_533 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 24, cps_533 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 25, cps_533 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 26, cps_533 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 27, cps_533 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 28, cps_533 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 29, cps_533 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 30, cps_533 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 31, cps_533 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 32, cps_533 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 33, cps_533 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 34, cps_533 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 35, cps_533 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 36, cps_533 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 37, cps_533 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 38, cps_533 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 39, cps_533 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 40, cps_533 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 41, cps_533 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 42, cps_533 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 43, cps_533 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 44, cps_533 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 45, cps_533 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 46, cps_533 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 47, cps_533 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 48, cps_533 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_533 + 49, cps_533 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_533);

uint32_t cps_534[] = {
0x175c6, 0x175c7, 0x175c8, 0x175c9, 0x175ca, 0x175cb, 0x175cc, 0x175cd, 0x175ce, 0x175cf, 0x175d0, 0x175d1, 0x175d2, 0x175d3, 0x175d4, 0x175d5, 0x175d6, 0x175d7, 0x175d8, 0x175d9, 0x175da, 0x175db, 0x175dc, 0x175dd, 0x175de, 0x175df, 0x175e0, 0x175e1, 0x175e2, 0x175e3, 0x175e4, 0x175e5, 0x175e6, 0x175e7, 0x175e8, 0x175e9, 0x175ea, 0x175eb, 0x175ec, 0x175ed, 0x175ee, 0x175ef, 0x175f0, 0x175f1, 0x175f2, 0x175f3, 0x175f4, 0x175f5, 0x175f6, 0x175f7
};

void BM_collation_element_lookup_534(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 0, cps_534 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 1, cps_534 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 2, cps_534 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 3, cps_534 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 4, cps_534 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 5, cps_534 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 6, cps_534 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 7, cps_534 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 8, cps_534 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 9, cps_534 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 10, cps_534 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 11, cps_534 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 12, cps_534 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 13, cps_534 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 14, cps_534 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 15, cps_534 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 16, cps_534 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 17, cps_534 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 18, cps_534 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 19, cps_534 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 20, cps_534 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 21, cps_534 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 22, cps_534 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 23, cps_534 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 24, cps_534 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 25, cps_534 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 26, cps_534 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 27, cps_534 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 28, cps_534 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 29, cps_534 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 30, cps_534 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 31, cps_534 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 32, cps_534 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 33, cps_534 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 34, cps_534 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 35, cps_534 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 36, cps_534 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 37, cps_534 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 38, cps_534 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 39, cps_534 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 40, cps_534 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 41, cps_534 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 42, cps_534 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 43, cps_534 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 44, cps_534 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 45, cps_534 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 46, cps_534 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 47, cps_534 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 48, cps_534 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_534 + 49, cps_534 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_534);

uint32_t cps_535[] = {
0x175f8, 0x175f9, 0x175fa, 0x175fb, 0x175fc, 0x175fd, 0x175fe, 0x175ff, 0x17600, 0x17601, 0x17602, 0x17603, 0x17604, 0x17605, 0x17606, 0x17607, 0x17608, 0x17609, 0x1760a, 0x1760b, 0x1760c, 0x1760d, 0x1760e, 0x1760f, 0x17610, 0x17611, 0x17612, 0x17613, 0x17614, 0x17615, 0x17616, 0x17617, 0x17618, 0x17619, 0x1761a, 0x1761b, 0x1761c, 0x1761d, 0x1761e, 0x1761f, 0x17620, 0x17621, 0x17622, 0x17623, 0x17624, 0x17625, 0x17626, 0x17627, 0x17628, 0x17629
};

void BM_collation_element_lookup_535(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 0, cps_535 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 1, cps_535 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 2, cps_535 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 3, cps_535 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 4, cps_535 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 5, cps_535 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 6, cps_535 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 7, cps_535 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 8, cps_535 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 9, cps_535 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 10, cps_535 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 11, cps_535 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 12, cps_535 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 13, cps_535 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 14, cps_535 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 15, cps_535 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 16, cps_535 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 17, cps_535 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 18, cps_535 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 19, cps_535 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 20, cps_535 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 21, cps_535 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 22, cps_535 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 23, cps_535 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 24, cps_535 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 25, cps_535 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 26, cps_535 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 27, cps_535 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 28, cps_535 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 29, cps_535 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 30, cps_535 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 31, cps_535 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 32, cps_535 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 33, cps_535 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 34, cps_535 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 35, cps_535 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 36, cps_535 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 37, cps_535 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 38, cps_535 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 39, cps_535 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 40, cps_535 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 41, cps_535 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 42, cps_535 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 43, cps_535 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 44, cps_535 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 45, cps_535 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 46, cps_535 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 47, cps_535 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 48, cps_535 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_535 + 49, cps_535 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_535);

uint32_t cps_536[] = {
0x1762a, 0x1762b, 0x1762c, 0x1762d, 0x1762e, 0x1762f, 0x17630, 0x17631, 0x17632, 0x17633, 0x17634, 0x17635, 0x17636, 0x17637, 0x17638, 0x17639, 0x1763a, 0x1763b, 0x1763c, 0x1763d, 0x1763e, 0x1763f, 0x17640, 0x17641, 0x17642, 0x17643, 0x17644, 0x17645, 0x17646, 0x17647, 0x17648, 0x17649, 0x1764a, 0x1764b, 0x1764c, 0x1764d, 0x1764e, 0x1764f, 0x17650, 0x17651, 0x17652, 0x17653, 0x17654, 0x17655, 0x17656, 0x17657, 0x17658, 0x17659, 0x1765a, 0x1765b
};

void BM_collation_element_lookup_536(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 0, cps_536 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 1, cps_536 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 2, cps_536 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 3, cps_536 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 4, cps_536 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 5, cps_536 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 6, cps_536 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 7, cps_536 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 8, cps_536 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 9, cps_536 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 10, cps_536 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 11, cps_536 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 12, cps_536 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 13, cps_536 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 14, cps_536 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 15, cps_536 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 16, cps_536 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 17, cps_536 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 18, cps_536 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 19, cps_536 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 20, cps_536 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 21, cps_536 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 22, cps_536 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 23, cps_536 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 24, cps_536 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 25, cps_536 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 26, cps_536 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 27, cps_536 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 28, cps_536 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 29, cps_536 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 30, cps_536 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 31, cps_536 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 32, cps_536 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 33, cps_536 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 34, cps_536 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 35, cps_536 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 36, cps_536 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 37, cps_536 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 38, cps_536 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 39, cps_536 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 40, cps_536 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 41, cps_536 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 42, cps_536 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 43, cps_536 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 44, cps_536 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 45, cps_536 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 46, cps_536 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 47, cps_536 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 48, cps_536 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_536 + 49, cps_536 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_536);

uint32_t cps_537[] = {
0x1765c, 0x1765d, 0x1765e, 0x1765f, 0x17660, 0x17661, 0x17662, 0x17663, 0x17664, 0x17665, 0x17666, 0x17667, 0x17668, 0x17669, 0x1766a, 0x1766b, 0x1766c, 0x1766d, 0x1766e, 0x1766f, 0x17670, 0x17671, 0x17672, 0x17673, 0x17674, 0x17675, 0x17676, 0x17677, 0x17678, 0x17679, 0x1767a, 0x1767b, 0x1767c, 0x1767d, 0x1767e, 0x1767f, 0x17680, 0x17681, 0x17682, 0x17683, 0x17684, 0x17685, 0x17686, 0x17687, 0x17688, 0x17689, 0x1768a, 0x1768b, 0x1768c, 0x1768d
};

void BM_collation_element_lookup_537(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 0, cps_537 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 1, cps_537 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 2, cps_537 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 3, cps_537 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 4, cps_537 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 5, cps_537 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 6, cps_537 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 7, cps_537 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 8, cps_537 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 9, cps_537 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 10, cps_537 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 11, cps_537 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 12, cps_537 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 13, cps_537 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 14, cps_537 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 15, cps_537 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 16, cps_537 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 17, cps_537 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 18, cps_537 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 19, cps_537 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 20, cps_537 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 21, cps_537 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 22, cps_537 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 23, cps_537 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 24, cps_537 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 25, cps_537 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 26, cps_537 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 27, cps_537 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 28, cps_537 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 29, cps_537 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 30, cps_537 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 31, cps_537 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 32, cps_537 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 33, cps_537 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 34, cps_537 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 35, cps_537 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 36, cps_537 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 37, cps_537 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 38, cps_537 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 39, cps_537 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 40, cps_537 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 41, cps_537 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 42, cps_537 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 43, cps_537 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 44, cps_537 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 45, cps_537 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 46, cps_537 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 47, cps_537 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 48, cps_537 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_537 + 49, cps_537 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_537);

uint32_t cps_538[] = {
0x1768e, 0x1768f, 0x17690, 0x17691, 0x17692, 0x17693, 0x17694, 0x17695, 0x17696, 0x17697, 0x17698, 0x17699, 0x1769a, 0x1769b, 0x1769c, 0x1769d, 0x1769e, 0x1769f, 0x176a0, 0x176a1, 0x176a2, 0x176a3, 0x176a4, 0x176a5, 0x176a6, 0x176a7, 0x176a8, 0x176a9, 0x176aa, 0x176ab, 0x176ac, 0x176ad, 0x176ae, 0x176af, 0x176b0, 0x176b1, 0x176b2, 0x176b3, 0x176b4, 0x176b5, 0x176b6, 0x176b7, 0x176b8, 0x176b9, 0x176ba, 0x176bb, 0x176bc, 0x176bd, 0x176be, 0x176bf
};

void BM_collation_element_lookup_538(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 0, cps_538 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 1, cps_538 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 2, cps_538 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 3, cps_538 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 4, cps_538 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 5, cps_538 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 6, cps_538 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 7, cps_538 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 8, cps_538 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 9, cps_538 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 10, cps_538 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 11, cps_538 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 12, cps_538 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 13, cps_538 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 14, cps_538 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 15, cps_538 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 16, cps_538 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 17, cps_538 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 18, cps_538 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 19, cps_538 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 20, cps_538 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 21, cps_538 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 22, cps_538 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 23, cps_538 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 24, cps_538 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 25, cps_538 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 26, cps_538 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 27, cps_538 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 28, cps_538 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 29, cps_538 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 30, cps_538 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 31, cps_538 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 32, cps_538 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 33, cps_538 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 34, cps_538 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 35, cps_538 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 36, cps_538 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 37, cps_538 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 38, cps_538 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 39, cps_538 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 40, cps_538 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 41, cps_538 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 42, cps_538 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 43, cps_538 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 44, cps_538 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 45, cps_538 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 46, cps_538 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 47, cps_538 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 48, cps_538 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_538 + 49, cps_538 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_538);

uint32_t cps_539[] = {
0x176c0, 0x176c1, 0x176c2, 0x176c3, 0x176c4, 0x176c5, 0x176c6, 0x176c7, 0x176c8, 0x176c9, 0x176ca, 0x176cb, 0x176cc, 0x176cd, 0x176ce, 0x176cf, 0x176d0, 0x176d1, 0x176d2, 0x176d3, 0x176d4, 0x176d5, 0x176d6, 0x176d7, 0x176d8, 0x176d9, 0x176da, 0x176db, 0x176dc, 0x176dd, 0x176de, 0x176df, 0x176e0, 0x176e1, 0x176e2, 0x176e3, 0x176e4, 0x176e5, 0x176e6, 0x176e7, 0x176e8, 0x176e9, 0x176ea, 0x176eb, 0x176ec, 0x176ed, 0x176ee, 0x176ef, 0x176f0, 0x176f1
};

void BM_collation_element_lookup_539(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 0, cps_539 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 1, cps_539 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 2, cps_539 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 3, cps_539 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 4, cps_539 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 5, cps_539 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 6, cps_539 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 7, cps_539 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 8, cps_539 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 9, cps_539 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 10, cps_539 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 11, cps_539 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 12, cps_539 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 13, cps_539 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 14, cps_539 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 15, cps_539 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 16, cps_539 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 17, cps_539 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 18, cps_539 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 19, cps_539 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 20, cps_539 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 21, cps_539 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 22, cps_539 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 23, cps_539 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 24, cps_539 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 25, cps_539 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 26, cps_539 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 27, cps_539 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 28, cps_539 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 29, cps_539 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 30, cps_539 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 31, cps_539 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 32, cps_539 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 33, cps_539 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 34, cps_539 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 35, cps_539 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 36, cps_539 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 37, cps_539 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 38, cps_539 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 39, cps_539 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 40, cps_539 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 41, cps_539 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 42, cps_539 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 43, cps_539 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 44, cps_539 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 45, cps_539 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 46, cps_539 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 47, cps_539 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 48, cps_539 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_539 + 49, cps_539 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_539);

uint32_t cps_540[] = {
0x176f2, 0x176f3, 0x176f4, 0x176f5, 0x176f6, 0x176f7, 0x176f8, 0x176f9, 0x176fa, 0x176fb, 0x176fc, 0x176fd, 0x176fe, 0x176ff, 0x17700, 0x17701, 0x17702, 0x17703, 0x17704, 0x17705, 0x17706, 0x17707, 0x17708, 0x17709, 0x1770a, 0x1770b, 0x1770c, 0x1770d, 0x1770e, 0x1770f, 0x17710, 0x17711, 0x17712, 0x17713, 0x17714, 0x17715, 0x17716, 0x17717, 0x17718, 0x17719, 0x1771a, 0x1771b, 0x1771c, 0x1771d, 0x1771e, 0x1771f, 0x17720, 0x17721, 0x17722, 0x17723
};

void BM_collation_element_lookup_540(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 0, cps_540 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 1, cps_540 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 2, cps_540 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 3, cps_540 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 4, cps_540 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 5, cps_540 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 6, cps_540 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 7, cps_540 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 8, cps_540 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 9, cps_540 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 10, cps_540 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 11, cps_540 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 12, cps_540 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 13, cps_540 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 14, cps_540 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 15, cps_540 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 16, cps_540 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 17, cps_540 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 18, cps_540 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 19, cps_540 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 20, cps_540 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 21, cps_540 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 22, cps_540 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 23, cps_540 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 24, cps_540 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 25, cps_540 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 26, cps_540 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 27, cps_540 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 28, cps_540 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 29, cps_540 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 30, cps_540 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 31, cps_540 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 32, cps_540 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 33, cps_540 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 34, cps_540 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 35, cps_540 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 36, cps_540 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 37, cps_540 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 38, cps_540 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 39, cps_540 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 40, cps_540 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 41, cps_540 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 42, cps_540 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 43, cps_540 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 44, cps_540 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 45, cps_540 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 46, cps_540 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 47, cps_540 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 48, cps_540 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_540 + 49, cps_540 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_540);

uint32_t cps_541[] = {
0x17724, 0x17725, 0x17726, 0x17727, 0x17728, 0x17729, 0x1772a, 0x1772b, 0x1772c, 0x1772d, 0x1772e, 0x1772f, 0x17730, 0x17731, 0x17732, 0x17733, 0x17734, 0x17735, 0x17736, 0x17737, 0x17738, 0x17739, 0x1773a, 0x1773b, 0x1773c, 0x1773d, 0x1773e, 0x1773f, 0x17740, 0x17741, 0x17742, 0x17743, 0x17744, 0x17745, 0x17746, 0x17747, 0x17748, 0x17749, 0x1774a, 0x1774b, 0x1774c, 0x1774d, 0x1774e, 0x1774f, 0x17750, 0x17751, 0x17752, 0x17753, 0x17754, 0x17755
};

void BM_collation_element_lookup_541(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 0, cps_541 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 1, cps_541 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 2, cps_541 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 3, cps_541 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 4, cps_541 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 5, cps_541 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 6, cps_541 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 7, cps_541 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 8, cps_541 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 9, cps_541 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 10, cps_541 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 11, cps_541 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 12, cps_541 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 13, cps_541 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 14, cps_541 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 15, cps_541 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 16, cps_541 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 17, cps_541 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 18, cps_541 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 19, cps_541 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 20, cps_541 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 21, cps_541 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 22, cps_541 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 23, cps_541 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 24, cps_541 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 25, cps_541 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 26, cps_541 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 27, cps_541 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 28, cps_541 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 29, cps_541 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 30, cps_541 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 31, cps_541 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 32, cps_541 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 33, cps_541 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 34, cps_541 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 35, cps_541 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 36, cps_541 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 37, cps_541 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 38, cps_541 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 39, cps_541 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 40, cps_541 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 41, cps_541 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 42, cps_541 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 43, cps_541 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 44, cps_541 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 45, cps_541 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 46, cps_541 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 47, cps_541 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 48, cps_541 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_541 + 49, cps_541 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_541);

uint32_t cps_542[] = {
0x17756, 0x17757, 0x17758, 0x17759, 0x1775a, 0x1775b, 0x1775c, 0x1775d, 0x1775e, 0x1775f, 0x17760, 0x17761, 0x17762, 0x17763, 0x17764, 0x17765, 0x17766, 0x17767, 0x17768, 0x17769, 0x1776a, 0x1776b, 0x1776c, 0x1776d, 0x1776e, 0x1776f, 0x17770, 0x17771, 0x17772, 0x17773, 0x17774, 0x17775, 0x17776, 0x17777, 0x17778, 0x17779, 0x1777a, 0x1777b, 0x1777c, 0x1777d, 0x1777e, 0x1777f, 0x17780, 0x17781, 0x17782, 0x17783, 0x17784, 0x17785, 0x17786, 0x17787
};

void BM_collation_element_lookup_542(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 0, cps_542 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 1, cps_542 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 2, cps_542 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 3, cps_542 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 4, cps_542 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 5, cps_542 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 6, cps_542 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 7, cps_542 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 8, cps_542 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 9, cps_542 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 10, cps_542 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 11, cps_542 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 12, cps_542 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 13, cps_542 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 14, cps_542 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 15, cps_542 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 16, cps_542 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 17, cps_542 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 18, cps_542 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 19, cps_542 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 20, cps_542 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 21, cps_542 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 22, cps_542 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 23, cps_542 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 24, cps_542 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 25, cps_542 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 26, cps_542 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 27, cps_542 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 28, cps_542 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 29, cps_542 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 30, cps_542 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 31, cps_542 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 32, cps_542 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 33, cps_542 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 34, cps_542 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 35, cps_542 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 36, cps_542 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 37, cps_542 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 38, cps_542 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 39, cps_542 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 40, cps_542 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 41, cps_542 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 42, cps_542 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 43, cps_542 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 44, cps_542 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 45, cps_542 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 46, cps_542 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 47, cps_542 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 48, cps_542 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_542 + 49, cps_542 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_542);

uint32_t cps_543[] = {
0x17788, 0x17789, 0x1778a, 0x1778b, 0x1778c, 0x1778d, 0x1778e, 0x1778f, 0x17790, 0x17791, 0x17792, 0x17793, 0x17794, 0x17795, 0x17796, 0x17797, 0x17798, 0x17799, 0x1779a, 0x1779b, 0x1779c, 0x1779d, 0x1779e, 0x1779f, 0x177a0, 0x177a1, 0x177a2, 0x177a3, 0x177a4, 0x177a5, 0x177a6, 0x177a7, 0x177a8, 0x177a9, 0x177aa, 0x177ab, 0x177ac, 0x177ad, 0x177ae, 0x177af, 0x177b0, 0x177b1, 0x177b2, 0x177b3, 0x177b4, 0x177b5, 0x177b6, 0x177b7, 0x177b8, 0x177b9
};

void BM_collation_element_lookup_543(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 0, cps_543 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 1, cps_543 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 2, cps_543 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 3, cps_543 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 4, cps_543 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 5, cps_543 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 6, cps_543 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 7, cps_543 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 8, cps_543 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 9, cps_543 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 10, cps_543 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 11, cps_543 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 12, cps_543 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 13, cps_543 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 14, cps_543 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 15, cps_543 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 16, cps_543 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 17, cps_543 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 18, cps_543 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 19, cps_543 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 20, cps_543 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 21, cps_543 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 22, cps_543 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 23, cps_543 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 24, cps_543 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 25, cps_543 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 26, cps_543 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 27, cps_543 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 28, cps_543 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 29, cps_543 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 30, cps_543 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 31, cps_543 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 32, cps_543 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 33, cps_543 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 34, cps_543 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 35, cps_543 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 36, cps_543 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 37, cps_543 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 38, cps_543 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 39, cps_543 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 40, cps_543 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 41, cps_543 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 42, cps_543 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 43, cps_543 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 44, cps_543 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 45, cps_543 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 46, cps_543 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 47, cps_543 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 48, cps_543 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_543 + 49, cps_543 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_543);

uint32_t cps_544[] = {
0x177ba, 0x177bb, 0x177bc, 0x177bd, 0x177be, 0x177bf, 0x177c0, 0x177c1, 0x177c2, 0x177c3, 0x177c4, 0x177c5, 0x177c6, 0x177c7, 0x177c8, 0x177c9, 0x177ca, 0x177cb, 0x177cc, 0x177cd, 0x177ce, 0x177cf, 0x177d0, 0x177d1, 0x177d2, 0x177d3, 0x177d4, 0x177d5, 0x177d6, 0x177d7, 0x177d8, 0x177d9, 0x177da, 0x177db, 0x177dc, 0x177dd, 0x177de, 0x177df, 0x177e0, 0x177e1, 0x177e2, 0x177e3, 0x177e4, 0x177e5, 0x177e6, 0x177e7, 0x177e8, 0x177e9, 0x177ea, 0x177eb
};

void BM_collation_element_lookup_544(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 0, cps_544 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 1, cps_544 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 2, cps_544 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 3, cps_544 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 4, cps_544 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 5, cps_544 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 6, cps_544 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 7, cps_544 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 8, cps_544 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 9, cps_544 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 10, cps_544 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 11, cps_544 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 12, cps_544 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 13, cps_544 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 14, cps_544 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 15, cps_544 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 16, cps_544 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 17, cps_544 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 18, cps_544 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 19, cps_544 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 20, cps_544 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 21, cps_544 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 22, cps_544 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 23, cps_544 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 24, cps_544 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 25, cps_544 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 26, cps_544 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 27, cps_544 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 28, cps_544 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 29, cps_544 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 30, cps_544 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 31, cps_544 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 32, cps_544 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 33, cps_544 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 34, cps_544 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 35, cps_544 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 36, cps_544 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 37, cps_544 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 38, cps_544 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 39, cps_544 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 40, cps_544 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 41, cps_544 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 42, cps_544 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 43, cps_544 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 44, cps_544 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 45, cps_544 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 46, cps_544 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 47, cps_544 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 48, cps_544 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_544 + 49, cps_544 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_544);

uint32_t cps_545[] = {
0x177ec, 0x177ed, 0x177ee, 0x177ef, 0x177f0, 0x177f1, 0x177f2, 0x177f3, 0x177f4, 0x177f5, 0x177f6, 0x177f7, 0x177f8, 0x177f9, 0x177fa, 0x177fb, 0x177fc, 0x177fd, 0x177fe, 0x177ff, 0x17800, 0x17801, 0x17802, 0x17803, 0x17804, 0x17805, 0x17806, 0x17807, 0x17808, 0x17809, 0x1780a, 0x1780b, 0x1780c, 0x1780d, 0x1780e, 0x1780f, 0x17810, 0x17811, 0x17812, 0x17813, 0x17814, 0x17815, 0x17816, 0x17817, 0x17818, 0x17819, 0x1781a, 0x1781b, 0x1781c, 0x1781d
};

void BM_collation_element_lookup_545(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 0, cps_545 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 1, cps_545 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 2, cps_545 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 3, cps_545 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 4, cps_545 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 5, cps_545 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 6, cps_545 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 7, cps_545 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 8, cps_545 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 9, cps_545 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 10, cps_545 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 11, cps_545 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 12, cps_545 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 13, cps_545 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 14, cps_545 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 15, cps_545 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 16, cps_545 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 17, cps_545 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 18, cps_545 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 19, cps_545 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 20, cps_545 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 21, cps_545 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 22, cps_545 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 23, cps_545 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 24, cps_545 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 25, cps_545 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 26, cps_545 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 27, cps_545 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 28, cps_545 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 29, cps_545 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 30, cps_545 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 31, cps_545 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 32, cps_545 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 33, cps_545 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 34, cps_545 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 35, cps_545 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 36, cps_545 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 37, cps_545 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 38, cps_545 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 39, cps_545 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 40, cps_545 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 41, cps_545 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 42, cps_545 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 43, cps_545 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 44, cps_545 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 45, cps_545 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 46, cps_545 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 47, cps_545 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 48, cps_545 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_545 + 49, cps_545 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_545);

uint32_t cps_546[] = {
0x1781e, 0x1781f, 0x17820, 0x17821, 0x17822, 0x17823, 0x17824, 0x17825, 0x17826, 0x17827, 0x17828, 0x17829, 0x1782a, 0x1782b, 0x1782c, 0x1782d, 0x1782e, 0x1782f, 0x17830, 0x17831, 0x17832, 0x17833, 0x17834, 0x17835, 0x17836, 0x17837, 0x17838, 0x17839, 0x1783a, 0x1783b, 0x1783c, 0x1783d, 0x1783e, 0x1783f, 0x17840, 0x17841, 0x17842, 0x17843, 0x17844, 0x17845, 0x17846, 0x17847, 0x17848, 0x17849, 0x1784a, 0x1784b, 0x1784c, 0x1784d, 0x1784e, 0x1784f
};

void BM_collation_element_lookup_546(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 0, cps_546 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 1, cps_546 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 2, cps_546 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 3, cps_546 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 4, cps_546 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 5, cps_546 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 6, cps_546 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 7, cps_546 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 8, cps_546 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 9, cps_546 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 10, cps_546 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 11, cps_546 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 12, cps_546 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 13, cps_546 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 14, cps_546 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 15, cps_546 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 16, cps_546 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 17, cps_546 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 18, cps_546 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 19, cps_546 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 20, cps_546 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 21, cps_546 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 22, cps_546 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 23, cps_546 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 24, cps_546 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 25, cps_546 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 26, cps_546 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 27, cps_546 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 28, cps_546 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 29, cps_546 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 30, cps_546 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 31, cps_546 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 32, cps_546 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 33, cps_546 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 34, cps_546 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 35, cps_546 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 36, cps_546 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 37, cps_546 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 38, cps_546 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 39, cps_546 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 40, cps_546 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 41, cps_546 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 42, cps_546 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 43, cps_546 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 44, cps_546 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 45, cps_546 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 46, cps_546 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 47, cps_546 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 48, cps_546 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_546 + 49, cps_546 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_546);

uint32_t cps_547[] = {
0x17850, 0x17851, 0x17852, 0x17853, 0x17854, 0x17855, 0x17856, 0x17857, 0x17858, 0x17859, 0x1785a, 0x1785b, 0x1785c, 0x1785d, 0x1785e, 0x1785f, 0x17860, 0x17861, 0x17862, 0x17863, 0x17864, 0x17865, 0x17866, 0x17867, 0x17868, 0x17869, 0x1786a, 0x1786b, 0x1786c, 0x1786d, 0x1786e, 0x1786f, 0x17870, 0x17871, 0x17872, 0x17873, 0x17874, 0x17875, 0x17876, 0x17877, 0x17878, 0x17879, 0x1787a, 0x1787b, 0x1787c, 0x1787d, 0x1787e, 0x1787f, 0x17880, 0x17881
};

void BM_collation_element_lookup_547(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 0, cps_547 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 1, cps_547 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 2, cps_547 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 3, cps_547 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 4, cps_547 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 5, cps_547 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 6, cps_547 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 7, cps_547 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 8, cps_547 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 9, cps_547 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 10, cps_547 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 11, cps_547 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 12, cps_547 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 13, cps_547 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 14, cps_547 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 15, cps_547 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 16, cps_547 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 17, cps_547 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 18, cps_547 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 19, cps_547 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 20, cps_547 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 21, cps_547 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 22, cps_547 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 23, cps_547 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 24, cps_547 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 25, cps_547 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 26, cps_547 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 27, cps_547 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 28, cps_547 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 29, cps_547 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 30, cps_547 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 31, cps_547 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 32, cps_547 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 33, cps_547 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 34, cps_547 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 35, cps_547 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 36, cps_547 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 37, cps_547 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 38, cps_547 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 39, cps_547 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 40, cps_547 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 41, cps_547 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 42, cps_547 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 43, cps_547 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 44, cps_547 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 45, cps_547 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 46, cps_547 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 47, cps_547 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 48, cps_547 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_547 + 49, cps_547 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_547);

uint32_t cps_548[] = {
0x17882, 0x17883, 0x17884, 0x17885, 0x17886, 0x17887, 0x17888, 0x17889, 0x1788a, 0x1788b, 0x1788c, 0x1788d, 0x1788e, 0x1788f, 0x17890, 0x17891, 0x17892, 0x17893, 0x17894, 0x17895, 0x17896, 0x17897, 0x17898, 0x17899, 0x1789a, 0x1789b, 0x1789c, 0x1789d, 0x1789e, 0x1789f, 0x178a0, 0x178a1, 0x178a2, 0x178a3, 0x178a4, 0x178a5, 0x178a6, 0x178a7, 0x178a8, 0x178a9, 0x178aa, 0x178ab, 0x178ac, 0x178ad, 0x178ae, 0x178af, 0x178b0, 0x178b1, 0x178b2, 0x178b3
};

void BM_collation_element_lookup_548(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 0, cps_548 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 1, cps_548 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 2, cps_548 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 3, cps_548 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 4, cps_548 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 5, cps_548 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 6, cps_548 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 7, cps_548 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 8, cps_548 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 9, cps_548 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 10, cps_548 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 11, cps_548 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 12, cps_548 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 13, cps_548 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 14, cps_548 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 15, cps_548 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 16, cps_548 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 17, cps_548 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 18, cps_548 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 19, cps_548 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 20, cps_548 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 21, cps_548 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 22, cps_548 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 23, cps_548 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 24, cps_548 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 25, cps_548 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 26, cps_548 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 27, cps_548 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 28, cps_548 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 29, cps_548 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 30, cps_548 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 31, cps_548 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 32, cps_548 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 33, cps_548 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 34, cps_548 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 35, cps_548 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 36, cps_548 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 37, cps_548 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 38, cps_548 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 39, cps_548 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 40, cps_548 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 41, cps_548 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 42, cps_548 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 43, cps_548 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 44, cps_548 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 45, cps_548 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 46, cps_548 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 47, cps_548 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 48, cps_548 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_548 + 49, cps_548 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_548);

uint32_t cps_549[] = {
0x178b4, 0x178b5, 0x178b6, 0x178b7, 0x178b8, 0x178b9, 0x178ba, 0x178bb, 0x178bc, 0x178bd, 0x178be, 0x178bf, 0x178c0, 0x178c1, 0x178c2, 0x178c3, 0x178c4, 0x178c5, 0x178c6, 0x178c7, 0x178c8, 0x178c9, 0x178ca, 0x178cb, 0x178cc, 0x178cd, 0x178ce, 0x178cf, 0x178d0, 0x178d1, 0x178d2, 0x178d3, 0x178d4, 0x178d5, 0x178d6, 0x178d7, 0x178d8, 0x178d9, 0x178da, 0x178db, 0x178dc, 0x178dd, 0x178de, 0x178df, 0x178e0, 0x178e1, 0x178e2, 0x178e3, 0x178e4, 0x178e5
};

void BM_collation_element_lookup_549(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 0, cps_549 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 1, cps_549 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 2, cps_549 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 3, cps_549 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 4, cps_549 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 5, cps_549 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 6, cps_549 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 7, cps_549 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 8, cps_549 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 9, cps_549 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 10, cps_549 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 11, cps_549 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 12, cps_549 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 13, cps_549 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 14, cps_549 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 15, cps_549 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 16, cps_549 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 17, cps_549 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 18, cps_549 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 19, cps_549 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 20, cps_549 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 21, cps_549 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 22, cps_549 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 23, cps_549 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 24, cps_549 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 25, cps_549 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 26, cps_549 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 27, cps_549 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 28, cps_549 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 29, cps_549 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 30, cps_549 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 31, cps_549 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 32, cps_549 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 33, cps_549 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 34, cps_549 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 35, cps_549 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 36, cps_549 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 37, cps_549 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 38, cps_549 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 39, cps_549 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 40, cps_549 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 41, cps_549 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 42, cps_549 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 43, cps_549 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 44, cps_549 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 45, cps_549 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 46, cps_549 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 47, cps_549 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 48, cps_549 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_549 + 49, cps_549 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_549);

uint32_t cps_550[] = {
0x178e6, 0x178e7, 0x178e8, 0x178e9, 0x178ea, 0x178eb, 0x178ec, 0x178ed, 0x178ee, 0x178ef, 0x178f0, 0x178f1, 0x178f2, 0x178f3, 0x178f4, 0x178f5, 0x178f6, 0x178f7, 0x178f8, 0x178f9, 0x178fa, 0x178fb, 0x178fc, 0x178fd, 0x178fe, 0x178ff, 0x17900, 0x17901, 0x17902, 0x17903, 0x17904, 0x17905, 0x17906, 0x17907, 0x17908, 0x17909, 0x1790a, 0x1790b, 0x1790c, 0x1790d, 0x1790e, 0x1790f, 0x17910, 0x17911, 0x17912, 0x17913, 0x17914, 0x17915, 0x17916, 0x17917
};

void BM_collation_element_lookup_550(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 0, cps_550 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 1, cps_550 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 2, cps_550 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 3, cps_550 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 4, cps_550 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 5, cps_550 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 6, cps_550 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 7, cps_550 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 8, cps_550 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 9, cps_550 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 10, cps_550 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 11, cps_550 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 12, cps_550 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 13, cps_550 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 14, cps_550 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 15, cps_550 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 16, cps_550 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 17, cps_550 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 18, cps_550 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 19, cps_550 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 20, cps_550 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 21, cps_550 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 22, cps_550 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 23, cps_550 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 24, cps_550 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 25, cps_550 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 26, cps_550 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 27, cps_550 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 28, cps_550 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 29, cps_550 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 30, cps_550 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 31, cps_550 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 32, cps_550 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 33, cps_550 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 34, cps_550 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 35, cps_550 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 36, cps_550 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 37, cps_550 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 38, cps_550 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 39, cps_550 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 40, cps_550 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 41, cps_550 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 42, cps_550 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 43, cps_550 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 44, cps_550 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 45, cps_550 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 46, cps_550 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 47, cps_550 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 48, cps_550 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_550 + 49, cps_550 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_550);

uint32_t cps_551[] = {
0x17918, 0x17919, 0x1791a, 0x1791b, 0x1791c, 0x1791d, 0x1791e, 0x1791f, 0x17920, 0x17921, 0x17922, 0x17923, 0x17924, 0x17925, 0x17926, 0x17927, 0x17928, 0x17929, 0x1792a, 0x1792b, 0x1792c, 0x1792d, 0x1792e, 0x1792f, 0x17930, 0x17931, 0x17932, 0x17933, 0x17934, 0x17935, 0x17936, 0x17937, 0x17938, 0x17939, 0x1793a, 0x1793b, 0x1793c, 0x1793d, 0x1793e, 0x1793f, 0x17940, 0x17941, 0x17942, 0x17943, 0x17944, 0x17945, 0x17946, 0x17947, 0x17948, 0x17949
};

void BM_collation_element_lookup_551(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 0, cps_551 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 1, cps_551 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 2, cps_551 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 3, cps_551 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 4, cps_551 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 5, cps_551 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 6, cps_551 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 7, cps_551 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 8, cps_551 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 9, cps_551 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 10, cps_551 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 11, cps_551 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 12, cps_551 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 13, cps_551 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 14, cps_551 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 15, cps_551 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 16, cps_551 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 17, cps_551 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 18, cps_551 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 19, cps_551 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 20, cps_551 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 21, cps_551 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 22, cps_551 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 23, cps_551 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 24, cps_551 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 25, cps_551 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 26, cps_551 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 27, cps_551 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 28, cps_551 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 29, cps_551 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 30, cps_551 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 31, cps_551 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 32, cps_551 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 33, cps_551 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 34, cps_551 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 35, cps_551 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 36, cps_551 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 37, cps_551 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 38, cps_551 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 39, cps_551 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 40, cps_551 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 41, cps_551 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 42, cps_551 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 43, cps_551 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 44, cps_551 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 45, cps_551 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 46, cps_551 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 47, cps_551 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 48, cps_551 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_551 + 49, cps_551 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_551);

uint32_t cps_552[] = {
0x1794a, 0x1794b, 0x1794c, 0x1794d, 0x1794e, 0x1794f, 0x17950, 0x17951, 0x17952, 0x17953, 0x17954, 0x17955, 0x17956, 0x17957, 0x17958, 0x17959, 0x1795a, 0x1795b, 0x1795c, 0x1795d, 0x1795e, 0x1795f, 0x17960, 0x17961, 0x17962, 0x17963, 0x17964, 0x17965, 0x17966, 0x17967, 0x17968, 0x17969, 0x1796a, 0x1796b, 0x1796c, 0x1796d, 0x1796e, 0x1796f, 0x17970, 0x17971, 0x17972, 0x17973, 0x17974, 0x17975, 0x17976, 0x17977, 0x17978, 0x17979, 0x1797a, 0x1797b
};

void BM_collation_element_lookup_552(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 0, cps_552 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 1, cps_552 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 2, cps_552 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 3, cps_552 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 4, cps_552 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 5, cps_552 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 6, cps_552 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 7, cps_552 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 8, cps_552 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 9, cps_552 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 10, cps_552 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 11, cps_552 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 12, cps_552 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 13, cps_552 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 14, cps_552 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 15, cps_552 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 16, cps_552 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 17, cps_552 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 18, cps_552 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 19, cps_552 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 20, cps_552 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 21, cps_552 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 22, cps_552 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 23, cps_552 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 24, cps_552 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 25, cps_552 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 26, cps_552 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 27, cps_552 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 28, cps_552 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 29, cps_552 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 30, cps_552 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 31, cps_552 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 32, cps_552 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 33, cps_552 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 34, cps_552 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 35, cps_552 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 36, cps_552 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 37, cps_552 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 38, cps_552 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 39, cps_552 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 40, cps_552 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 41, cps_552 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 42, cps_552 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 43, cps_552 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 44, cps_552 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 45, cps_552 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 46, cps_552 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 47, cps_552 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 48, cps_552 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_552 + 49, cps_552 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_552);

uint32_t cps_553[] = {
0x1797c, 0x1797d, 0x1797e, 0x1797f, 0x17980, 0x17981, 0x17982, 0x17983, 0x17984, 0x17985, 0x17986, 0x17987, 0x17988, 0x17989, 0x1798a, 0x1798b, 0x1798c, 0x1798d, 0x1798e, 0x1798f, 0x17990, 0x17991, 0x17992, 0x17993, 0x17994, 0x17995, 0x17996, 0x17997, 0x17998, 0x17999, 0x1799a, 0x1799b, 0x1799c, 0x1799d, 0x1799e, 0x1799f, 0x179a0, 0x179a1, 0x179a2, 0x179a3, 0x179a4, 0x179a5, 0x179a6, 0x179a7, 0x179a8, 0x179a9, 0x179aa, 0x179ab, 0x179ac, 0x179ad
};

void BM_collation_element_lookup_553(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 0, cps_553 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 1, cps_553 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 2, cps_553 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 3, cps_553 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 4, cps_553 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 5, cps_553 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 6, cps_553 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 7, cps_553 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 8, cps_553 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 9, cps_553 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 10, cps_553 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 11, cps_553 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 12, cps_553 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 13, cps_553 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 14, cps_553 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 15, cps_553 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 16, cps_553 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 17, cps_553 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 18, cps_553 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 19, cps_553 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 20, cps_553 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 21, cps_553 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 22, cps_553 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 23, cps_553 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 24, cps_553 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 25, cps_553 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 26, cps_553 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 27, cps_553 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 28, cps_553 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 29, cps_553 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 30, cps_553 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 31, cps_553 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 32, cps_553 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 33, cps_553 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 34, cps_553 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 35, cps_553 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 36, cps_553 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 37, cps_553 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 38, cps_553 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 39, cps_553 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 40, cps_553 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 41, cps_553 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 42, cps_553 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 43, cps_553 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 44, cps_553 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 45, cps_553 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 46, cps_553 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 47, cps_553 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 48, cps_553 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_553 + 49, cps_553 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_553);

uint32_t cps_554[] = {
0x179ae, 0x179af, 0x179b0, 0x179b1, 0x179b2, 0x179b3, 0x179b4, 0x179b5, 0x179b6, 0x179b7, 0x179b8, 0x179b9, 0x179ba, 0x179bb, 0x179bc, 0x179bd, 0x179be, 0x179bf, 0x179c0, 0x179c1, 0x179c2, 0x179c3, 0x179c4, 0x179c5, 0x179c6, 0x179c7, 0x179c8, 0x179c9, 0x179ca, 0x179cb, 0x179cc, 0x179cd, 0x179ce, 0x179cf, 0x179d0, 0x179d1, 0x179d2, 0x179d3, 0x179d4, 0x179d5, 0x179d6, 0x179d7, 0x179d8, 0x179d9, 0x179da, 0x179db, 0x179dc, 0x179dd, 0x179de, 0x179df
};

void BM_collation_element_lookup_554(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 0, cps_554 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 1, cps_554 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 2, cps_554 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 3, cps_554 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 4, cps_554 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 5, cps_554 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 6, cps_554 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 7, cps_554 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 8, cps_554 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 9, cps_554 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 10, cps_554 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 11, cps_554 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 12, cps_554 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 13, cps_554 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 14, cps_554 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 15, cps_554 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 16, cps_554 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 17, cps_554 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 18, cps_554 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 19, cps_554 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 20, cps_554 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 21, cps_554 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 22, cps_554 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 23, cps_554 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 24, cps_554 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 25, cps_554 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 26, cps_554 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 27, cps_554 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 28, cps_554 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 29, cps_554 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 30, cps_554 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 31, cps_554 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 32, cps_554 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 33, cps_554 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 34, cps_554 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 35, cps_554 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 36, cps_554 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 37, cps_554 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 38, cps_554 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 39, cps_554 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 40, cps_554 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 41, cps_554 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 42, cps_554 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 43, cps_554 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 44, cps_554 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 45, cps_554 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 46, cps_554 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 47, cps_554 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 48, cps_554 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_554 + 49, cps_554 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_554);

uint32_t cps_555[] = {
0x179e0, 0x179e1, 0x179e2, 0x179e3, 0x179e4, 0x179e5, 0x179e6, 0x179e7, 0x179e8, 0x179e9, 0x179ea, 0x179eb, 0x179ec, 0x179ed, 0x179ee, 0x179ef, 0x179f0, 0x179f1, 0x179f2, 0x179f3, 0x179f4, 0x179f5, 0x179f6, 0x179f7, 0x179f8, 0x179f9, 0x179fa, 0x179fb, 0x179fc, 0x179fd, 0x179fe, 0x179ff, 0x17a00, 0x17a01, 0x17a02, 0x17a03, 0x17a04, 0x17a05, 0x17a06, 0x17a07, 0x17a08, 0x17a09, 0x17a0a, 0x17a0b, 0x17a0c, 0x17a0d, 0x17a0e, 0x17a0f, 0x17a10, 0x17a11
};

void BM_collation_element_lookup_555(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 0, cps_555 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 1, cps_555 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 2, cps_555 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 3, cps_555 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 4, cps_555 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 5, cps_555 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 6, cps_555 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 7, cps_555 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 8, cps_555 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 9, cps_555 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 10, cps_555 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 11, cps_555 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 12, cps_555 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 13, cps_555 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 14, cps_555 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 15, cps_555 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 16, cps_555 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 17, cps_555 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 18, cps_555 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 19, cps_555 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 20, cps_555 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 21, cps_555 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 22, cps_555 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 23, cps_555 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 24, cps_555 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 25, cps_555 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 26, cps_555 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 27, cps_555 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 28, cps_555 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 29, cps_555 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 30, cps_555 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 31, cps_555 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 32, cps_555 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 33, cps_555 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 34, cps_555 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 35, cps_555 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 36, cps_555 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 37, cps_555 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 38, cps_555 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 39, cps_555 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 40, cps_555 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 41, cps_555 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 42, cps_555 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 43, cps_555 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 44, cps_555 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 45, cps_555 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 46, cps_555 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 47, cps_555 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 48, cps_555 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_555 + 49, cps_555 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_555);

uint32_t cps_556[] = {
0x17a12, 0x17a13, 0x17a14, 0x17a15, 0x17a16, 0x17a17, 0x17a18, 0x17a19, 0x17a1a, 0x17a1b, 0x17a1c, 0x17a1d, 0x17a1e, 0x17a1f, 0x17a20, 0x17a21, 0x17a22, 0x17a23, 0x17a24, 0x17a25, 0x17a26, 0x17a27, 0x17a28, 0x17a29, 0x17a2a, 0x17a2b, 0x17a2c, 0x17a2d, 0x17a2e, 0x17a2f, 0x17a30, 0x17a31, 0x17a32, 0x17a33, 0x17a34, 0x17a35, 0x17a36, 0x17a37, 0x17a38, 0x17a39, 0x17a3a, 0x17a3b, 0x17a3c, 0x17a3d, 0x17a3e, 0x17a3f, 0x17a40, 0x17a41, 0x17a42, 0x17a43
};

void BM_collation_element_lookup_556(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 0, cps_556 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 1, cps_556 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 2, cps_556 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 3, cps_556 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 4, cps_556 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 5, cps_556 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 6, cps_556 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 7, cps_556 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 8, cps_556 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 9, cps_556 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 10, cps_556 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 11, cps_556 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 12, cps_556 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 13, cps_556 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 14, cps_556 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 15, cps_556 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 16, cps_556 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 17, cps_556 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 18, cps_556 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 19, cps_556 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 20, cps_556 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 21, cps_556 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 22, cps_556 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 23, cps_556 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 24, cps_556 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 25, cps_556 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 26, cps_556 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 27, cps_556 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 28, cps_556 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 29, cps_556 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 30, cps_556 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 31, cps_556 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 32, cps_556 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 33, cps_556 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 34, cps_556 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 35, cps_556 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 36, cps_556 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 37, cps_556 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 38, cps_556 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 39, cps_556 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 40, cps_556 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 41, cps_556 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 42, cps_556 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 43, cps_556 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 44, cps_556 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 45, cps_556 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 46, cps_556 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 47, cps_556 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 48, cps_556 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_556 + 49, cps_556 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_556);

uint32_t cps_557[] = {
0x17a44, 0x17a45, 0x17a46, 0x17a47, 0x17a48, 0x17a49, 0x17a4a, 0x17a4b, 0x17a4c, 0x17a4d, 0x17a4e, 0x17a4f, 0x17a50, 0x17a51, 0x17a52, 0x17a53, 0x17a54, 0x17a55, 0x17a56, 0x17a57, 0x17a58, 0x17a59, 0x17a5a, 0x17a5b, 0x17a5c, 0x17a5d, 0x17a5e, 0x17a5f, 0x17a60, 0x17a61, 0x17a62, 0x17a63, 0x17a64, 0x17a65, 0x17a66, 0x17a67, 0x17a68, 0x17a69, 0x17a6a, 0x17a6b, 0x17a6c, 0x17a6d, 0x17a6e, 0x17a6f, 0x17a70, 0x17a71, 0x17a72, 0x17a73, 0x17a74, 0x17a75
};

void BM_collation_element_lookup_557(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 0, cps_557 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 1, cps_557 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 2, cps_557 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 3, cps_557 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 4, cps_557 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 5, cps_557 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 6, cps_557 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 7, cps_557 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 8, cps_557 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 9, cps_557 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 10, cps_557 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 11, cps_557 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 12, cps_557 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 13, cps_557 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 14, cps_557 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 15, cps_557 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 16, cps_557 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 17, cps_557 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 18, cps_557 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 19, cps_557 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 20, cps_557 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 21, cps_557 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 22, cps_557 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 23, cps_557 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 24, cps_557 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 25, cps_557 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 26, cps_557 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 27, cps_557 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 28, cps_557 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 29, cps_557 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 30, cps_557 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 31, cps_557 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 32, cps_557 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 33, cps_557 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 34, cps_557 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 35, cps_557 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 36, cps_557 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 37, cps_557 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 38, cps_557 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 39, cps_557 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 40, cps_557 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 41, cps_557 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 42, cps_557 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 43, cps_557 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 44, cps_557 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 45, cps_557 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 46, cps_557 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 47, cps_557 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 48, cps_557 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_557 + 49, cps_557 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_557);

uint32_t cps_558[] = {
0x17a76, 0x17a77, 0x17a78, 0x17a79, 0x17a7a, 0x17a7b, 0x17a7c, 0x17a7d, 0x17a7e, 0x17a7f, 0x17a80, 0x17a81, 0x17a82, 0x17a83, 0x17a84, 0x17a85, 0x17a86, 0x17a87, 0x17a88, 0x17a89, 0x17a8a, 0x17a8b, 0x17a8c, 0x17a8d, 0x17a8e, 0x17a8f, 0x17a90, 0x17a91, 0x17a92, 0x17a93, 0x17a94, 0x17a95, 0x17a96, 0x17a97, 0x17a98, 0x17a99, 0x17a9a, 0x17a9b, 0x17a9c, 0x17a9d, 0x17a9e, 0x17a9f, 0x17aa0, 0x17aa1, 0x17aa2, 0x17aa3, 0x17aa4, 0x17aa5, 0x17aa6, 0x17aa7
};

void BM_collation_element_lookup_558(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 0, cps_558 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 1, cps_558 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 2, cps_558 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 3, cps_558 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 4, cps_558 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 5, cps_558 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 6, cps_558 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 7, cps_558 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 8, cps_558 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 9, cps_558 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 10, cps_558 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 11, cps_558 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 12, cps_558 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 13, cps_558 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 14, cps_558 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 15, cps_558 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 16, cps_558 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 17, cps_558 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 18, cps_558 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 19, cps_558 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 20, cps_558 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 21, cps_558 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 22, cps_558 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 23, cps_558 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 24, cps_558 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 25, cps_558 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 26, cps_558 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 27, cps_558 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 28, cps_558 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 29, cps_558 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 30, cps_558 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 31, cps_558 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 32, cps_558 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 33, cps_558 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 34, cps_558 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 35, cps_558 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 36, cps_558 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 37, cps_558 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 38, cps_558 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 39, cps_558 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 40, cps_558 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 41, cps_558 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 42, cps_558 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 43, cps_558 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 44, cps_558 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 45, cps_558 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 46, cps_558 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 47, cps_558 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 48, cps_558 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_558 + 49, cps_558 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_558);

uint32_t cps_559[] = {
0x17aa8, 0x17aa9, 0x17aaa, 0x17aab, 0x17aac, 0x17aad, 0x17aae, 0x17aaf, 0x17ab0, 0x17ab1, 0x17ab2, 0x17ab3, 0x17ab4, 0x17ab5, 0x17ab6, 0x17ab7, 0x17ab8, 0x17ab9, 0x17aba, 0x17abb, 0x17abc, 0x17abd, 0x17abe, 0x17abf, 0x17ac0, 0x17ac1, 0x17ac2, 0x17ac3, 0x17ac4, 0x17ac5, 0x17ac6, 0x17ac7, 0x17ac8, 0x17ac9, 0x17aca, 0x17acb, 0x17acc, 0x17acd, 0x17ace, 0x17acf, 0x17ad0, 0x17ad1, 0x17ad2, 0x17ad3, 0x17ad4, 0x17ad5, 0x17ad6, 0x17ad7, 0x17ad8, 0x17ad9
};

void BM_collation_element_lookup_559(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 0, cps_559 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 1, cps_559 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 2, cps_559 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 3, cps_559 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 4, cps_559 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 5, cps_559 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 6, cps_559 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 7, cps_559 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 8, cps_559 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 9, cps_559 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 10, cps_559 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 11, cps_559 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 12, cps_559 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 13, cps_559 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 14, cps_559 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 15, cps_559 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 16, cps_559 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 17, cps_559 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 18, cps_559 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 19, cps_559 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 20, cps_559 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 21, cps_559 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 22, cps_559 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 23, cps_559 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 24, cps_559 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 25, cps_559 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 26, cps_559 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 27, cps_559 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 28, cps_559 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 29, cps_559 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 30, cps_559 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 31, cps_559 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 32, cps_559 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 33, cps_559 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 34, cps_559 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 35, cps_559 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 36, cps_559 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 37, cps_559 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 38, cps_559 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 39, cps_559 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 40, cps_559 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 41, cps_559 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 42, cps_559 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 43, cps_559 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 44, cps_559 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 45, cps_559 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 46, cps_559 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 47, cps_559 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 48, cps_559 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_559 + 49, cps_559 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_559);

uint32_t cps_560[] = {
0x17ada, 0x17adb, 0x17adc, 0x17add, 0x17ade, 0x17adf, 0x17ae0, 0x17ae1, 0x17ae2, 0x17ae3, 0x17ae4, 0x17ae5, 0x17ae6, 0x17ae7, 0x17ae8, 0x17ae9, 0x17aea, 0x17aeb, 0x17aec, 0x17aed, 0x17aee, 0x17aef, 0x17af0, 0x17af1, 0x17af2, 0x17af3, 0x17af4, 0x17af5, 0x17af6, 0x17af7, 0x17af8, 0x17af9, 0x17afa, 0x17afb, 0x17afc, 0x17afd, 0x17afe, 0x17aff, 0x17b00, 0x17b01, 0x17b02, 0x17b03, 0x17b04, 0x17b05, 0x17b06, 0x17b07, 0x17b08, 0x17b09, 0x17b0a, 0x17b0b
};

void BM_collation_element_lookup_560(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 0, cps_560 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 1, cps_560 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 2, cps_560 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 3, cps_560 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 4, cps_560 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 5, cps_560 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 6, cps_560 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 7, cps_560 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 8, cps_560 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 9, cps_560 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 10, cps_560 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 11, cps_560 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 12, cps_560 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 13, cps_560 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 14, cps_560 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 15, cps_560 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 16, cps_560 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 17, cps_560 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 18, cps_560 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 19, cps_560 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 20, cps_560 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 21, cps_560 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 22, cps_560 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 23, cps_560 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 24, cps_560 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 25, cps_560 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 26, cps_560 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 27, cps_560 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 28, cps_560 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 29, cps_560 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 30, cps_560 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 31, cps_560 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 32, cps_560 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 33, cps_560 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 34, cps_560 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 35, cps_560 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 36, cps_560 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 37, cps_560 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 38, cps_560 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 39, cps_560 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 40, cps_560 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 41, cps_560 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 42, cps_560 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 43, cps_560 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 44, cps_560 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 45, cps_560 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 46, cps_560 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 47, cps_560 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 48, cps_560 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_560 + 49, cps_560 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_560);

uint32_t cps_561[] = {
0x17b0c, 0x17b0d, 0x17b0e, 0x17b0f, 0x17b10, 0x17b11, 0x17b12, 0x17b13, 0x17b14, 0x17b15, 0x17b16, 0x17b17, 0x17b18, 0x17b19, 0x17b1a, 0x17b1b, 0x17b1c, 0x17b1d, 0x17b1e, 0x17b1f, 0x17b20, 0x17b21, 0x17b22, 0x17b23, 0x17b24, 0x17b25, 0x17b26, 0x17b27, 0x17b28, 0x17b29, 0x17b2a, 0x17b2b, 0x17b2c, 0x17b2d, 0x17b2e, 0x17b2f, 0x17b30, 0x17b31, 0x17b32, 0x17b33, 0x17b34, 0x17b35, 0x17b36, 0x17b37, 0x17b38, 0x17b39, 0x17b3a, 0x17b3b, 0x17b3c, 0x17b3d
};

void BM_collation_element_lookup_561(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 0, cps_561 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 1, cps_561 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 2, cps_561 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 3, cps_561 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 4, cps_561 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 5, cps_561 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 6, cps_561 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 7, cps_561 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 8, cps_561 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 9, cps_561 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 10, cps_561 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 11, cps_561 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 12, cps_561 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 13, cps_561 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 14, cps_561 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 15, cps_561 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 16, cps_561 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 17, cps_561 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 18, cps_561 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 19, cps_561 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 20, cps_561 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 21, cps_561 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 22, cps_561 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 23, cps_561 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 24, cps_561 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 25, cps_561 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 26, cps_561 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 27, cps_561 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 28, cps_561 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 29, cps_561 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 30, cps_561 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 31, cps_561 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 32, cps_561 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 33, cps_561 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 34, cps_561 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 35, cps_561 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 36, cps_561 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 37, cps_561 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 38, cps_561 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 39, cps_561 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 40, cps_561 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 41, cps_561 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 42, cps_561 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 43, cps_561 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 44, cps_561 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 45, cps_561 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 46, cps_561 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 47, cps_561 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 48, cps_561 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_561 + 49, cps_561 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_561);

uint32_t cps_562[] = {
0x17b3e, 0x17b3f, 0x17b40, 0x17b41, 0x17b42, 0x17b43, 0x17b44, 0x17b45, 0x17b46, 0x17b47, 0x17b48, 0x17b49, 0x17b4a, 0x17b4b, 0x17b4c, 0x17b4d, 0x17b4e, 0x17b4f, 0x17b50, 0x17b51, 0x17b52, 0x17b53, 0x17b54, 0x17b55, 0x17b56, 0x17b57, 0x17b58, 0x17b59, 0x17b5a, 0x17b5b, 0x17b5c, 0x17b5d, 0x17b5e, 0x17b5f, 0x17b60, 0x17b61, 0x17b62, 0x17b63, 0x17b64, 0x17b65, 0x17b66, 0x17b67, 0x17b68, 0x17b69, 0x17b6a, 0x17b6b, 0x17b6c, 0x17b6d, 0x17b6e, 0x17b6f
};

void BM_collation_element_lookup_562(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 0, cps_562 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 1, cps_562 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 2, cps_562 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 3, cps_562 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 4, cps_562 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 5, cps_562 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 6, cps_562 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 7, cps_562 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 8, cps_562 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 9, cps_562 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 10, cps_562 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 11, cps_562 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 12, cps_562 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 13, cps_562 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 14, cps_562 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 15, cps_562 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 16, cps_562 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 17, cps_562 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 18, cps_562 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 19, cps_562 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 20, cps_562 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 21, cps_562 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 22, cps_562 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 23, cps_562 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 24, cps_562 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 25, cps_562 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 26, cps_562 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 27, cps_562 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 28, cps_562 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 29, cps_562 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 30, cps_562 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 31, cps_562 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 32, cps_562 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 33, cps_562 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 34, cps_562 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 35, cps_562 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 36, cps_562 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 37, cps_562 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 38, cps_562 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 39, cps_562 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 40, cps_562 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 41, cps_562 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 42, cps_562 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 43, cps_562 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 44, cps_562 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 45, cps_562 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 46, cps_562 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 47, cps_562 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 48, cps_562 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_562 + 49, cps_562 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_562);

uint32_t cps_563[] = {
0x17b70, 0x17b71, 0x17b72, 0x17b73, 0x17b74, 0x17b75, 0x17b76, 0x17b77, 0x17b78, 0x17b79, 0x17b7a, 0x17b7b, 0x17b7c, 0x17b7d, 0x17b7e, 0x17b7f, 0x17b80, 0x17b81, 0x17b82, 0x17b83, 0x17b84, 0x17b85, 0x17b86, 0x17b87, 0x17b88, 0x17b89, 0x17b8a, 0x17b8b, 0x17b8c, 0x17b8d, 0x17b8e, 0x17b8f, 0x17b90, 0x17b91, 0x17b92, 0x17b93, 0x17b94, 0x17b95, 0x17b96, 0x17b97, 0x17b98, 0x17b99, 0x17b9a, 0x17b9b, 0x17b9c, 0x17b9d, 0x17b9e, 0x17b9f, 0x17ba0, 0x17ba1
};

void BM_collation_element_lookup_563(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 0, cps_563 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 1, cps_563 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 2, cps_563 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 3, cps_563 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 4, cps_563 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 5, cps_563 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 6, cps_563 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 7, cps_563 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 8, cps_563 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 9, cps_563 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 10, cps_563 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 11, cps_563 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 12, cps_563 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 13, cps_563 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 14, cps_563 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 15, cps_563 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 16, cps_563 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 17, cps_563 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 18, cps_563 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 19, cps_563 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 20, cps_563 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 21, cps_563 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 22, cps_563 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 23, cps_563 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 24, cps_563 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 25, cps_563 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 26, cps_563 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 27, cps_563 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 28, cps_563 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 29, cps_563 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 30, cps_563 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 31, cps_563 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 32, cps_563 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 33, cps_563 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 34, cps_563 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 35, cps_563 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 36, cps_563 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 37, cps_563 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 38, cps_563 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 39, cps_563 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 40, cps_563 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 41, cps_563 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 42, cps_563 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 43, cps_563 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 44, cps_563 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 45, cps_563 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 46, cps_563 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 47, cps_563 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 48, cps_563 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_563 + 49, cps_563 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_563);

uint32_t cps_564[] = {
0x17ba2, 0x17ba3, 0x17ba4, 0x17ba5, 0x17ba6, 0x17ba7, 0x17ba8, 0x17ba9, 0x17baa, 0x17bab, 0x17bac, 0x17bad, 0x17bae, 0x17baf, 0x17bb0, 0x17bb1, 0x17bb2, 0x17bb3, 0x17bb4, 0x17bb5, 0x17bb6, 0x17bb7, 0x17bb8, 0x17bb9, 0x17bba, 0x17bbb, 0x17bbc, 0x17bbd, 0x17bbe, 0x17bbf, 0x17bc0, 0x17bc1, 0x17bc2, 0x17bc3, 0x17bc4, 0x17bc5, 0x17bc6, 0x17bc7, 0x17bc8, 0x17bc9, 0x17bca, 0x17bcb, 0x17bcc, 0x17bcd, 0x17bce, 0x17bcf, 0x17bd0, 0x17bd1, 0x17bd2, 0x17bd3
};

void BM_collation_element_lookup_564(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 0, cps_564 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 1, cps_564 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 2, cps_564 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 3, cps_564 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 4, cps_564 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 5, cps_564 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 6, cps_564 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 7, cps_564 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 8, cps_564 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 9, cps_564 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 10, cps_564 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 11, cps_564 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 12, cps_564 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 13, cps_564 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 14, cps_564 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 15, cps_564 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 16, cps_564 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 17, cps_564 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 18, cps_564 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 19, cps_564 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 20, cps_564 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 21, cps_564 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 22, cps_564 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 23, cps_564 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 24, cps_564 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 25, cps_564 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 26, cps_564 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 27, cps_564 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 28, cps_564 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 29, cps_564 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 30, cps_564 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 31, cps_564 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 32, cps_564 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 33, cps_564 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 34, cps_564 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 35, cps_564 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 36, cps_564 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 37, cps_564 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 38, cps_564 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 39, cps_564 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 40, cps_564 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 41, cps_564 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 42, cps_564 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 43, cps_564 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 44, cps_564 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 45, cps_564 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 46, cps_564 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 47, cps_564 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 48, cps_564 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_564 + 49, cps_564 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_564);

uint32_t cps_565[] = {
0x17bd4, 0x17bd5, 0x17bd6, 0x17bd7, 0x17bd8, 0x17bd9, 0x17bda, 0x17bdb, 0x17bdc, 0x17bdd, 0x17bde, 0x17bdf, 0x17be0, 0x17be1, 0x17be2, 0x17be3, 0x17be4, 0x17be5, 0x17be6, 0x17be7, 0x17be8, 0x17be9, 0x17bea, 0x17beb, 0x17bec, 0x17bed, 0x17bee, 0x17bef, 0x17bf0, 0x17bf1, 0x17bf2, 0x17bf3, 0x17bf4, 0x17bf5, 0x17bf6, 0x17bf7, 0x17bf8, 0x17bf9, 0x17bfa, 0x17bfb, 0x17bfc, 0x17bfd, 0x17bfe, 0x17bff, 0x17c00, 0x17c01, 0x17c02, 0x17c03, 0x17c04, 0x17c05
};

void BM_collation_element_lookup_565(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 0, cps_565 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 1, cps_565 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 2, cps_565 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 3, cps_565 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 4, cps_565 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 5, cps_565 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 6, cps_565 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 7, cps_565 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 8, cps_565 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 9, cps_565 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 10, cps_565 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 11, cps_565 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 12, cps_565 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 13, cps_565 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 14, cps_565 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 15, cps_565 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 16, cps_565 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 17, cps_565 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 18, cps_565 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 19, cps_565 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 20, cps_565 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 21, cps_565 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 22, cps_565 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 23, cps_565 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 24, cps_565 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 25, cps_565 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 26, cps_565 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 27, cps_565 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 28, cps_565 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 29, cps_565 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 30, cps_565 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 31, cps_565 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 32, cps_565 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 33, cps_565 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 34, cps_565 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 35, cps_565 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 36, cps_565 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 37, cps_565 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 38, cps_565 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 39, cps_565 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 40, cps_565 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 41, cps_565 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 42, cps_565 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 43, cps_565 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 44, cps_565 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 45, cps_565 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 46, cps_565 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 47, cps_565 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 48, cps_565 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_565 + 49, cps_565 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_565);

uint32_t cps_566[] = {
0x17c06, 0x17c07, 0x17c08, 0x17c09, 0x17c0a, 0x17c0b, 0x17c0c, 0x17c0d, 0x17c0e, 0x17c0f, 0x17c10, 0x17c11, 0x17c12, 0x17c13, 0x17c14, 0x17c15, 0x17c16, 0x17c17, 0x17c18, 0x17c19, 0x17c1a, 0x17c1b, 0x17c1c, 0x17c1d, 0x17c1e, 0x17c1f, 0x17c20, 0x17c21, 0x17c22, 0x17c23, 0x17c24, 0x17c25, 0x17c26, 0x17c27, 0x17c28, 0x17c29, 0x17c2a, 0x17c2b, 0x17c2c, 0x17c2d, 0x17c2e, 0x17c2f, 0x17c30, 0x17c31, 0x17c32, 0x17c33, 0x17c34, 0x17c35, 0x17c36, 0x17c37
};

void BM_collation_element_lookup_566(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 0, cps_566 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 1, cps_566 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 2, cps_566 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 3, cps_566 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 4, cps_566 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 5, cps_566 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 6, cps_566 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 7, cps_566 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 8, cps_566 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 9, cps_566 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 10, cps_566 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 11, cps_566 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 12, cps_566 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 13, cps_566 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 14, cps_566 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 15, cps_566 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 16, cps_566 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 17, cps_566 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 18, cps_566 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 19, cps_566 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 20, cps_566 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 21, cps_566 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 22, cps_566 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 23, cps_566 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 24, cps_566 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 25, cps_566 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 26, cps_566 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 27, cps_566 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 28, cps_566 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 29, cps_566 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 30, cps_566 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 31, cps_566 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 32, cps_566 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 33, cps_566 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 34, cps_566 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 35, cps_566 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 36, cps_566 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 37, cps_566 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 38, cps_566 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 39, cps_566 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 40, cps_566 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 41, cps_566 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 42, cps_566 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 43, cps_566 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 44, cps_566 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 45, cps_566 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 46, cps_566 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 47, cps_566 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 48, cps_566 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_566 + 49, cps_566 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_566);

uint32_t cps_567[] = {
0x17c38, 0x17c39, 0x17c3a, 0x17c3b, 0x17c3c, 0x17c3d, 0x17c3e, 0x17c3f, 0x17c40, 0x17c41, 0x17c42, 0x17c43, 0x17c44, 0x17c45, 0x17c46, 0x17c47, 0x17c48, 0x17c49, 0x17c4a, 0x17c4b, 0x17c4c, 0x17c4d, 0x17c4e, 0x17c4f, 0x17c50, 0x17c51, 0x17c52, 0x17c53, 0x17c54, 0x17c55, 0x17c56, 0x17c57, 0x17c58, 0x17c59, 0x17c5a, 0x17c5b, 0x17c5c, 0x17c5d, 0x17c5e, 0x17c5f, 0x17c60, 0x17c61, 0x17c62, 0x17c63, 0x17c64, 0x17c65, 0x17c66, 0x17c67, 0x17c68, 0x17c69
};

void BM_collation_element_lookup_567(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 0, cps_567 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 1, cps_567 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 2, cps_567 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 3, cps_567 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 4, cps_567 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 5, cps_567 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 6, cps_567 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 7, cps_567 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 8, cps_567 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 9, cps_567 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 10, cps_567 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 11, cps_567 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 12, cps_567 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 13, cps_567 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 14, cps_567 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 15, cps_567 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 16, cps_567 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 17, cps_567 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 18, cps_567 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 19, cps_567 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 20, cps_567 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 21, cps_567 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 22, cps_567 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 23, cps_567 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 24, cps_567 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 25, cps_567 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 26, cps_567 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 27, cps_567 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 28, cps_567 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 29, cps_567 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 30, cps_567 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 31, cps_567 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 32, cps_567 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 33, cps_567 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 34, cps_567 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 35, cps_567 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 36, cps_567 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 37, cps_567 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 38, cps_567 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 39, cps_567 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 40, cps_567 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 41, cps_567 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 42, cps_567 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 43, cps_567 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 44, cps_567 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 45, cps_567 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 46, cps_567 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 47, cps_567 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 48, cps_567 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_567 + 49, cps_567 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_567);

uint32_t cps_568[] = {
0x17c6a, 0x17c6b, 0x17c6c, 0x17c6d, 0x17c6e, 0x17c6f, 0x17c70, 0x17c71, 0x17c72, 0x17c73, 0x17c74, 0x17c75, 0x17c76, 0x17c77, 0x17c78, 0x17c79, 0x17c7a, 0x17c7b, 0x17c7c, 0x17c7d, 0x17c7e, 0x17c7f, 0x17c80, 0x17c81, 0x17c82, 0x17c83, 0x17c84, 0x17c85, 0x17c86, 0x17c87, 0x17c88, 0x17c89, 0x17c8a, 0x17c8b, 0x17c8c, 0x17c8d, 0x17c8e, 0x17c8f, 0x17c90, 0x17c91, 0x17c92, 0x17c93, 0x17c94, 0x17c95, 0x17c96, 0x17c97, 0x17c98, 0x17c99, 0x17c9a, 0x17c9b
};

void BM_collation_element_lookup_568(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 0, cps_568 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 1, cps_568 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 2, cps_568 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 3, cps_568 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 4, cps_568 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 5, cps_568 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 6, cps_568 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 7, cps_568 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 8, cps_568 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 9, cps_568 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 10, cps_568 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 11, cps_568 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 12, cps_568 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 13, cps_568 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 14, cps_568 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 15, cps_568 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 16, cps_568 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 17, cps_568 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 18, cps_568 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 19, cps_568 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 20, cps_568 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 21, cps_568 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 22, cps_568 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 23, cps_568 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 24, cps_568 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 25, cps_568 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 26, cps_568 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 27, cps_568 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 28, cps_568 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 29, cps_568 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 30, cps_568 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 31, cps_568 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 32, cps_568 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 33, cps_568 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 34, cps_568 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 35, cps_568 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 36, cps_568 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 37, cps_568 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 38, cps_568 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 39, cps_568 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 40, cps_568 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 41, cps_568 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 42, cps_568 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 43, cps_568 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 44, cps_568 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 45, cps_568 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 46, cps_568 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 47, cps_568 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 48, cps_568 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_568 + 49, cps_568 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_568);

uint32_t cps_569[] = {
0x17c9c, 0x17c9d, 0x17c9e, 0x17c9f, 0x17ca0, 0x17ca1, 0x17ca2, 0x17ca3, 0x17ca4, 0x17ca5, 0x17ca6, 0x17ca7, 0x17ca8, 0x17ca9, 0x17caa, 0x17cab, 0x17cac, 0x17cad, 0x17cae, 0x17caf, 0x17cb0, 0x17cb1, 0x17cb2, 0x17cb3, 0x17cb4, 0x17cb5, 0x17cb6, 0x17cb7, 0x17cb8, 0x17cb9, 0x17cba, 0x17cbb, 0x17cbc, 0x17cbd, 0x17cbe, 0x17cbf, 0x17cc0, 0x17cc1, 0x17cc2, 0x17cc3, 0x17cc4, 0x17cc5, 0x17cc6, 0x17cc7, 0x17cc8, 0x17cc9, 0x17cca, 0x17ccb, 0x17ccc, 0x17ccd
};

void BM_collation_element_lookup_569(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 0, cps_569 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 1, cps_569 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 2, cps_569 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 3, cps_569 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 4, cps_569 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 5, cps_569 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 6, cps_569 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 7, cps_569 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 8, cps_569 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 9, cps_569 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 10, cps_569 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 11, cps_569 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 12, cps_569 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 13, cps_569 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 14, cps_569 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 15, cps_569 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 16, cps_569 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 17, cps_569 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 18, cps_569 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 19, cps_569 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 20, cps_569 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 21, cps_569 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 22, cps_569 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 23, cps_569 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 24, cps_569 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 25, cps_569 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 26, cps_569 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 27, cps_569 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 28, cps_569 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 29, cps_569 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 30, cps_569 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 31, cps_569 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 32, cps_569 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 33, cps_569 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 34, cps_569 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 35, cps_569 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 36, cps_569 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 37, cps_569 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 38, cps_569 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 39, cps_569 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 40, cps_569 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 41, cps_569 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 42, cps_569 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 43, cps_569 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 44, cps_569 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 45, cps_569 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 46, cps_569 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 47, cps_569 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 48, cps_569 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_569 + 49, cps_569 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_569);

uint32_t cps_570[] = {
0x17cce, 0x17ccf, 0x17cd0, 0x17cd1, 0x17cd2, 0x17cd3, 0x17cd4, 0x17cd5, 0x17cd6, 0x17cd7, 0x17cd8, 0x17cd9, 0x17cda, 0x17cdb, 0x17cdc, 0x17cdd, 0x17cde, 0x17cdf, 0x17ce0, 0x17ce1, 0x17ce2, 0x17ce3, 0x17ce4, 0x17ce5, 0x17ce6, 0x17ce7, 0x17ce8, 0x17ce9, 0x17cea, 0x17ceb, 0x17cec, 0x17ced, 0x17cee, 0x17cef, 0x17cf0, 0x17cf1, 0x17cf2, 0x17cf3, 0x17cf4, 0x17cf5, 0x17cf6, 0x17cf7, 0x17cf8, 0x17cf9, 0x17cfa, 0x17cfb, 0x17cfc, 0x17cfd, 0x17cfe, 0x17cff
};

void BM_collation_element_lookup_570(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 0, cps_570 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 1, cps_570 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 2, cps_570 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 3, cps_570 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 4, cps_570 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 5, cps_570 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 6, cps_570 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 7, cps_570 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 8, cps_570 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 9, cps_570 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 10, cps_570 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 11, cps_570 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 12, cps_570 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 13, cps_570 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 14, cps_570 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 15, cps_570 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 16, cps_570 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 17, cps_570 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 18, cps_570 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 19, cps_570 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 20, cps_570 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 21, cps_570 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 22, cps_570 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 23, cps_570 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 24, cps_570 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 25, cps_570 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 26, cps_570 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 27, cps_570 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 28, cps_570 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 29, cps_570 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 30, cps_570 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 31, cps_570 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 32, cps_570 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 33, cps_570 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 34, cps_570 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 35, cps_570 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 36, cps_570 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 37, cps_570 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 38, cps_570 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 39, cps_570 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 40, cps_570 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 41, cps_570 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 42, cps_570 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 43, cps_570 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 44, cps_570 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 45, cps_570 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 46, cps_570 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 47, cps_570 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 48, cps_570 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_570 + 49, cps_570 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_570);

uint32_t cps_571[] = {
0x17d00, 0x17d01, 0x17d02, 0x17d03, 0x17d04, 0x17d05, 0x17d06, 0x17d07, 0x17d08, 0x17d09, 0x17d0a, 0x17d0b, 0x17d0c, 0x17d0d, 0x17d0e, 0x17d0f, 0x17d10, 0x17d11, 0x17d12, 0x17d13, 0x17d14, 0x17d15, 0x17d16, 0x17d17, 0x17d18, 0x17d19, 0x17d1a, 0x17d1b, 0x17d1c, 0x17d1d, 0x17d1e, 0x17d1f, 0x17d20, 0x17d21, 0x17d22, 0x17d23, 0x17d24, 0x17d25, 0x17d26, 0x17d27, 0x17d28, 0x17d29, 0x17d2a, 0x17d2b, 0x17d2c, 0x17d2d, 0x17d2e, 0x17d2f, 0x17d30, 0x17d31
};

void BM_collation_element_lookup_571(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 0, cps_571 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 1, cps_571 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 2, cps_571 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 3, cps_571 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 4, cps_571 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 5, cps_571 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 6, cps_571 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 7, cps_571 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 8, cps_571 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 9, cps_571 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 10, cps_571 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 11, cps_571 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 12, cps_571 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 13, cps_571 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 14, cps_571 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 15, cps_571 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 16, cps_571 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 17, cps_571 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 18, cps_571 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 19, cps_571 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 20, cps_571 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 21, cps_571 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 22, cps_571 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 23, cps_571 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 24, cps_571 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 25, cps_571 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 26, cps_571 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 27, cps_571 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 28, cps_571 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 29, cps_571 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 30, cps_571 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 31, cps_571 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 32, cps_571 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 33, cps_571 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 34, cps_571 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 35, cps_571 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 36, cps_571 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 37, cps_571 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 38, cps_571 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 39, cps_571 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 40, cps_571 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 41, cps_571 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 42, cps_571 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 43, cps_571 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 44, cps_571 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 45, cps_571 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 46, cps_571 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 47, cps_571 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 48, cps_571 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_571 + 49, cps_571 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_571);

uint32_t cps_572[] = {
0x17d32, 0x17d33, 0x17d34, 0x17d35, 0x17d36, 0x17d37, 0x17d38, 0x17d39, 0x17d3a, 0x17d3b, 0x17d3c, 0x17d3d, 0x17d3e, 0x17d3f, 0x17d40, 0x17d41, 0x17d42, 0x17d43, 0x17d44, 0x17d45, 0x17d46, 0x17d47, 0x17d48, 0x17d49, 0x17d4a, 0x17d4b, 0x17d4c, 0x17d4d, 0x17d4e, 0x17d4f, 0x17d50, 0x17d51, 0x17d52, 0x17d53, 0x17d54, 0x17d55, 0x17d56, 0x17d57, 0x17d58, 0x17d59, 0x17d5a, 0x17d5b, 0x17d5c, 0x17d5d, 0x17d5e, 0x17d5f, 0x17d60, 0x17d61, 0x17d62, 0x17d63
};

void BM_collation_element_lookup_572(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 0, cps_572 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 1, cps_572 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 2, cps_572 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 3, cps_572 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 4, cps_572 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 5, cps_572 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 6, cps_572 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 7, cps_572 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 8, cps_572 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 9, cps_572 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 10, cps_572 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 11, cps_572 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 12, cps_572 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 13, cps_572 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 14, cps_572 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 15, cps_572 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 16, cps_572 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 17, cps_572 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 18, cps_572 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 19, cps_572 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 20, cps_572 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 21, cps_572 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 22, cps_572 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 23, cps_572 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 24, cps_572 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 25, cps_572 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 26, cps_572 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 27, cps_572 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 28, cps_572 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 29, cps_572 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 30, cps_572 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 31, cps_572 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 32, cps_572 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 33, cps_572 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 34, cps_572 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 35, cps_572 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 36, cps_572 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 37, cps_572 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 38, cps_572 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 39, cps_572 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 40, cps_572 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 41, cps_572 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 42, cps_572 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 43, cps_572 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 44, cps_572 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 45, cps_572 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 46, cps_572 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 47, cps_572 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 48, cps_572 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_572 + 49, cps_572 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_572);

uint32_t cps_573[] = {
0x17d64, 0x17d65, 0x17d66, 0x17d67, 0x17d68, 0x17d69, 0x17d6a, 0x17d6b, 0x17d6c, 0x17d6d, 0x17d6e, 0x17d6f, 0x17d70, 0x17d71, 0x17d72, 0x17d73, 0x17d74, 0x17d75, 0x17d76, 0x17d77, 0x17d78, 0x17d79, 0x17d7a, 0x17d7b, 0x17d7c, 0x17d7d, 0x17d7e, 0x17d7f, 0x17d80, 0x17d81, 0x17d82, 0x17d83, 0x17d84, 0x17d85, 0x17d86, 0x17d87, 0x17d88, 0x17d89, 0x17d8a, 0x17d8b, 0x17d8c, 0x17d8d, 0x17d8e, 0x17d8f, 0x17d90, 0x17d91, 0x17d92, 0x17d93, 0x17d94, 0x17d95
};

void BM_collation_element_lookup_573(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 0, cps_573 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 1, cps_573 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 2, cps_573 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 3, cps_573 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 4, cps_573 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 5, cps_573 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 6, cps_573 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 7, cps_573 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 8, cps_573 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 9, cps_573 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 10, cps_573 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 11, cps_573 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 12, cps_573 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 13, cps_573 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 14, cps_573 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 15, cps_573 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 16, cps_573 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 17, cps_573 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 18, cps_573 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 19, cps_573 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 20, cps_573 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 21, cps_573 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 22, cps_573 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 23, cps_573 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 24, cps_573 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 25, cps_573 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 26, cps_573 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 27, cps_573 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 28, cps_573 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 29, cps_573 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 30, cps_573 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 31, cps_573 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 32, cps_573 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 33, cps_573 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 34, cps_573 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 35, cps_573 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 36, cps_573 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 37, cps_573 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 38, cps_573 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 39, cps_573 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 40, cps_573 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 41, cps_573 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 42, cps_573 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 43, cps_573 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 44, cps_573 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 45, cps_573 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 46, cps_573 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 47, cps_573 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 48, cps_573 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_573 + 49, cps_573 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_573);

uint32_t cps_574[] = {
0x17d96, 0x17d97, 0x17d98, 0x17d99, 0x17d9a, 0x17d9b, 0x17d9c, 0x17d9d, 0x17d9e, 0x17d9f, 0x17da0, 0x17da1, 0x17da2, 0x17da3, 0x17da4, 0x17da5, 0x17da6, 0x17da7, 0x17da8, 0x17da9, 0x17daa, 0x17dab, 0x17dac, 0x17dad, 0x17dae, 0x17daf, 0x17db0, 0x17db1, 0x17db2, 0x17db3, 0x17db4, 0x17db5, 0x17db6, 0x17db7, 0x17db8, 0x17db9, 0x17dba, 0x17dbb, 0x17dbc, 0x17dbd, 0x17dbe, 0x17dbf, 0x17dc0, 0x17dc1, 0x17dc2, 0x17dc3, 0x17dc4, 0x17dc5, 0x17dc6, 0x17dc7
};

void BM_collation_element_lookup_574(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 0, cps_574 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 1, cps_574 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 2, cps_574 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 3, cps_574 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 4, cps_574 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 5, cps_574 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 6, cps_574 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 7, cps_574 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 8, cps_574 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 9, cps_574 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 10, cps_574 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 11, cps_574 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 12, cps_574 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 13, cps_574 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 14, cps_574 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 15, cps_574 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 16, cps_574 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 17, cps_574 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 18, cps_574 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 19, cps_574 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 20, cps_574 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 21, cps_574 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 22, cps_574 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 23, cps_574 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 24, cps_574 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 25, cps_574 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 26, cps_574 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 27, cps_574 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 28, cps_574 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 29, cps_574 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 30, cps_574 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 31, cps_574 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 32, cps_574 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 33, cps_574 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 34, cps_574 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 35, cps_574 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 36, cps_574 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 37, cps_574 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 38, cps_574 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 39, cps_574 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 40, cps_574 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 41, cps_574 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 42, cps_574 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 43, cps_574 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 44, cps_574 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 45, cps_574 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 46, cps_574 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 47, cps_574 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 48, cps_574 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_574 + 49, cps_574 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_574);

uint32_t cps_575[] = {
0x17dc8, 0x17dc9, 0x17dca, 0x17dcb, 0x17dcc, 0x17dcd, 0x17dce, 0x17dcf, 0x17dd0, 0x17dd1, 0x17dd2, 0x17dd3, 0x17dd4, 0x17dd5, 0x17dd6, 0x17dd7, 0x17dd8, 0x17dd9, 0x17dda, 0x17ddb, 0x17ddc, 0x17ddd, 0x17dde, 0x17ddf, 0x17de0, 0x17de1, 0x17de2, 0x17de3, 0x17de4, 0x17de5, 0x17de6, 0x17de7, 0x17de8, 0x17de9, 0x17dea, 0x17deb, 0x17dec, 0x17ded, 0x17dee, 0x17def, 0x17df0, 0x17df1, 0x17df2, 0x17df3, 0x17df4, 0x17df5, 0x17df6, 0x17df7, 0x17df8, 0x17df9
};

void BM_collation_element_lookup_575(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 0, cps_575 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 1, cps_575 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 2, cps_575 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 3, cps_575 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 4, cps_575 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 5, cps_575 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 6, cps_575 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 7, cps_575 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 8, cps_575 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 9, cps_575 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 10, cps_575 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 11, cps_575 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 12, cps_575 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 13, cps_575 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 14, cps_575 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 15, cps_575 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 16, cps_575 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 17, cps_575 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 18, cps_575 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 19, cps_575 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 20, cps_575 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 21, cps_575 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 22, cps_575 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 23, cps_575 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 24, cps_575 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 25, cps_575 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 26, cps_575 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 27, cps_575 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 28, cps_575 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 29, cps_575 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 30, cps_575 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 31, cps_575 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 32, cps_575 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 33, cps_575 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 34, cps_575 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 35, cps_575 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 36, cps_575 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 37, cps_575 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 38, cps_575 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 39, cps_575 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 40, cps_575 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 41, cps_575 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 42, cps_575 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 43, cps_575 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 44, cps_575 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 45, cps_575 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 46, cps_575 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 47, cps_575 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 48, cps_575 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_575 + 49, cps_575 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_575);

uint32_t cps_576[] = {
0x17dfa, 0x17dfb, 0x17dfc, 0x17dfd, 0x17dfe, 0x17dff, 0x17e00, 0x17e01, 0x17e02, 0x17e03, 0x17e04, 0x17e05, 0x17e06, 0x17e07, 0x17e08, 0x17e09, 0x17e0a, 0x17e0b, 0x17e0c, 0x17e0d, 0x17e0e, 0x17e0f, 0x17e10, 0x17e11, 0x17e12, 0x17e13, 0x17e14, 0x17e15, 0x17e16, 0x17e17, 0x17e18, 0x17e19, 0x17e1a, 0x17e1b, 0x17e1c, 0x17e1d, 0x17e1e, 0x17e1f, 0x17e20, 0x17e21, 0x17e22, 0x17e23, 0x17e24, 0x17e25, 0x17e26, 0x17e27, 0x17e28, 0x17e29, 0x17e2a, 0x17e2b
};

void BM_collation_element_lookup_576(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 0, cps_576 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 1, cps_576 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 2, cps_576 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 3, cps_576 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 4, cps_576 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 5, cps_576 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 6, cps_576 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 7, cps_576 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 8, cps_576 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 9, cps_576 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 10, cps_576 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 11, cps_576 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 12, cps_576 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 13, cps_576 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 14, cps_576 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 15, cps_576 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 16, cps_576 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 17, cps_576 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 18, cps_576 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 19, cps_576 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 20, cps_576 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 21, cps_576 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 22, cps_576 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 23, cps_576 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 24, cps_576 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 25, cps_576 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 26, cps_576 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 27, cps_576 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 28, cps_576 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 29, cps_576 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 30, cps_576 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 31, cps_576 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 32, cps_576 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 33, cps_576 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 34, cps_576 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 35, cps_576 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 36, cps_576 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 37, cps_576 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 38, cps_576 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 39, cps_576 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 40, cps_576 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 41, cps_576 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 42, cps_576 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 43, cps_576 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 44, cps_576 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 45, cps_576 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 46, cps_576 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 47, cps_576 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 48, cps_576 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_576 + 49, cps_576 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_576);

uint32_t cps_577[] = {
0x17e2c, 0x17e2d, 0x17e2e, 0x17e2f, 0x17e30, 0x17e31, 0x17e32, 0x17e33, 0x17e34, 0x17e35, 0x17e36, 0x17e37, 0x17e38, 0x17e39, 0x17e3a, 0x17e3b, 0x17e3c, 0x17e3d, 0x17e3e, 0x17e3f, 0x17e40, 0x17e41, 0x17e42, 0x17e43, 0x17e44, 0x17e45, 0x17e46, 0x17e47, 0x17e48, 0x17e49, 0x17e4a, 0x17e4b, 0x17e4c, 0x17e4d, 0x17e4e, 0x17e4f, 0x17e50, 0x17e51, 0x17e52, 0x17e53, 0x17e54, 0x17e55, 0x17e56, 0x17e57, 0x17e58, 0x17e59, 0x17e5a, 0x17e5b, 0x17e5c, 0x17e5d
};

void BM_collation_element_lookup_577(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 0, cps_577 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 1, cps_577 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 2, cps_577 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 3, cps_577 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 4, cps_577 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 5, cps_577 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 6, cps_577 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 7, cps_577 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 8, cps_577 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 9, cps_577 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 10, cps_577 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 11, cps_577 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 12, cps_577 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 13, cps_577 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 14, cps_577 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 15, cps_577 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 16, cps_577 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 17, cps_577 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 18, cps_577 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 19, cps_577 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 20, cps_577 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 21, cps_577 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 22, cps_577 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 23, cps_577 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 24, cps_577 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 25, cps_577 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 26, cps_577 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 27, cps_577 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 28, cps_577 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 29, cps_577 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 30, cps_577 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 31, cps_577 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 32, cps_577 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 33, cps_577 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 34, cps_577 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 35, cps_577 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 36, cps_577 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 37, cps_577 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 38, cps_577 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 39, cps_577 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 40, cps_577 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 41, cps_577 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 42, cps_577 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 43, cps_577 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 44, cps_577 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 45, cps_577 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 46, cps_577 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 47, cps_577 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 48, cps_577 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_577 + 49, cps_577 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_577);

uint32_t cps_578[] = {
0x17e5e, 0x17e5f, 0x17e60, 0x17e61, 0x17e62, 0x17e63, 0x17e64, 0x17e65, 0x17e66, 0x17e67, 0x17e68, 0x17e69, 0x17e6a, 0x17e6b, 0x17e6c, 0x17e6d, 0x17e6e, 0x17e6f, 0x17e70, 0x17e71, 0x17e72, 0x17e73, 0x17e74, 0x17e75, 0x17e76, 0x17e77, 0x17e78, 0x17e79, 0x17e7a, 0x17e7b, 0x17e7c, 0x17e7d, 0x17e7e, 0x17e7f, 0x17e80, 0x17e81, 0x17e82, 0x17e83, 0x17e84, 0x17e85, 0x17e86, 0x17e87, 0x17e88, 0x17e89, 0x17e8a, 0x17e8b, 0x17e8c, 0x17e8d, 0x17e8e, 0x17e8f
};

void BM_collation_element_lookup_578(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 0, cps_578 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 1, cps_578 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 2, cps_578 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 3, cps_578 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 4, cps_578 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 5, cps_578 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 6, cps_578 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 7, cps_578 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 8, cps_578 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 9, cps_578 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 10, cps_578 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 11, cps_578 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 12, cps_578 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 13, cps_578 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 14, cps_578 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 15, cps_578 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 16, cps_578 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 17, cps_578 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 18, cps_578 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 19, cps_578 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 20, cps_578 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 21, cps_578 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 22, cps_578 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 23, cps_578 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 24, cps_578 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 25, cps_578 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 26, cps_578 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 27, cps_578 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 28, cps_578 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 29, cps_578 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 30, cps_578 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 31, cps_578 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 32, cps_578 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 33, cps_578 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 34, cps_578 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 35, cps_578 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 36, cps_578 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 37, cps_578 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 38, cps_578 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 39, cps_578 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 40, cps_578 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 41, cps_578 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 42, cps_578 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 43, cps_578 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 44, cps_578 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 45, cps_578 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 46, cps_578 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 47, cps_578 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 48, cps_578 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_578 + 49, cps_578 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_578);

uint32_t cps_579[] = {
0x17e90, 0x17e91, 0x17e92, 0x17e93, 0x17e94, 0x17e95, 0x17e96, 0x17e97, 0x17e98, 0x17e99, 0x17e9a, 0x17e9b, 0x17e9c, 0x17e9d, 0x17e9e, 0x17e9f, 0x17ea0, 0x17ea1, 0x17ea2, 0x17ea3, 0x17ea4, 0x17ea5, 0x17ea6, 0x17ea7, 0x17ea8, 0x17ea9, 0x17eaa, 0x17eab, 0x17eac, 0x17ead, 0x17eae, 0x17eaf, 0x17eb0, 0x17eb1, 0x17eb2, 0x17eb3, 0x17eb4, 0x17eb5, 0x17eb6, 0x17eb7, 0x17eb8, 0x17eb9, 0x17eba, 0x17ebb, 0x17ebc, 0x17ebd, 0x17ebe, 0x17ebf, 0x17ec0, 0x17ec1
};

void BM_collation_element_lookup_579(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 0, cps_579 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 1, cps_579 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 2, cps_579 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 3, cps_579 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 4, cps_579 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 5, cps_579 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 6, cps_579 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 7, cps_579 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 8, cps_579 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 9, cps_579 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 10, cps_579 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 11, cps_579 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 12, cps_579 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 13, cps_579 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 14, cps_579 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 15, cps_579 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 16, cps_579 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 17, cps_579 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 18, cps_579 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 19, cps_579 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 20, cps_579 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 21, cps_579 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 22, cps_579 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 23, cps_579 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 24, cps_579 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 25, cps_579 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 26, cps_579 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 27, cps_579 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 28, cps_579 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 29, cps_579 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 30, cps_579 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 31, cps_579 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 32, cps_579 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 33, cps_579 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 34, cps_579 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 35, cps_579 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 36, cps_579 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 37, cps_579 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 38, cps_579 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 39, cps_579 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 40, cps_579 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 41, cps_579 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 42, cps_579 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 43, cps_579 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 44, cps_579 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 45, cps_579 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 46, cps_579 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 47, cps_579 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 48, cps_579 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_579 + 49, cps_579 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_579);

uint32_t cps_580[] = {
0x17ec2, 0x17ec3, 0x17ec4, 0x17ec5, 0x17ec6, 0x17ec7, 0x17ec8, 0x17ec9, 0x17eca, 0x17ecb, 0x17ecc, 0x17ecd, 0x17ece, 0x17ecf, 0x17ed0, 0x17ed1, 0x17ed2, 0x17ed3, 0x17ed4, 0x17ed5, 0x17ed6, 0x17ed7, 0x17ed8, 0x17ed9, 0x17eda, 0x17edb, 0x17edc, 0x17edd, 0x17ede, 0x17edf, 0x17ee0, 0x17ee1, 0x17ee2, 0x17ee3, 0x17ee4, 0x17ee5, 0x17ee6, 0x17ee7, 0x17ee8, 0x17ee9, 0x17eea, 0x17eeb, 0x17eec, 0x17eed, 0x17eee, 0x17eef, 0x17ef0, 0x17ef1, 0x17ef2, 0x17ef3
};

void BM_collation_element_lookup_580(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 0, cps_580 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 1, cps_580 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 2, cps_580 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 3, cps_580 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 4, cps_580 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 5, cps_580 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 6, cps_580 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 7, cps_580 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 8, cps_580 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 9, cps_580 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 10, cps_580 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 11, cps_580 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 12, cps_580 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 13, cps_580 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 14, cps_580 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 15, cps_580 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 16, cps_580 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 17, cps_580 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 18, cps_580 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 19, cps_580 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 20, cps_580 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 21, cps_580 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 22, cps_580 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 23, cps_580 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 24, cps_580 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 25, cps_580 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 26, cps_580 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 27, cps_580 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 28, cps_580 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 29, cps_580 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 30, cps_580 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 31, cps_580 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 32, cps_580 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 33, cps_580 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 34, cps_580 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 35, cps_580 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 36, cps_580 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 37, cps_580 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 38, cps_580 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 39, cps_580 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 40, cps_580 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 41, cps_580 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 42, cps_580 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 43, cps_580 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 44, cps_580 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 45, cps_580 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 46, cps_580 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 47, cps_580 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 48, cps_580 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_580 + 49, cps_580 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_580);

uint32_t cps_581[] = {
0x17ef4, 0x17ef5, 0x17ef6, 0x17ef7, 0x17ef8, 0x17ef9, 0x17efa, 0x17efb, 0x17efc, 0x17efd, 0x17efe, 0x17eff, 0x17f00, 0x17f01, 0x17f02, 0x17f03, 0x17f04, 0x17f05, 0x17f06, 0x17f07, 0x17f08, 0x17f09, 0x17f0a, 0x17f0b, 0x17f0c, 0x17f0d, 0x17f0e, 0x17f0f, 0x17f10, 0x17f11, 0x17f12, 0x17f13, 0x17f14, 0x17f15, 0x17f16, 0x17f17, 0x17f18, 0x17f19, 0x17f1a, 0x17f1b, 0x17f1c, 0x17f1d, 0x17f1e, 0x17f1f, 0x17f20, 0x17f21, 0x17f22, 0x17f23, 0x17f24, 0x17f25
};

void BM_collation_element_lookup_581(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 0, cps_581 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 1, cps_581 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 2, cps_581 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 3, cps_581 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 4, cps_581 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 5, cps_581 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 6, cps_581 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 7, cps_581 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 8, cps_581 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 9, cps_581 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 10, cps_581 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 11, cps_581 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 12, cps_581 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 13, cps_581 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 14, cps_581 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 15, cps_581 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 16, cps_581 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 17, cps_581 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 18, cps_581 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 19, cps_581 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 20, cps_581 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 21, cps_581 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 22, cps_581 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 23, cps_581 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 24, cps_581 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 25, cps_581 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 26, cps_581 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 27, cps_581 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 28, cps_581 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 29, cps_581 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 30, cps_581 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 31, cps_581 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 32, cps_581 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 33, cps_581 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 34, cps_581 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 35, cps_581 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 36, cps_581 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 37, cps_581 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 38, cps_581 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 39, cps_581 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 40, cps_581 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 41, cps_581 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 42, cps_581 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 43, cps_581 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 44, cps_581 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 45, cps_581 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 46, cps_581 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 47, cps_581 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 48, cps_581 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_581 + 49, cps_581 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_581);

uint32_t cps_582[] = {
0x17f26, 0x17f27, 0x17f28, 0x17f29, 0x17f2a, 0x17f2b, 0x17f2c, 0x17f2d, 0x17f2e, 0x17f2f, 0x17f30, 0x17f31, 0x17f32, 0x17f33, 0x17f34, 0x17f35, 0x17f36, 0x17f37, 0x17f38, 0x17f39, 0x17f3a, 0x17f3b, 0x17f3c, 0x17f3d, 0x17f3e, 0x17f3f, 0x17f40, 0x17f41, 0x17f42, 0x17f43, 0x17f44, 0x17f45, 0x17f46, 0x17f47, 0x17f48, 0x17f49, 0x17f4a, 0x17f4b, 0x17f4c, 0x17f4d, 0x17f4e, 0x17f4f, 0x17f50, 0x17f51, 0x17f52, 0x17f53, 0x17f54, 0x17f55, 0x17f56, 0x17f57
};

void BM_collation_element_lookup_582(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 0, cps_582 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 1, cps_582 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 2, cps_582 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 3, cps_582 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 4, cps_582 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 5, cps_582 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 6, cps_582 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 7, cps_582 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 8, cps_582 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 9, cps_582 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 10, cps_582 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 11, cps_582 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 12, cps_582 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 13, cps_582 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 14, cps_582 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 15, cps_582 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 16, cps_582 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 17, cps_582 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 18, cps_582 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 19, cps_582 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 20, cps_582 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 21, cps_582 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 22, cps_582 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 23, cps_582 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 24, cps_582 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 25, cps_582 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 26, cps_582 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 27, cps_582 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 28, cps_582 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 29, cps_582 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 30, cps_582 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 31, cps_582 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 32, cps_582 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 33, cps_582 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 34, cps_582 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 35, cps_582 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 36, cps_582 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 37, cps_582 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 38, cps_582 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 39, cps_582 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 40, cps_582 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 41, cps_582 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 42, cps_582 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 43, cps_582 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 44, cps_582 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 45, cps_582 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 46, cps_582 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 47, cps_582 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 48, cps_582 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_582 + 49, cps_582 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_582);

uint32_t cps_583[] = {
0x17f58, 0x17f59, 0x17f5a, 0x17f5b, 0x17f5c, 0x17f5d, 0x17f5e, 0x17f5f, 0x17f60, 0x17f61, 0x17f62, 0x17f63, 0x17f64, 0x17f65, 0x17f66, 0x17f67, 0x17f68, 0x17f69, 0x17f6a, 0x17f6b, 0x17f6c, 0x17f6d, 0x17f6e, 0x17f6f, 0x17f70, 0x17f71, 0x17f72, 0x17f73, 0x17f74, 0x17f75, 0x17f76, 0x17f77, 0x17f78, 0x17f79, 0x17f7a, 0x17f7b, 0x17f7c, 0x17f7d, 0x17f7e, 0x17f7f, 0x17f80, 0x17f81, 0x17f82, 0x17f83, 0x17f84, 0x17f85, 0x17f86, 0x17f87, 0x17f88, 0x17f89
};

void BM_collation_element_lookup_583(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 0, cps_583 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 1, cps_583 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 2, cps_583 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 3, cps_583 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 4, cps_583 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 5, cps_583 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 6, cps_583 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 7, cps_583 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 8, cps_583 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 9, cps_583 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 10, cps_583 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 11, cps_583 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 12, cps_583 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 13, cps_583 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 14, cps_583 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 15, cps_583 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 16, cps_583 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 17, cps_583 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 18, cps_583 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 19, cps_583 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 20, cps_583 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 21, cps_583 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 22, cps_583 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 23, cps_583 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 24, cps_583 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 25, cps_583 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 26, cps_583 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 27, cps_583 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 28, cps_583 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 29, cps_583 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 30, cps_583 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 31, cps_583 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 32, cps_583 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 33, cps_583 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 34, cps_583 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 35, cps_583 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 36, cps_583 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 37, cps_583 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 38, cps_583 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 39, cps_583 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 40, cps_583 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 41, cps_583 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 42, cps_583 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 43, cps_583 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 44, cps_583 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 45, cps_583 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 46, cps_583 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 47, cps_583 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 48, cps_583 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_583 + 49, cps_583 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_583);

uint32_t cps_584[] = {
0x17f8a, 0x17f8b, 0x17f8c, 0x17f8d, 0x17f8e, 0x17f8f, 0x17f90, 0x17f91, 0x17f92, 0x17f93, 0x17f94, 0x17f95, 0x17f96, 0x17f97, 0x17f98, 0x17f99, 0x17f9a, 0x17f9b, 0x17f9c, 0x17f9d, 0x17f9e, 0x17f9f, 0x17fa0, 0x17fa1, 0x17fa2, 0x17fa3, 0x17fa4, 0x17fa5, 0x17fa6, 0x17fa7, 0x17fa8, 0x17fa9, 0x17faa, 0x17fab, 0x17fac, 0x17fad, 0x17fae, 0x17faf, 0x17fb0, 0x17fb1, 0x17fb2, 0x17fb3, 0x17fb4, 0x17fb5, 0x17fb6, 0x17fb7, 0x17fb8, 0x17fb9, 0x17fba, 0x17fbb
};

void BM_collation_element_lookup_584(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 0, cps_584 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 1, cps_584 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 2, cps_584 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 3, cps_584 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 4, cps_584 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 5, cps_584 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 6, cps_584 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 7, cps_584 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 8, cps_584 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 9, cps_584 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 10, cps_584 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 11, cps_584 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 12, cps_584 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 13, cps_584 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 14, cps_584 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 15, cps_584 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 16, cps_584 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 17, cps_584 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 18, cps_584 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 19, cps_584 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 20, cps_584 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 21, cps_584 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 22, cps_584 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 23, cps_584 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 24, cps_584 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 25, cps_584 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 26, cps_584 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 27, cps_584 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 28, cps_584 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 29, cps_584 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 30, cps_584 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 31, cps_584 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 32, cps_584 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 33, cps_584 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 34, cps_584 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 35, cps_584 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 36, cps_584 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 37, cps_584 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 38, cps_584 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 39, cps_584 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 40, cps_584 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 41, cps_584 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 42, cps_584 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 43, cps_584 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 44, cps_584 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 45, cps_584 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 46, cps_584 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 47, cps_584 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 48, cps_584 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_584 + 49, cps_584 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_584);

uint32_t cps_585[] = {
0x17fbc, 0x17fbd, 0x17fbe, 0x17fbf, 0x17fc0, 0x17fc1, 0x17fc2, 0x17fc3, 0x17fc4, 0x17fc5, 0x17fc6, 0x17fc7, 0x17fc8, 0x17fc9, 0x17fca, 0x17fcb, 0x17fcc, 0x17fcd, 0x17fce, 0x17fcf, 0x17fd0, 0x17fd1, 0x17fd2, 0x17fd3, 0x17fd4, 0x17fd5, 0x17fd6, 0x17fd7, 0x17fd8, 0x17fd9, 0x17fda, 0x17fdb, 0x17fdc, 0x17fdd, 0x17fde, 0x17fdf, 0x17fe0, 0x17fe1, 0x17fe2, 0x17fe3, 0x17fe4, 0x17fe5, 0x17fe6, 0x17fe7, 0x17fe8, 0x17fe9, 0x17fea, 0x17feb, 0x17fec, 0x17fed
};

void BM_collation_element_lookup_585(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 0, cps_585 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 1, cps_585 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 2, cps_585 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 3, cps_585 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 4, cps_585 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 5, cps_585 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 6, cps_585 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 7, cps_585 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 8, cps_585 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 9, cps_585 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 10, cps_585 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 11, cps_585 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 12, cps_585 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 13, cps_585 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 14, cps_585 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 15, cps_585 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 16, cps_585 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 17, cps_585 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 18, cps_585 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 19, cps_585 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 20, cps_585 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 21, cps_585 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 22, cps_585 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 23, cps_585 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 24, cps_585 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 25, cps_585 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 26, cps_585 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 27, cps_585 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 28, cps_585 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 29, cps_585 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 30, cps_585 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 31, cps_585 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 32, cps_585 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 33, cps_585 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 34, cps_585 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 35, cps_585 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 36, cps_585 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 37, cps_585 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 38, cps_585 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 39, cps_585 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 40, cps_585 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 41, cps_585 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 42, cps_585 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 43, cps_585 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 44, cps_585 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 45, cps_585 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 46, cps_585 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 47, cps_585 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 48, cps_585 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_585 + 49, cps_585 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_585);

uint32_t cps_586[] = {
0x17fee, 0x17fef, 0x17ff0, 0x17ff1, 0x17ff2, 0x17ff3, 0x17ff4, 0x17ff5, 0x17ff6, 0x17ff7, 0x17ff8, 0x17ff9, 0x17ffa, 0x17ffb, 0x17ffc, 0x17ffd, 0x17ffe, 0x17fff, 0x18000, 0x18001, 0x18002, 0x18003, 0x18004, 0x18005, 0x18006, 0x18007, 0x18008, 0x18009, 0x1800a, 0x1800b, 0x1800c, 0x1800d, 0x1800e, 0x1800f, 0x18010, 0x18011, 0x18012, 0x18013, 0x18014, 0x18015, 0x18016, 0x18017, 0x18018, 0x18019, 0x1801a, 0x1801b, 0x1801c, 0x1801d, 0x1801e, 0x1801f
};

void BM_collation_element_lookup_586(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 0, cps_586 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 1, cps_586 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 2, cps_586 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 3, cps_586 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 4, cps_586 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 5, cps_586 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 6, cps_586 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 7, cps_586 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 8, cps_586 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 9, cps_586 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 10, cps_586 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 11, cps_586 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 12, cps_586 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 13, cps_586 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 14, cps_586 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 15, cps_586 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 16, cps_586 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 17, cps_586 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 18, cps_586 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 19, cps_586 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 20, cps_586 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 21, cps_586 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 22, cps_586 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 23, cps_586 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 24, cps_586 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 25, cps_586 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 26, cps_586 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 27, cps_586 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 28, cps_586 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 29, cps_586 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 30, cps_586 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 31, cps_586 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 32, cps_586 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 33, cps_586 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 34, cps_586 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 35, cps_586 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 36, cps_586 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 37, cps_586 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 38, cps_586 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 39, cps_586 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 40, cps_586 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 41, cps_586 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 42, cps_586 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 43, cps_586 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 44, cps_586 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 45, cps_586 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 46, cps_586 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 47, cps_586 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 48, cps_586 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_586 + 49, cps_586 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_586);

uint32_t cps_587[] = {
0x18020, 0x18021, 0x18022, 0x18023, 0x18024, 0x18025, 0x18026, 0x18027, 0x18028, 0x18029, 0x1802a, 0x1802b, 0x1802c, 0x1802d, 0x1802e, 0x1802f, 0x18030, 0x18031, 0x18032, 0x18033, 0x18034, 0x18035, 0x18036, 0x18037, 0x18038, 0x18039, 0x1803a, 0x1803b, 0x1803c, 0x1803d, 0x1803e, 0x1803f, 0x18040, 0x18041, 0x18042, 0x18043, 0x18044, 0x18045, 0x18046, 0x18047, 0x18048, 0x18049, 0x1804a, 0x1804b, 0x1804c, 0x1804d, 0x1804e, 0x1804f, 0x18050, 0x18051
};

void BM_collation_element_lookup_587(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 0, cps_587 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 1, cps_587 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 2, cps_587 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 3, cps_587 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 4, cps_587 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 5, cps_587 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 6, cps_587 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 7, cps_587 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 8, cps_587 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 9, cps_587 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 10, cps_587 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 11, cps_587 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 12, cps_587 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 13, cps_587 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 14, cps_587 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 15, cps_587 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 16, cps_587 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 17, cps_587 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 18, cps_587 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 19, cps_587 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 20, cps_587 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 21, cps_587 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 22, cps_587 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 23, cps_587 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 24, cps_587 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 25, cps_587 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 26, cps_587 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 27, cps_587 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 28, cps_587 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 29, cps_587 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 30, cps_587 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 31, cps_587 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 32, cps_587 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 33, cps_587 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 34, cps_587 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 35, cps_587 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 36, cps_587 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 37, cps_587 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 38, cps_587 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 39, cps_587 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 40, cps_587 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 41, cps_587 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 42, cps_587 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 43, cps_587 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 44, cps_587 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 45, cps_587 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 46, cps_587 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 47, cps_587 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 48, cps_587 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_587 + 49, cps_587 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_587);

uint32_t cps_588[] = {
0x18052, 0x18053, 0x18054, 0x18055, 0x18056, 0x18057, 0x18058, 0x18059, 0x1805a, 0x1805b, 0x1805c, 0x1805d, 0x1805e, 0x1805f, 0x18060, 0x18061, 0x18062, 0x18063, 0x18064, 0x18065, 0x18066, 0x18067, 0x18068, 0x18069, 0x1806a, 0x1806b, 0x1806c, 0x1806d, 0x1806e, 0x1806f, 0x18070, 0x18071, 0x18072, 0x18073, 0x18074, 0x18075, 0x18076, 0x18077, 0x18078, 0x18079, 0x1807a, 0x1807b, 0x1807c, 0x1807d, 0x1807e, 0x1807f, 0x18080, 0x18081, 0x18082, 0x18083
};

void BM_collation_element_lookup_588(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 0, cps_588 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 1, cps_588 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 2, cps_588 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 3, cps_588 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 4, cps_588 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 5, cps_588 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 6, cps_588 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 7, cps_588 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 8, cps_588 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 9, cps_588 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 10, cps_588 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 11, cps_588 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 12, cps_588 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 13, cps_588 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 14, cps_588 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 15, cps_588 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 16, cps_588 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 17, cps_588 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 18, cps_588 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 19, cps_588 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 20, cps_588 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 21, cps_588 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 22, cps_588 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 23, cps_588 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 24, cps_588 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 25, cps_588 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 26, cps_588 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 27, cps_588 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 28, cps_588 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 29, cps_588 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 30, cps_588 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 31, cps_588 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 32, cps_588 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 33, cps_588 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 34, cps_588 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 35, cps_588 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 36, cps_588 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 37, cps_588 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 38, cps_588 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 39, cps_588 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 40, cps_588 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 41, cps_588 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 42, cps_588 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 43, cps_588 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 44, cps_588 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 45, cps_588 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 46, cps_588 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 47, cps_588 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 48, cps_588 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_588 + 49, cps_588 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_588);

uint32_t cps_589[] = {
0x18084, 0x18085, 0x18086, 0x18087, 0x18088, 0x18089, 0x1808a, 0x1808b, 0x1808c, 0x1808d, 0x1808e, 0x1808f, 0x18090, 0x18091, 0x18092, 0x18093, 0x18094, 0x18095, 0x18096, 0x18097, 0x18098, 0x18099, 0x1809a, 0x1809b, 0x1809c, 0x1809d, 0x1809e, 0x1809f, 0x180a0, 0x180a1, 0x180a2, 0x180a3, 0x180a4, 0x180a5, 0x180a6, 0x180a7, 0x180a8, 0x180a9, 0x180aa, 0x180ab, 0x180ac, 0x180ad, 0x180ae, 0x180af, 0x180b0, 0x180b1, 0x180b2, 0x180b3, 0x180b4, 0x180b5
};

void BM_collation_element_lookup_589(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 0, cps_589 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 1, cps_589 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 2, cps_589 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 3, cps_589 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 4, cps_589 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 5, cps_589 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 6, cps_589 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 7, cps_589 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 8, cps_589 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 9, cps_589 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 10, cps_589 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 11, cps_589 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 12, cps_589 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 13, cps_589 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 14, cps_589 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 15, cps_589 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 16, cps_589 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 17, cps_589 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 18, cps_589 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 19, cps_589 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 20, cps_589 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 21, cps_589 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 22, cps_589 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 23, cps_589 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 24, cps_589 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 25, cps_589 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 26, cps_589 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 27, cps_589 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 28, cps_589 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 29, cps_589 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 30, cps_589 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 31, cps_589 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 32, cps_589 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 33, cps_589 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 34, cps_589 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 35, cps_589 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 36, cps_589 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 37, cps_589 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 38, cps_589 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 39, cps_589 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 40, cps_589 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 41, cps_589 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 42, cps_589 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 43, cps_589 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 44, cps_589 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 45, cps_589 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 46, cps_589 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 47, cps_589 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 48, cps_589 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_589 + 49, cps_589 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_589);

uint32_t cps_590[] = {
0x180b6, 0x180b7, 0x180b8, 0x180b9, 0x180ba, 0x180bb, 0x180bc, 0x180bd, 0x180be, 0x180bf, 0x180c0, 0x180c1, 0x180c2, 0x180c3, 0x180c4, 0x180c5, 0x180c6, 0x180c7, 0x180c8, 0x180c9, 0x180ca, 0x180cb, 0x180cc, 0x180cd, 0x180ce, 0x180cf, 0x180d0, 0x180d1, 0x180d2, 0x180d3, 0x180d4, 0x180d5, 0x180d6, 0x180d7, 0x180d8, 0x180d9, 0x180da, 0x180db, 0x180dc, 0x180dd, 0x180de, 0x180df, 0x180e0, 0x180e1, 0x180e2, 0x180e3, 0x180e4, 0x180e5, 0x180e6, 0x180e7
};

void BM_collation_element_lookup_590(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 0, cps_590 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 1, cps_590 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 2, cps_590 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 3, cps_590 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 4, cps_590 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 5, cps_590 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 6, cps_590 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 7, cps_590 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 8, cps_590 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 9, cps_590 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 10, cps_590 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 11, cps_590 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 12, cps_590 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 13, cps_590 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 14, cps_590 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 15, cps_590 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 16, cps_590 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 17, cps_590 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 18, cps_590 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 19, cps_590 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 20, cps_590 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 21, cps_590 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 22, cps_590 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 23, cps_590 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 24, cps_590 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 25, cps_590 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 26, cps_590 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 27, cps_590 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 28, cps_590 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 29, cps_590 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 30, cps_590 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 31, cps_590 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 32, cps_590 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 33, cps_590 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 34, cps_590 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 35, cps_590 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 36, cps_590 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 37, cps_590 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 38, cps_590 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 39, cps_590 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 40, cps_590 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 41, cps_590 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 42, cps_590 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 43, cps_590 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 44, cps_590 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 45, cps_590 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 46, cps_590 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 47, cps_590 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 48, cps_590 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_590 + 49, cps_590 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_590);

uint32_t cps_591[] = {
0x180e8, 0x180e9, 0x180ea, 0x180eb, 0x180ec, 0x180ed, 0x180ee, 0x180ef, 0x180f0, 0x180f1, 0x180f2, 0x180f3, 0x180f4, 0x180f5, 0x180f6, 0x180f7, 0x180f8, 0x180f9, 0x180fa, 0x180fb, 0x180fc, 0x180fd, 0x180fe, 0x180ff, 0x18100, 0x18101, 0x18102, 0x18103, 0x18104, 0x18105, 0x18106, 0x18107, 0x18108, 0x18109, 0x1810a, 0x1810b, 0x1810c, 0x1810d, 0x1810e, 0x1810f, 0x18110, 0x18111, 0x18112, 0x18113, 0x18114, 0x18115, 0x18116, 0x18117, 0x18118, 0x18119
};

void BM_collation_element_lookup_591(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 0, cps_591 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 1, cps_591 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 2, cps_591 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 3, cps_591 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 4, cps_591 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 5, cps_591 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 6, cps_591 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 7, cps_591 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 8, cps_591 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 9, cps_591 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 10, cps_591 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 11, cps_591 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 12, cps_591 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 13, cps_591 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 14, cps_591 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 15, cps_591 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 16, cps_591 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 17, cps_591 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 18, cps_591 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 19, cps_591 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 20, cps_591 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 21, cps_591 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 22, cps_591 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 23, cps_591 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 24, cps_591 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 25, cps_591 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 26, cps_591 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 27, cps_591 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 28, cps_591 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 29, cps_591 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 30, cps_591 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 31, cps_591 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 32, cps_591 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 33, cps_591 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 34, cps_591 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 35, cps_591 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 36, cps_591 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 37, cps_591 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 38, cps_591 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 39, cps_591 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 40, cps_591 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 41, cps_591 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 42, cps_591 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 43, cps_591 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 44, cps_591 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 45, cps_591 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 46, cps_591 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 47, cps_591 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 48, cps_591 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_591 + 49, cps_591 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_591);

uint32_t cps_592[] = {
0x1811a, 0x1811b, 0x1811c, 0x1811d, 0x1811e, 0x1811f, 0x18120, 0x18121, 0x18122, 0x18123, 0x18124, 0x18125, 0x18126, 0x18127, 0x18128, 0x18129, 0x1812a, 0x1812b, 0x1812c, 0x1812d, 0x1812e, 0x1812f, 0x18130, 0x18131, 0x18132, 0x18133, 0x18134, 0x18135, 0x18136, 0x18137, 0x18138, 0x18139, 0x1813a, 0x1813b, 0x1813c, 0x1813d, 0x1813e, 0x1813f, 0x18140, 0x18141, 0x18142, 0x18143, 0x18144, 0x18145, 0x18146, 0x18147, 0x18148, 0x18149, 0x1814a, 0x1814b
};

void BM_collation_element_lookup_592(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 0, cps_592 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 1, cps_592 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 2, cps_592 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 3, cps_592 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 4, cps_592 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 5, cps_592 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 6, cps_592 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 7, cps_592 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 8, cps_592 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 9, cps_592 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 10, cps_592 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 11, cps_592 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 12, cps_592 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 13, cps_592 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 14, cps_592 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 15, cps_592 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 16, cps_592 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 17, cps_592 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 18, cps_592 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 19, cps_592 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 20, cps_592 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 21, cps_592 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 22, cps_592 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 23, cps_592 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 24, cps_592 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 25, cps_592 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 26, cps_592 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 27, cps_592 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 28, cps_592 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 29, cps_592 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 30, cps_592 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 31, cps_592 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 32, cps_592 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 33, cps_592 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 34, cps_592 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 35, cps_592 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 36, cps_592 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 37, cps_592 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 38, cps_592 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 39, cps_592 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 40, cps_592 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 41, cps_592 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 42, cps_592 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 43, cps_592 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 44, cps_592 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 45, cps_592 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 46, cps_592 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 47, cps_592 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 48, cps_592 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_592 + 49, cps_592 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_592);

uint32_t cps_593[] = {
0x1814c, 0x1814d, 0x1814e, 0x1814f, 0x18150, 0x18151, 0x18152, 0x18153, 0x18154, 0x18155, 0x18156, 0x18157, 0x18158, 0x18159, 0x1815a, 0x1815b, 0x1815c, 0x1815d, 0x1815e, 0x1815f, 0x18160, 0x18161, 0x18162, 0x18163, 0x18164, 0x18165, 0x18166, 0x18167, 0x18168, 0x18169, 0x1816a, 0x1816b, 0x1816c, 0x1816d, 0x1816e, 0x1816f, 0x18170, 0x18171, 0x18172, 0x18173, 0x18174, 0x18175, 0x18176, 0x18177, 0x18178, 0x18179, 0x1817a, 0x1817b, 0x1817c, 0x1817d
};

void BM_collation_element_lookup_593(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 0, cps_593 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 1, cps_593 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 2, cps_593 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 3, cps_593 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 4, cps_593 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 5, cps_593 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 6, cps_593 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 7, cps_593 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 8, cps_593 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 9, cps_593 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 10, cps_593 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 11, cps_593 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 12, cps_593 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 13, cps_593 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 14, cps_593 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 15, cps_593 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 16, cps_593 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 17, cps_593 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 18, cps_593 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 19, cps_593 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 20, cps_593 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 21, cps_593 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 22, cps_593 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 23, cps_593 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 24, cps_593 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 25, cps_593 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 26, cps_593 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 27, cps_593 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 28, cps_593 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 29, cps_593 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 30, cps_593 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 31, cps_593 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 32, cps_593 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 33, cps_593 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 34, cps_593 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 35, cps_593 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 36, cps_593 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 37, cps_593 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 38, cps_593 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 39, cps_593 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 40, cps_593 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 41, cps_593 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 42, cps_593 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 43, cps_593 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 44, cps_593 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 45, cps_593 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 46, cps_593 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 47, cps_593 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 48, cps_593 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_593 + 49, cps_593 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_593);

uint32_t cps_594[] = {
0x1817e, 0x1817f, 0x18180, 0x18181, 0x18182, 0x18183, 0x18184, 0x18185, 0x18186, 0x18187, 0x18188, 0x18189, 0x1818a, 0x1818b, 0x1818c, 0x1818d, 0x1818e, 0x1818f, 0x18190, 0x18191, 0x18192, 0x18193, 0x18194, 0x18195, 0x18196, 0x18197, 0x18198, 0x18199, 0x1819a, 0x1819b, 0x1819c, 0x1819d, 0x1819e, 0x1819f, 0x181a0, 0x181a1, 0x181a2, 0x181a3, 0x181a4, 0x181a5, 0x181a6, 0x181a7, 0x181a8, 0x181a9, 0x181aa, 0x181ab, 0x181ac, 0x181ad, 0x181ae, 0x181af
};

void BM_collation_element_lookup_594(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 0, cps_594 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 1, cps_594 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 2, cps_594 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 3, cps_594 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 4, cps_594 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 5, cps_594 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 6, cps_594 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 7, cps_594 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 8, cps_594 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 9, cps_594 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 10, cps_594 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 11, cps_594 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 12, cps_594 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 13, cps_594 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 14, cps_594 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 15, cps_594 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 16, cps_594 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 17, cps_594 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 18, cps_594 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 19, cps_594 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 20, cps_594 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 21, cps_594 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 22, cps_594 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 23, cps_594 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 24, cps_594 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 25, cps_594 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 26, cps_594 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 27, cps_594 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 28, cps_594 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 29, cps_594 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 30, cps_594 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 31, cps_594 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 32, cps_594 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 33, cps_594 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 34, cps_594 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 35, cps_594 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 36, cps_594 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 37, cps_594 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 38, cps_594 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 39, cps_594 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 40, cps_594 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 41, cps_594 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 42, cps_594 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 43, cps_594 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 44, cps_594 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 45, cps_594 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 46, cps_594 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 47, cps_594 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 48, cps_594 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_594 + 49, cps_594 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_594);

uint32_t cps_595[] = {
0x181b0, 0x181b1, 0x181b2, 0x181b3, 0x181b4, 0x181b5, 0x181b6, 0x181b7, 0x181b8, 0x181b9, 0x181ba, 0x181bb, 0x181bc, 0x181bd, 0x181be, 0x181bf, 0x181c0, 0x181c1, 0x181c2, 0x181c3, 0x181c4, 0x181c5, 0x181c6, 0x181c7, 0x181c8, 0x181c9, 0x181ca, 0x181cb, 0x181cc, 0x181cd, 0x181ce, 0x181cf, 0x181d0, 0x181d1, 0x181d2, 0x181d3, 0x181d4, 0x181d5, 0x181d6, 0x181d7, 0x181d8, 0x181d9, 0x181da, 0x181db, 0x181dc, 0x181dd, 0x181de, 0x181df, 0x181e0, 0x181e1
};

void BM_collation_element_lookup_595(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 0, cps_595 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 1, cps_595 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 2, cps_595 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 3, cps_595 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 4, cps_595 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 5, cps_595 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 6, cps_595 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 7, cps_595 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 8, cps_595 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 9, cps_595 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 10, cps_595 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 11, cps_595 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 12, cps_595 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 13, cps_595 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 14, cps_595 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 15, cps_595 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 16, cps_595 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 17, cps_595 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 18, cps_595 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 19, cps_595 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 20, cps_595 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 21, cps_595 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 22, cps_595 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 23, cps_595 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 24, cps_595 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 25, cps_595 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 26, cps_595 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 27, cps_595 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 28, cps_595 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 29, cps_595 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 30, cps_595 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 31, cps_595 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 32, cps_595 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 33, cps_595 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 34, cps_595 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 35, cps_595 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 36, cps_595 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 37, cps_595 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 38, cps_595 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 39, cps_595 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 40, cps_595 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 41, cps_595 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 42, cps_595 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 43, cps_595 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 44, cps_595 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 45, cps_595 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 46, cps_595 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 47, cps_595 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 48, cps_595 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_595 + 49, cps_595 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_595);

uint32_t cps_596[] = {
0x181e2, 0x181e3, 0x181e4, 0x181e5, 0x181e6, 0x181e7, 0x181e8, 0x181e9, 0x181ea, 0x181eb, 0x181ec, 0x181ed, 0x181ee, 0x181ef, 0x181f0, 0x181f1, 0x181f2, 0x181f3, 0x181f4, 0x181f5, 0x181f6, 0x181f7, 0x181f8, 0x181f9, 0x181fa, 0x181fb, 0x181fc, 0x181fd, 0x181fe, 0x181ff, 0x18200, 0x18201, 0x18202, 0x18203, 0x18204, 0x18205, 0x18206, 0x18207, 0x18208, 0x18209, 0x1820a, 0x1820b, 0x1820c, 0x1820d, 0x1820e, 0x1820f, 0x18210, 0x18211, 0x18212, 0x18213
};

void BM_collation_element_lookup_596(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 0, cps_596 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 1, cps_596 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 2, cps_596 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 3, cps_596 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 4, cps_596 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 5, cps_596 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 6, cps_596 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 7, cps_596 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 8, cps_596 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 9, cps_596 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 10, cps_596 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 11, cps_596 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 12, cps_596 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 13, cps_596 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 14, cps_596 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 15, cps_596 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 16, cps_596 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 17, cps_596 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 18, cps_596 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 19, cps_596 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 20, cps_596 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 21, cps_596 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 22, cps_596 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 23, cps_596 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 24, cps_596 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 25, cps_596 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 26, cps_596 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 27, cps_596 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 28, cps_596 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 29, cps_596 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 30, cps_596 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 31, cps_596 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 32, cps_596 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 33, cps_596 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 34, cps_596 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 35, cps_596 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 36, cps_596 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 37, cps_596 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 38, cps_596 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 39, cps_596 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 40, cps_596 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 41, cps_596 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 42, cps_596 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 43, cps_596 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 44, cps_596 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 45, cps_596 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 46, cps_596 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 47, cps_596 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 48, cps_596 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_596 + 49, cps_596 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_596);

uint32_t cps_597[] = {
0x18214, 0x18215, 0x18216, 0x18217, 0x18218, 0x18219, 0x1821a, 0x1821b, 0x1821c, 0x1821d, 0x1821e, 0x1821f, 0x18220, 0x18221, 0x18222, 0x18223, 0x18224, 0x18225, 0x18226, 0x18227, 0x18228, 0x18229, 0x1822a, 0x1822b, 0x1822c, 0x1822d, 0x1822e, 0x1822f, 0x18230, 0x18231, 0x18232, 0x18233, 0x18234, 0x18235, 0x18236, 0x18237, 0x18238, 0x18239, 0x1823a, 0x1823b, 0x1823c, 0x1823d, 0x1823e, 0x1823f, 0x18240, 0x18241, 0x18242, 0x18243, 0x18244, 0x18245
};

void BM_collation_element_lookup_597(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 0, cps_597 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 1, cps_597 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 2, cps_597 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 3, cps_597 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 4, cps_597 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 5, cps_597 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 6, cps_597 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 7, cps_597 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 8, cps_597 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 9, cps_597 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 10, cps_597 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 11, cps_597 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 12, cps_597 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 13, cps_597 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 14, cps_597 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 15, cps_597 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 16, cps_597 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 17, cps_597 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 18, cps_597 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 19, cps_597 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 20, cps_597 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 21, cps_597 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 22, cps_597 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 23, cps_597 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 24, cps_597 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 25, cps_597 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 26, cps_597 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 27, cps_597 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 28, cps_597 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 29, cps_597 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 30, cps_597 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 31, cps_597 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 32, cps_597 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 33, cps_597 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 34, cps_597 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 35, cps_597 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 36, cps_597 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 37, cps_597 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 38, cps_597 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 39, cps_597 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 40, cps_597 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 41, cps_597 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 42, cps_597 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 43, cps_597 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 44, cps_597 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 45, cps_597 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 46, cps_597 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 47, cps_597 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 48, cps_597 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_597 + 49, cps_597 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_597);

uint32_t cps_598[] = {
0x18246, 0x18247, 0x18248, 0x18249, 0x1824a, 0x1824b, 0x1824c, 0x1824d, 0x1824e, 0x1824f, 0x18250, 0x18251, 0x18252, 0x18253, 0x18254, 0x18255, 0x18256, 0x18257, 0x18258, 0x18259, 0x1825a, 0x1825b, 0x1825c, 0x1825d, 0x1825e, 0x1825f, 0x18260, 0x18261, 0x18262, 0x18263, 0x18264, 0x18265, 0x18266, 0x18267, 0x18268, 0x18269, 0x1826a, 0x1826b, 0x1826c, 0x1826d, 0x1826e, 0x1826f, 0x18270, 0x18271, 0x18272, 0x18273, 0x18274, 0x18275, 0x18276, 0x18277
};

void BM_collation_element_lookup_598(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 0, cps_598 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 1, cps_598 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 2, cps_598 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 3, cps_598 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 4, cps_598 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 5, cps_598 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 6, cps_598 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 7, cps_598 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 8, cps_598 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 9, cps_598 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 10, cps_598 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 11, cps_598 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 12, cps_598 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 13, cps_598 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 14, cps_598 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 15, cps_598 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 16, cps_598 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 17, cps_598 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 18, cps_598 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 19, cps_598 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 20, cps_598 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 21, cps_598 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 22, cps_598 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 23, cps_598 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 24, cps_598 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 25, cps_598 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 26, cps_598 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 27, cps_598 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 28, cps_598 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 29, cps_598 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 30, cps_598 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 31, cps_598 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 32, cps_598 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 33, cps_598 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 34, cps_598 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 35, cps_598 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 36, cps_598 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 37, cps_598 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 38, cps_598 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 39, cps_598 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 40, cps_598 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 41, cps_598 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 42, cps_598 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 43, cps_598 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 44, cps_598 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 45, cps_598 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 46, cps_598 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 47, cps_598 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 48, cps_598 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_598 + 49, cps_598 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_598);

uint32_t cps_599[] = {
0x18278, 0x18279, 0x1827a, 0x1827b, 0x1827c, 0x1827d, 0x1827e, 0x1827f, 0x18280, 0x18281, 0x18282, 0x18283, 0x18284, 0x18285, 0x18286, 0x18287, 0x18288, 0x18289, 0x1828a, 0x1828b, 0x1828c, 0x1828d, 0x1828e, 0x1828f, 0x18290, 0x18291, 0x18292, 0x18293, 0x18294, 0x18295, 0x18296, 0x18297, 0x18298, 0x18299, 0x1829a, 0x1829b, 0x1829c, 0x1829d, 0x1829e, 0x1829f, 0x182a0, 0x182a1, 0x182a2, 0x182a3, 0x182a4, 0x182a5, 0x182a6, 0x182a7, 0x182a8, 0x182a9
};

void BM_collation_element_lookup_599(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 0, cps_599 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 1, cps_599 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 2, cps_599 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 3, cps_599 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 4, cps_599 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 5, cps_599 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 6, cps_599 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 7, cps_599 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 8, cps_599 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 9, cps_599 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 10, cps_599 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 11, cps_599 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 12, cps_599 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 13, cps_599 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 14, cps_599 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 15, cps_599 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 16, cps_599 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 17, cps_599 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 18, cps_599 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 19, cps_599 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 20, cps_599 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 21, cps_599 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 22, cps_599 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 23, cps_599 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 24, cps_599 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 25, cps_599 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 26, cps_599 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 27, cps_599 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 28, cps_599 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 29, cps_599 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 30, cps_599 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 31, cps_599 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 32, cps_599 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 33, cps_599 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 34, cps_599 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 35, cps_599 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 36, cps_599 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 37, cps_599 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 38, cps_599 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 39, cps_599 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 40, cps_599 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 41, cps_599 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 42, cps_599 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 43, cps_599 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 44, cps_599 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 45, cps_599 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 46, cps_599 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 47, cps_599 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 48, cps_599 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_599 + 49, cps_599 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_599);



BENCHMARK_MAIN()
