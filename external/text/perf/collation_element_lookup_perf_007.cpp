// Copyright (C) 2020 T. Zachary Laine
//
// Distributed under the Boost Software License, Version 1.0. (See
// accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)

// Warning! This file is autogenerated.
#include <boost/text/collate.hpp>
#include <boost/text/collation_table.hpp>

#include <benchmark/benchmark.h>

boost::text::detail::collation_trie_t const & trie()
{
    static auto const retval = boost::text::detail::make_default_trie();
    return retval;
}

boost::text::collation_table const & table()
{
    static auto const retval = boost::text::default_collation_table();
    return retval;
}

uint32_t cps_700[] = {
0x1d9a4, 0x1d9a5, 0x1d9a6, 0x1d9a7, 0x1d9a8, 0x1d9a9, 0x1d9aa, 0x1d9ab, 0x1d9ac, 0x1d9ad, 0x1d9ae, 0x1d9af, 0x1d9b0, 0x1d9b1, 0x1d9b2, 0x1d9b3, 0x1d9b4, 0x1d9b5, 0x1d9b6, 0x1d9b7, 0x1d9b8, 0x1d9b9, 0x1d9ba, 0x1d9bb, 0x1d9bc, 0x1d9bd, 0x1d9be, 0x1d9bf, 0x1d9c0, 0x1d9c1, 0x1d9c2, 0x1d9c3, 0x1d9c4, 0x1d9c5, 0x1d9c6, 0x1d9c7, 0x1d9c8, 0x1d9c9, 0x1d9ca, 0x1d9cb, 0x1d9cc, 0x1d9cd, 0x1d9ce, 0x1d9cf, 0x1d9d0, 0x1d9d1, 0x1d9d2, 0x1d9d3, 0x1d9d4, 0x1d9d5
};

void BM_collation_element_lookup_700(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 0, cps_700 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 1, cps_700 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 2, cps_700 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 3, cps_700 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 4, cps_700 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 5, cps_700 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 6, cps_700 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 7, cps_700 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 8, cps_700 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 9, cps_700 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 10, cps_700 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 11, cps_700 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 12, cps_700 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 13, cps_700 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 14, cps_700 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 15, cps_700 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 16, cps_700 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 17, cps_700 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 18, cps_700 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 19, cps_700 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 20, cps_700 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 21, cps_700 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 22, cps_700 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 23, cps_700 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 24, cps_700 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 25, cps_700 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 26, cps_700 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 27, cps_700 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 28, cps_700 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 29, cps_700 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 30, cps_700 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 31, cps_700 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 32, cps_700 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 33, cps_700 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 34, cps_700 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 35, cps_700 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 36, cps_700 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 37, cps_700 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 38, cps_700 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 39, cps_700 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 40, cps_700 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 41, cps_700 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 42, cps_700 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 43, cps_700 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 44, cps_700 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 45, cps_700 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 46, cps_700 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 47, cps_700 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 48, cps_700 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_700 + 49, cps_700 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_700);

uint32_t cps_701[] = {
0x1d9d6, 0x1d9d7, 0x1d9d8, 0x1d9d9, 0x1d9da, 0x1d9db, 0x1d9dc, 0x1d9dd, 0x1d9de, 0x1d9df, 0x1d9e0, 0x1d9e1, 0x1d9e2, 0x1d9e3, 0x1d9e4, 0x1d9e5, 0x1d9e6, 0x1d9e7, 0x1d9e8, 0x1d9e9, 0x1d9ea, 0x1d9eb, 0x1d9ec, 0x1d9ed, 0x1d9ee, 0x1d9ef, 0x1d9f0, 0x1d9f1, 0x1d9f2, 0x1d9f3, 0x1d9f4, 0x1d9f5, 0x1d9f6, 0x1d9f7, 0x1d9f8, 0x1d9f9, 0x1d9fa, 0x1d9fb, 0x1d9fc, 0x1d9fd, 0x1d9fe, 0x1d9ff, 0x1da00, 0x1da01, 0x1da02, 0x1da03, 0x1da04, 0x1da05, 0x1da06, 0x1da07
};

void BM_collation_element_lookup_701(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 0, cps_701 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 1, cps_701 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 2, cps_701 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 3, cps_701 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 4, cps_701 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 5, cps_701 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 6, cps_701 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 7, cps_701 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 8, cps_701 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 9, cps_701 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 10, cps_701 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 11, cps_701 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 12, cps_701 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 13, cps_701 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 14, cps_701 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 15, cps_701 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 16, cps_701 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 17, cps_701 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 18, cps_701 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 19, cps_701 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 20, cps_701 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 21, cps_701 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 22, cps_701 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 23, cps_701 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 24, cps_701 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 25, cps_701 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 26, cps_701 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 27, cps_701 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 28, cps_701 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 29, cps_701 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 30, cps_701 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 31, cps_701 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 32, cps_701 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 33, cps_701 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 34, cps_701 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 35, cps_701 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 36, cps_701 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 37, cps_701 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 38, cps_701 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 39, cps_701 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 40, cps_701 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 41, cps_701 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 42, cps_701 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 43, cps_701 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 44, cps_701 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 45, cps_701 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 46, cps_701 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 47, cps_701 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 48, cps_701 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_701 + 49, cps_701 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_701);

uint32_t cps_702[] = {
0x1da08, 0x1da09, 0x1da0a, 0x1da0b, 0x1da0c, 0x1da0d, 0x1da0e, 0x1da0f, 0x1da10, 0x1da11, 0x1da12, 0x1da13, 0x1da14, 0x1da15, 0x1da16, 0x1da17, 0x1da18, 0x1da19, 0x1da1a, 0x1da1b, 0x1da1c, 0x1da1d, 0x1da1e, 0x1da1f, 0x1da20, 0x1da21, 0x1da22, 0x1da23, 0x1da24, 0x1da25, 0x1da26, 0x1da27, 0x1da28, 0x1da29, 0x1da2a, 0x1da2b, 0x1da2c, 0x1da2d, 0x1da2e, 0x1da2f, 0x1da30, 0x1da31, 0x1da32, 0x1da33, 0x1da34, 0x1da35, 0x1da36, 0x1da37, 0x1da38, 0x1da39
};

void BM_collation_element_lookup_702(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 0, cps_702 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 1, cps_702 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 2, cps_702 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 3, cps_702 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 4, cps_702 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 5, cps_702 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 6, cps_702 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 7, cps_702 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 8, cps_702 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 9, cps_702 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 10, cps_702 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 11, cps_702 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 12, cps_702 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 13, cps_702 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 14, cps_702 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 15, cps_702 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 16, cps_702 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 17, cps_702 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 18, cps_702 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 19, cps_702 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 20, cps_702 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 21, cps_702 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 22, cps_702 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 23, cps_702 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 24, cps_702 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 25, cps_702 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 26, cps_702 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 27, cps_702 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 28, cps_702 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 29, cps_702 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 30, cps_702 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 31, cps_702 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 32, cps_702 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 33, cps_702 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 34, cps_702 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 35, cps_702 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 36, cps_702 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 37, cps_702 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 38, cps_702 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 39, cps_702 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 40, cps_702 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 41, cps_702 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 42, cps_702 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 43, cps_702 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 44, cps_702 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 45, cps_702 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 46, cps_702 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 47, cps_702 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 48, cps_702 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_702 + 49, cps_702 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_702);

uint32_t cps_703[] = {
0x1da3a, 0x1da3b, 0x1da3c, 0x1da3d, 0x1da3e, 0x1da3f, 0x1da40, 0x1da41, 0x1da42, 0x1da43, 0x1da44, 0x1da45, 0x1da46, 0x1da47, 0x1da48, 0x1da49, 0x1da4a, 0x1da4b, 0x1da4c, 0x1da4d, 0x1da4e, 0x1da4f, 0x1da50, 0x1da51, 0x1da52, 0x1da53, 0x1da54, 0x1da55, 0x1da56, 0x1da57, 0x1da58, 0x1da59, 0x1da5a, 0x1da5b, 0x1da5c, 0x1da5d, 0x1da5e, 0x1da5f, 0x1da60, 0x1da61, 0x1da62, 0x1da63, 0x1da64, 0x1da65, 0x1da66, 0x1da67, 0x1da68, 0x1da69, 0x1da6a, 0x1da6b
};

void BM_collation_element_lookup_703(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 0, cps_703 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 1, cps_703 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 2, cps_703 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 3, cps_703 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 4, cps_703 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 5, cps_703 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 6, cps_703 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 7, cps_703 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 8, cps_703 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 9, cps_703 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 10, cps_703 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 11, cps_703 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 12, cps_703 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 13, cps_703 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 14, cps_703 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 15, cps_703 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 16, cps_703 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 17, cps_703 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 18, cps_703 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 19, cps_703 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 20, cps_703 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 21, cps_703 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 22, cps_703 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 23, cps_703 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 24, cps_703 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 25, cps_703 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 26, cps_703 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 27, cps_703 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 28, cps_703 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 29, cps_703 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 30, cps_703 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 31, cps_703 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 32, cps_703 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 33, cps_703 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 34, cps_703 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 35, cps_703 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 36, cps_703 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 37, cps_703 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 38, cps_703 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 39, cps_703 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 40, cps_703 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 41, cps_703 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 42, cps_703 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 43, cps_703 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 44, cps_703 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 45, cps_703 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 46, cps_703 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 47, cps_703 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 48, cps_703 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_703 + 49, cps_703 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_703);

uint32_t cps_704[] = {
0x1da6c, 0x1da6d, 0x1da6e, 0x1da6f, 0x1da70, 0x1da71, 0x1da72, 0x1da73, 0x1da74, 0x1da75, 0x1da76, 0x1da77, 0x1da78, 0x1da79, 0x1da7a, 0x1da7b, 0x1da7c, 0x1da7d, 0x1da7e, 0x1da7f, 0x1da80, 0x1da81, 0x1da82, 0x1da83, 0x1da84, 0x1da85, 0x1da86, 0x1da87, 0x1da88, 0x1da89, 0x1da8a, 0x1da8b, 0x1da9b, 0x1da9c, 0x1da9d, 0x1da9e, 0x1da9f, 0x1daa1, 0x1daa2, 0x1daa3, 0x1daa4, 0x1daa5, 0x1daa6, 0x1daa7, 0x1daa8, 0x1daa9, 0x1daaa, 0x1daab, 0x1daac, 0x1daad
};

void BM_collation_element_lookup_704(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 0, cps_704 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 1, cps_704 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 2, cps_704 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 3, cps_704 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 4, cps_704 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 5, cps_704 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 6, cps_704 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 7, cps_704 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 8, cps_704 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 9, cps_704 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 10, cps_704 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 11, cps_704 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 12, cps_704 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 13, cps_704 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 14, cps_704 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 15, cps_704 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 16, cps_704 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 17, cps_704 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 18, cps_704 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 19, cps_704 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 20, cps_704 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 21, cps_704 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 22, cps_704 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 23, cps_704 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 24, cps_704 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 25, cps_704 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 26, cps_704 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 27, cps_704 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 28, cps_704 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 29, cps_704 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 30, cps_704 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 31, cps_704 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 32, cps_704 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 33, cps_704 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 34, cps_704 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 35, cps_704 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 36, cps_704 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 37, cps_704 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 38, cps_704 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 39, cps_704 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 40, cps_704 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 41, cps_704 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 42, cps_704 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 43, cps_704 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 44, cps_704 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 45, cps_704 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 46, cps_704 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 47, cps_704 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 48, cps_704 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_704 + 49, cps_704 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_704);

uint32_t cps_705[] = {
0x1daae, 0x1daaf, 0x1e000, 0x1e001, 0x1e002, 0x1e003, 0x1e004, 0x1e005, 0x1e006, 0x1e008, 0x1e009, 0x1e00a, 0x1e00b, 0x1e00c, 0x1e00d, 0x1e00e, 0x1e00f, 0x1e010, 0x1e011, 0x1e012, 0x1e013, 0x1e014, 0x1e015, 0x1e016, 0x1e017, 0x1e018, 0x1e01b, 0x1e01c, 0x1e01d, 0x1e01e, 0x1e01f, 0x1e020, 0x1e021, 0x1e023, 0x1e024, 0x1e026, 0x1e027, 0x1e028, 0x1e029, 0x1e02a, 0x1e800, 0x1e801, 0x1e802, 0x1e803, 0x1e804, 0x1e805, 0x1e806, 0x1e807, 0x1e808, 0x1e809
};

void BM_collation_element_lookup_705(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 0, cps_705 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 1, cps_705 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 2, cps_705 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 3, cps_705 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 4, cps_705 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 5, cps_705 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 6, cps_705 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 7, cps_705 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 8, cps_705 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 9, cps_705 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 10, cps_705 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 11, cps_705 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 12, cps_705 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 13, cps_705 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 14, cps_705 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 15, cps_705 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 16, cps_705 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 17, cps_705 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 18, cps_705 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 19, cps_705 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 20, cps_705 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 21, cps_705 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 22, cps_705 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 23, cps_705 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 24, cps_705 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 25, cps_705 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 26, cps_705 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 27, cps_705 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 28, cps_705 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 29, cps_705 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 30, cps_705 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 31, cps_705 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 32, cps_705 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 33, cps_705 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 34, cps_705 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 35, cps_705 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 36, cps_705 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 37, cps_705 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 38, cps_705 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 39, cps_705 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 40, cps_705 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 41, cps_705 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 42, cps_705 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 43, cps_705 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 44, cps_705 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 45, cps_705 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 46, cps_705 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 47, cps_705 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 48, cps_705 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_705 + 49, cps_705 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_705);

uint32_t cps_706[] = {
0x1e80a, 0x1e80b, 0x1e80c, 0x1e80d, 0x1e80e, 0x1e80f, 0x1e810, 0x1e811, 0x1e812, 0x1e813, 0x1e814, 0x1e815, 0x1e816, 0x1e817, 0x1e818, 0x1e819, 0x1e81a, 0x1e81b, 0x1e81c, 0x1e81d, 0x1e81e, 0x1e81f, 0x1e820, 0x1e821, 0x1e822, 0x1e823, 0x1e824, 0x1e825, 0x1e826, 0x1e827, 0x1e828, 0x1e829, 0x1e82a, 0x1e82b, 0x1e82c, 0x1e82d, 0x1e82e, 0x1e82f, 0x1e830, 0x1e831, 0x1e832, 0x1e833, 0x1e834, 0x1e835, 0x1e836, 0x1e837, 0x1e838, 0x1e839, 0x1e83a, 0x1e83b
};

void BM_collation_element_lookup_706(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 0, cps_706 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 1, cps_706 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 2, cps_706 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 3, cps_706 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 4, cps_706 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 5, cps_706 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 6, cps_706 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 7, cps_706 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 8, cps_706 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 9, cps_706 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 10, cps_706 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 11, cps_706 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 12, cps_706 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 13, cps_706 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 14, cps_706 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 15, cps_706 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 16, cps_706 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 17, cps_706 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 18, cps_706 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 19, cps_706 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 20, cps_706 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 21, cps_706 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 22, cps_706 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 23, cps_706 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 24, cps_706 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 25, cps_706 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 26, cps_706 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 27, cps_706 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 28, cps_706 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 29, cps_706 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 30, cps_706 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 31, cps_706 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 32, cps_706 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 33, cps_706 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 34, cps_706 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 35, cps_706 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 36, cps_706 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 37, cps_706 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 38, cps_706 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 39, cps_706 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 40, cps_706 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 41, cps_706 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 42, cps_706 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 43, cps_706 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 44, cps_706 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 45, cps_706 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 46, cps_706 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 47, cps_706 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 48, cps_706 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_706 + 49, cps_706 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_706);

uint32_t cps_707[] = {
0x1e83c, 0x1e83d, 0x1e83e, 0x1e83f, 0x1e840, 0x1e841, 0x1e842, 0x1e843, 0x1e844, 0x1e845, 0x1e846, 0x1e847, 0x1e848, 0x1e849, 0x1e84a, 0x1e84b, 0x1e84c, 0x1e84d, 0x1e84e, 0x1e84f, 0x1e850, 0x1e851, 0x1e852, 0x1e853, 0x1e854, 0x1e855, 0x1e856, 0x1e857, 0x1e858, 0x1e859, 0x1e85a, 0x1e85b, 0x1e85c, 0x1e85d, 0x1e85e, 0x1e85f, 0x1e860, 0x1e861, 0x1e862, 0x1e863, 0x1e864, 0x1e865, 0x1e866, 0x1e867, 0x1e868, 0x1e869, 0x1e86a, 0x1e86b, 0x1e86c, 0x1e86d
};

void BM_collation_element_lookup_707(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 0, cps_707 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 1, cps_707 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 2, cps_707 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 3, cps_707 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 4, cps_707 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 5, cps_707 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 6, cps_707 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 7, cps_707 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 8, cps_707 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 9, cps_707 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 10, cps_707 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 11, cps_707 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 12, cps_707 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 13, cps_707 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 14, cps_707 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 15, cps_707 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 16, cps_707 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 17, cps_707 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 18, cps_707 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 19, cps_707 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 20, cps_707 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 21, cps_707 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 22, cps_707 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 23, cps_707 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 24, cps_707 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 25, cps_707 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 26, cps_707 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 27, cps_707 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 28, cps_707 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 29, cps_707 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 30, cps_707 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 31, cps_707 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 32, cps_707 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 33, cps_707 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 34, cps_707 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 35, cps_707 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 36, cps_707 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 37, cps_707 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 38, cps_707 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 39, cps_707 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 40, cps_707 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 41, cps_707 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 42, cps_707 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 43, cps_707 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 44, cps_707 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 45, cps_707 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 46, cps_707 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 47, cps_707 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 48, cps_707 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_707 + 49, cps_707 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_707);

uint32_t cps_708[] = {
0x1e86e, 0x1e86f, 0x1e870, 0x1e871, 0x1e872, 0x1e873, 0x1e874, 0x1e875, 0x1e876, 0x1e877, 0x1e878, 0x1e879, 0x1e87a, 0x1e87b, 0x1e87c, 0x1e87d, 0x1e87e, 0x1e87f, 0x1e880, 0x1e881, 0x1e882, 0x1e883, 0x1e884, 0x1e885, 0x1e886, 0x1e887, 0x1e888, 0x1e889, 0x1e88a, 0x1e88b, 0x1e88c, 0x1e88d, 0x1e88e, 0x1e88f, 0x1e890, 0x1e891, 0x1e892, 0x1e893, 0x1e894, 0x1e895, 0x1e896, 0x1e897, 0x1e898, 0x1e899, 0x1e89a, 0x1e89b, 0x1e89c, 0x1e89d, 0x1e89e, 0x1e89f
};

void BM_collation_element_lookup_708(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 0, cps_708 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 1, cps_708 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 2, cps_708 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 3, cps_708 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 4, cps_708 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 5, cps_708 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 6, cps_708 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 7, cps_708 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 8, cps_708 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 9, cps_708 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 10, cps_708 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 11, cps_708 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 12, cps_708 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 13, cps_708 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 14, cps_708 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 15, cps_708 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 16, cps_708 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 17, cps_708 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 18, cps_708 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 19, cps_708 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 20, cps_708 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 21, cps_708 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 22, cps_708 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 23, cps_708 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 24, cps_708 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 25, cps_708 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 26, cps_708 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 27, cps_708 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 28, cps_708 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 29, cps_708 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 30, cps_708 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 31, cps_708 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 32, cps_708 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 33, cps_708 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 34, cps_708 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 35, cps_708 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 36, cps_708 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 37, cps_708 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 38, cps_708 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 39, cps_708 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 40, cps_708 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 41, cps_708 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 42, cps_708 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 43, cps_708 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 44, cps_708 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 45, cps_708 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 46, cps_708 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 47, cps_708 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 48, cps_708 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_708 + 49, cps_708 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_708);

uint32_t cps_709[] = {
0x1e8a0, 0x1e8a1, 0x1e8a2, 0x1e8a3, 0x1e8a4, 0x1e8a5, 0x1e8a6, 0x1e8a7, 0x1e8a8, 0x1e8a9, 0x1e8aa, 0x1e8ab, 0x1e8ac, 0x1e8ad, 0x1e8ae, 0x1e8af, 0x1e8b0, 0x1e8b1, 0x1e8b2, 0x1e8b3, 0x1e8b4, 0x1e8b5, 0x1e8b6, 0x1e8b7, 0x1e8b8, 0x1e8b9, 0x1e8ba, 0x1e8bb, 0x1e8bc, 0x1e8bd, 0x1e8be, 0x1e8bf, 0x1e8c0, 0x1e8c1, 0x1e8c2, 0x1e8c3, 0x1e8c4, 0x1e8c7, 0x1e8c8, 0x1e8c9, 0x1e8ca, 0x1e8cb, 0x1e8cc, 0x1e8cd, 0x1e8ce, 0x1e8cf, 0x1e8d0, 0x1e8d1, 0x1e8d2, 0x1e8d3
};

void BM_collation_element_lookup_709(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 0, cps_709 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 1, cps_709 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 2, cps_709 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 3, cps_709 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 4, cps_709 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 5, cps_709 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 6, cps_709 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 7, cps_709 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 8, cps_709 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 9, cps_709 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 10, cps_709 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 11, cps_709 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 12, cps_709 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 13, cps_709 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 14, cps_709 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 15, cps_709 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 16, cps_709 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 17, cps_709 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 18, cps_709 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 19, cps_709 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 20, cps_709 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 21, cps_709 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 22, cps_709 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 23, cps_709 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 24, cps_709 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 25, cps_709 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 26, cps_709 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 27, cps_709 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 28, cps_709 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 29, cps_709 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 30, cps_709 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 31, cps_709 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 32, cps_709 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 33, cps_709 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 34, cps_709 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 35, cps_709 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 36, cps_709 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 37, cps_709 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 38, cps_709 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 39, cps_709 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 40, cps_709 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 41, cps_709 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 42, cps_709 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 43, cps_709 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 44, cps_709 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 45, cps_709 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 46, cps_709 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 47, cps_709 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 48, cps_709 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_709 + 49, cps_709 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_709);

uint32_t cps_710[] = {
0x1e8d4, 0x1e8d5, 0x1e8d6, 0x1e900, 0x1e901, 0x1e902, 0x1e903, 0x1e904, 0x1e905, 0x1e906, 0x1e907, 0x1e908, 0x1e909, 0x1e90a, 0x1e90b, 0x1e90c, 0x1e90d, 0x1e90e, 0x1e90f, 0x1e910, 0x1e911, 0x1e912, 0x1e913, 0x1e914, 0x1e915, 0x1e916, 0x1e917, 0x1e918, 0x1e919, 0x1e91a, 0x1e91b, 0x1e91c, 0x1e91d, 0x1e91e, 0x1e91f, 0x1e920, 0x1e921, 0x1e922, 0x1e923, 0x1e924, 0x1e925, 0x1e926, 0x1e927, 0x1e928, 0x1e929, 0x1e92a, 0x1e92b, 0x1e92c, 0x1e92d, 0x1e92e
};

void BM_collation_element_lookup_710(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 0, cps_710 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 1, cps_710 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 2, cps_710 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 3, cps_710 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 4, cps_710 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 5, cps_710 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 6, cps_710 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 7, cps_710 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 8, cps_710 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 9, cps_710 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 10, cps_710 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 11, cps_710 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 12, cps_710 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 13, cps_710 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 14, cps_710 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 15, cps_710 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 16, cps_710 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 17, cps_710 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 18, cps_710 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 19, cps_710 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 20, cps_710 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 21, cps_710 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 22, cps_710 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 23, cps_710 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 24, cps_710 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 25, cps_710 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 26, cps_710 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 27, cps_710 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 28, cps_710 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 29, cps_710 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 30, cps_710 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 31, cps_710 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 32, cps_710 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 33, cps_710 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 34, cps_710 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 35, cps_710 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 36, cps_710 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 37, cps_710 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 38, cps_710 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 39, cps_710 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 40, cps_710 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 41, cps_710 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 42, cps_710 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 43, cps_710 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 44, cps_710 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 45, cps_710 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 46, cps_710 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 47, cps_710 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 48, cps_710 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_710 + 49, cps_710 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_710);

uint32_t cps_711[] = {
0x1e92f, 0x1e930, 0x1e931, 0x1e932, 0x1e933, 0x1e934, 0x1e935, 0x1e936, 0x1e937, 0x1e938, 0x1e939, 0x1e93a, 0x1e93b, 0x1e93c, 0x1e93d, 0x1e93e, 0x1e93f, 0x1e940, 0x1e941, 0x1e942, 0x1e943, 0x1e944, 0x1e945, 0x1e946, 0x1e947, 0x1e948, 0x1e949, 0x1e94a, 0x1e950, 0x1e951, 0x1e952, 0x1e953, 0x1e954, 0x1e955, 0x1e956, 0x1e957, 0x1e958, 0x1e959, 0x1e95e, 0x1e95f, 0x1ee00, 0x1ee01, 0x1ee02, 0x1ee03, 0x1ee05, 0x1ee06, 0x1ee07, 0x1ee08, 0x1ee09, 0x1ee0a
};

void BM_collation_element_lookup_711(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 0, cps_711 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 1, cps_711 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 2, cps_711 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 3, cps_711 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 4, cps_711 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 5, cps_711 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 6, cps_711 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 7, cps_711 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 8, cps_711 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 9, cps_711 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 10, cps_711 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 11, cps_711 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 12, cps_711 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 13, cps_711 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 14, cps_711 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 15, cps_711 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 16, cps_711 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 17, cps_711 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 18, cps_711 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 19, cps_711 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 20, cps_711 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 21, cps_711 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 22, cps_711 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 23, cps_711 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 24, cps_711 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 25, cps_711 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 26, cps_711 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 27, cps_711 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 28, cps_711 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 29, cps_711 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 30, cps_711 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 31, cps_711 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 32, cps_711 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 33, cps_711 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 34, cps_711 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 35, cps_711 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 36, cps_711 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 37, cps_711 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 38, cps_711 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 39, cps_711 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 40, cps_711 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 41, cps_711 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 42, cps_711 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 43, cps_711 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 44, cps_711 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 45, cps_711 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 46, cps_711 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 47, cps_711 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 48, cps_711 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_711 + 49, cps_711 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_711);

uint32_t cps_712[] = {
0x1ee0b, 0x1ee0c, 0x1ee0d, 0x1ee0e, 0x1ee0f, 0x1ee10, 0x1ee11, 0x1ee12, 0x1ee13, 0x1ee14, 0x1ee15, 0x1ee16, 0x1ee17, 0x1ee18, 0x1ee19, 0x1ee1a, 0x1ee1b, 0x1ee1c, 0x1ee1d, 0x1ee1e, 0x1ee1f, 0x1ee21, 0x1ee22, 0x1ee24, 0x1ee27, 0x1ee29, 0x1ee2a, 0x1ee2b, 0x1ee2c, 0x1ee2d, 0x1ee2e, 0x1ee2f, 0x1ee30, 0x1ee31, 0x1ee32, 0x1ee34, 0x1ee35, 0x1ee36, 0x1ee37, 0x1ee39, 0x1ee3b, 0x1ee42, 0x1ee47, 0x1ee49, 0x1ee4b, 0x1ee4d, 0x1ee4e, 0x1ee4f, 0x1ee51, 0x1ee52
};

void BM_collation_element_lookup_712(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 0, cps_712 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 1, cps_712 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 2, cps_712 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 3, cps_712 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 4, cps_712 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 5, cps_712 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 6, cps_712 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 7, cps_712 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 8, cps_712 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 9, cps_712 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 10, cps_712 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 11, cps_712 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 12, cps_712 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 13, cps_712 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 14, cps_712 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 15, cps_712 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 16, cps_712 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 17, cps_712 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 18, cps_712 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 19, cps_712 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 20, cps_712 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 21, cps_712 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 22, cps_712 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 23, cps_712 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 24, cps_712 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 25, cps_712 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 26, cps_712 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 27, cps_712 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 28, cps_712 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 29, cps_712 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 30, cps_712 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 31, cps_712 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 32, cps_712 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 33, cps_712 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 34, cps_712 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 35, cps_712 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 36, cps_712 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 37, cps_712 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 38, cps_712 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 39, cps_712 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 40, cps_712 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 41, cps_712 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 42, cps_712 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 43, cps_712 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 44, cps_712 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 45, cps_712 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 46, cps_712 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 47, cps_712 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 48, cps_712 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_712 + 49, cps_712 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_712);

uint32_t cps_713[] = {
0x1ee54, 0x1ee57, 0x1ee59, 0x1ee5b, 0x1ee5d, 0x1ee5f, 0x1ee61, 0x1ee62, 0x1ee64, 0x1ee67, 0x1ee68, 0x1ee69, 0x1ee6a, 0x1ee6c, 0x1ee6d, 0x1ee6e, 0x1ee6f, 0x1ee70, 0x1ee71, 0x1ee72, 0x1ee74, 0x1ee75, 0x1ee76, 0x1ee77, 0x1ee79, 0x1ee7a, 0x1ee7b, 0x1ee7c, 0x1ee7e, 0x1ee80, 0x1ee81, 0x1ee82, 0x1ee83, 0x1ee84, 0x1ee85, 0x1ee86, 0x1ee87, 0x1ee88, 0x1ee89, 0x1ee8b, 0x1ee8c, 0x1ee8d, 0x1ee8e, 0x1ee8f, 0x1ee90, 0x1ee91, 0x1ee92, 0x1ee93, 0x1ee94, 0x1ee95
};

void BM_collation_element_lookup_713(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 0, cps_713 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 1, cps_713 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 2, cps_713 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 3, cps_713 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 4, cps_713 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 5, cps_713 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 6, cps_713 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 7, cps_713 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 8, cps_713 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 9, cps_713 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 10, cps_713 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 11, cps_713 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 12, cps_713 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 13, cps_713 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 14, cps_713 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 15, cps_713 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 16, cps_713 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 17, cps_713 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 18, cps_713 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 19, cps_713 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 20, cps_713 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 21, cps_713 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 22, cps_713 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 23, cps_713 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 24, cps_713 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 25, cps_713 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 26, cps_713 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 27, cps_713 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 28, cps_713 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 29, cps_713 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 30, cps_713 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 31, cps_713 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 32, cps_713 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 33, cps_713 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 34, cps_713 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 35, cps_713 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 36, cps_713 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 37, cps_713 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 38, cps_713 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 39, cps_713 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 40, cps_713 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 41, cps_713 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 42, cps_713 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 43, cps_713 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 44, cps_713 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 45, cps_713 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 46, cps_713 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 47, cps_713 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 48, cps_713 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_713 + 49, cps_713 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_713);

uint32_t cps_714[] = {
0x1ee96, 0x1ee97, 0x1ee98, 0x1ee99, 0x1ee9a, 0x1ee9b, 0x1eea1, 0x1eea2, 0x1eea3, 0x1eea5, 0x1eea6, 0x1eea7, 0x1eea8, 0x1eea9, 0x1eeab, 0x1eeac, 0x1eead, 0x1eeae, 0x1eeaf, 0x1eeb0, 0x1eeb1, 0x1eeb2, 0x1eeb3, 0x1eeb4, 0x1eeb5, 0x1eeb6, 0x1eeb7, 0x1eeb8, 0x1eeb9, 0x1eeba, 0x1eebb, 0x1eef0, 0x1eef1, 0x1f000, 0x1f001, 0x1f002, 0x1f003, 0x1f004, 0x1f005, 0x1f006, 0x1f007, 0x1f008, 0x1f009, 0x1f00a, 0x1f00b, 0x1f00c, 0x1f00d, 0x1f00e, 0x1f00f, 0x1f010
};

void BM_collation_element_lookup_714(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 0, cps_714 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 1, cps_714 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 2, cps_714 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 3, cps_714 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 4, cps_714 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 5, cps_714 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 6, cps_714 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 7, cps_714 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 8, cps_714 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 9, cps_714 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 10, cps_714 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 11, cps_714 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 12, cps_714 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 13, cps_714 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 14, cps_714 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 15, cps_714 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 16, cps_714 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 17, cps_714 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 18, cps_714 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 19, cps_714 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 20, cps_714 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 21, cps_714 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 22, cps_714 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 23, cps_714 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 24, cps_714 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 25, cps_714 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 26, cps_714 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 27, cps_714 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 28, cps_714 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 29, cps_714 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 30, cps_714 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 31, cps_714 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 32, cps_714 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 33, cps_714 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 34, cps_714 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 35, cps_714 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 36, cps_714 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 37, cps_714 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 38, cps_714 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 39, cps_714 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 40, cps_714 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 41, cps_714 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 42, cps_714 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 43, cps_714 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 44, cps_714 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 45, cps_714 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 46, cps_714 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 47, cps_714 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 48, cps_714 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_714 + 49, cps_714 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_714);

uint32_t cps_715[] = {
0x1f011, 0x1f012, 0x1f013, 0x1f014, 0x1f015, 0x1f016, 0x1f017, 0x1f018, 0x1f019, 0x1f01a, 0x1f01b, 0x1f01c, 0x1f01d, 0x1f01e, 0x1f01f, 0x1f020, 0x1f021, 0x1f022, 0x1f023, 0x1f024, 0x1f025, 0x1f026, 0x1f027, 0x1f028, 0x1f029, 0x1f02a, 0x1f02b, 0x1f030, 0x1f031, 0x1f032, 0x1f033, 0x1f034, 0x1f035, 0x1f036, 0x1f037, 0x1f038, 0x1f039, 0x1f03a, 0x1f03b, 0x1f03c, 0x1f03d, 0x1f03e, 0x1f03f, 0x1f040, 0x1f041, 0x1f042, 0x1f043, 0x1f044, 0x1f045, 0x1f046
};

void BM_collation_element_lookup_715(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 0, cps_715 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 1, cps_715 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 2, cps_715 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 3, cps_715 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 4, cps_715 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 5, cps_715 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 6, cps_715 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 7, cps_715 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 8, cps_715 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 9, cps_715 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 10, cps_715 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 11, cps_715 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 12, cps_715 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 13, cps_715 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 14, cps_715 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 15, cps_715 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 16, cps_715 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 17, cps_715 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 18, cps_715 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 19, cps_715 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 20, cps_715 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 21, cps_715 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 22, cps_715 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 23, cps_715 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 24, cps_715 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 25, cps_715 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 26, cps_715 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 27, cps_715 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 28, cps_715 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 29, cps_715 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 30, cps_715 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 31, cps_715 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 32, cps_715 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 33, cps_715 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 34, cps_715 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 35, cps_715 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 36, cps_715 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 37, cps_715 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 38, cps_715 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 39, cps_715 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 40, cps_715 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 41, cps_715 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 42, cps_715 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 43, cps_715 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 44, cps_715 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 45, cps_715 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 46, cps_715 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 47, cps_715 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 48, cps_715 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_715 + 49, cps_715 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_715);

uint32_t cps_716[] = {
0x1f047, 0x1f048, 0x1f049, 0x1f04a, 0x1f04b, 0x1f04c, 0x1f04d, 0x1f04e, 0x1f04f, 0x1f050, 0x1f051, 0x1f052, 0x1f053, 0x1f054, 0x1f055, 0x1f056, 0x1f057, 0x1f058, 0x1f059, 0x1f05a, 0x1f05b, 0x1f05c, 0x1f05d, 0x1f05e, 0x1f05f, 0x1f060, 0x1f061, 0x1f062, 0x1f063, 0x1f064, 0x1f065, 0x1f066, 0x1f067, 0x1f068, 0x1f069, 0x1f06a, 0x1f06b, 0x1f06c, 0x1f06d, 0x1f06e, 0x1f06f, 0x1f070, 0x1f071, 0x1f072, 0x1f073, 0x1f074, 0x1f075, 0x1f076, 0x1f077, 0x1f078
};

void BM_collation_element_lookup_716(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 0, cps_716 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 1, cps_716 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 2, cps_716 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 3, cps_716 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 4, cps_716 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 5, cps_716 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 6, cps_716 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 7, cps_716 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 8, cps_716 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 9, cps_716 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 10, cps_716 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 11, cps_716 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 12, cps_716 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 13, cps_716 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 14, cps_716 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 15, cps_716 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 16, cps_716 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 17, cps_716 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 18, cps_716 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 19, cps_716 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 20, cps_716 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 21, cps_716 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 22, cps_716 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 23, cps_716 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 24, cps_716 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 25, cps_716 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 26, cps_716 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 27, cps_716 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 28, cps_716 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 29, cps_716 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 30, cps_716 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 31, cps_716 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 32, cps_716 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 33, cps_716 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 34, cps_716 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 35, cps_716 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 36, cps_716 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 37, cps_716 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 38, cps_716 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 39, cps_716 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 40, cps_716 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 41, cps_716 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 42, cps_716 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 43, cps_716 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 44, cps_716 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 45, cps_716 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 46, cps_716 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 47, cps_716 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 48, cps_716 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_716 + 49, cps_716 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_716);

uint32_t cps_717[] = {
0x1f079, 0x1f07a, 0x1f07b, 0x1f07c, 0x1f07d, 0x1f07e, 0x1f07f, 0x1f080, 0x1f081, 0x1f082, 0x1f083, 0x1f084, 0x1f085, 0x1f086, 0x1f087, 0x1f088, 0x1f089, 0x1f08a, 0x1f08b, 0x1f08c, 0x1f08d, 0x1f08e, 0x1f08f, 0x1f090, 0x1f091, 0x1f092, 0x1f093, 0x1f0a0, 0x1f0a1, 0x1f0a2, 0x1f0a3, 0x1f0a4, 0x1f0a5, 0x1f0a6, 0x1f0a7, 0x1f0a8, 0x1f0a9, 0x1f0aa, 0x1f0ab, 0x1f0ac, 0x1f0ad, 0x1f0ae, 0x1f0b1, 0x1f0b2, 0x1f0b3, 0x1f0b4, 0x1f0b5, 0x1f0b6, 0x1f0b7, 0x1f0b8
};

void BM_collation_element_lookup_717(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 0, cps_717 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 1, cps_717 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 2, cps_717 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 3, cps_717 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 4, cps_717 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 5, cps_717 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 6, cps_717 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 7, cps_717 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 8, cps_717 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 9, cps_717 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 10, cps_717 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 11, cps_717 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 12, cps_717 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 13, cps_717 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 14, cps_717 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 15, cps_717 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 16, cps_717 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 17, cps_717 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 18, cps_717 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 19, cps_717 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 20, cps_717 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 21, cps_717 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 22, cps_717 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 23, cps_717 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 24, cps_717 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 25, cps_717 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 26, cps_717 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 27, cps_717 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 28, cps_717 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 29, cps_717 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 30, cps_717 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 31, cps_717 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 32, cps_717 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 33, cps_717 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 34, cps_717 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 35, cps_717 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 36, cps_717 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 37, cps_717 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 38, cps_717 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 39, cps_717 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 40, cps_717 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 41, cps_717 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 42, cps_717 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 43, cps_717 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 44, cps_717 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 45, cps_717 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 46, cps_717 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 47, cps_717 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 48, cps_717 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_717 + 49, cps_717 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_717);

uint32_t cps_718[] = {
0x1f0b9, 0x1f0ba, 0x1f0bb, 0x1f0bc, 0x1f0bd, 0x1f0be, 0x1f0bf, 0x1f0c1, 0x1f0c2, 0x1f0c3, 0x1f0c4, 0x1f0c5, 0x1f0c6, 0x1f0c7, 0x1f0c8, 0x1f0c9, 0x1f0ca, 0x1f0cb, 0x1f0cc, 0x1f0cd, 0x1f0ce, 0x1f0cf, 0x1f0d1, 0x1f0d2, 0x1f0d3, 0x1f0d4, 0x1f0d5, 0x1f0d6, 0x1f0d7, 0x1f0d8, 0x1f0d9, 0x1f0da, 0x1f0db, 0x1f0dc, 0x1f0dd, 0x1f0de, 0x1f0df, 0x1f0e0, 0x1f0e1, 0x1f0e2, 0x1f0e3, 0x1f0e4, 0x1f0e5, 0x1f0e6, 0x1f0e7, 0x1f0e8, 0x1f0e9, 0x1f0ea, 0x1f0eb, 0x1f0ec
};

void BM_collation_element_lookup_718(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 0, cps_718 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 1, cps_718 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 2, cps_718 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 3, cps_718 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 4, cps_718 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 5, cps_718 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 6, cps_718 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 7, cps_718 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 8, cps_718 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 9, cps_718 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 10, cps_718 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 11, cps_718 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 12, cps_718 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 13, cps_718 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 14, cps_718 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 15, cps_718 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 16, cps_718 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 17, cps_718 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 18, cps_718 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 19, cps_718 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 20, cps_718 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 21, cps_718 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 22, cps_718 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 23, cps_718 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 24, cps_718 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 25, cps_718 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 26, cps_718 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 27, cps_718 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 28, cps_718 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 29, cps_718 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 30, cps_718 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 31, cps_718 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 32, cps_718 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 33, cps_718 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 34, cps_718 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 35, cps_718 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 36, cps_718 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 37, cps_718 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 38, cps_718 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 39, cps_718 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 40, cps_718 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 41, cps_718 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 42, cps_718 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 43, cps_718 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 44, cps_718 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 45, cps_718 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 46, cps_718 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 47, cps_718 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 48, cps_718 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_718 + 49, cps_718 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_718);

uint32_t cps_719[] = {
0x1f0ed, 0x1f0ee, 0x1f0ef, 0x1f0f0, 0x1f0f1, 0x1f0f2, 0x1f0f3, 0x1f0f4, 0x1f0f5, 0x1f100, 0x1f101, 0x1f102, 0x1f103, 0x1f104, 0x1f105, 0x1f106, 0x1f107, 0x1f108, 0x1f109, 0x1f10a, 0x1f10b, 0x1f10c, 0x1f110, 0x1f111, 0x1f112, 0x1f113, 0x1f114, 0x1f115, 0x1f116, 0x1f117, 0x1f118, 0x1f119, 0x1f11a, 0x1f11b, 0x1f11c, 0x1f11d, 0x1f11e, 0x1f11f, 0x1f120, 0x1f121, 0x1f122, 0x1f123, 0x1f124, 0x1f125, 0x1f126, 0x1f127, 0x1f128, 0x1f129, 0x1f12a, 0x1f12b
};

void BM_collation_element_lookup_719(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 0, cps_719 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 1, cps_719 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 2, cps_719 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 3, cps_719 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 4, cps_719 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 5, cps_719 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 6, cps_719 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 7, cps_719 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 8, cps_719 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 9, cps_719 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 10, cps_719 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 11, cps_719 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 12, cps_719 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 13, cps_719 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 14, cps_719 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 15, cps_719 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 16, cps_719 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 17, cps_719 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 18, cps_719 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 19, cps_719 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 20, cps_719 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 21, cps_719 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 22, cps_719 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 23, cps_719 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 24, cps_719 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 25, cps_719 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 26, cps_719 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 27, cps_719 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 28, cps_719 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 29, cps_719 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 30, cps_719 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 31, cps_719 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 32, cps_719 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 33, cps_719 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 34, cps_719 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 35, cps_719 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 36, cps_719 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 37, cps_719 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 38, cps_719 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 39, cps_719 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 40, cps_719 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 41, cps_719 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 42, cps_719 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 43, cps_719 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 44, cps_719 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 45, cps_719 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 46, cps_719 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 47, cps_719 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 48, cps_719 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_719 + 49, cps_719 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_719);

uint32_t cps_720[] = {
0x1f12c, 0x1f12d, 0x1f12e, 0x1f130, 0x1f131, 0x1f132, 0x1f133, 0x1f134, 0x1f135, 0x1f136, 0x1f137, 0x1f138, 0x1f139, 0x1f13a, 0x1f13b, 0x1f13c, 0x1f13d, 0x1f13e, 0x1f13f, 0x1f140, 0x1f141, 0x1f142, 0x1f143, 0x1f144, 0x1f145, 0x1f146, 0x1f147, 0x1f148, 0x1f149, 0x1f14a, 0x1f14b, 0x1f14c, 0x1f14d, 0x1f14e, 0x1f14f, 0x1f150, 0x1f151, 0x1f152, 0x1f153, 0x1f154, 0x1f155, 0x1f156, 0x1f157, 0x1f158, 0x1f159, 0x1f15a, 0x1f15b, 0x1f15c, 0x1f15d, 0x1f15e
};

void BM_collation_element_lookup_720(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 0, cps_720 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 1, cps_720 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 2, cps_720 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 3, cps_720 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 4, cps_720 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 5, cps_720 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 6, cps_720 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 7, cps_720 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 8, cps_720 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 9, cps_720 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 10, cps_720 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 11, cps_720 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 12, cps_720 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 13, cps_720 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 14, cps_720 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 15, cps_720 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 16, cps_720 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 17, cps_720 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 18, cps_720 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 19, cps_720 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 20, cps_720 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 21, cps_720 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 22, cps_720 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 23, cps_720 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 24, cps_720 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 25, cps_720 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 26, cps_720 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 27, cps_720 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 28, cps_720 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 29, cps_720 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 30, cps_720 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 31, cps_720 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 32, cps_720 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 33, cps_720 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 34, cps_720 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 35, cps_720 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 36, cps_720 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 37, cps_720 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 38, cps_720 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 39, cps_720 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 40, cps_720 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 41, cps_720 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 42, cps_720 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 43, cps_720 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 44, cps_720 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 45, cps_720 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 46, cps_720 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 47, cps_720 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 48, cps_720 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_720 + 49, cps_720 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_720);

uint32_t cps_721[] = {
0x1f15f, 0x1f160, 0x1f161, 0x1f162, 0x1f163, 0x1f164, 0x1f165, 0x1f166, 0x1f167, 0x1f168, 0x1f169, 0x1f16a, 0x1f16b, 0x1f170, 0x1f171, 0x1f172, 0x1f173, 0x1f174, 0x1f175, 0x1f176, 0x1f177, 0x1f178, 0x1f179, 0x1f17a, 0x1f17b, 0x1f17c, 0x1f17d, 0x1f17e, 0x1f17f, 0x1f180, 0x1f181, 0x1f182, 0x1f183, 0x1f184, 0x1f185, 0x1f186, 0x1f187, 0x1f188, 0x1f189, 0x1f18a, 0x1f18b, 0x1f18c, 0x1f18d, 0x1f18e, 0x1f18f, 0x1f190, 0x1f191, 0x1f192, 0x1f193, 0x1f194
};

void BM_collation_element_lookup_721(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 0, cps_721 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 1, cps_721 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 2, cps_721 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 3, cps_721 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 4, cps_721 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 5, cps_721 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 6, cps_721 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 7, cps_721 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 8, cps_721 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 9, cps_721 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 10, cps_721 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 11, cps_721 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 12, cps_721 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 13, cps_721 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 14, cps_721 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 15, cps_721 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 16, cps_721 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 17, cps_721 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 18, cps_721 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 19, cps_721 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 20, cps_721 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 21, cps_721 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 22, cps_721 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 23, cps_721 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 24, cps_721 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 25, cps_721 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 26, cps_721 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 27, cps_721 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 28, cps_721 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 29, cps_721 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 30, cps_721 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 31, cps_721 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 32, cps_721 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 33, cps_721 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 34, cps_721 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 35, cps_721 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 36, cps_721 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 37, cps_721 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 38, cps_721 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 39, cps_721 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 40, cps_721 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 41, cps_721 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 42, cps_721 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 43, cps_721 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 44, cps_721 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 45, cps_721 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 46, cps_721 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 47, cps_721 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 48, cps_721 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_721 + 49, cps_721 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_721);

uint32_t cps_722[] = {
0x1f195, 0x1f196, 0x1f197, 0x1f198, 0x1f199, 0x1f19a, 0x1f19b, 0x1f19c, 0x1f19d, 0x1f19e, 0x1f19f, 0x1f1a0, 0x1f1a1, 0x1f1a2, 0x1f1a3, 0x1f1a4, 0x1f1a5, 0x1f1a6, 0x1f1a7, 0x1f1a8, 0x1f1a9, 0x1f1aa, 0x1f1ab, 0x1f1ac, 0x1f1e6, 0x1f1e7, 0x1f1e8, 0x1f1e9, 0x1f1ea, 0x1f1eb, 0x1f1ec, 0x1f1ed, 0x1f1ee, 0x1f1ef, 0x1f1f0, 0x1f1f1, 0x1f1f2, 0x1f1f3, 0x1f1f4, 0x1f1f5, 0x1f1f6, 0x1f1f7, 0x1f1f8, 0x1f1f9, 0x1f1fa, 0x1f1fb, 0x1f1fc, 0x1f1fd, 0x1f1fe, 0x1f1ff
};

void BM_collation_element_lookup_722(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 0, cps_722 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 1, cps_722 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 2, cps_722 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 3, cps_722 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 4, cps_722 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 5, cps_722 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 6, cps_722 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 7, cps_722 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 8, cps_722 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 9, cps_722 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 10, cps_722 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 11, cps_722 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 12, cps_722 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 13, cps_722 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 14, cps_722 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 15, cps_722 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 16, cps_722 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 17, cps_722 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 18, cps_722 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 19, cps_722 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 20, cps_722 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 21, cps_722 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 22, cps_722 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 23, cps_722 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 24, cps_722 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 25, cps_722 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 26, cps_722 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 27, cps_722 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 28, cps_722 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 29, cps_722 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 30, cps_722 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 31, cps_722 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 32, cps_722 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 33, cps_722 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 34, cps_722 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 35, cps_722 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 36, cps_722 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 37, cps_722 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 38, cps_722 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 39, cps_722 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 40, cps_722 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 41, cps_722 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 42, cps_722 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 43, cps_722 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 44, cps_722 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 45, cps_722 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 46, cps_722 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 47, cps_722 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 48, cps_722 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_722 + 49, cps_722 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_722);

uint32_t cps_723[] = {
0x1f200, 0x1f201, 0x1f202, 0x1f210, 0x1f211, 0x1f212, 0x1f213, 0x1f214, 0x1f215, 0x1f216, 0x1f217, 0x1f218, 0x1f219, 0x1f21a, 0x1f21b, 0x1f21c, 0x1f21d, 0x1f21e, 0x1f21f, 0x1f220, 0x1f221, 0x1f222, 0x1f223, 0x1f224, 0x1f225, 0x1f226, 0x1f227, 0x1f228, 0x1f229, 0x1f22a, 0x1f22b, 0x1f22c, 0x1f22d, 0x1f22e, 0x1f22f, 0x1f230, 0x1f231, 0x1f232, 0x1f233, 0x1f234, 0x1f235, 0x1f236, 0x1f237, 0x1f238, 0x1f239, 0x1f23a, 0x1f23b, 0x1f240, 0x1f241, 0x1f242
};

void BM_collation_element_lookup_723(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 0, cps_723 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 1, cps_723 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 2, cps_723 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 3, cps_723 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 4, cps_723 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 5, cps_723 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 6, cps_723 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 7, cps_723 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 8, cps_723 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 9, cps_723 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 10, cps_723 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 11, cps_723 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 12, cps_723 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 13, cps_723 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 14, cps_723 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 15, cps_723 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 16, cps_723 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 17, cps_723 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 18, cps_723 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 19, cps_723 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 20, cps_723 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 21, cps_723 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 22, cps_723 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 23, cps_723 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 24, cps_723 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 25, cps_723 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 26, cps_723 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 27, cps_723 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 28, cps_723 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 29, cps_723 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 30, cps_723 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 31, cps_723 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 32, cps_723 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 33, cps_723 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 34, cps_723 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 35, cps_723 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 36, cps_723 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 37, cps_723 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 38, cps_723 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 39, cps_723 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 40, cps_723 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 41, cps_723 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 42, cps_723 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 43, cps_723 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 44, cps_723 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 45, cps_723 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 46, cps_723 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 47, cps_723 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 48, cps_723 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_723 + 49, cps_723 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_723);

uint32_t cps_724[] = {
0x1f243, 0x1f244, 0x1f245, 0x1f246, 0x1f247, 0x1f248, 0x1f250, 0x1f251, 0x1f260, 0x1f261, 0x1f262, 0x1f263, 0x1f264, 0x1f265, 0x1f300, 0x1f301, 0x1f302, 0x1f303, 0x1f304, 0x1f305, 0x1f306, 0x1f307, 0x1f308, 0x1f309, 0x1f30a, 0x1f30b, 0x1f30c, 0x1f30d, 0x1f30e, 0x1f30f, 0x1f310, 0x1f311, 0x1f312, 0x1f313, 0x1f314, 0x1f315, 0x1f316, 0x1f317, 0x1f318, 0x1f319, 0x1f31a, 0x1f31b, 0x1f31c, 0x1f31d, 0x1f31e, 0x1f31f, 0x1f320, 0x1f321, 0x1f322, 0x1f323
};

void BM_collation_element_lookup_724(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 0, cps_724 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 1, cps_724 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 2, cps_724 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 3, cps_724 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 4, cps_724 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 5, cps_724 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 6, cps_724 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 7, cps_724 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 8, cps_724 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 9, cps_724 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 10, cps_724 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 11, cps_724 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 12, cps_724 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 13, cps_724 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 14, cps_724 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 15, cps_724 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 16, cps_724 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 17, cps_724 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 18, cps_724 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 19, cps_724 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 20, cps_724 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 21, cps_724 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 22, cps_724 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 23, cps_724 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 24, cps_724 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 25, cps_724 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 26, cps_724 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 27, cps_724 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 28, cps_724 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 29, cps_724 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 30, cps_724 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 31, cps_724 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 32, cps_724 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 33, cps_724 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 34, cps_724 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 35, cps_724 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 36, cps_724 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 37, cps_724 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 38, cps_724 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 39, cps_724 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 40, cps_724 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 41, cps_724 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 42, cps_724 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 43, cps_724 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 44, cps_724 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 45, cps_724 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 46, cps_724 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 47, cps_724 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 48, cps_724 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_724 + 49, cps_724 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_724);

uint32_t cps_725[] = {
0x1f324, 0x1f325, 0x1f326, 0x1f327, 0x1f328, 0x1f329, 0x1f32a, 0x1f32b, 0x1f32c, 0x1f32d, 0x1f32e, 0x1f32f, 0x1f330, 0x1f331, 0x1f332, 0x1f333, 0x1f334, 0x1f335, 0x1f336, 0x1f337, 0x1f338, 0x1f339, 0x1f33a, 0x1f33b, 0x1f33c, 0x1f33d, 0x1f33e, 0x1f33f, 0x1f340, 0x1f341, 0x1f342, 0x1f343, 0x1f344, 0x1f345, 0x1f346, 0x1f347, 0x1f348, 0x1f349, 0x1f34a, 0x1f34b, 0x1f34c, 0x1f34d, 0x1f34e, 0x1f34f, 0x1f350, 0x1f351, 0x1f352, 0x1f353, 0x1f354, 0x1f355
};

void BM_collation_element_lookup_725(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 0, cps_725 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 1, cps_725 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 2, cps_725 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 3, cps_725 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 4, cps_725 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 5, cps_725 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 6, cps_725 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 7, cps_725 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 8, cps_725 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 9, cps_725 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 10, cps_725 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 11, cps_725 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 12, cps_725 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 13, cps_725 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 14, cps_725 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 15, cps_725 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 16, cps_725 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 17, cps_725 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 18, cps_725 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 19, cps_725 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 20, cps_725 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 21, cps_725 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 22, cps_725 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 23, cps_725 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 24, cps_725 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 25, cps_725 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 26, cps_725 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 27, cps_725 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 28, cps_725 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 29, cps_725 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 30, cps_725 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 31, cps_725 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 32, cps_725 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 33, cps_725 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 34, cps_725 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 35, cps_725 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 36, cps_725 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 37, cps_725 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 38, cps_725 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 39, cps_725 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 40, cps_725 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 41, cps_725 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 42, cps_725 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 43, cps_725 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 44, cps_725 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 45, cps_725 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 46, cps_725 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 47, cps_725 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 48, cps_725 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_725 + 49, cps_725 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_725);

uint32_t cps_726[] = {
0x1f356, 0x1f357, 0x1f358, 0x1f359, 0x1f35a, 0x1f35b, 0x1f35c, 0x1f35d, 0x1f35e, 0x1f35f, 0x1f360, 0x1f361, 0x1f362, 0x1f363, 0x1f364, 0x1f365, 0x1f366, 0x1f367, 0x1f368, 0x1f369, 0x1f36a, 0x1f36b, 0x1f36c, 0x1f36d, 0x1f36e, 0x1f36f, 0x1f370, 0x1f371, 0x1f372, 0x1f373, 0x1f374, 0x1f375, 0x1f376, 0x1f377, 0x1f378, 0x1f379, 0x1f37a, 0x1f37b, 0x1f37c, 0x1f37d, 0x1f37e, 0x1f37f, 0x1f380, 0x1f381, 0x1f382, 0x1f383, 0x1f384, 0x1f385, 0x1f386, 0x1f387
};

void BM_collation_element_lookup_726(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 0, cps_726 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 1, cps_726 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 2, cps_726 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 3, cps_726 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 4, cps_726 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 5, cps_726 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 6, cps_726 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 7, cps_726 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 8, cps_726 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 9, cps_726 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 10, cps_726 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 11, cps_726 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 12, cps_726 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 13, cps_726 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 14, cps_726 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 15, cps_726 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 16, cps_726 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 17, cps_726 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 18, cps_726 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 19, cps_726 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 20, cps_726 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 21, cps_726 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 22, cps_726 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 23, cps_726 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 24, cps_726 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 25, cps_726 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 26, cps_726 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 27, cps_726 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 28, cps_726 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 29, cps_726 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 30, cps_726 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 31, cps_726 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 32, cps_726 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 33, cps_726 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 34, cps_726 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 35, cps_726 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 36, cps_726 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 37, cps_726 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 38, cps_726 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 39, cps_726 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 40, cps_726 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 41, cps_726 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 42, cps_726 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 43, cps_726 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 44, cps_726 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 45, cps_726 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 46, cps_726 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 47, cps_726 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 48, cps_726 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_726 + 49, cps_726 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_726);

uint32_t cps_727[] = {
0x1f388, 0x1f389, 0x1f38a, 0x1f38b, 0x1f38c, 0x1f38d, 0x1f38e, 0x1f38f, 0x1f390, 0x1f391, 0x1f392, 0x1f393, 0x1f394, 0x1f395, 0x1f396, 0x1f397, 0x1f398, 0x1f399, 0x1f39a, 0x1f39b, 0x1f39c, 0x1f39d, 0x1f39e, 0x1f39f, 0x1f3a0, 0x1f3a1, 0x1f3a2, 0x1f3a3, 0x1f3a4, 0x1f3a5, 0x1f3a6, 0x1f3a7, 0x1f3a8, 0x1f3a9, 0x1f3aa, 0x1f3ab, 0x1f3ac, 0x1f3ad, 0x1f3ae, 0x1f3af, 0x1f3b0, 0x1f3b1, 0x1f3b2, 0x1f3b3, 0x1f3b4, 0x1f3b5, 0x1f3b6, 0x1f3b7, 0x1f3b8, 0x1f3b9
};

void BM_collation_element_lookup_727(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 0, cps_727 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 1, cps_727 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 2, cps_727 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 3, cps_727 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 4, cps_727 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 5, cps_727 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 6, cps_727 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 7, cps_727 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 8, cps_727 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 9, cps_727 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 10, cps_727 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 11, cps_727 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 12, cps_727 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 13, cps_727 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 14, cps_727 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 15, cps_727 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 16, cps_727 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 17, cps_727 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 18, cps_727 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 19, cps_727 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 20, cps_727 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 21, cps_727 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 22, cps_727 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 23, cps_727 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 24, cps_727 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 25, cps_727 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 26, cps_727 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 27, cps_727 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 28, cps_727 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 29, cps_727 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 30, cps_727 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 31, cps_727 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 32, cps_727 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 33, cps_727 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 34, cps_727 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 35, cps_727 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 36, cps_727 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 37, cps_727 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 38, cps_727 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 39, cps_727 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 40, cps_727 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 41, cps_727 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 42, cps_727 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 43, cps_727 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 44, cps_727 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 45, cps_727 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 46, cps_727 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 47, cps_727 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 48, cps_727 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_727 + 49, cps_727 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_727);

uint32_t cps_728[] = {
0x1f3ba, 0x1f3bb, 0x1f3bc, 0x1f3bd, 0x1f3be, 0x1f3bf, 0x1f3c0, 0x1f3c1, 0x1f3c2, 0x1f3c3, 0x1f3c4, 0x1f3c5, 0x1f3c6, 0x1f3c7, 0x1f3c8, 0x1f3c9, 0x1f3ca, 0x1f3cb, 0x1f3cc, 0x1f3cd, 0x1f3ce, 0x1f3cf, 0x1f3d0, 0x1f3d1, 0x1f3d2, 0x1f3d3, 0x1f3d4, 0x1f3d5, 0x1f3d6, 0x1f3d7, 0x1f3d8, 0x1f3d9, 0x1f3da, 0x1f3db, 0x1f3dc, 0x1f3dd, 0x1f3de, 0x1f3df, 0x1f3e0, 0x1f3e1, 0x1f3e2, 0x1f3e3, 0x1f3e4, 0x1f3e5, 0x1f3e6, 0x1f3e7, 0x1f3e8, 0x1f3e9, 0x1f3ea, 0x1f3eb
};

void BM_collation_element_lookup_728(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 0, cps_728 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 1, cps_728 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 2, cps_728 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 3, cps_728 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 4, cps_728 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 5, cps_728 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 6, cps_728 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 7, cps_728 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 8, cps_728 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 9, cps_728 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 10, cps_728 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 11, cps_728 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 12, cps_728 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 13, cps_728 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 14, cps_728 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 15, cps_728 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 16, cps_728 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 17, cps_728 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 18, cps_728 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 19, cps_728 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 20, cps_728 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 21, cps_728 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 22, cps_728 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 23, cps_728 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 24, cps_728 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 25, cps_728 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 26, cps_728 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 27, cps_728 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 28, cps_728 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 29, cps_728 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 30, cps_728 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 31, cps_728 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 32, cps_728 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 33, cps_728 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 34, cps_728 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 35, cps_728 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 36, cps_728 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 37, cps_728 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 38, cps_728 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 39, cps_728 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 40, cps_728 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 41, cps_728 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 42, cps_728 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 43, cps_728 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 44, cps_728 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 45, cps_728 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 46, cps_728 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 47, cps_728 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 48, cps_728 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_728 + 49, cps_728 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_728);

uint32_t cps_729[] = {
0x1f3ec, 0x1f3ed, 0x1f3ee, 0x1f3ef, 0x1f3f0, 0x1f3f1, 0x1f3f2, 0x1f3f3, 0x1f3f4, 0x1f3f5, 0x1f3f6, 0x1f3f7, 0x1f3f8, 0x1f3f9, 0x1f3fa, 0x1f3fb, 0x1f3fc, 0x1f3fd, 0x1f3fe, 0x1f3ff, 0x1f400, 0x1f401, 0x1f402, 0x1f403, 0x1f404, 0x1f405, 0x1f406, 0x1f407, 0x1f408, 0x1f409, 0x1f40a, 0x1f40b, 0x1f40c, 0x1f40d, 0x1f40e, 0x1f40f, 0x1f410, 0x1f411, 0x1f412, 0x1f413, 0x1f414, 0x1f415, 0x1f416, 0x1f417, 0x1f418, 0x1f419, 0x1f41a, 0x1f41b, 0x1f41c, 0x1f41d
};

void BM_collation_element_lookup_729(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 0, cps_729 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 1, cps_729 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 2, cps_729 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 3, cps_729 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 4, cps_729 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 5, cps_729 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 6, cps_729 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 7, cps_729 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 8, cps_729 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 9, cps_729 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 10, cps_729 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 11, cps_729 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 12, cps_729 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 13, cps_729 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 14, cps_729 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 15, cps_729 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 16, cps_729 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 17, cps_729 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 18, cps_729 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 19, cps_729 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 20, cps_729 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 21, cps_729 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 22, cps_729 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 23, cps_729 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 24, cps_729 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 25, cps_729 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 26, cps_729 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 27, cps_729 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 28, cps_729 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 29, cps_729 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 30, cps_729 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 31, cps_729 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 32, cps_729 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 33, cps_729 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 34, cps_729 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 35, cps_729 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 36, cps_729 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 37, cps_729 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 38, cps_729 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 39, cps_729 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 40, cps_729 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 41, cps_729 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 42, cps_729 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 43, cps_729 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 44, cps_729 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 45, cps_729 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 46, cps_729 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 47, cps_729 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 48, cps_729 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_729 + 49, cps_729 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_729);

uint32_t cps_730[] = {
0x1f41e, 0x1f41f, 0x1f420, 0x1f421, 0x1f422, 0x1f423, 0x1f424, 0x1f425, 0x1f426, 0x1f427, 0x1f428, 0x1f429, 0x1f42a, 0x1f42b, 0x1f42c, 0x1f42d, 0x1f42e, 0x1f42f, 0x1f430, 0x1f431, 0x1f432, 0x1f433, 0x1f434, 0x1f435, 0x1f436, 0x1f437, 0x1f438, 0x1f439, 0x1f43a, 0x1f43b, 0x1f43c, 0x1f43d, 0x1f43e, 0x1f43f, 0x1f440, 0x1f441, 0x1f442, 0x1f443, 0x1f444, 0x1f445, 0x1f446, 0x1f447, 0x1f448, 0x1f449, 0x1f44a, 0x1f44b, 0x1f44c, 0x1f44d, 0x1f44e, 0x1f44f
};

void BM_collation_element_lookup_730(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 0, cps_730 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 1, cps_730 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 2, cps_730 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 3, cps_730 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 4, cps_730 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 5, cps_730 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 6, cps_730 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 7, cps_730 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 8, cps_730 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 9, cps_730 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 10, cps_730 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 11, cps_730 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 12, cps_730 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 13, cps_730 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 14, cps_730 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 15, cps_730 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 16, cps_730 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 17, cps_730 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 18, cps_730 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 19, cps_730 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 20, cps_730 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 21, cps_730 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 22, cps_730 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 23, cps_730 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 24, cps_730 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 25, cps_730 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 26, cps_730 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 27, cps_730 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 28, cps_730 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 29, cps_730 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 30, cps_730 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 31, cps_730 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 32, cps_730 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 33, cps_730 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 34, cps_730 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 35, cps_730 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 36, cps_730 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 37, cps_730 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 38, cps_730 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 39, cps_730 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 40, cps_730 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 41, cps_730 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 42, cps_730 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 43, cps_730 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 44, cps_730 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 45, cps_730 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 46, cps_730 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 47, cps_730 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 48, cps_730 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_730 + 49, cps_730 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_730);

uint32_t cps_731[] = {
0x1f450, 0x1f451, 0x1f452, 0x1f453, 0x1f454, 0x1f455, 0x1f456, 0x1f457, 0x1f458, 0x1f459, 0x1f45a, 0x1f45b, 0x1f45c, 0x1f45d, 0x1f45e, 0x1f45f, 0x1f460, 0x1f461, 0x1f462, 0x1f463, 0x1f464, 0x1f465, 0x1f466, 0x1f467, 0x1f468, 0x1f469, 0x1f46a, 0x1f46b, 0x1f46c, 0x1f46d, 0x1f46e, 0x1f46f, 0x1f470, 0x1f471, 0x1f472, 0x1f473, 0x1f474, 0x1f475, 0x1f476, 0x1f477, 0x1f478, 0x1f479, 0x1f47a, 0x1f47b, 0x1f47c, 0x1f47d, 0x1f47e, 0x1f47f, 0x1f480, 0x1f481
};

void BM_collation_element_lookup_731(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 0, cps_731 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 1, cps_731 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 2, cps_731 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 3, cps_731 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 4, cps_731 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 5, cps_731 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 6, cps_731 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 7, cps_731 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 8, cps_731 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 9, cps_731 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 10, cps_731 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 11, cps_731 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 12, cps_731 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 13, cps_731 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 14, cps_731 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 15, cps_731 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 16, cps_731 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 17, cps_731 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 18, cps_731 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 19, cps_731 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 20, cps_731 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 21, cps_731 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 22, cps_731 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 23, cps_731 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 24, cps_731 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 25, cps_731 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 26, cps_731 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 27, cps_731 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 28, cps_731 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 29, cps_731 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 30, cps_731 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 31, cps_731 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 32, cps_731 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 33, cps_731 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 34, cps_731 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 35, cps_731 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 36, cps_731 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 37, cps_731 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 38, cps_731 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 39, cps_731 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 40, cps_731 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 41, cps_731 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 42, cps_731 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 43, cps_731 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 44, cps_731 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 45, cps_731 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 46, cps_731 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 47, cps_731 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 48, cps_731 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_731 + 49, cps_731 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_731);

uint32_t cps_732[] = {
0x1f482, 0x1f483, 0x1f484, 0x1f485, 0x1f486, 0x1f487, 0x1f488, 0x1f489, 0x1f48a, 0x1f48b, 0x1f48c, 0x1f48d, 0x1f48e, 0x1f48f, 0x1f490, 0x1f491, 0x1f492, 0x1f493, 0x1f494, 0x1f495, 0x1f496, 0x1f497, 0x1f498, 0x1f499, 0x1f49a, 0x1f49b, 0x1f49c, 0x1f49d, 0x1f49e, 0x1f49f, 0x1f4a0, 0x1f4a1, 0x1f4a2, 0x1f4a3, 0x1f4a4, 0x1f4a5, 0x1f4a6, 0x1f4a7, 0x1f4a8, 0x1f4a9, 0x1f4aa, 0x1f4ab, 0x1f4ac, 0x1f4ad, 0x1f4ae, 0x1f4af, 0x1f4b0, 0x1f4b1, 0x1f4b2, 0x1f4b3
};

void BM_collation_element_lookup_732(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 0, cps_732 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 1, cps_732 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 2, cps_732 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 3, cps_732 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 4, cps_732 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 5, cps_732 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 6, cps_732 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 7, cps_732 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 8, cps_732 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 9, cps_732 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 10, cps_732 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 11, cps_732 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 12, cps_732 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 13, cps_732 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 14, cps_732 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 15, cps_732 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 16, cps_732 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 17, cps_732 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 18, cps_732 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 19, cps_732 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 20, cps_732 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 21, cps_732 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 22, cps_732 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 23, cps_732 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 24, cps_732 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 25, cps_732 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 26, cps_732 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 27, cps_732 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 28, cps_732 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 29, cps_732 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 30, cps_732 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 31, cps_732 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 32, cps_732 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 33, cps_732 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 34, cps_732 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 35, cps_732 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 36, cps_732 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 37, cps_732 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 38, cps_732 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 39, cps_732 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 40, cps_732 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 41, cps_732 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 42, cps_732 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 43, cps_732 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 44, cps_732 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 45, cps_732 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 46, cps_732 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 47, cps_732 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 48, cps_732 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_732 + 49, cps_732 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_732);

uint32_t cps_733[] = {
0x1f4b4, 0x1f4b5, 0x1f4b6, 0x1f4b7, 0x1f4b8, 0x1f4b9, 0x1f4ba, 0x1f4bb, 0x1f4bc, 0x1f4bd, 0x1f4be, 0x1f4bf, 0x1f4c0, 0x1f4c1, 0x1f4c2, 0x1f4c3, 0x1f4c4, 0x1f4c5, 0x1f4c6, 0x1f4c7, 0x1f4c8, 0x1f4c9, 0x1f4ca, 0x1f4cb, 0x1f4cc, 0x1f4cd, 0x1f4ce, 0x1f4cf, 0x1f4d0, 0x1f4d1, 0x1f4d2, 0x1f4d3, 0x1f4d4, 0x1f4d5, 0x1f4d6, 0x1f4d7, 0x1f4d8, 0x1f4d9, 0x1f4da, 0x1f4db, 0x1f4dc, 0x1f4dd, 0x1f4de, 0x1f4df, 0x1f4e0, 0x1f4e1, 0x1f4e2, 0x1f4e3, 0x1f4e4, 0x1f4e5
};

void BM_collation_element_lookup_733(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 0, cps_733 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 1, cps_733 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 2, cps_733 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 3, cps_733 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 4, cps_733 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 5, cps_733 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 6, cps_733 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 7, cps_733 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 8, cps_733 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 9, cps_733 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 10, cps_733 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 11, cps_733 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 12, cps_733 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 13, cps_733 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 14, cps_733 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 15, cps_733 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 16, cps_733 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 17, cps_733 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 18, cps_733 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 19, cps_733 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 20, cps_733 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 21, cps_733 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 22, cps_733 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 23, cps_733 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 24, cps_733 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 25, cps_733 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 26, cps_733 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 27, cps_733 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 28, cps_733 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 29, cps_733 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 30, cps_733 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 31, cps_733 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 32, cps_733 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 33, cps_733 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 34, cps_733 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 35, cps_733 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 36, cps_733 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 37, cps_733 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 38, cps_733 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 39, cps_733 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 40, cps_733 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 41, cps_733 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 42, cps_733 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 43, cps_733 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 44, cps_733 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 45, cps_733 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 46, cps_733 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 47, cps_733 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 48, cps_733 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_733 + 49, cps_733 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_733);

uint32_t cps_734[] = {
0x1f4e6, 0x1f4e7, 0x1f4e8, 0x1f4e9, 0x1f4ea, 0x1f4eb, 0x1f4ec, 0x1f4ed, 0x1f4ee, 0x1f4ef, 0x1f4f0, 0x1f4f1, 0x1f4f2, 0x1f4f3, 0x1f4f4, 0x1f4f5, 0x1f4f6, 0x1f4f7, 0x1f4f8, 0x1f4f9, 0x1f4fa, 0x1f4fb, 0x1f4fc, 0x1f4fd, 0x1f4fe, 0x1f4ff, 0x1f500, 0x1f501, 0x1f502, 0x1f503, 0x1f504, 0x1f505, 0x1f506, 0x1f507, 0x1f508, 0x1f509, 0x1f50a, 0x1f50b, 0x1f50c, 0x1f50d, 0x1f50e, 0x1f50f, 0x1f510, 0x1f511, 0x1f512, 0x1f513, 0x1f514, 0x1f515, 0x1f516, 0x1f517
};

void BM_collation_element_lookup_734(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 0, cps_734 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 1, cps_734 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 2, cps_734 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 3, cps_734 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 4, cps_734 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 5, cps_734 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 6, cps_734 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 7, cps_734 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 8, cps_734 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 9, cps_734 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 10, cps_734 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 11, cps_734 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 12, cps_734 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 13, cps_734 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 14, cps_734 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 15, cps_734 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 16, cps_734 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 17, cps_734 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 18, cps_734 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 19, cps_734 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 20, cps_734 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 21, cps_734 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 22, cps_734 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 23, cps_734 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 24, cps_734 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 25, cps_734 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 26, cps_734 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 27, cps_734 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 28, cps_734 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 29, cps_734 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 30, cps_734 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 31, cps_734 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 32, cps_734 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 33, cps_734 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 34, cps_734 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 35, cps_734 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 36, cps_734 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 37, cps_734 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 38, cps_734 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 39, cps_734 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 40, cps_734 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 41, cps_734 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 42, cps_734 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 43, cps_734 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 44, cps_734 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 45, cps_734 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 46, cps_734 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 47, cps_734 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 48, cps_734 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_734 + 49, cps_734 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_734);

uint32_t cps_735[] = {
0x1f518, 0x1f519, 0x1f51a, 0x1f51b, 0x1f51c, 0x1f51d, 0x1f51e, 0x1f51f, 0x1f520, 0x1f521, 0x1f522, 0x1f523, 0x1f524, 0x1f525, 0x1f526, 0x1f527, 0x1f528, 0x1f529, 0x1f52a, 0x1f52b, 0x1f52c, 0x1f52d, 0x1f52e, 0x1f52f, 0x1f530, 0x1f531, 0x1f532, 0x1f533, 0x1f534, 0x1f535, 0x1f536, 0x1f537, 0x1f538, 0x1f539, 0x1f53a, 0x1f53b, 0x1f53c, 0x1f53d, 0x1f53e, 0x1f53f, 0x1f540, 0x1f541, 0x1f542, 0x1f543, 0x1f544, 0x1f545, 0x1f546, 0x1f547, 0x1f548, 0x1f549
};

void BM_collation_element_lookup_735(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 0, cps_735 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 1, cps_735 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 2, cps_735 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 3, cps_735 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 4, cps_735 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 5, cps_735 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 6, cps_735 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 7, cps_735 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 8, cps_735 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 9, cps_735 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 10, cps_735 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 11, cps_735 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 12, cps_735 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 13, cps_735 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 14, cps_735 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 15, cps_735 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 16, cps_735 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 17, cps_735 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 18, cps_735 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 19, cps_735 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 20, cps_735 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 21, cps_735 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 22, cps_735 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 23, cps_735 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 24, cps_735 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 25, cps_735 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 26, cps_735 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 27, cps_735 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 28, cps_735 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 29, cps_735 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 30, cps_735 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 31, cps_735 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 32, cps_735 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 33, cps_735 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 34, cps_735 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 35, cps_735 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 36, cps_735 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 37, cps_735 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 38, cps_735 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 39, cps_735 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 40, cps_735 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 41, cps_735 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 42, cps_735 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 43, cps_735 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 44, cps_735 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 45, cps_735 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 46, cps_735 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 47, cps_735 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 48, cps_735 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_735 + 49, cps_735 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_735);

uint32_t cps_736[] = {
0x1f54a, 0x1f54b, 0x1f54c, 0x1f54d, 0x1f54e, 0x1f54f, 0x1f550, 0x1f551, 0x1f552, 0x1f553, 0x1f554, 0x1f555, 0x1f556, 0x1f557, 0x1f558, 0x1f559, 0x1f55a, 0x1f55b, 0x1f55c, 0x1f55d, 0x1f55e, 0x1f55f, 0x1f560, 0x1f561, 0x1f562, 0x1f563, 0x1f564, 0x1f565, 0x1f566, 0x1f567, 0x1f568, 0x1f569, 0x1f56a, 0x1f56b, 0x1f56c, 0x1f56d, 0x1f56e, 0x1f56f, 0x1f570, 0x1f571, 0x1f572, 0x1f573, 0x1f574, 0x1f575, 0x1f576, 0x1f577, 0x1f578, 0x1f579, 0x1f57a, 0x1f57b
};

void BM_collation_element_lookup_736(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 0, cps_736 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 1, cps_736 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 2, cps_736 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 3, cps_736 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 4, cps_736 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 5, cps_736 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 6, cps_736 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 7, cps_736 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 8, cps_736 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 9, cps_736 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 10, cps_736 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 11, cps_736 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 12, cps_736 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 13, cps_736 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 14, cps_736 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 15, cps_736 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 16, cps_736 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 17, cps_736 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 18, cps_736 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 19, cps_736 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 20, cps_736 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 21, cps_736 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 22, cps_736 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 23, cps_736 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 24, cps_736 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 25, cps_736 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 26, cps_736 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 27, cps_736 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 28, cps_736 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 29, cps_736 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 30, cps_736 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 31, cps_736 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 32, cps_736 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 33, cps_736 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 34, cps_736 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 35, cps_736 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 36, cps_736 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 37, cps_736 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 38, cps_736 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 39, cps_736 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 40, cps_736 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 41, cps_736 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 42, cps_736 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 43, cps_736 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 44, cps_736 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 45, cps_736 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 46, cps_736 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 47, cps_736 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 48, cps_736 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_736 + 49, cps_736 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_736);

uint32_t cps_737[] = {
0x1f57c, 0x1f57d, 0x1f57e, 0x1f57f, 0x1f580, 0x1f581, 0x1f582, 0x1f583, 0x1f584, 0x1f585, 0x1f586, 0x1f587, 0x1f588, 0x1f589, 0x1f58a, 0x1f58b, 0x1f58c, 0x1f58d, 0x1f58e, 0x1f58f, 0x1f590, 0x1f591, 0x1f592, 0x1f593, 0x1f594, 0x1f595, 0x1f596, 0x1f597, 0x1f598, 0x1f599, 0x1f59a, 0x1f59b, 0x1f59c, 0x1f59d, 0x1f59e, 0x1f59f, 0x1f5a0, 0x1f5a1, 0x1f5a2, 0x1f5a3, 0x1f5a4, 0x1f5a5, 0x1f5a6, 0x1f5a7, 0x1f5a8, 0x1f5a9, 0x1f5aa, 0x1f5ab, 0x1f5ac, 0x1f5ad
};

void BM_collation_element_lookup_737(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 0, cps_737 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 1, cps_737 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 2, cps_737 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 3, cps_737 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 4, cps_737 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 5, cps_737 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 6, cps_737 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 7, cps_737 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 8, cps_737 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 9, cps_737 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 10, cps_737 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 11, cps_737 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 12, cps_737 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 13, cps_737 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 14, cps_737 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 15, cps_737 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 16, cps_737 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 17, cps_737 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 18, cps_737 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 19, cps_737 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 20, cps_737 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 21, cps_737 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 22, cps_737 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 23, cps_737 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 24, cps_737 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 25, cps_737 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 26, cps_737 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 27, cps_737 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 28, cps_737 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 29, cps_737 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 30, cps_737 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 31, cps_737 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 32, cps_737 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 33, cps_737 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 34, cps_737 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 35, cps_737 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 36, cps_737 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 37, cps_737 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 38, cps_737 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 39, cps_737 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 40, cps_737 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 41, cps_737 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 42, cps_737 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 43, cps_737 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 44, cps_737 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 45, cps_737 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 46, cps_737 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 47, cps_737 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 48, cps_737 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_737 + 49, cps_737 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_737);

uint32_t cps_738[] = {
0x1f5ae, 0x1f5af, 0x1f5b0, 0x1f5b1, 0x1f5b2, 0x1f5b3, 0x1f5b4, 0x1f5b5, 0x1f5b6, 0x1f5b7, 0x1f5b8, 0x1f5b9, 0x1f5ba, 0x1f5bb, 0x1f5bc, 0x1f5bd, 0x1f5be, 0x1f5bf, 0x1f5c0, 0x1f5c1, 0x1f5c2, 0x1f5c3, 0x1f5c4, 0x1f5c5, 0x1f5c6, 0x1f5c7, 0x1f5c8, 0x1f5c9, 0x1f5ca, 0x1f5cb, 0x1f5cc, 0x1f5cd, 0x1f5ce, 0x1f5cf, 0x1f5d0, 0x1f5d1, 0x1f5d2, 0x1f5d3, 0x1f5d4, 0x1f5d5, 0x1f5d6, 0x1f5d7, 0x1f5d8, 0x1f5d9, 0x1f5da, 0x1f5db, 0x1f5dc, 0x1f5dd, 0x1f5de, 0x1f5df
};

void BM_collation_element_lookup_738(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 0, cps_738 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 1, cps_738 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 2, cps_738 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 3, cps_738 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 4, cps_738 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 5, cps_738 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 6, cps_738 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 7, cps_738 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 8, cps_738 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 9, cps_738 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 10, cps_738 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 11, cps_738 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 12, cps_738 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 13, cps_738 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 14, cps_738 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 15, cps_738 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 16, cps_738 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 17, cps_738 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 18, cps_738 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 19, cps_738 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 20, cps_738 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 21, cps_738 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 22, cps_738 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 23, cps_738 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 24, cps_738 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 25, cps_738 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 26, cps_738 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 27, cps_738 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 28, cps_738 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 29, cps_738 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 30, cps_738 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 31, cps_738 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 32, cps_738 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 33, cps_738 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 34, cps_738 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 35, cps_738 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 36, cps_738 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 37, cps_738 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 38, cps_738 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 39, cps_738 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 40, cps_738 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 41, cps_738 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 42, cps_738 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 43, cps_738 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 44, cps_738 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 45, cps_738 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 46, cps_738 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 47, cps_738 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 48, cps_738 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_738 + 49, cps_738 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_738);

uint32_t cps_739[] = {
0x1f5e0, 0x1f5e1, 0x1f5e2, 0x1f5e3, 0x1f5e4, 0x1f5e5, 0x1f5e6, 0x1f5e7, 0x1f5e8, 0x1f5e9, 0x1f5ea, 0x1f5eb, 0x1f5ec, 0x1f5ed, 0x1f5ee, 0x1f5ef, 0x1f5f0, 0x1f5f1, 0x1f5f2, 0x1f5f3, 0x1f5f4, 0x1f5f5, 0x1f5f6, 0x1f5f7, 0x1f5f8, 0x1f5f9, 0x1f5fa, 0x1f5fb, 0x1f5fc, 0x1f5fd, 0x1f5fe, 0x1f5ff, 0x1f600, 0x1f601, 0x1f602, 0x1f603, 0x1f604, 0x1f605, 0x1f606, 0x1f607, 0x1f608, 0x1f609, 0x1f60a, 0x1f60b, 0x1f60c, 0x1f60d, 0x1f60e, 0x1f60f, 0x1f610, 0x1f611
};

void BM_collation_element_lookup_739(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 0, cps_739 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 1, cps_739 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 2, cps_739 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 3, cps_739 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 4, cps_739 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 5, cps_739 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 6, cps_739 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 7, cps_739 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 8, cps_739 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 9, cps_739 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 10, cps_739 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 11, cps_739 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 12, cps_739 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 13, cps_739 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 14, cps_739 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 15, cps_739 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 16, cps_739 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 17, cps_739 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 18, cps_739 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 19, cps_739 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 20, cps_739 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 21, cps_739 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 22, cps_739 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 23, cps_739 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 24, cps_739 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 25, cps_739 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 26, cps_739 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 27, cps_739 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 28, cps_739 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 29, cps_739 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 30, cps_739 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 31, cps_739 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 32, cps_739 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 33, cps_739 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 34, cps_739 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 35, cps_739 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 36, cps_739 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 37, cps_739 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 38, cps_739 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 39, cps_739 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 40, cps_739 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 41, cps_739 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 42, cps_739 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 43, cps_739 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 44, cps_739 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 45, cps_739 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 46, cps_739 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 47, cps_739 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 48, cps_739 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_739 + 49, cps_739 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_739);

uint32_t cps_740[] = {
0x1f612, 0x1f613, 0x1f614, 0x1f615, 0x1f616, 0x1f617, 0x1f618, 0x1f619, 0x1f61a, 0x1f61b, 0x1f61c, 0x1f61d, 0x1f61e, 0x1f61f, 0x1f620, 0x1f621, 0x1f622, 0x1f623, 0x1f624, 0x1f625, 0x1f626, 0x1f627, 0x1f628, 0x1f629, 0x1f62a, 0x1f62b, 0x1f62c, 0x1f62d, 0x1f62e, 0x1f62f, 0x1f630, 0x1f631, 0x1f632, 0x1f633, 0x1f634, 0x1f635, 0x1f636, 0x1f637, 0x1f638, 0x1f639, 0x1f63a, 0x1f63b, 0x1f63c, 0x1f63d, 0x1f63e, 0x1f63f, 0x1f640, 0x1f641, 0x1f642, 0x1f643
};

void BM_collation_element_lookup_740(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 0, cps_740 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 1, cps_740 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 2, cps_740 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 3, cps_740 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 4, cps_740 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 5, cps_740 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 6, cps_740 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 7, cps_740 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 8, cps_740 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 9, cps_740 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 10, cps_740 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 11, cps_740 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 12, cps_740 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 13, cps_740 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 14, cps_740 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 15, cps_740 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 16, cps_740 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 17, cps_740 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 18, cps_740 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 19, cps_740 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 20, cps_740 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 21, cps_740 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 22, cps_740 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 23, cps_740 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 24, cps_740 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 25, cps_740 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 26, cps_740 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 27, cps_740 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 28, cps_740 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 29, cps_740 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 30, cps_740 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 31, cps_740 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 32, cps_740 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 33, cps_740 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 34, cps_740 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 35, cps_740 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 36, cps_740 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 37, cps_740 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 38, cps_740 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 39, cps_740 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 40, cps_740 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 41, cps_740 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 42, cps_740 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 43, cps_740 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 44, cps_740 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 45, cps_740 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 46, cps_740 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 47, cps_740 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 48, cps_740 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_740 + 49, cps_740 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_740);

uint32_t cps_741[] = {
0x1f644, 0x1f645, 0x1f646, 0x1f647, 0x1f648, 0x1f649, 0x1f64a, 0x1f64b, 0x1f64c, 0x1f64d, 0x1f64e, 0x1f64f, 0x1f650, 0x1f651, 0x1f652, 0x1f653, 0x1f654, 0x1f655, 0x1f656, 0x1f657, 0x1f658, 0x1f659, 0x1f65a, 0x1f65b, 0x1f65c, 0x1f65d, 0x1f65e, 0x1f65f, 0x1f660, 0x1f661, 0x1f662, 0x1f663, 0x1f664, 0x1f665, 0x1f666, 0x1f667, 0x1f668, 0x1f669, 0x1f66a, 0x1f66b, 0x1f66c, 0x1f66d, 0x1f66e, 0x1f66f, 0x1f670, 0x1f671, 0x1f672, 0x1f673, 0x1f674, 0x1f675
};

void BM_collation_element_lookup_741(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 0, cps_741 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 1, cps_741 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 2, cps_741 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 3, cps_741 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 4, cps_741 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 5, cps_741 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 6, cps_741 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 7, cps_741 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 8, cps_741 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 9, cps_741 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 10, cps_741 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 11, cps_741 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 12, cps_741 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 13, cps_741 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 14, cps_741 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 15, cps_741 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 16, cps_741 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 17, cps_741 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 18, cps_741 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 19, cps_741 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 20, cps_741 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 21, cps_741 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 22, cps_741 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 23, cps_741 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 24, cps_741 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 25, cps_741 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 26, cps_741 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 27, cps_741 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 28, cps_741 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 29, cps_741 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 30, cps_741 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 31, cps_741 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 32, cps_741 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 33, cps_741 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 34, cps_741 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 35, cps_741 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 36, cps_741 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 37, cps_741 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 38, cps_741 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 39, cps_741 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 40, cps_741 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 41, cps_741 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 42, cps_741 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 43, cps_741 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 44, cps_741 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 45, cps_741 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 46, cps_741 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 47, cps_741 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 48, cps_741 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_741 + 49, cps_741 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_741);

uint32_t cps_742[] = {
0x1f676, 0x1f677, 0x1f678, 0x1f679, 0x1f67a, 0x1f67b, 0x1f67c, 0x1f67d, 0x1f67e, 0x1f67f, 0x1f680, 0x1f681, 0x1f682, 0x1f683, 0x1f684, 0x1f685, 0x1f686, 0x1f687, 0x1f688, 0x1f689, 0x1f68a, 0x1f68b, 0x1f68c, 0x1f68d, 0x1f68e, 0x1f68f, 0x1f690, 0x1f691, 0x1f692, 0x1f693, 0x1f694, 0x1f695, 0x1f696, 0x1f697, 0x1f698, 0x1f699, 0x1f69a, 0x1f69b, 0x1f69c, 0x1f69d, 0x1f69e, 0x1f69f, 0x1f6a0, 0x1f6a1, 0x1f6a2, 0x1f6a3, 0x1f6a4, 0x1f6a5, 0x1f6a6, 0x1f6a7
};

void BM_collation_element_lookup_742(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 0, cps_742 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 1, cps_742 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 2, cps_742 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 3, cps_742 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 4, cps_742 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 5, cps_742 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 6, cps_742 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 7, cps_742 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 8, cps_742 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 9, cps_742 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 10, cps_742 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 11, cps_742 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 12, cps_742 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 13, cps_742 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 14, cps_742 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 15, cps_742 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 16, cps_742 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 17, cps_742 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 18, cps_742 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 19, cps_742 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 20, cps_742 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 21, cps_742 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 22, cps_742 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 23, cps_742 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 24, cps_742 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 25, cps_742 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 26, cps_742 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 27, cps_742 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 28, cps_742 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 29, cps_742 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 30, cps_742 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 31, cps_742 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 32, cps_742 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 33, cps_742 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 34, cps_742 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 35, cps_742 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 36, cps_742 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 37, cps_742 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 38, cps_742 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 39, cps_742 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 40, cps_742 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 41, cps_742 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 42, cps_742 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 43, cps_742 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 44, cps_742 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 45, cps_742 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 46, cps_742 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 47, cps_742 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 48, cps_742 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_742 + 49, cps_742 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_742);

uint32_t cps_743[] = {
0x1f6a8, 0x1f6a9, 0x1f6aa, 0x1f6ab, 0x1f6ac, 0x1f6ad, 0x1f6ae, 0x1f6af, 0x1f6b0, 0x1f6b1, 0x1f6b2, 0x1f6b3, 0x1f6b4, 0x1f6b5, 0x1f6b6, 0x1f6b7, 0x1f6b8, 0x1f6b9, 0x1f6ba, 0x1f6bb, 0x1f6bc, 0x1f6bd, 0x1f6be, 0x1f6bf, 0x1f6c0, 0x1f6c1, 0x1f6c2, 0x1f6c3, 0x1f6c4, 0x1f6c5, 0x1f6c6, 0x1f6c7, 0x1f6c8, 0x1f6c9, 0x1f6ca, 0x1f6cb, 0x1f6cc, 0x1f6cd, 0x1f6ce, 0x1f6cf, 0x1f6d0, 0x1f6d1, 0x1f6d2, 0x1f6d3, 0x1f6d4, 0x1f6e0, 0x1f6e1, 0x1f6e2, 0x1f6e3, 0x1f6e4
};

void BM_collation_element_lookup_743(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 0, cps_743 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 1, cps_743 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 2, cps_743 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 3, cps_743 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 4, cps_743 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 5, cps_743 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 6, cps_743 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 7, cps_743 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 8, cps_743 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 9, cps_743 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 10, cps_743 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 11, cps_743 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 12, cps_743 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 13, cps_743 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 14, cps_743 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 15, cps_743 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 16, cps_743 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 17, cps_743 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 18, cps_743 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 19, cps_743 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 20, cps_743 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 21, cps_743 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 22, cps_743 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 23, cps_743 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 24, cps_743 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 25, cps_743 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 26, cps_743 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 27, cps_743 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 28, cps_743 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 29, cps_743 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 30, cps_743 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 31, cps_743 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 32, cps_743 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 33, cps_743 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 34, cps_743 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 35, cps_743 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 36, cps_743 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 37, cps_743 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 38, cps_743 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 39, cps_743 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 40, cps_743 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 41, cps_743 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 42, cps_743 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 43, cps_743 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 44, cps_743 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 45, cps_743 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 46, cps_743 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 47, cps_743 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 48, cps_743 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_743 + 49, cps_743 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_743);

uint32_t cps_744[] = {
0x1f6e5, 0x1f6e6, 0x1f6e7, 0x1f6e8, 0x1f6e9, 0x1f6ea, 0x1f6eb, 0x1f6ec, 0x1f6f0, 0x1f6f1, 0x1f6f2, 0x1f6f3, 0x1f6f4, 0x1f6f5, 0x1f6f6, 0x1f6f7, 0x1f6f8, 0x1f700, 0x1f701, 0x1f702, 0x1f703, 0x1f704, 0x1f705, 0x1f706, 0x1f707, 0x1f708, 0x1f709, 0x1f70a, 0x1f70b, 0x1f70c, 0x1f70d, 0x1f70e, 0x1f70f, 0x1f710, 0x1f711, 0x1f712, 0x1f713, 0x1f714, 0x1f715, 0x1f716, 0x1f717, 0x1f718, 0x1f719, 0x1f71a, 0x1f71b, 0x1f71c, 0x1f71d, 0x1f71e, 0x1f71f, 0x1f720
};

void BM_collation_element_lookup_744(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 0, cps_744 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 1, cps_744 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 2, cps_744 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 3, cps_744 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 4, cps_744 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 5, cps_744 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 6, cps_744 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 7, cps_744 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 8, cps_744 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 9, cps_744 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 10, cps_744 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 11, cps_744 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 12, cps_744 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 13, cps_744 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 14, cps_744 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 15, cps_744 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 16, cps_744 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 17, cps_744 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 18, cps_744 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 19, cps_744 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 20, cps_744 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 21, cps_744 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 22, cps_744 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 23, cps_744 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 24, cps_744 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 25, cps_744 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 26, cps_744 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 27, cps_744 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 28, cps_744 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 29, cps_744 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 30, cps_744 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 31, cps_744 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 32, cps_744 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 33, cps_744 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 34, cps_744 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 35, cps_744 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 36, cps_744 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 37, cps_744 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 38, cps_744 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 39, cps_744 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 40, cps_744 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 41, cps_744 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 42, cps_744 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 43, cps_744 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 44, cps_744 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 45, cps_744 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 46, cps_744 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 47, cps_744 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 48, cps_744 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_744 + 49, cps_744 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_744);

uint32_t cps_745[] = {
0x1f721, 0x1f722, 0x1f723, 0x1f724, 0x1f725, 0x1f726, 0x1f727, 0x1f728, 0x1f729, 0x1f72a, 0x1f72b, 0x1f72c, 0x1f72d, 0x1f72e, 0x1f72f, 0x1f730, 0x1f731, 0x1f732, 0x1f733, 0x1f734, 0x1f735, 0x1f736, 0x1f737, 0x1f738, 0x1f739, 0x1f73a, 0x1f73b, 0x1f73c, 0x1f73d, 0x1f73e, 0x1f73f, 0x1f740, 0x1f741, 0x1f742, 0x1f743, 0x1f744, 0x1f745, 0x1f746, 0x1f747, 0x1f748, 0x1f749, 0x1f74a, 0x1f74b, 0x1f74c, 0x1f74d, 0x1f74e, 0x1f74f, 0x1f750, 0x1f751, 0x1f752
};

void BM_collation_element_lookup_745(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 0, cps_745 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 1, cps_745 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 2, cps_745 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 3, cps_745 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 4, cps_745 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 5, cps_745 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 6, cps_745 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 7, cps_745 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 8, cps_745 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 9, cps_745 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 10, cps_745 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 11, cps_745 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 12, cps_745 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 13, cps_745 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 14, cps_745 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 15, cps_745 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 16, cps_745 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 17, cps_745 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 18, cps_745 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 19, cps_745 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 20, cps_745 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 21, cps_745 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 22, cps_745 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 23, cps_745 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 24, cps_745 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 25, cps_745 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 26, cps_745 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 27, cps_745 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 28, cps_745 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 29, cps_745 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 30, cps_745 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 31, cps_745 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 32, cps_745 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 33, cps_745 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 34, cps_745 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 35, cps_745 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 36, cps_745 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 37, cps_745 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 38, cps_745 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 39, cps_745 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 40, cps_745 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 41, cps_745 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 42, cps_745 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 43, cps_745 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 44, cps_745 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 45, cps_745 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 46, cps_745 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 47, cps_745 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 48, cps_745 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_745 + 49, cps_745 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_745);

uint32_t cps_746[] = {
0x1f753, 0x1f754, 0x1f755, 0x1f756, 0x1f757, 0x1f758, 0x1f759, 0x1f75a, 0x1f75b, 0x1f75c, 0x1f75d, 0x1f75e, 0x1f75f, 0x1f760, 0x1f761, 0x1f762, 0x1f763, 0x1f764, 0x1f765, 0x1f766, 0x1f767, 0x1f768, 0x1f769, 0x1f76a, 0x1f76b, 0x1f76c, 0x1f76d, 0x1f76e, 0x1f76f, 0x1f770, 0x1f771, 0x1f772, 0x1f773, 0x1f780, 0x1f781, 0x1f782, 0x1f783, 0x1f784, 0x1f785, 0x1f786, 0x1f787, 0x1f788, 0x1f789, 0x1f78a, 0x1f78b, 0x1f78c, 0x1f78d, 0x1f78e, 0x1f78f, 0x1f790
};

void BM_collation_element_lookup_746(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 0, cps_746 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 1, cps_746 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 2, cps_746 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 3, cps_746 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 4, cps_746 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 5, cps_746 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 6, cps_746 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 7, cps_746 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 8, cps_746 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 9, cps_746 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 10, cps_746 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 11, cps_746 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 12, cps_746 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 13, cps_746 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 14, cps_746 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 15, cps_746 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 16, cps_746 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 17, cps_746 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 18, cps_746 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 19, cps_746 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 20, cps_746 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 21, cps_746 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 22, cps_746 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 23, cps_746 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 24, cps_746 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 25, cps_746 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 26, cps_746 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 27, cps_746 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 28, cps_746 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 29, cps_746 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 30, cps_746 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 31, cps_746 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 32, cps_746 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 33, cps_746 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 34, cps_746 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 35, cps_746 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 36, cps_746 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 37, cps_746 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 38, cps_746 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 39, cps_746 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 40, cps_746 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 41, cps_746 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 42, cps_746 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 43, cps_746 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 44, cps_746 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 45, cps_746 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 46, cps_746 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 47, cps_746 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 48, cps_746 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_746 + 49, cps_746 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_746);

uint32_t cps_747[] = {
0x1f791, 0x1f792, 0x1f793, 0x1f794, 0x1f795, 0x1f796, 0x1f797, 0x1f798, 0x1f799, 0x1f79a, 0x1f79b, 0x1f79c, 0x1f79d, 0x1f79e, 0x1f79f, 0x1f7a0, 0x1f7a1, 0x1f7a2, 0x1f7a3, 0x1f7a4, 0x1f7a5, 0x1f7a6, 0x1f7a7, 0x1f7a8, 0x1f7a9, 0x1f7aa, 0x1f7ab, 0x1f7ac, 0x1f7ad, 0x1f7ae, 0x1f7af, 0x1f7b0, 0x1f7b1, 0x1f7b2, 0x1f7b3, 0x1f7b4, 0x1f7b5, 0x1f7b6, 0x1f7b7, 0x1f7b8, 0x1f7b9, 0x1f7ba, 0x1f7bb, 0x1f7bc, 0x1f7bd, 0x1f7be, 0x1f7bf, 0x1f7c0, 0x1f7c1, 0x1f7c2
};

void BM_collation_element_lookup_747(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 0, cps_747 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 1, cps_747 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 2, cps_747 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 3, cps_747 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 4, cps_747 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 5, cps_747 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 6, cps_747 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 7, cps_747 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 8, cps_747 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 9, cps_747 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 10, cps_747 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 11, cps_747 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 12, cps_747 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 13, cps_747 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 14, cps_747 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 15, cps_747 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 16, cps_747 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 17, cps_747 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 18, cps_747 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 19, cps_747 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 20, cps_747 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 21, cps_747 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 22, cps_747 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 23, cps_747 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 24, cps_747 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 25, cps_747 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 26, cps_747 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 27, cps_747 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 28, cps_747 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 29, cps_747 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 30, cps_747 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 31, cps_747 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 32, cps_747 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 33, cps_747 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 34, cps_747 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 35, cps_747 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 36, cps_747 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 37, cps_747 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 38, cps_747 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 39, cps_747 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 40, cps_747 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 41, cps_747 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 42, cps_747 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 43, cps_747 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 44, cps_747 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 45, cps_747 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 46, cps_747 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 47, cps_747 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 48, cps_747 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_747 + 49, cps_747 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_747);

uint32_t cps_748[] = {
0x1f7c3, 0x1f7c4, 0x1f7c5, 0x1f7c6, 0x1f7c7, 0x1f7c8, 0x1f7c9, 0x1f7ca, 0x1f7cb, 0x1f7cc, 0x1f7cd, 0x1f7ce, 0x1f7cf, 0x1f7d0, 0x1f7d1, 0x1f7d2, 0x1f7d3, 0x1f7d4, 0x1f800, 0x1f801, 0x1f802, 0x1f803, 0x1f804, 0x1f805, 0x1f806, 0x1f807, 0x1f808, 0x1f809, 0x1f80a, 0x1f80b, 0x1f810, 0x1f811, 0x1f812, 0x1f813, 0x1f814, 0x1f815, 0x1f816, 0x1f817, 0x1f818, 0x1f819, 0x1f81a, 0x1f81b, 0x1f81c, 0x1f81d, 0x1f81e, 0x1f81f, 0x1f820, 0x1f821, 0x1f822, 0x1f823
};

void BM_collation_element_lookup_748(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 0, cps_748 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 1, cps_748 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 2, cps_748 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 3, cps_748 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 4, cps_748 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 5, cps_748 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 6, cps_748 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 7, cps_748 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 8, cps_748 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 9, cps_748 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 10, cps_748 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 11, cps_748 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 12, cps_748 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 13, cps_748 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 14, cps_748 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 15, cps_748 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 16, cps_748 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 17, cps_748 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 18, cps_748 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 19, cps_748 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 20, cps_748 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 21, cps_748 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 22, cps_748 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 23, cps_748 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 24, cps_748 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 25, cps_748 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 26, cps_748 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 27, cps_748 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 28, cps_748 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 29, cps_748 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 30, cps_748 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 31, cps_748 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 32, cps_748 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 33, cps_748 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 34, cps_748 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 35, cps_748 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 36, cps_748 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 37, cps_748 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 38, cps_748 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 39, cps_748 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 40, cps_748 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 41, cps_748 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 42, cps_748 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 43, cps_748 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 44, cps_748 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 45, cps_748 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 46, cps_748 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 47, cps_748 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 48, cps_748 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_748 + 49, cps_748 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_748);

uint32_t cps_749[] = {
0x1f824, 0x1f825, 0x1f826, 0x1f827, 0x1f828, 0x1f829, 0x1f82a, 0x1f82b, 0x1f82c, 0x1f82d, 0x1f82e, 0x1f82f, 0x1f830, 0x1f831, 0x1f832, 0x1f833, 0x1f834, 0x1f835, 0x1f836, 0x1f837, 0x1f838, 0x1f839, 0x1f83a, 0x1f83b, 0x1f83c, 0x1f83d, 0x1f83e, 0x1f83f, 0x1f840, 0x1f841, 0x1f842, 0x1f843, 0x1f844, 0x1f845, 0x1f846, 0x1f847, 0x1f850, 0x1f851, 0x1f852, 0x1f853, 0x1f854, 0x1f855, 0x1f856, 0x1f857, 0x1f858, 0x1f859, 0x1f860, 0x1f861, 0x1f862, 0x1f863
};

void BM_collation_element_lookup_749(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 0, cps_749 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 1, cps_749 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 2, cps_749 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 3, cps_749 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 4, cps_749 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 5, cps_749 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 6, cps_749 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 7, cps_749 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 8, cps_749 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 9, cps_749 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 10, cps_749 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 11, cps_749 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 12, cps_749 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 13, cps_749 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 14, cps_749 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 15, cps_749 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 16, cps_749 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 17, cps_749 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 18, cps_749 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 19, cps_749 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 20, cps_749 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 21, cps_749 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 22, cps_749 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 23, cps_749 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 24, cps_749 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 25, cps_749 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 26, cps_749 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 27, cps_749 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 28, cps_749 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 29, cps_749 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 30, cps_749 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 31, cps_749 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 32, cps_749 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 33, cps_749 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 34, cps_749 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 35, cps_749 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 36, cps_749 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 37, cps_749 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 38, cps_749 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 39, cps_749 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 40, cps_749 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 41, cps_749 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 42, cps_749 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 43, cps_749 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 44, cps_749 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 45, cps_749 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 46, cps_749 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 47, cps_749 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 48, cps_749 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_749 + 49, cps_749 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_749);

uint32_t cps_750[] = {
0x1f864, 0x1f865, 0x1f866, 0x1f867, 0x1f868, 0x1f869, 0x1f86a, 0x1f86b, 0x1f86c, 0x1f86d, 0x1f86e, 0x1f86f, 0x1f870, 0x1f871, 0x1f872, 0x1f873, 0x1f874, 0x1f875, 0x1f876, 0x1f877, 0x1f878, 0x1f879, 0x1f87a, 0x1f87b, 0x1f87c, 0x1f87d, 0x1f87e, 0x1f87f, 0x1f880, 0x1f881, 0x1f882, 0x1f883, 0x1f884, 0x1f885, 0x1f886, 0x1f887, 0x1f890, 0x1f891, 0x1f892, 0x1f893, 0x1f894, 0x1f895, 0x1f896, 0x1f897, 0x1f898, 0x1f899, 0x1f89a, 0x1f89b, 0x1f89c, 0x1f89d
};

void BM_collation_element_lookup_750(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 0, cps_750 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 1, cps_750 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 2, cps_750 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 3, cps_750 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 4, cps_750 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 5, cps_750 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 6, cps_750 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 7, cps_750 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 8, cps_750 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 9, cps_750 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 10, cps_750 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 11, cps_750 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 12, cps_750 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 13, cps_750 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 14, cps_750 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 15, cps_750 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 16, cps_750 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 17, cps_750 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 18, cps_750 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 19, cps_750 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 20, cps_750 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 21, cps_750 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 22, cps_750 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 23, cps_750 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 24, cps_750 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 25, cps_750 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 26, cps_750 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 27, cps_750 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 28, cps_750 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 29, cps_750 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 30, cps_750 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 31, cps_750 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 32, cps_750 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 33, cps_750 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 34, cps_750 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 35, cps_750 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 36, cps_750 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 37, cps_750 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 38, cps_750 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 39, cps_750 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 40, cps_750 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 41, cps_750 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 42, cps_750 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 43, cps_750 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 44, cps_750 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 45, cps_750 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 46, cps_750 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 47, cps_750 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 48, cps_750 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_750 + 49, cps_750 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_750);

uint32_t cps_751[] = {
0x1f89e, 0x1f89f, 0x1f8a0, 0x1f8a1, 0x1f8a2, 0x1f8a3, 0x1f8a4, 0x1f8a5, 0x1f8a6, 0x1f8a7, 0x1f8a8, 0x1f8a9, 0x1f8aa, 0x1f8ab, 0x1f8ac, 0x1f8ad, 0x1f900, 0x1f901, 0x1f902, 0x1f903, 0x1f904, 0x1f905, 0x1f906, 0x1f907, 0x1f908, 0x1f909, 0x1f90a, 0x1f90b, 0x1f910, 0x1f911, 0x1f912, 0x1f913, 0x1f914, 0x1f915, 0x1f916, 0x1f917, 0x1f918, 0x1f919, 0x1f91a, 0x1f91b, 0x1f91c, 0x1f91d, 0x1f91e, 0x1f91f, 0x1f920, 0x1f921, 0x1f922, 0x1f923, 0x1f924, 0x1f925
};

void BM_collation_element_lookup_751(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 0, cps_751 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 1, cps_751 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 2, cps_751 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 3, cps_751 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 4, cps_751 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 5, cps_751 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 6, cps_751 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 7, cps_751 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 8, cps_751 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 9, cps_751 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 10, cps_751 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 11, cps_751 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 12, cps_751 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 13, cps_751 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 14, cps_751 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 15, cps_751 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 16, cps_751 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 17, cps_751 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 18, cps_751 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 19, cps_751 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 20, cps_751 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 21, cps_751 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 22, cps_751 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 23, cps_751 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 24, cps_751 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 25, cps_751 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 26, cps_751 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 27, cps_751 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 28, cps_751 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 29, cps_751 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 30, cps_751 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 31, cps_751 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 32, cps_751 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 33, cps_751 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 34, cps_751 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 35, cps_751 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 36, cps_751 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 37, cps_751 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 38, cps_751 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 39, cps_751 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 40, cps_751 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 41, cps_751 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 42, cps_751 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 43, cps_751 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 44, cps_751 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 45, cps_751 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 46, cps_751 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 47, cps_751 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 48, cps_751 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_751 + 49, cps_751 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_751);

uint32_t cps_752[] = {
0x1f926, 0x1f927, 0x1f928, 0x1f929, 0x1f92a, 0x1f92b, 0x1f92c, 0x1f92d, 0x1f92e, 0x1f92f, 0x1f930, 0x1f931, 0x1f932, 0x1f933, 0x1f934, 0x1f935, 0x1f936, 0x1f937, 0x1f938, 0x1f939, 0x1f93a, 0x1f93b, 0x1f93c, 0x1f93d, 0x1f93e, 0x1f940, 0x1f941, 0x1f942, 0x1f943, 0x1f944, 0x1f945, 0x1f946, 0x1f947, 0x1f948, 0x1f949, 0x1f94a, 0x1f94b, 0x1f94c, 0x1f950, 0x1f951, 0x1f952, 0x1f953, 0x1f954, 0x1f955, 0x1f956, 0x1f957, 0x1f958, 0x1f959, 0x1f95a, 0x1f95b
};

void BM_collation_element_lookup_752(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 0, cps_752 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 1, cps_752 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 2, cps_752 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 3, cps_752 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 4, cps_752 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 5, cps_752 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 6, cps_752 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 7, cps_752 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 8, cps_752 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 9, cps_752 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 10, cps_752 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 11, cps_752 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 12, cps_752 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 13, cps_752 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 14, cps_752 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 15, cps_752 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 16, cps_752 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 17, cps_752 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 18, cps_752 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 19, cps_752 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 20, cps_752 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 21, cps_752 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 22, cps_752 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 23, cps_752 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 24, cps_752 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 25, cps_752 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 26, cps_752 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 27, cps_752 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 28, cps_752 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 29, cps_752 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 30, cps_752 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 31, cps_752 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 32, cps_752 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 33, cps_752 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 34, cps_752 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 35, cps_752 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 36, cps_752 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 37, cps_752 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 38, cps_752 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 39, cps_752 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 40, cps_752 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 41, cps_752 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 42, cps_752 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 43, cps_752 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 44, cps_752 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 45, cps_752 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 46, cps_752 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 47, cps_752 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 48, cps_752 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_752 + 49, cps_752 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_752);

uint32_t cps_753[] = {
0x1f95c, 0x1f95d, 0x1f95e, 0x1f95f, 0x1f960, 0x1f961, 0x1f962, 0x1f963, 0x1f964, 0x1f965, 0x1f966, 0x1f967, 0x1f968, 0x1f969, 0x1f96a, 0x1f96b, 0x1f980, 0x1f981, 0x1f982, 0x1f983, 0x1f984, 0x1f985, 0x1f986, 0x1f987, 0x1f988, 0x1f989, 0x1f98a, 0x1f98b, 0x1f98c, 0x1f98d, 0x1f98e, 0x1f98f, 0x1f990, 0x1f991, 0x1f992, 0x1f993, 0x1f994, 0x1f995, 0x1f996, 0x1f997, 0x1f9c0, 0x1f9d0, 0x1f9d1, 0x1f9d2, 0x1f9d3, 0x1f9d4, 0x1f9d5, 0x1f9d6, 0x1f9d7, 0x1f9d8
};

void BM_collation_element_lookup_753(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 0, cps_753 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 1, cps_753 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 2, cps_753 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 3, cps_753 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 4, cps_753 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 5, cps_753 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 6, cps_753 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 7, cps_753 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 8, cps_753 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 9, cps_753 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 10, cps_753 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 11, cps_753 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 12, cps_753 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 13, cps_753 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 14, cps_753 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 15, cps_753 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 16, cps_753 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 17, cps_753 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 18, cps_753 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 19, cps_753 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 20, cps_753 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 21, cps_753 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 22, cps_753 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 23, cps_753 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 24, cps_753 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 25, cps_753 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 26, cps_753 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 27, cps_753 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 28, cps_753 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 29, cps_753 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 30, cps_753 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 31, cps_753 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 32, cps_753 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 33, cps_753 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 34, cps_753 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 35, cps_753 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 36, cps_753 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 37, cps_753 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 38, cps_753 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 39, cps_753 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 40, cps_753 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 41, cps_753 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 42, cps_753 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 43, cps_753 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 44, cps_753 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 45, cps_753 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 46, cps_753 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 47, cps_753 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 48, cps_753 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_753 + 49, cps_753 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_753);

uint32_t cps_754[] = {
0x1f9d9, 0x1f9da, 0x1f9db, 0x1f9dc, 0x1f9dd, 0x1f9de, 0x1f9df, 0x1f9e0, 0x1f9e1, 0x1f9e2, 0x1f9e3, 0x1f9e4, 0x1f9e5, 0x1f9e6, 0x2f800, 0x2f801, 0x2f802, 0x2f803, 0x2f804, 0x2f805, 0x2f806, 0x2f807, 0x2f808, 0x2f809, 0x2f80a, 0x2f80b, 0x2f80c, 0x2f80d, 0x2f80e, 0x2f80f, 0x2f810, 0x2f811, 0x2f812, 0x2f813, 0x2f814, 0x2f815, 0x2f816, 0x2f817, 0x2f818, 0x2f819, 0x2f81a, 0x2f81b, 0x2f81c, 0x2f81d, 0x2f81e, 0x2f81f, 0x2f820, 0x2f821, 0x2f822, 0x2f823
};

void BM_collation_element_lookup_754(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 0, cps_754 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 1, cps_754 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 2, cps_754 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 3, cps_754 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 4, cps_754 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 5, cps_754 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 6, cps_754 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 7, cps_754 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 8, cps_754 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 9, cps_754 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 10, cps_754 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 11, cps_754 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 12, cps_754 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 13, cps_754 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 14, cps_754 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 15, cps_754 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 16, cps_754 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 17, cps_754 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 18, cps_754 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 19, cps_754 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 20, cps_754 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 21, cps_754 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 22, cps_754 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 23, cps_754 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 24, cps_754 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 25, cps_754 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 26, cps_754 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 27, cps_754 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 28, cps_754 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 29, cps_754 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 30, cps_754 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 31, cps_754 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 32, cps_754 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 33, cps_754 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 34, cps_754 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 35, cps_754 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 36, cps_754 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 37, cps_754 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 38, cps_754 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 39, cps_754 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 40, cps_754 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 41, cps_754 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 42, cps_754 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 43, cps_754 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 44, cps_754 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 45, cps_754 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 46, cps_754 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 47, cps_754 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 48, cps_754 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_754 + 49, cps_754 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_754);

uint32_t cps_755[] = {
0x2f824, 0x2f825, 0x2f826, 0x2f827, 0x2f828, 0x2f829, 0x2f82a, 0x2f82b, 0x2f82c, 0x2f82d, 0x2f82e, 0x2f82f, 0x2f830, 0x2f831, 0x2f832, 0x2f833, 0x2f834, 0x2f835, 0x2f836, 0x2f837, 0x2f838, 0x2f839, 0x2f83a, 0x2f83b, 0x2f83c, 0x2f83d, 0x2f83e, 0x2f83f, 0x2f840, 0x2f841, 0x2f842, 0x2f843, 0x2f844, 0x2f845, 0x2f846, 0x2f847, 0x2f848, 0x2f849, 0x2f84a, 0x2f84b, 0x2f84c, 0x2f84d, 0x2f84e, 0x2f84f, 0x2f850, 0x2f851, 0x2f852, 0x2f853, 0x2f854, 0x2f855
};

void BM_collation_element_lookup_755(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 0, cps_755 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 1, cps_755 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 2, cps_755 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 3, cps_755 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 4, cps_755 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 5, cps_755 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 6, cps_755 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 7, cps_755 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 8, cps_755 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 9, cps_755 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 10, cps_755 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 11, cps_755 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 12, cps_755 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 13, cps_755 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 14, cps_755 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 15, cps_755 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 16, cps_755 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 17, cps_755 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 18, cps_755 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 19, cps_755 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 20, cps_755 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 21, cps_755 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 22, cps_755 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 23, cps_755 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 24, cps_755 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 25, cps_755 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 26, cps_755 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 27, cps_755 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 28, cps_755 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 29, cps_755 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 30, cps_755 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 31, cps_755 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 32, cps_755 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 33, cps_755 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 34, cps_755 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 35, cps_755 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 36, cps_755 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 37, cps_755 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 38, cps_755 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 39, cps_755 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 40, cps_755 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 41, cps_755 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 42, cps_755 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 43, cps_755 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 44, cps_755 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 45, cps_755 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 46, cps_755 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 47, cps_755 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 48, cps_755 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_755 + 49, cps_755 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_755);

uint32_t cps_756[] = {
0x2f856, 0x2f857, 0x2f858, 0x2f859, 0x2f85a, 0x2f85b, 0x2f85c, 0x2f85d, 0x2f85e, 0x2f85f, 0x2f860, 0x2f861, 0x2f862, 0x2f863, 0x2f864, 0x2f865, 0x2f866, 0x2f867, 0x2f868, 0x2f869, 0x2f86a, 0x2f86b, 0x2f86c, 0x2f86d, 0x2f86e, 0x2f86f, 0x2f870, 0x2f871, 0x2f872, 0x2f873, 0x2f874, 0x2f875, 0x2f876, 0x2f877, 0x2f878, 0x2f879, 0x2f87a, 0x2f87b, 0x2f87c, 0x2f87d, 0x2f87e, 0x2f87f, 0x2f880, 0x2f881, 0x2f882, 0x2f883, 0x2f884, 0x2f885, 0x2f886, 0x2f887
};

void BM_collation_element_lookup_756(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 0, cps_756 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 1, cps_756 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 2, cps_756 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 3, cps_756 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 4, cps_756 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 5, cps_756 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 6, cps_756 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 7, cps_756 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 8, cps_756 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 9, cps_756 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 10, cps_756 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 11, cps_756 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 12, cps_756 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 13, cps_756 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 14, cps_756 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 15, cps_756 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 16, cps_756 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 17, cps_756 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 18, cps_756 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 19, cps_756 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 20, cps_756 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 21, cps_756 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 22, cps_756 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 23, cps_756 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 24, cps_756 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 25, cps_756 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 26, cps_756 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 27, cps_756 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 28, cps_756 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 29, cps_756 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 30, cps_756 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 31, cps_756 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 32, cps_756 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 33, cps_756 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 34, cps_756 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 35, cps_756 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 36, cps_756 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 37, cps_756 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 38, cps_756 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 39, cps_756 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 40, cps_756 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 41, cps_756 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 42, cps_756 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 43, cps_756 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 44, cps_756 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 45, cps_756 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 46, cps_756 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 47, cps_756 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 48, cps_756 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_756 + 49, cps_756 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_756);

uint32_t cps_757[] = {
0x2f888, 0x2f889, 0x2f88a, 0x2f88b, 0x2f88c, 0x2f88d, 0x2f88e, 0x2f88f, 0x2f890, 0x2f891, 0x2f892, 0x2f893, 0x2f894, 0x2f895, 0x2f896, 0x2f897, 0x2f898, 0x2f899, 0x2f89a, 0x2f89b, 0x2f89c, 0x2f89d, 0x2f89e, 0x2f89f, 0x2f8a0, 0x2f8a1, 0x2f8a2, 0x2f8a3, 0x2f8a4, 0x2f8a5, 0x2f8a6, 0x2f8a7, 0x2f8a8, 0x2f8a9, 0x2f8aa, 0x2f8ab, 0x2f8ac, 0x2f8ad, 0x2f8ae, 0x2f8af, 0x2f8b0, 0x2f8b1, 0x2f8b2, 0x2f8b3, 0x2f8b4, 0x2f8b5, 0x2f8b6, 0x2f8b7, 0x2f8b8, 0x2f8b9
};

void BM_collation_element_lookup_757(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 0, cps_757 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 1, cps_757 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 2, cps_757 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 3, cps_757 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 4, cps_757 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 5, cps_757 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 6, cps_757 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 7, cps_757 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 8, cps_757 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 9, cps_757 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 10, cps_757 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 11, cps_757 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 12, cps_757 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 13, cps_757 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 14, cps_757 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 15, cps_757 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 16, cps_757 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 17, cps_757 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 18, cps_757 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 19, cps_757 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 20, cps_757 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 21, cps_757 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 22, cps_757 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 23, cps_757 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 24, cps_757 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 25, cps_757 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 26, cps_757 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 27, cps_757 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 28, cps_757 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 29, cps_757 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 30, cps_757 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 31, cps_757 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 32, cps_757 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 33, cps_757 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 34, cps_757 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 35, cps_757 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 36, cps_757 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 37, cps_757 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 38, cps_757 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 39, cps_757 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 40, cps_757 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 41, cps_757 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 42, cps_757 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 43, cps_757 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 44, cps_757 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 45, cps_757 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 46, cps_757 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 47, cps_757 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 48, cps_757 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_757 + 49, cps_757 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_757);

uint32_t cps_758[] = {
0x2f8ba, 0x2f8bb, 0x2f8bc, 0x2f8bd, 0x2f8be, 0x2f8bf, 0x2f8c0, 0x2f8c1, 0x2f8c2, 0x2f8c3, 0x2f8c4, 0x2f8c5, 0x2f8c6, 0x2f8c7, 0x2f8c8, 0x2f8c9, 0x2f8ca, 0x2f8cb, 0x2f8cc, 0x2f8cd, 0x2f8ce, 0x2f8cf, 0x2f8d0, 0x2f8d1, 0x2f8d2, 0x2f8d3, 0x2f8d4, 0x2f8d5, 0x2f8d6, 0x2f8d7, 0x2f8d8, 0x2f8d9, 0x2f8da, 0x2f8db, 0x2f8dc, 0x2f8dd, 0x2f8de, 0x2f8df, 0x2f8e0, 0x2f8e1, 0x2f8e2, 0x2f8e3, 0x2f8e4, 0x2f8e5, 0x2f8e6, 0x2f8e7, 0x2f8e8, 0x2f8e9, 0x2f8ea, 0x2f8eb
};

void BM_collation_element_lookup_758(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 0, cps_758 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 1, cps_758 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 2, cps_758 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 3, cps_758 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 4, cps_758 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 5, cps_758 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 6, cps_758 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 7, cps_758 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 8, cps_758 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 9, cps_758 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 10, cps_758 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 11, cps_758 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 12, cps_758 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 13, cps_758 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 14, cps_758 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 15, cps_758 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 16, cps_758 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 17, cps_758 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 18, cps_758 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 19, cps_758 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 20, cps_758 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 21, cps_758 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 22, cps_758 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 23, cps_758 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 24, cps_758 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 25, cps_758 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 26, cps_758 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 27, cps_758 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 28, cps_758 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 29, cps_758 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 30, cps_758 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 31, cps_758 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 32, cps_758 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 33, cps_758 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 34, cps_758 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 35, cps_758 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 36, cps_758 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 37, cps_758 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 38, cps_758 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 39, cps_758 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 40, cps_758 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 41, cps_758 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 42, cps_758 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 43, cps_758 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 44, cps_758 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 45, cps_758 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 46, cps_758 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 47, cps_758 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 48, cps_758 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_758 + 49, cps_758 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_758);

uint32_t cps_759[] = {
0x2f8ec, 0x2f8ed, 0x2f8ee, 0x2f8ef, 0x2f8f0, 0x2f8f1, 0x2f8f2, 0x2f8f3, 0x2f8f4, 0x2f8f5, 0x2f8f6, 0x2f8f7, 0x2f8f8, 0x2f8f9, 0x2f8fa, 0x2f8fb, 0x2f8fc, 0x2f8fd, 0x2f8fe, 0x2f8ff, 0x2f900, 0x2f901, 0x2f902, 0x2f903, 0x2f904, 0x2f905, 0x2f906, 0x2f907, 0x2f908, 0x2f909, 0x2f90a, 0x2f90b, 0x2f90c, 0x2f90d, 0x2f90e, 0x2f90f, 0x2f910, 0x2f911, 0x2f912, 0x2f913, 0x2f914, 0x2f915, 0x2f916, 0x2f917, 0x2f918, 0x2f919, 0x2f91a, 0x2f91b, 0x2f91c, 0x2f91d
};

void BM_collation_element_lookup_759(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 0, cps_759 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 1, cps_759 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 2, cps_759 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 3, cps_759 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 4, cps_759 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 5, cps_759 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 6, cps_759 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 7, cps_759 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 8, cps_759 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 9, cps_759 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 10, cps_759 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 11, cps_759 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 12, cps_759 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 13, cps_759 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 14, cps_759 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 15, cps_759 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 16, cps_759 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 17, cps_759 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 18, cps_759 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 19, cps_759 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 20, cps_759 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 21, cps_759 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 22, cps_759 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 23, cps_759 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 24, cps_759 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 25, cps_759 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 26, cps_759 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 27, cps_759 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 28, cps_759 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 29, cps_759 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 30, cps_759 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 31, cps_759 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 32, cps_759 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 33, cps_759 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 34, cps_759 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 35, cps_759 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 36, cps_759 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 37, cps_759 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 38, cps_759 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 39, cps_759 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 40, cps_759 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 41, cps_759 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 42, cps_759 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 43, cps_759 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 44, cps_759 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 45, cps_759 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 46, cps_759 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 47, cps_759 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 48, cps_759 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_759 + 49, cps_759 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_759);

uint32_t cps_760[] = {
0x2f91e, 0x2f91f, 0x2f920, 0x2f921, 0x2f922, 0x2f923, 0x2f924, 0x2f925, 0x2f926, 0x2f927, 0x2f928, 0x2f929, 0x2f92a, 0x2f92b, 0x2f92c, 0x2f92d, 0x2f92e, 0x2f92f, 0x2f930, 0x2f931, 0x2f932, 0x2f933, 0x2f934, 0x2f935, 0x2f936, 0x2f937, 0x2f938, 0x2f939, 0x2f93a, 0x2f93b, 0x2f93c, 0x2f93d, 0x2f93e, 0x2f93f, 0x2f940, 0x2f941, 0x2f942, 0x2f943, 0x2f944, 0x2f945, 0x2f946, 0x2f947, 0x2f948, 0x2f949, 0x2f94a, 0x2f94b, 0x2f94c, 0x2f94d, 0x2f94e, 0x2f94f
};

void BM_collation_element_lookup_760(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 0, cps_760 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 1, cps_760 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 2, cps_760 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 3, cps_760 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 4, cps_760 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 5, cps_760 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 6, cps_760 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 7, cps_760 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 8, cps_760 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 9, cps_760 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 10, cps_760 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 11, cps_760 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 12, cps_760 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 13, cps_760 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 14, cps_760 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 15, cps_760 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 16, cps_760 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 17, cps_760 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 18, cps_760 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 19, cps_760 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 20, cps_760 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 21, cps_760 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 22, cps_760 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 23, cps_760 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 24, cps_760 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 25, cps_760 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 26, cps_760 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 27, cps_760 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 28, cps_760 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 29, cps_760 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 30, cps_760 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 31, cps_760 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 32, cps_760 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 33, cps_760 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 34, cps_760 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 35, cps_760 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 36, cps_760 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 37, cps_760 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 38, cps_760 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 39, cps_760 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 40, cps_760 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 41, cps_760 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 42, cps_760 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 43, cps_760 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 44, cps_760 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 45, cps_760 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 46, cps_760 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 47, cps_760 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 48, cps_760 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_760 + 49, cps_760 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_760);

uint32_t cps_761[] = {
0x2f950, 0x2f951, 0x2f952, 0x2f953, 0x2f954, 0x2f955, 0x2f956, 0x2f957, 0x2f958, 0x2f959, 0x2f95a, 0x2f95b, 0x2f95c, 0x2f95d, 0x2f95e, 0x2f95f, 0x2f960, 0x2f961, 0x2f962, 0x2f963, 0x2f964, 0x2f965, 0x2f966, 0x2f967, 0x2f968, 0x2f969, 0x2f96a, 0x2f96b, 0x2f96c, 0x2f96d, 0x2f96e, 0x2f96f, 0x2f970, 0x2f971, 0x2f972, 0x2f973, 0x2f974, 0x2f975, 0x2f976, 0x2f977, 0x2f978, 0x2f979, 0x2f97a, 0x2f97b, 0x2f97c, 0x2f97d, 0x2f97e, 0x2f97f, 0x2f980, 0x2f981
};

void BM_collation_element_lookup_761(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 0, cps_761 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 1, cps_761 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 2, cps_761 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 3, cps_761 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 4, cps_761 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 5, cps_761 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 6, cps_761 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 7, cps_761 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 8, cps_761 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 9, cps_761 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 10, cps_761 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 11, cps_761 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 12, cps_761 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 13, cps_761 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 14, cps_761 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 15, cps_761 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 16, cps_761 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 17, cps_761 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 18, cps_761 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 19, cps_761 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 20, cps_761 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 21, cps_761 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 22, cps_761 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 23, cps_761 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 24, cps_761 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 25, cps_761 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 26, cps_761 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 27, cps_761 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 28, cps_761 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 29, cps_761 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 30, cps_761 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 31, cps_761 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 32, cps_761 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 33, cps_761 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 34, cps_761 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 35, cps_761 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 36, cps_761 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 37, cps_761 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 38, cps_761 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 39, cps_761 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 40, cps_761 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 41, cps_761 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 42, cps_761 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 43, cps_761 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 44, cps_761 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 45, cps_761 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 46, cps_761 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 47, cps_761 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 48, cps_761 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_761 + 49, cps_761 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_761);

uint32_t cps_762[] = {
0x2f982, 0x2f983, 0x2f984, 0x2f985, 0x2f986, 0x2f987, 0x2f988, 0x2f989, 0x2f98a, 0x2f98b, 0x2f98c, 0x2f98d, 0x2f98e, 0x2f98f, 0x2f990, 0x2f991, 0x2f992, 0x2f993, 0x2f994, 0x2f995, 0x2f996, 0x2f997, 0x2f998, 0x2f999, 0x2f99a, 0x2f99b, 0x2f99c, 0x2f99d, 0x2f99e, 0x2f99f, 0x2f9a0, 0x2f9a1, 0x2f9a2, 0x2f9a3, 0x2f9a4, 0x2f9a5, 0x2f9a6, 0x2f9a7, 0x2f9a8, 0x2f9a9, 0x2f9aa, 0x2f9ab, 0x2f9ac, 0x2f9ad, 0x2f9ae, 0x2f9af, 0x2f9b0, 0x2f9b1, 0x2f9b2, 0x2f9b3
};

void BM_collation_element_lookup_762(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 0, cps_762 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 1, cps_762 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 2, cps_762 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 3, cps_762 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 4, cps_762 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 5, cps_762 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 6, cps_762 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 7, cps_762 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 8, cps_762 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 9, cps_762 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 10, cps_762 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 11, cps_762 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 12, cps_762 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 13, cps_762 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 14, cps_762 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 15, cps_762 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 16, cps_762 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 17, cps_762 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 18, cps_762 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 19, cps_762 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 20, cps_762 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 21, cps_762 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 22, cps_762 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 23, cps_762 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 24, cps_762 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 25, cps_762 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 26, cps_762 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 27, cps_762 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 28, cps_762 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 29, cps_762 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 30, cps_762 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 31, cps_762 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 32, cps_762 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 33, cps_762 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 34, cps_762 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 35, cps_762 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 36, cps_762 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 37, cps_762 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 38, cps_762 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 39, cps_762 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 40, cps_762 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 41, cps_762 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 42, cps_762 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 43, cps_762 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 44, cps_762 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 45, cps_762 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 46, cps_762 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 47, cps_762 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 48, cps_762 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_762 + 49, cps_762 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_762);

uint32_t cps_763[] = {
0x2f9b4, 0x2f9b5, 0x2f9b6, 0x2f9b7, 0x2f9b8, 0x2f9b9, 0x2f9ba, 0x2f9bb, 0x2f9bc, 0x2f9bd, 0x2f9be, 0x2f9bf, 0x2f9c0, 0x2f9c1, 0x2f9c2, 0x2f9c3, 0x2f9c4, 0x2f9c5, 0x2f9c6, 0x2f9c7, 0x2f9c8, 0x2f9c9, 0x2f9ca, 0x2f9cb, 0x2f9cc, 0x2f9cd, 0x2f9ce, 0x2f9cf, 0x2f9d0, 0x2f9d1, 0x2f9d2, 0x2f9d3, 0x2f9d4, 0x2f9d5, 0x2f9d6, 0x2f9d7, 0x2f9d8, 0x2f9d9, 0x2f9da, 0x2f9db, 0x2f9dc, 0x2f9dd, 0x2f9de, 0x2f9df, 0x2f9e0, 0x2f9e1, 0x2f9e2, 0x2f9e3, 0x2f9e4, 0x2f9e5
};

void BM_collation_element_lookup_763(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 0, cps_763 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 1, cps_763 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 2, cps_763 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 3, cps_763 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 4, cps_763 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 5, cps_763 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 6, cps_763 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 7, cps_763 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 8, cps_763 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 9, cps_763 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 10, cps_763 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 11, cps_763 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 12, cps_763 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 13, cps_763 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 14, cps_763 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 15, cps_763 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 16, cps_763 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 17, cps_763 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 18, cps_763 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 19, cps_763 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 20, cps_763 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 21, cps_763 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 22, cps_763 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 23, cps_763 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 24, cps_763 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 25, cps_763 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 26, cps_763 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 27, cps_763 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 28, cps_763 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 29, cps_763 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 30, cps_763 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 31, cps_763 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 32, cps_763 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 33, cps_763 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 34, cps_763 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 35, cps_763 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 36, cps_763 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 37, cps_763 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 38, cps_763 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 39, cps_763 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 40, cps_763 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 41, cps_763 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 42, cps_763 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 43, cps_763 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 44, cps_763 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 45, cps_763 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 46, cps_763 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 47, cps_763 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 48, cps_763 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_763 + 49, cps_763 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_763);

uint32_t cps_764[] = {
0x2f9e6, 0x2f9e7, 0x2f9e8, 0x2f9e9, 0x2f9ea, 0x2f9eb, 0x2f9ec, 0x2f9ed, 0x2f9ee, 0x2f9ef, 0x2f9f0, 0x2f9f1, 0x2f9f2, 0x2f9f3, 0x2f9f4, 0x2f9f5, 0x2f9f6, 0x2f9f7, 0x2f9f8, 0x2f9f9, 0x2f9fa, 0x2f9fb, 0x2f9fc, 0x2f9fd, 0x2f9fe, 0x2f9ff, 0x2fa00, 0x2fa01, 0x2fa02, 0x2fa03, 0x2fa04, 0x2fa05, 0x2fa06, 0x2fa07, 0x2fa08, 0x2fa09, 0x2fa0a, 0x2fa0b, 0x2fa0c, 0x2fa0d, 0x2fa0e, 0x2fa0f, 0x2fa10, 0x2fa11, 0x2fa12, 0x2fa13, 0x2fa14, 0x2fa15, 0x2fa16, 0x2fa17
};

void BM_collation_element_lookup_764(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 0, cps_764 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 1, cps_764 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 2, cps_764 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 3, cps_764 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 4, cps_764 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 5, cps_764 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 6, cps_764 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 7, cps_764 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 8, cps_764 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 9, cps_764 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 10, cps_764 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 11, cps_764 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 12, cps_764 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 13, cps_764 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 14, cps_764 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 15, cps_764 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 16, cps_764 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 17, cps_764 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 18, cps_764 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 19, cps_764 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 20, cps_764 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 21, cps_764 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 22, cps_764 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 23, cps_764 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 24, cps_764 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 25, cps_764 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 26, cps_764 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 27, cps_764 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 28, cps_764 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 29, cps_764 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 30, cps_764 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 31, cps_764 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 32, cps_764 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 33, cps_764 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 34, cps_764 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 35, cps_764 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 36, cps_764 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 37, cps_764 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 38, cps_764 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 39, cps_764 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 40, cps_764 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 41, cps_764 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 42, cps_764 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 43, cps_764 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 44, cps_764 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 45, cps_764 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 46, cps_764 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 47, cps_764 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 48, cps_764 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_764 + 49, cps_764 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_764);

uint32_t cps_765[] = {
0x2fa18, 0x2fa19, 0x2fa1a, 0x2fa1b, 0x2fa1c, 0x2fa1d, 0xe0001, 0xe0020, 0xe0021, 0xe0022, 0xe0023, 0xe0024, 0xe0025, 0xe0026, 0xe0027, 0xe0028, 0xe0029, 0xe002a, 0xe002b, 0xe002c, 0xe002d, 0xe002e, 0xe002f, 0xe0030, 0xe0031, 0xe0032, 0xe0033, 0xe0034, 0xe0035, 0xe0036, 0xe0037, 0xe0038, 0xe0039, 0xe003a, 0xe003b, 0xe003c, 0xe003d, 0xe003e, 0xe003f, 0xe0040, 0xe0041, 0xe0042, 0xe0043, 0xe0044, 0xe0045, 0xe0046, 0xe0047, 0xe0048, 0xe0049, 0xe004a
};

void BM_collation_element_lookup_765(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 0, cps_765 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 1, cps_765 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 2, cps_765 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 3, cps_765 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 4, cps_765 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 5, cps_765 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 6, cps_765 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 7, cps_765 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 8, cps_765 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 9, cps_765 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 10, cps_765 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 11, cps_765 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 12, cps_765 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 13, cps_765 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 14, cps_765 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 15, cps_765 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 16, cps_765 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 17, cps_765 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 18, cps_765 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 19, cps_765 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 20, cps_765 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 21, cps_765 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 22, cps_765 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 23, cps_765 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 24, cps_765 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 25, cps_765 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 26, cps_765 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 27, cps_765 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 28, cps_765 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 29, cps_765 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 30, cps_765 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 31, cps_765 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 32, cps_765 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 33, cps_765 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 34, cps_765 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 35, cps_765 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 36, cps_765 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 37, cps_765 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 38, cps_765 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 39, cps_765 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 40, cps_765 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 41, cps_765 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 42, cps_765 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 43, cps_765 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 44, cps_765 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 45, cps_765 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 46, cps_765 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 47, cps_765 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 48, cps_765 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_765 + 49, cps_765 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_765);

uint32_t cps_766[] = {
0xe004b, 0xe004c, 0xe004d, 0xe004e, 0xe004f, 0xe0050, 0xe0051, 0xe0052, 0xe0053, 0xe0054, 0xe0055, 0xe0056, 0xe0057, 0xe0058, 0xe0059, 0xe005a, 0xe005b, 0xe005c, 0xe005d, 0xe005e, 0xe005f, 0xe0060, 0xe0061, 0xe0062, 0xe0063, 0xe0064, 0xe0065, 0xe0066, 0xe0067, 0xe0068, 0xe0069, 0xe006a, 0xe006b, 0xe006c, 0xe006d, 0xe006e, 0xe006f, 0xe0070, 0xe0071, 0xe0072, 0xe0073, 0xe0074, 0xe0075, 0xe0076, 0xe0077, 0xe0078, 0xe0079, 0xe007a, 0xe007b, 0xe007c
};

void BM_collation_element_lookup_766(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 0, cps_766 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 1, cps_766 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 2, cps_766 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 3, cps_766 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 4, cps_766 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 5, cps_766 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 6, cps_766 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 7, cps_766 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 8, cps_766 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 9, cps_766 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 10, cps_766 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 11, cps_766 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 12, cps_766 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 13, cps_766 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 14, cps_766 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 15, cps_766 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 16, cps_766 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 17, cps_766 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 18, cps_766 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 19, cps_766 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 20, cps_766 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 21, cps_766 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 22, cps_766 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 23, cps_766 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 24, cps_766 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 25, cps_766 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 26, cps_766 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 27, cps_766 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 28, cps_766 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 29, cps_766 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 30, cps_766 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 31, cps_766 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 32, cps_766 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 33, cps_766 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 34, cps_766 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 35, cps_766 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 36, cps_766 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 37, cps_766 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 38, cps_766 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 39, cps_766 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 40, cps_766 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 41, cps_766 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 42, cps_766 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 43, cps_766 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 44, cps_766 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 45, cps_766 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 46, cps_766 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 47, cps_766 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 48, cps_766 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_766 + 49, cps_766 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_766);

uint32_t cps_767[] = {
0xe007d, 0xe007e, 0xe007f, 0xe0100, 0xe0101, 0xe0102, 0xe0103, 0xe0104, 0xe0105, 0xe0106, 0xe0107, 0xe0108, 0xe0109, 0xe010a, 0xe010b, 0xe010c, 0xe010d, 0xe010e, 0xe010f, 0xe0110, 0xe0111, 0xe0112, 0xe0113, 0xe0114, 0xe0115, 0xe0116, 0xe0117, 0xe0118, 0xe0119, 0xe011a, 0xe011b, 0xe011c, 0xe011d, 0xe011e, 0xe011f, 0xe0120, 0xe0121, 0xe0122, 0xe0123, 0xe0124, 0xe0125, 0xe0126, 0xe0127, 0xe0128, 0xe0129, 0xe012a, 0xe012b, 0xe012c, 0xe012d, 0xe012e
};

void BM_collation_element_lookup_767(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 0, cps_767 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 1, cps_767 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 2, cps_767 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 3, cps_767 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 4, cps_767 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 5, cps_767 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 6, cps_767 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 7, cps_767 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 8, cps_767 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 9, cps_767 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 10, cps_767 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 11, cps_767 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 12, cps_767 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 13, cps_767 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 14, cps_767 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 15, cps_767 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 16, cps_767 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 17, cps_767 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 18, cps_767 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 19, cps_767 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 20, cps_767 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 21, cps_767 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 22, cps_767 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 23, cps_767 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 24, cps_767 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 25, cps_767 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 26, cps_767 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 27, cps_767 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 28, cps_767 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 29, cps_767 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 30, cps_767 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 31, cps_767 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 32, cps_767 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 33, cps_767 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 34, cps_767 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 35, cps_767 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 36, cps_767 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 37, cps_767 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 38, cps_767 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 39, cps_767 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 40, cps_767 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 41, cps_767 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 42, cps_767 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 43, cps_767 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 44, cps_767 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 45, cps_767 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 46, cps_767 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 47, cps_767 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 48, cps_767 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_767 + 49, cps_767 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_767);

uint32_t cps_768[] = {
0xe012f, 0xe0130, 0xe0131, 0xe0132, 0xe0133, 0xe0134, 0xe0135, 0xe0136, 0xe0137, 0xe0138, 0xe0139, 0xe013a, 0xe013b, 0xe013c, 0xe013d, 0xe013e, 0xe013f, 0xe0140, 0xe0141, 0xe0142, 0xe0143, 0xe0144, 0xe0145, 0xe0146, 0xe0147, 0xe0148, 0xe0149, 0xe014a, 0xe014b, 0xe014c, 0xe014d, 0xe014e, 0xe014f, 0xe0150, 0xe0151, 0xe0152, 0xe0153, 0xe0154, 0xe0155, 0xe0156, 0xe0157, 0xe0158, 0xe0159, 0xe015a, 0xe015b, 0xe015c, 0xe015d, 0xe015e, 0xe015f, 0xe0160
};

void BM_collation_element_lookup_768(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 0, cps_768 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 1, cps_768 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 2, cps_768 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 3, cps_768 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 4, cps_768 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 5, cps_768 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 6, cps_768 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 7, cps_768 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 8, cps_768 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 9, cps_768 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 10, cps_768 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 11, cps_768 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 12, cps_768 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 13, cps_768 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 14, cps_768 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 15, cps_768 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 16, cps_768 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 17, cps_768 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 18, cps_768 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 19, cps_768 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 20, cps_768 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 21, cps_768 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 22, cps_768 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 23, cps_768 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 24, cps_768 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 25, cps_768 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 26, cps_768 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 27, cps_768 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 28, cps_768 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 29, cps_768 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 30, cps_768 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 31, cps_768 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 32, cps_768 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 33, cps_768 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 34, cps_768 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 35, cps_768 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 36, cps_768 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 37, cps_768 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 38, cps_768 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 39, cps_768 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 40, cps_768 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 41, cps_768 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 42, cps_768 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 43, cps_768 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 44, cps_768 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 45, cps_768 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 46, cps_768 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 47, cps_768 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 48, cps_768 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_768 + 49, cps_768 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_768);

uint32_t cps_769[] = {
0xe0161, 0xe0162, 0xe0163, 0xe0164, 0xe0165, 0xe0166, 0xe0167, 0xe0168, 0xe0169, 0xe016a, 0xe016b, 0xe016c, 0xe016d, 0xe016e, 0xe016f, 0xe0170, 0xe0171, 0xe0172, 0xe0173, 0xe0174, 0xe0175, 0xe0176, 0xe0177, 0xe0178, 0xe0179, 0xe017a, 0xe017b, 0xe017c, 0xe017d, 0xe017e, 0xe017f, 0xe0180, 0xe0181, 0xe0182, 0xe0183, 0xe0184, 0xe0185, 0xe0186, 0xe0187, 0xe0188, 0xe0189, 0xe018a, 0xe018b, 0xe018c, 0xe018d, 0xe018e, 0xe018f, 0xe0190, 0xe0191, 0xe0192
};

void BM_collation_element_lookup_769(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 0, cps_769 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 1, cps_769 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 2, cps_769 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 3, cps_769 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 4, cps_769 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 5, cps_769 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 6, cps_769 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 7, cps_769 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 8, cps_769 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 9, cps_769 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 10, cps_769 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 11, cps_769 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 12, cps_769 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 13, cps_769 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 14, cps_769 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 15, cps_769 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 16, cps_769 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 17, cps_769 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 18, cps_769 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 19, cps_769 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 20, cps_769 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 21, cps_769 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 22, cps_769 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 23, cps_769 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 24, cps_769 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 25, cps_769 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 26, cps_769 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 27, cps_769 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 28, cps_769 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 29, cps_769 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 30, cps_769 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 31, cps_769 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 32, cps_769 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 33, cps_769 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 34, cps_769 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 35, cps_769 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 36, cps_769 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 37, cps_769 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 38, cps_769 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 39, cps_769 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 40, cps_769 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 41, cps_769 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 42, cps_769 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 43, cps_769 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 44, cps_769 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 45, cps_769 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 46, cps_769 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 47, cps_769 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 48, cps_769 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_769 + 49, cps_769 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_769);

uint32_t cps_770[] = {
0xe0193, 0xe0194, 0xe0195, 0xe0196, 0xe0197, 0xe0198, 0xe0199, 0xe019a, 0xe019b, 0xe019c, 0xe019d, 0xe019e, 0xe019f, 0xe01a0, 0xe01a1, 0xe01a2, 0xe01a3, 0xe01a4, 0xe01a5, 0xe01a6, 0xe01a7, 0xe01a8, 0xe01a9, 0xe01aa, 0xe01ab, 0xe01ac, 0xe01ad, 0xe01ae, 0xe01af, 0xe01b0, 0xe01b1, 0xe01b2, 0xe01b3, 0xe01b4, 0xe01b5, 0xe01b6, 0xe01b7, 0xe01b8, 0xe01b9, 0xe01ba, 0xe01bb, 0xe01bc, 0xe01bd, 0xe01be, 0xe01bf, 0xe01c0, 0xe01c1, 0xe01c2, 0xe01c3, 0xe01c4
};

void BM_collation_element_lookup_770(benchmark::State & state)
{
    while (state.KeepRunning()) {
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 0, cps_770 + 1));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 1, cps_770 + 2));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 2, cps_770 + 3));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 3, cps_770 + 4));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 4, cps_770 + 5));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 5, cps_770 + 6));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 6, cps_770 + 7));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 7, cps_770 + 8));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 8, cps_770 + 9));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 9, cps_770 + 10));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 10, cps_770 + 11));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 11, cps_770 + 12));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 12, cps_770 + 13));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 13, cps_770 + 14));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 14, cps_770 + 15));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 15, cps_770 + 16));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 16, cps_770 + 17));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 17, cps_770 + 18));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 18, cps_770 + 19));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 19, cps_770 + 20));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 20, cps_770 + 21));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 21, cps_770 + 22));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 22, cps_770 + 23));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 23, cps_770 + 24));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 24, cps_770 + 25));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 25, cps_770 + 26));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 26, cps_770 + 27));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 27, cps_770 + 28));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 28, cps_770 + 29));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 29, cps_770 + 30));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 30, cps_770 + 31));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 31, cps_770 + 32));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 32, cps_770 + 33));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 33, cps_770 + 34));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 34, cps_770 + 35));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 35, cps_770 + 36));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 36, cps_770 + 37));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 37, cps_770 + 38));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 38, cps_770 + 39));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 39, cps_770 + 40));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 40, cps_770 + 41));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 41, cps_770 + 42));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 42, cps_770 + 43));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 43, cps_770 + 44));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 44, cps_770 + 45));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 45, cps_770 + 46));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 46, cps_770 + 47));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 47, cps_770 + 48));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 48, cps_770 + 49));
            benchmark::DoNotOptimize(trie().longest_match(cps_770 + 49, cps_770 + 50));
    }
}
BENCHMARK(BM_collation_element_lookup_770);



BENCHMARK_MAIN()
